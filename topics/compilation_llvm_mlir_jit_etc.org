:PROPERTIES:
:ID:       9822e58e-2422-4320-9237-ac9fe20c761f
:END:
#+TITLE: Compilation: LLVM, MLIR, JIT, etc
#+DESCRIPTION: LLVM, MLIR, JIT, etc
#+TAGS:
* Roam
+ [[id:3daa7903-2e07-4664-8a20-04df51b715de][C/C++]]
+ [[id:4cdfd5a2-08db-4816-ab24-c044f2ff1dd9][Programming]]

* Docs
+ [[https://github.com/munificent/craftinginterpreters][Crafting Interpreters]] (book)

* Resources


** Compiler

*** Infrastructure

+ [[https://arxiv.org/abs/2002.11054][MLIR: A Compiler Infrastructure for the End of Mooreâ€™s Law]] (2020, Google)
+

*** Patterns

+ [[https://github.com/llvm/llvm-project/blob/f24cf59d7afbfcefe43086c2e0984992deec3678/clang/docs/DataFlowAnalysisIntro.md][Data flow Analysis Intro]] (from LLVM/Clang Docs, builds up to lattices/joins)

** Serene Lang

[[https://serene-lang.org/][Serene Lang]] is a Lisp that compiles into LLVM.

+ The [[https://serene-lang.org/resources/][Resources]] page has a ton of extremely useful links
+ [[https://www.youtube.com/watch?v=Ij4LswX1tZU&list=PLlONLmJCfHTo9WYfsoQvwjsa5ZB6hjOG5][Youtube playlist]] from [[https://www.youtube.com/c/lxsameer][lxsameer]] covering LLVM/MLIR and language design
+ [[https://git.sr.ht/~lxsameer/Serene][~lxsameer/Serene]] the language source
+ [[https://git.sr.ht/~lxsameer/uSerene][~lxsameer/uSerene]] a version of serene used for bootstrapping

* LLVM

* MLIR
** Docs
[[https://mlir.llvm.org/docs/Tutorials/Toy/][MLIR Docs]]

+ [[https://llvm.org/devmtg/2020-09/slides/MLIR_Tutorial.pdf][MLIR Tutorial]] (google)

** Resources

+ [[http://lastweek.io/notes/MLIR/][lastweek.io/notes/MLIR]]

*** Code Analysis

[[https://github.com/GrammaTech/gtirb][GrammaTech/gtirb]] GrammaTech Intermediate Representation for Binaries (GTIRB)
is a machine code analysis and rewriting data structure

+ includes [[https://github.com/GrammaTech/gtirb/blob/master/PROTOBUF.md][protobuf specs]]
+ points to other /Intermediate Languages:
  - [[http://angr.io/][Angr]]'s [[https://github.com/angr/pyvex][Vex]]
  - [[https://github.com/BinaryAnalysisPlatform/bap][BAP]]'s [[https://github.com/BinaryAnalysisPlatform/bil/releases/download/v0.1/bil.pdf][BIL]] (the PDF includes a formal spec for programs as types)
  - [[https://www.nsa.gov/resources/everyone/ghidra/][Ghidra]]'s [[https://github.com/NationalSecurityAgency/ghidra/blob/24f46bb22c652919743563a148155729d3a2735d/GhidraDocs/GhidraClass/Debugger/B2-Emulation.md][P-code]] (see [[https://github.com/kohnakagawa/PracticalPCode][kohnakagawa/PracticalPCode]])


** Topics
*** MLIR to Embedded
+ [[https://github.com/apullin/jax_to_embedded?tab=readme-ov-file][apullin/jax_to_embedded]] via [[https://github.com/dddrrreee/cs240lx-24spr/tree/main/labs/1-dynamic-code-gen#part-5-make-a-jitter-for-dot-product][dddrrreee/cs240lx-24spr]]

* CIRCT
** Docs

+ [[https://circt.llvm.org/docs/Charter/][CIRCT Docs]]
+ [[https://llvm.org/devmtg/2021-11/slides/2021-CIRCT-LiftingHardwareDevOutOfThe20thCentury.pdf][CIRCT: Lifing Hardware Dev Out of the 20th Century]]


* Languages
