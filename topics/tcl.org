:PROPERTIES:
:ID:       b4e1fa85-53ca-467e-aac2-9a4e37b80144
:END:
#+title: TCL

* Docs

* Resources
+ [[https://www2.lib.uchicago.edu/keith/tcl-course/][Intro to TCL]] (Keith Waclena, Univ. Chicago)


** Projects
+ [[https://github.com/redis/redis][redis/redis]]

* Issues

* Topics

** Channels & Sockets

+ channel :: the TCL I/O model for character streams ([[https://wiki.tcl-lang.org/page/channel][docs]])
+ chan :: the TCL command to manipulate channels ([[https://wiki.tcl-lang.org/page/chan][docs]])
+ open :: exposes a file-like resource (file or exec), returns the name of a
  channel

  From [[https://wiki.tcl-lang.org/page/open][docs]] on =open=

#+begin_example tcl
set fd0 [open simpleinput]                  ;# open the file for reading
set fd1 [open simpleinput r]                ;# open the file for reading
set fd2 [open reldirect/simpleoutput w]     ;# open the file for writing
set fd3 [open /full/path/file r+]           ;# open the file to be Read and written

set fd4 [open /tmp/output {WRONLY BINARY}]  ;# Since Tcl 8.5 [http://tip.tcl.tk/183]: open in binary mode for writing
set fd4b [open /tmp/output wb]              ;# should be equivalent to the fd4 example.

set fd5 [open |[list simple1] r]            ;# Read the stdout of simple1 as fd5, stderr is discarded
set fd6 [open |[list simple2] w]            ;# Writes to fd6 are read by simple2 on its stdin
set fd7 [open |[list simple1 |& cat] r]     ;# Results in stdout AND stderr being readable via fd7
set fd7a [open |[list simple1 2>@1] r]      ;# Same effect as fd7

set fd8 [open |[list simple2] r+]           ;# Writes to fd8 are read by simple2 on its stdin,
                                             # whereas reads will see the stdout of simple2,
                                             # stderr is discarded

set fd9 [open |[list simple1 2>@stderr] r]  ;# stdout readable via fd9, stderr passed-thru to stderr of parent.

;# debug
set fd8 [open [list | tee tmp/in | simple2 | tee tmp/out 2>tmp/err] r+]

;# close fdN
close [open $fdN w]
#+end_example
