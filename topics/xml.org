:PROPERTIES:
:ID:       e0880f60-63db-4f34-b478-c3b733f1ab96
:END:
#+TITLE: XML
#+DESCRIPTION:
#+TAGS:

* Docs

* Resources

+ [[https://www.baeldung.com/linux/evaluate-xpath][parsing XML at command line]]

*** TODO crawl directory of websites (from vanilla X-HTML)

This may be done via org-babel

+ [ ] for each root domain, fetch the sitemap
+ [ ] parse the sitemap. collect some data on pages like
  rootsite.com/afterfirstslash/
+ [ ] voila, an impromptu ontology (less thinking, more doing)

* Issues
** Conversion from DTD
+ Trang ([[https://relaxng.org/jclark/trang-manual.html][manual]])

* SGML

** Docs
** Resources
** Tools
+ openjade :: standard DSSSL implementation.
+ opensp

*** opensp

* XML (tÃ¤gs)
** Docs
** Resources
+ [[https://www.red-gate.com/simple-talk/development/dotnet-development/xpath-css-dom-and-selenium-the-rosetta-stone/][Rosetta Stone for XPath, CSS, Dom and Selenium]]

** Tools
+ [[https://github.com/sputnick-dev/saxon-lint][sputnick-dev/saxon-lint]]
+ [[https://github.com/benibela/xidel][benibela/xidel]]
+ [[https://github.com/talwrii/clixpath?tab=readme-ov-file][talrwii/clixpath]]

*** xidel

+Much simpler selectors, but results aren't merged and can't easily be queried
without an =xq= sandwich.+

+ Run XQuery3 queries with =--xquery=
+ Xidel will also =curl https://you.a.sandwich=.

Without =--xquery=

#+begin_example sh
cat components/accordion/accordion-always-open-example.html |\
    tidy -iq --tidy-mark no -w 0 --show-body-only auto --doctype omit -xml |\
    xq -x "${jqRemoveSVG}" |\
    xidel -s --html --xquery "$q" --data=- |\
    xq -y
#+end_example

With =--xquery=

#+headers: :var jqRemoveSVG=jqRemoveSVG
#+begin_src sh :results output code :wrap src yaml
q="//*[contains(concat(' ', @class, ' '), 'flex')]"
f='components/accordion/accordion-always-open-example.html'

cat $f | xidel -s --html --xquery "$q" --data=- |\
    xq -y "${jqRemoveSVG}"
#+end_src

Without =xq= (can't quite get =except= to work)

#+headers: :var jqRemoveSVG=jqRemoveSVG
#+begin_src sh :results output code :wrap src yaml
q="//span[contains(concat(' ', @class, ' '), 'flex')] except svg"
f='components/accordion/accordion-always-open-example.html'

cat $f | xidel -s --html --xquery "$q" --data=- |\
    xq -y "${jqRemoveSVG}"
#+end_src



*** libxml2
+ xmllint :: fix XML so you don't have to squint =>.<= at tags
+ xmlcatalog :: not really sure what a catalog is.
** Issues

* XSD (schemata)
** Docs
** Resources
** Issues

* XSLT (transformations)

Illustrates why CSS is actually difficult and fairly mathy.

** Docs
** Resources
** Issues

* Phylogeny
+ GML
  + SGML
    + HTML
      + "X" HTML
    + XML
