:PROPERTIES:
:ID:       95146708-4046-4cdb-a5df-e15594f17733
:END:
#+TITLE: Bootloader
#+DESCRIPTION: Grub, Systemd boot
#+TAGS:

* Docs
+ [[https://medium.com/@tunacici7/first-stage-loaders-bios-u-efi-iboot1-u-boot-spl-5c0bee7feb15][First-Stage Loaders: BIOS, [U]EFI, iBoot1 & U-Boot (SPL)]]
  - Lots of diagrams
  
* Resources
+ [[https://www.youtube.com/watch?v=MRqfPmPaNgE&t=1239s][LinuxBoot: Firmware Tools & a Busybox in Go!]] pretty amazing video

** initramfs

*** [[github:csmart/custom-initramfs][csmart/custom-initramfs]]

+ This guy wrote a bunch of custom roles/examples for virt/openstack
+ And there's also [[https://github.com/csmart/hellolinuxworld][csmart/hellolinuxworld]] for a demo on writing linux modules


* Multiboot
Handoff from BIOS to initial bootloader

** Resources
+ [[https://alex.dzyoba.com/blog/multiboot/][Multiboot kernel]] minimal kernel example to demonstrate multiboot
  - see ./guix/gnu/bootloader.scm#menu-entry->sexp

* Devicetree
Standard for exposing device metadata to bootloader.

** Docs
+ linux: [[https://docs.kernel.org/devicetree/usage-model.html#id2][devicetree/usage-model.html]]
+ [[https://www.devicetree.org/specifications/][devicetree-org/devicetree-specification]]

* Grub
** Docs
+ archwiki: [[https://wiki.archlinux.org/title/Dm-crypt/System_Configuration][Dm-Crypt/System_Configuration]]
+ archwiki: [[https://wiki.archlinux.org/title/Persistent_block_device_naming][Persistent Block Device Naming]]

** Issues


* Multiboot USB (Grub)

** Docs
+ [[https://github.com/aguslr/multibootusb][aguslr/multibootusb]]
+ [[https://github.com/GrantEdwards/Linux-Multiboot][GrantEdwards/Linux-Multiboot]] a bit on multiboot, kernel boot options and how
  grub's =probe= "discovers things"
+ [[https://github.com/Jimmy-Z/grub-iso-boot/blob/master/grub.cfg#L149-L151][Jimmy-Z/grub-iso-boot]] similar concept, more scripting. e.g. checks/deletes
  loopback devices (yikes)

** Resources

** Topics
*** Basics
+ aguslr/multibootusb essentially automates much of the loopback GRUB described
  in [[https://wiki.archlinux.org/wiki/title/Multiboot_USB_drive][archwiki:Multiboot_USB_drive]]
+ There are alternative tools like ventoy, Yumi. Other alternatives listed on
  aguslr/multibootusb's site.

*** aguslr/multibootusb

This is pretty straightforward, easy to grok and easy to extend with additional
images.

+ Requires Syslinux/MEMDISK (more info on [[https://wiki.archlinux.org/title/Multiboot_USB_drive#Using_Syslinux_and_memdisk][archwiki]])

#+begin_src sh
wget -qO - 'https://www.kernel.org/pub/linux/utils/boot/syslinux/syslinux-6.03.tar.gz' \
    | tar -xz -C $mntusb/boot/grub/ --no-same-owner --strip-components 3 'syslinux-6.03/bios/memdisk/memdisk'
#+end_src

**** Usage

+ Create a partition table on your USB disk. Multiboot expects
  =$mntusb/boot/{grub/mbusb.d/,isos}= to exist on the boot partition.
+ Partition layout/flags different for the =makeUSB.sh -b= Hybrid MBR/EFI
  layout. GPT doesn't need flags.

Instead of copying all the =mbusb.d/*.d= files, you can just copy the configs
you're interested in and tweak them, but you may not be able to easily rsync
them. This gives you more control over what could load.

*** [[https://man.archlinux.org/man/bootparam.7.en][bootparam]]: kernel boot options

[[https://guix.gnu.org/manual/en/html_node/Initial-RAM-Disk.html][Init-RAM-Disk]] in the Guix manual covers it's expected bootparam, how to set
their defaults and how to override them.

*** Guix

**** Configuring Guix to boot from =(loop)=

The [[https://guix.gnu.org/manual/devel/en/guix.html#Bootloader-Configuration][bootloader-configuration]] record needs to support GRUB's =loopback= option in
order to reimplement aguslr/multibootusb approach. There are other options,
including chainloading, etc.

**** Grub Config for Iso9660 builds

The ISO builds with something like this:

** Issues

*** Boots always fail after first boot fails

See this [[https://github.com/hakuna-m/wubiuefi/issues/345][GH Issue]]

Each =loop= device can only be created once. This apparently happens when you open
the submenu. This causes bad state after the first boot fails.

To fix, use =loopback -d loop "$iso_path=, with the appropriate checks and etc

+ I think this fails by design in agulsr/multibootusb, since the manual says "this
  involves running a small program prepended to initramfs"
+ Jimmy-Z/grub-iso-boot went through a lot of trouble to use a single =loop=
  device. it's possible having multiple active is not kosher. the manual is
  unclear as to how all the state is handed off to initramfs. 

#+begin_quote
When you click =reboot=, your computer is actually "reincarnated" ... (since the
OS to UEFI to bootloader handoff can propagate state/arguments). 

See [[https://www.youtube.com/watch?v=MRqfPmPaNgE][LinuxBoot: Firmware Tools & a BusyBox in Go]]

No reason to get mystical about it, but it's interesting.
#+end_quote

There could also be [[https://www.gnu.org/software/grub/manual/grub/html_node/Loopback-booting.html][a userspace program that runs too early or an issue with the
=initramfs=]].

* U-Boot

** Docs
+ [[https://source.denx.de/u-boot/u-boot][u-boot/u-boot]] (git [[https://source.denx.de/u-boot/u-boot/tree/master/doc][docs]])
+ [[https://u-boot.readthedocs.io/en/latests/index.html][u-boot.readthedocs.io]]

** Resources
+ [[https://www.emcraft.com/som/stm32mp1/loading-linux-images-via-ethernet-and-tftp][Loading Linux Kernel Images via Ethernet and TFTP]]
+ [[https://yuhei1-horibe.medium.com/booting-linux-with-ramdisk-f6f2d59780dc][Booting Linux with Ramdisk]]: xilinx, hdi (device tree)
+ [[https://arxiv.org/pdf/2206.12751.pdf][Implementation of SquashFS Support in U-Boot]]
+ [[https://serhack.me/articles/os-embedded-booting-phase-uboot/][Booting an Embedded OS: the Booting and U-Boot Phase]]
* Depth Charge

** Docs

+ [[https://depthcharge.readthedocs.io/en/latest/introduction.html#will-this-be-useful-for-my-situation][Intro]]
+ [[https://github.com/nccgroup/depthcharge][nccgroup/depthcharge]]

* Netboot.xyz

Handy for quick stuff or for troublehooting devices (no sneakernet required)

** [[can ][linuxserver/netboot.xyz]]:

*** Run temporary instance from podman
+ Router interface needs some DHCP config
+ two volumes needed for podman
  - /config :: store netboot config's here
  - /assets :: store iso's here
+ ports :: container[:host]
  - map 80: http (nginx for assets)
  - map 69: tftp (udp)300
  - map 6969:3000: https (web interface)
  - map 30000-30010: tftp transfer
+ environment
  - UMASK=022

*** DHCP
+ set TFTP server IP
+ set bios file name and UEFI 32/64-bit file name


* PXE Booting
** Docs
+ netboot
+ pxe
  - [[https://sipb.mit.edu/iap/netboot/netboot-handout.pdf][PXE chainloading]]
+ ipxe
+ etherboot
+ [[https://wiki.archlinux.org/title/syslinux#UEFI_Systems][syslinux]] (archwiki)

** Resources
+ [[https://sipb.mit.edu/iap/netboot/netboot-handout.pdf][Gentoo Diskless Nodes]]
+ [[https://forums.gentoo.org/viewtopic-p-8740753.html?sid=027c05e0bb657a0e26c7c0d2f74586e0][Running gentoo entirely from RAM]] (gentoo forums)
+ [[https://sipb.mit.edu/iap/netboot/netboot-handout.pdf][MIT netboot slides]]
+ [[https://leo.leung.xyz/wiki/Tails][Update Tails to PXE Boot]]
+ [[https://linuxhit.com/raspberry-pi-pxe-boot-netbooting-a-pi-4-without-an-sd-card/][Netboot Raspberry Pi 4 without SD Card]]
+ [[https://robferguson.org/blog/2022/04/15/how-to-pxe-boot-your-rpi/][PXE Boot RPi]]
+ [[https://github.com/SerialVelocity/coreos-pxe-images/blob/4c1e8461c7225cbf7a0cc39cb0e4ca88ddc22fd9/.circleci/config.yml#L82-L83][extracting =root.squashfs= for CoreOS PXE boot]]
  - from [[https://github.com/coreos/fedora-coreos-tracker/issues/390][coreos/fedora-coreos-tracker#390]]
*** Chainloading iPXE via PXE

+ [[https://gist.github.com/robinsmidsrod/2234639][Gist: bootstrapping full iPXE native menu with customizable default option]]
  this gist shows a full range of iPXE scripting functionality

** Netboot to RAM

... because my management terminal's BTRFS disk decided to corrupt a week ago
... immediately as I actually have time to do this. No BTRFS tools could put
humpty dumpty back together again. Verifying the checksums failed, no matter how
I went about it.

And I guess I need to put this disk to better use if possible.

+ [[https://forums.gentoo.org/viewtopic-p-8740753.html?sid=027c05e0bb657a0e26c7c0d2f74586e0][Running gentoo entirely from RAM]]

** Issues

* SystemD Boot
* Roam
+ [[id:bdae77b1-d9f0-4d3a-a2fb-2ecdab5fd531][Linux]]
+ [[id:d7cc15ac-db8c-4eff-9a1e-f6de0eefe638][File Systems]]
+ [[id:80ccbcbb-a244-418f-be86-47e8969928a5][LUKS]]

