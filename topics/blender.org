:PROPERTIES:
:ID:       b3826464-5132-4a77-9707-93a72bd1d4a3
:END:

#+TITLE:     Blender
#+AUTHOR:    David Conner
#+EMAIL:     noreply@te.xel.io
#+DESCRIPTION: notes

* Docs
+ [[https://docs.blender.org/][Official]]
+ [[https://developer.blender.org/tag/documentation/][Developer Docs]]
+ [[https://en.wikibooks.org/wiki/Blender_3D:_Noob_to_Pro][Blender 3D: Noob to Pro]] (wikibooks)


** Scripting
+ API

* Resources
** 3D Printing
+ [[https://docs.blender.org/manual/en/latest/modeling/meshes/mesh_analysis.html][Mesh Analysis]]: calculate mesh overhang (for prints), thickness, and sharp
  edges

*** Guides
+ [[https://daler.github.io/blender-for-3d-printing/contents.html][daler.github.io/blender-for-3d-printing]]
  - STL: [[https://daler.github.io/blender-for-3d-printing/printing/export-stl.html][Exporting and Importing]]
** Python Scripting
*** Guides
+ [[https://docs.blender.org/api/current/info_quickstart.html][Quickstart]]
+ [[https://docs.blender.org/api/current/info_tips_and_tricks.html][Scripting Tips and Tricks]]

*** IPython
+ [[https://www.blendernation.com/2014/11/24/using-ipython-with-blender/][Using IPython (jupyter) with Blender]]
+ [[https://github.com/panzi/blender_ipython][panzi/blender_ipython]] (2014)
+ [[https://github.com/gabrielmontagne/blender-addon-run-ipython][gabrielmontagne/blender-addon-run-python]] (2020, Run IPython from Blender)

*** Jupyter

+ [[https://github.com/cheng-chi/blender_notebook][cheng-chi/blender_notebook]] (based on [[https://github.com/cameronfr/BlenderKernel][cameronfr/BlenderKernel]])
  - [[https://github.com/cheng-chi/blender_notebook/issues/8][issue 8]] indicates that it's necessary to fork to change the python version
+ [[ https://github.com/mamut-m/blender_notebook][mamut-m/blender_notebook]] is still being maintained

**** On Arch
+ Install jupyter with =pip install jupyter-lab notebook=
+ install kernel with =pip install -e git+git://github.com/mamut-m/blender_notebook.git@master#egg=blender_notebook=
  - This really needs to be done in the same context as Blender's python. On
    arch, this seems to be the system python. Unfortunately, there's no way to
    use =pipenv= without building python modules
    - it can be installed under user modules though
    - however =pip install -e= really wants a local copy of the source. the
      wheels will break if it doesn't have it.
  - I'm not sure which option I don't have time for: corrupting system python
    (eventually) or editing a =PKGBUILD= to build from source (not hard ... but
    slow feedback loop)
+ Create the new kernel: =blender_notebook install --blender-exec=/usr/bin/blender=
  - =$HOME/.local/share/jupyter/kernels/blender= w/ default jupyter ... things?
    - ... i donno... I NEVER HAD A GPU FOR TENSORFLOW. kaggle competitions would
      just be a cruel joke.
+ The package doesn't seem to work for blender 3.5 for now. no time to debug.
  - some deprecation or another. =/tmp/tmpox4vu6p4/kernel.py:44: DeprecationWarning: There is no current event loop
    loop = asyncio.get_event_loop()=
+ I really just wanted a nice place to put my code without figuring out how to
  build this for 5 platforms.

* Issues
** Hardware
+ Archlinux: [[https://wiki.archlinux.org/title/3D_Mouse][3D Connexion with Blender]]

** Scripting
*** Initial Setup
+ Enable =Developer Extra= and =Python Tooltips=
  - This give you Python API hints when hovering on UI elements

*** Tips
+ Use ActionRecorder addon to convert actions/macros to python
+ Scripting Examples from [[github:blender/blender][blender/blender]]
  - ./blender/release/scripts/startup/bl_operators
  - ./blender/release/scripts/startup/bl_ui
+ Addons code [[github:blender/blender-addons][blender/blender-addons]]

**** The Text Editor has templates/examples
+ look in its menu bar, these are starting points
+ Scripts are found in =/usr/share/blender/3.5/scripts= or similar
  - there are more scripts here than in the templates
  - afaik most behavior exists in python, or is at least respecified/duplicated
    here from the C/C++ source -- including all the addons

**** View log of python code corresponding to UI Interactions
+ Use the [[https://docs.blender.org/manual/en/latest/editors/info_editor.html][info editor]] to see python code for UI interactions

**** Find a python source file corresponding to a UI element
+ Navigate to source with right-click UI element > "Edit Source"
  - if the text editor is open, the python file appears there
  - File is prepended to recent locations (in file open/browse)
    - and whence the file location in the source tree

** Keys
+ F3 :: Command Search
+ S-F3 :: Main 3D Object Viewport
+ S-F4 :: Python Console
+ S-F11 :: Edit Blender Scripts

** Printing Projects
+ Enable =Auto Depth= and =Rotate Around Selection=
+ Add the [[https://all3dp.com/blender-3d-print-toolbox-simply-explained/][3D Print Toolbox]] addon
  - Press =N= to find the tools via Information pop-out
+ Set scene scaling
  - Scene -> Units -> Length :: Millimeters
  - Scene -> Units -> Unit Scale :: 1.000 (default)
+ Export with scale of 1.00

**** TODO validate that this allows you to reimport without trouble

** Import Polycam Scan Into Blender

Export Formats:

+ gltf :: no addon req.
+ ply :: requires addon
+ obj :: requires addon (deprecated?)
  - polycam *.obj exports will include UV maps

*** Polycam Tutorial
**** Mesh Merge
+ Merge By Distance :: retopologize the mesh and rebalance by vertex distance
  - this smooths out the mesh and makes everything else faster

**** Sculpting
+ Box trim & Lasso Trim :: select geometry to remove

**** Object
+ Shade Smooth :: smooth out the faces

** Building

*** CUDA
+ AMD users can install an add-on (not found in flatpak search)
+ Another route is setting =CUDA_TOOLKIT_ROOT_DIR= during build

*** As Python Module On Arch
+ Reference [[https://aur.archlinux.org/packages/blender-git][blender-git]] for things like =yay -S blender-git --mflags "CUDA_ARCH=sm_92"=
+ If Blender's =pip= installs ipython/jupyter, then it can be called from
+ On Arch, blender's python references the system python by default. This can be
  changed in the package build

*** Python
+ To import the blender =bpy= python modules from another environment, then
  [[https://wiki.blender.org/wiki/Building_Blender/Other/BlenderAsPyModule][Build Blender as a Python Module]]

* UI/UX

Every command/interaction is fuzzy-searchable with =space= -- which should be in
ALMOST EVERY application. New users never get stuck, never have to leave the
application to search google, etc, etc, etc ... etc, etc.

+ Workspaces > Areas > Editors
+ Scenes > View Layers > Collections > Objects

** Workspaces ([[https://docs.blender.org/manual/en/latest/interface/window_system/workspaces.html][docs]])

+ create new by cloning from existing, then rearrange areas
  - right click workspace name at top to rename/save
+ Custom workspaces are saved with =default.blend=
  - AssetRepl: 4x1 vertical splits for asset/python/filebrowser/info
    - these can be fullscreened at any time with =ctrl+space=
    - so they can be crammed together

*** Areas
+ Right click to manipulate, split, close areas

*** Editors

** Scenes

*** View Layers

*** Collections

*** Objects

** Coordinate Systems

Blender is setup differently than 3DS/Maya

*** World

+ X :: left/right
+ Y :: front/back
+ Z :: up/down

*** Normals

Same as world


* Topics

** Assets
*** Management

*** Creation

**** AI Workflows
+ [[https://leonardo.ai/][Leonardo.ai]] can work with *.obj objects and create texture maps

** Rendering

*** Shader Nodes

** Modeling

*** Meshes
  - Primitives

*** Materials/Textures
+ [[https://blenderartists.org/t/unbake-baked-textures/622736][Unbake/Bake textures]] from models with shared texture map (2014)
+ [[https://blender.stackexchange.com/questions/231662/how-to-convert-uv-to-mesh-in-blender][How to convert UV texture to mesh]]
  -


*** Curves (bezier/etc) and Surfaces (b-spline)
+ [[https://behreajj.medium.com/scripting-curves-in-blender-with-python-c487097efd13][Scripting Curves in Blender with Python]] (nurbs)
+ [[https://readthedocs.org/projects/nurbs-python/downloads/pdf/latest/][Three Hundred Twenty-Two (322) Pages on NURBS-Python]] (pagedown x50)
  - Will do from CSV ( . . . )
+ Matlab also does NURBS ([[https://www.mathworks.com/help/curvefit/nurbs-and-other-rational-splines.html#f5-21536][CurveFit]])

*** Metaball (sculpting)
  - fluid-like

*** Volumes (OpenVDB voxels)

*** Modifiers (composable operations on models)

*** Geometry Nodes (geomoetry shaders)
  - convert between point/curve/mesh/surface
  - lift a type to another or cross object types


** Addons
*** CAD Transform

*** 3D Print Toolbox

*** Add Mesh
+ Extra Objects
  - Gears
  - 3D Function
+ Bolt Factory
+ Geodesic Domes
+ Archimesh (architecture generator)
+ ANT Landscape

*** Add Curve
+ Extra Objects
  - torus
  - many others

*** Mesh
+ Tissue (tesselation)
+ Edit Mesh Tools
  - select random verticies
  - fillets/chamfers

*** UV
+ Magic UV (adv. manipulation of uv's & normal's)

*** Interface
+ Amaranth (productivity for 3d video)


* Lighting



* Sculpting
** Overview
*** Start with simple shapes
Compose these five

+ box
+ ellipsoid
+ cylinder
+ cone
+ torus
*** Start with low res and move to higher res
lower res is easier to build volume with

** Selection Masking

|-------------+--------------------------+---|
| Key         | Action                   |   |
|-------------+--------------------------+---|
| RMB         | single                   |   |
| a           | all faces (or deselect)  |   |
| b           | box select               |   |
| c           | select with brush        |   |
| l           | Pick linked              |   |
| C-l         | select linked            |   |
| C-i         | invert selection         |   |
|-------------+--------------------------+---|
| v           | vertex selection masking |   |
|             | face selection masking   |   |
| h           | hide faces               |   |
| M-h         | unhide faces             |   |
|-------------+--------------------------+---|
| M-b (+ LMB) | specify clipping region  |   |
|-------------+--------------------------+---|

** Editing

** Dyntopo

|-----+----------------+--------------------------------------------------------|
| Key | Setting        | Notes                                                  |
|-----+----------------+--------------------------------------------------------|
| C-d | Toggle dyntopo | Use with topo-heavy sculpting tools (grab, snake hook) |
| D   | Dyntopo detail |                                                        |
|-----+----------------+--------------------------------------------------------|

*** Misc
+ UV Warning: unless you create a sculpt project, a UV map will automatically be
  added. Delete unnecessary UV maps to get rid of the warning.

** Remesh

|-------+-------------------+----------------------------------------------------------|
| Key   | Setting           | Notes                                                    |
|-------+-------------------+----------------------------------------------------------|
| C-r   | Remesh Voxel      |                                                          |
| C-M-r | Remesh Quadriflow |                                                          |
| R     | Adjust voxel size | Hold Ctrl: Relative voxel resizing. Hold Shift: Absolute |
|       |                   |                                                          |
|-------+-------------------+----------------------------------------------------------|

** Symmetry

+ No shortcuts. Best way to access (with this config): =space sym x=
+ VIEW3D_PT_sculpt_symmetry_for_topbar :: probably needs a keybinding to pop
  this up
+ Symmetricize can be hit later


** Brush Settings

|------+------------------------+--------------|
| Key  | Setting                | Notes        |
|------+------------------------+--------------|
| f    | Size                   |              |
| F    | Strength               |              |
| Ctrl | Change brush direction | Add/Subtract |
|      |                        |              |
|------+------------------------+--------------|

*** Normal Weight

+ Grab & Snake Hook: Use =ctrl= to constrain brush to the normal

** Brushes


|-----+-------------------+-------------------------------------------------|
| Key | Tool              | Notes                                           |
|-----+-------------------+-------------------------------------------------|
| x   | Draw              |                                                 |
|     | Draw Sharp        |                                                 |
| c   | Clay              |                                                 |
|     | Clay Strips       | local structure/texture                         |
|     | Clay Thumb        |                                                 |
| l   | Layer             | shift vertices by an offset                     |
|     | Inflate           | v_i = k * n_i * v_i                             |
|     | Crease            | push/pull mesh & pinch vertices                 |
|-----+-------------------+-------------------------------------------------|
| S   | Smooth            |                                                 |
| T   | Flatten           | move vertices towards average height            |
|     | Fill              | vertices below brush: move upwards              |
|     | Scrape            | vertices above brush: move downwards            |
|     | n-plane Scrape    |                                                 |
|-----+-------------------+-------------------------------------------------|
| p   | Pinch             | pull verticies towards brush center             |
| g   | Grab              | pull vertex group, builds new shape             |
|     | Elastic Deform    | grabbing/twistiing + elasticity                 |
| k   | Snake Hook        | pull vertices along with brush (create snakes)  |
|     | Thumb             | flatten mesh while pulling vertices with stroke |
|     | Pose              | simulate armatures                              |
|     | Nudge             |                                                 |
|     | Rotate            |                                                 |
|     | Slide Relax       |                                                 |
|     | Boundary          |                                                 |
|-----+-------------------+-------------------------------------------------|
|     | Cloth             | simulate sculptable cloth                       |
|     | Simplify          | collapse short edges                            |
|     | Mask              | isolate parts of a mesh                         |
|-----+-------------------+-------------------------------------------------|
|     | Draw Face Sets    |                                                 |
|     | n-Res Disp Eraser |                                                 |
|     | n-Res Disp Smear  |                                                 |
|     | Paint             |                                                 |
|     | Smear             |                                                 |
|-----+-------------------+-------------------------------------------------|
|     | Box Mask          |                                                 |
|     | Box Hide          |                                                 |
|     | Box Face Set      |                                                 |
|     | Box Trim          |                                                 |
|     | Line Project      |                                                 |
|-----+-------------------+-------------------------------------------------|
|     | Mesh Filter       |                                                 |
|     | Cloth Filter      |                                                 |
|     | Color Filter      |                                                 |
|-----+-------------------+-------------------------------------------------|
|     | Edit Face Set     |                                                 |
|     | Mask By Color     |                                                 |
|-----+-------------------+-------------------------------------------------|
|     | Move              |                                                 |
|     | Rotate            |                                                 |
|     | Scale             |                                                 |
|     | Transform         |                                                 |
|-----+-------------------+-------------------------------------------------|
|     | Annotate          |                                                 |
|-----+-------------------+-------------------------------------------------|

** Curves Sculpting

|-----+------+------+-------|
| Key | Tool | Uses | Notes |
|-----+------+------+-------|
|     |      |      |       |
|-----+------+------+-------|

** Sculpting Addons

[[https://inspirationtuts.com/5-amazing-blender-sculpting-addons/][5 blender sculpting addons]]

+ Sculpt Wheel :: krita-style wheel popup
+ Bumarin :: use grease-pencil to sculpt
+ BrickSculpt ::
+ Dyntopo Plus :: load saved Dyntopology settings
  - custom pie menu
  - manage the order of dyntopo settings
  - mask extract: create sculpt assets from masked areas
  - manage isolated areas
    - mask decimate (TODO: decimate, how?)
    - mask smooth
+ Speedsculpt :: access dyntopo operations from sculpt mode



* Open Source Development


+ [[https://git.blender.org/gitweb/][Git]] (git@git.blender.org)

** Resources
+ [[https://code.blender.org/][Developer Blog]]

** Projects
+ Pillar :: webframework that combines cloud and attract ([[https://code.blender.org/2016/05/inside-the-blender-cloud-addon/][blog]]).
  - used on Blender Cloud ([[https://studio.blender.org/welcome/][Blender Studio]])
+ Flamenco :: Render Pipeline
+ Buildbot :: Build automation ([[https://builder.blender.org/download/daily/][builder.blender.org]])
+ Benchmarking :: collect performance stats ([[https://www.blender.org/news/introducing-blender-benchmark/][blog]])
  - open-blender-data is a web project for summarizing performance
