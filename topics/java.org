:PROPERTIES:
:ID:       97ae00f5-9337-4108-b85f-1edfc7f86ed7
:END:
#+TITLE: Java
#+DESCRIPTION:
#+TAGS:

* Roam

* Docs

* Resources

+ [[https://www.jrebel.com/resources/java-resources][JRebel Java Resources: quite a few cheat sheets]]

** UML

#+begin_quote
Actually, [[https://github.com/talsma-ict/umldoclet/blob/main/usage.md][talsma-ict/umldoclet]] seems to have worked. It can be configured for
gradle/maven/ant or just used as raw javadoc. See here: [[id:2c2ac2bc-8f09-4f7f-a691-dd4d0c0056d9][FRC: Structure of Projects]]
#+end_quote

[[minimal ad][Guide to Java Reflection]] If this post from Baeldung is any indication ...
/there is little advantage in using Java over Bash/

+ for small projects with manual lists of files, the string transformations
  are just in another syntax.
+ for large projects or if diagramming classes/etc outside of a single
  project, then obviously ... use Java/etc

Best bet is Eclipse

+ probably requires setup for each project where generation is desired.

A method that only requires a JAR + source

*** Options

Doxygen

+ not 1-to-1, though much of the core =wpilib= (C++, JNI and Java) is generated
  using =jinja=, so at least the method signatures match (given translation)
+ Use =HAVE_DOT= and...
+ Doesn't really work for non-Java projects

Java

+ This requires adding to the codebase
  - or configuring a build/target to operate on the results of another
    build/target (complicated regardless of whether it's simply another gradle
    target; maybe not, if the JAR can find any project on the =CLASSPATH=)

Clojure

+ more difficult (at first) then probably much easier.
  - there be boilerplate. hopefully, you can work with JVM/Java symbols without
    rebinding with =(.Java wrappers)=

JDTLS:

+ there should be a way to enumerate UML via the LSP server

Paid programs:

+ [[https://www.visual-paradigm.com/guide/uml-unified-modeling-language/uml-class-diagram-tutorial/][Visual Paradigm]] (multi-lang, super expensive if not trial or community edition)

Editors

+ [X] j-diagram (VS Code). Closed source
  - there's another, but it doesn't work and downloads a JAR without
    confirmation (I think)
+ [X] Jetbrains: 30 days
+ [ ] Eclipse: via papyrus extension
  - this is reasonable, but probably requires configuring the project first ...

Tools

+ most any option would require a functioning build (gradle/otherwise)


* Topics

** FRC Misc

(move to frc.org)

*** VSCode plugin

Dependencies

+ wpilib-riolog seems to be the only wpilib dependency

**** Gradle Files

For the VSCode plugin

+ build.gradle
+ settings.gradle
+ versions.gradle
+ templatebuilder.gradle

**** Project Converters

The VSCode project converters should illustrate the logic required to setup an
FRC build, since they translate between several formats.

***** Gradle Importer

+ vscode-wpilib/webpack.config.js
+ vscode-wpilib/src/extension.ts
+ vscode-wpilib/src/webviews/gradle2020import.ts
+ vscode-wpilib/src/webviews/pages/gradle2020importpage.ts

***** Eclipse Importer

+ vscode-wpilib/resources/webviews/projectcreator.html
+ vscode-wpilib/src/webviews/pages/projectcreatorpage.ts
+ vscode-wpilib/src/webviews/pages/projectcreatorpagetypes.ts
+ vscode-wpilib/src/webviews/projectcreator.ts
+ vscode-wpilib/locale/zh-cn/projectcreator.yaml

There is also a standalone electron app

+ wpilib-utility-standalone/projectcreator.html
+ wpilib-utility-standalone/src/projectcreator.ts

**** Resources

***** Gradle Files

For  ...

+ vscode-wpilib/resources/gradle/c/build.gradle
+ vscode-wpilib/resources/gradle/cpp/build.gradle
+ vscode-wpilib/resources/gradle/java/build.gradle
+ vscode-wpilib/resources/gradle/cppdt/build.gradle
+ vscode-wpilib/resources/gradle/cppxrp/build.gradle
+ vscode-wpilib/resources/gradle/javadt/build.gradle
+ vscode-wpilib/resources/gradle/cppromi/build.gradle
+ vscode-wpilib/resources/gradle/javaxrp/build.gradle
+ vscode-wpilib/resources/gradle/javaromi/build.gradle
+ vscode-wpilib/resources/gradle/shared/settings.gradle

** Eclipse

*** Required Java Environment

**** Arch Packages

Check the arch packages

+ [[https://aur.archlinux.org/packages/eclipse-platform/][eclipse-java]] (and [[https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=eclipse-java][PKGBUILD]])
+ [[https://aur.archlinux.org/packages/eclipse-java/][eclipse-platform]] (and [[https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=eclipse-platform][PKGBUILD]])



jdk-openjdk
jdk11-openjdk
jdk17-openjdk
jdk8-openjdk



jabba-bin

amazon-corretto-11
amazon-corretto-15
amazon-corretto-16
amazon-corretto-17
amazon-corretto-18
amazon-corretto-19-bin
amazon-corretto-20-bin
amazon-corretto-21-bin
amazon-corretto-8

bishengjdk-17

java-openjdk-bin
java-openjdk-ea-bin
java-openjdk-loom-ea-bin

jdk
jdk-android-studio
jdk-arm
jdk-jbr-xdg
jdk-jetbrains
jdk-lts
jdk-microsoft-openjdk

jdk-openj9
jdk-openj9-bin
jdk-openjdk-xdg
jdk-temurin

jdk10
jdk10-openj9-bin

jdk11
jdk11-dragonwell-extended-bin
jdk11-dragonwell-standard-bin
jdk11-graalvm-bin
jdk11-graalvm-ee-bin
jdk11-j9-bin
jdk11-jbr-xdg
jdk11-jetbrains-bin
jdk11-microsoft-openjdk
jdk11-msopenjdk-bin
jdk11-openj9-bin
jdk11-openjdk-dcevm
jdk11-temurin

jdk12
jdk12-openjdk
jdk13-openjdk
jdk13-openjdk-bin
jdk14-openjdk
jdk15-openjdk
jdk16-adoptopenjdk
jdk16-graalvm-bin
jdk16-microsoft-openjdk
jdk16-openjdk
jdk17-dragonwell-standard-bin
jdk17-graalvm-bin
jdk17-graalvm-ee-bin
jdk17-jetbrains
jdk17-jetbrains-bin
jdk17-microsoft-openjdk
jdk17-openj9-bin
jdk17-temurin
jdk17-zulu-prime-bin

jdk18-openjdk
jdk19-graalvm-bin
jdk19-graalvm-ee-bin
jdk19-openjdk

jdk20-graalvm-bin
jdk20-graalvm-ee-bin
jdk20-openj9-bin

jdk21-graalvm-bin
jdk21-graalvm-ee-bin
jdk21-jetbrains
jdk21-jetbrains-bin

jdk7
jdk7-j9-bin
jdk7r1-j9-bin

jdk8
jdk8-aarch64
jdk8-adoptopenjdk
jdk8-arm
jdk8-dragonwell-extended
jdk8-dragonwell-extended-bin
jdk8-dragonwell-standard-bin
jdk8-graalvm-bin
jdk8-graalvm-ee-bin
jdk8-j9-bin
jdk8-openj9-bin
jdk8-temurin
jdk9-openj9-bin

jre-jetbrains

liberica-jdk-11-bin
liberica-jdk-11-full-bin
liberica-jdk-11-lite-bin
liberica-jdk-17-full-bin
liberica-jdk-21-full-bin
liberica-jdk-8-full-bin
liberica-jdk-full-bin
liberica-jre-11-bin
liberica-jre-11-full-bin
liberica-jre-8-full-bin

mandrel-bin
sapmachine-jdk-bin

zing-21-bin
zing-8-bin

zulu-11-bin
zulu-13-bin
zulu-14-bin
zulu-15-bin
zulu-17-bin
zulu-21-bin
zulu-8-bin
zulu-embedded-jdk
zulu-jdk-fx-bin

unzip (unzip-natspec unzip-zstdAUR)
webkit2gtk (webkit2gtk-imgpasteAUR)

*** On Guix

+ [[github:nuthub/guix-shell-examples][nuthub/guix-shell-examples]] covers java on guix

* Issues
