:PROPERTIES:
:ID:       0a01903a-3126-4ac6-a2c8-3b6135821ef3
:END:
#+TITLE: Kubernetes
#+DESCRIPTION:
#+TAGS:
* Docs
* Resources
* Topics
* Issues


* Kubernetes
** Docs

+ The [[https://kubernetes.io/docs/reference/_print/][Greppable Reference]] (where printable view make Ctrl-F go vroom)
+ [[github:kelseyhightower/kubernetes-the-hard-way][kelseyhightower/kubernetes-the-hard-way]]


** Resources

*** Guides
+ [[https://github.com/marco-lancini/k8s-lab-plz][marco-lancici/k8s-lab-plz]]: deploy a kubernetes lab cluster with [[https://please.build/basics.html][please.build]],
  a Make-style build tool inspired by Blaze/Bazel/Buck, etc.
  - walkthrough: [[https://www.marcolancini.it/2021/blog-kubernetes-lab-baremetal/][Kubernetes Lab on Baremetal]]
+ [[https://www.dasblinkenlichten.com/getting-started-kubernetes-using-ansible/][Getting started with kubernetes using ansible]]

*** Deployments
+ [[https://dev.to/carminezacc/creating-a-kubernetes-cluster-with-fedora-coreos-36-j17][Kubernetes Cluster on Fedora CoreOS]]
+ [[https://www.matthiaspreu.com/posts/fedora-coreos-kubernetes-basic-setup/][Kubernetes/CoreOS basic setup]]

**** Local

+ [[https://github.com/MajorBreakfast/local-kubernetes-comparison][majorbreakfast/local-kubernetes-comparison]]

*** Guix
+ [[https://codeberg.org/allana/guix-system/commits/branch/main/allana/packages/kubernetes.scm][allana/guix-system]]

* Platform

** KubeVela

+ [[https://kubevela.io/blog/2022/06/10/visualize-resources/][Trace Kubernetes Application]]

* Helm and K8S Yaml

** Resources
+ [[https://github.com/melahn/helm-chartmap][melahn/helm-chartmap]] Helm Charts => JSON and PlantUML
+ [[https://github.com/melahn/helm-inspector][melahn/helm-inspector]] Helm ChartMap JSON => D3 ([[https://melahn.github.io/helm-inspector/src/][demo]])



** Topics

*** Charts

+ [[https://github.com/goharbor/harbor-helm][goharbor/harbor-helm]]

*** YAML Conversion
**** Init a helm repo into a project

#+begin_src shell
helm repo add bitnami https://charts.bitnami.com/bitnami
helm install
#+end_src



*** Diagrams

**** Visualize Helm Charts With PlantUML

***** Installing [[https://github.com/melahn/helm-chartmap][Chart Map]]


*** K8S YAML on Podman

**** Feature Limitations

See [[https://docs.podman.io/en/latest/markdown/podman-kube-play.1.html#podman-kube-play-support][Podman Kube Play Support]]

****


* Lens

An IDE for kubernetes (I swear I thought I learned that this wouldn't run on
linux)

** Issues

*** Lens URL Protocol

Requires a =lens://= URL protocol for interactions requiring browser (for
authentication, etc). See [[https://aur.archlinux.org/cgit/aur.git/tree/?h=lens-bin][lens.desktop]] from AUR.

+ circumvent via XDG_DATA_DIRS?

*** Running on Guix

It runs, but the protocol issue is blocking me. I need to dissect the AUR (lens,
[[https://aur.archlinux.org/cgit/aur.git/tree/?h=lens-bin][lens-bin]]) and Nix packages to see whats needed for build (or install from
binary)


* Kind

** Docs

** Resources

** Topics

*** Credentials

**** Tokens and Certs

+  [[https://medium.com/@piyifan123/use-yubikey-to-secure-kubernetes-authentication-client-cert-8978c04a2b90][Use Yubikey to Secure K8S Auth Client Cert]] (todo eventually)

*** Running Kind via Podman on Arch

I'm pretty sure I'll hit a snag when i start to pull images ... at least I will
when pulling from Quay. Some of the best tools don't really provide good
input/output redirection. They often lack the ability to use file handlers for
some file-like options, making it tough to decrypt from GPG or PIV without disk
or programming. It would be nice if more tools (& apps) clarified how they
interact with the OS keychain -- if they even use it.

+ List contexts with =kind get clusters=
+ Check the current context with =kubectl config current-context=

**** Initial cluster bootstrap fails

After starting the cluster, some processes fail.

+ Check the =kube= tab in =kind-cluster-control-plane=
+ It hints to run =man podman-generate-kube=, which describes SELinux fixes.
+ Modify the pod's yaml, save it somewhere somewhere and pass it to =podman play
  kube= to attempt to restart it.

**** Configure =KUBECONFIG=

These can be set in =~/.kube/config=

**** Setup Kubernetes Dashboard

TODO: finish setting up the dashboard in kind ...

* k0s

** Docs

+ [[https://github.com/k0sproject/k0sctl][k0sctl]]
+ [[https://docs.k0sproject.io/v1.28.4+k0s.0/install/][quick start guide]] or [[https://docs.k0sproject.io/v1.28.4+k0s.0/k0sctl-install/][install using k0sctl]]

** Resources
+ [[https://www.virtualizationhowto.com/2023/07/k0s-vs-k3s-battle-of-the-tiny-kubernetes-distros/][k0s vs k3s]]

*** Guides

**** [[https://github.com/jpb111/kubernetes-k0s-ansible-harbor][jpb111/kubernetes-k0s-ansible-harbor]]

MetalLB + Longhorn + Helm

** Overview

Components

+ runtime: containerd
+ networking: kube-router and calico
+ datastore: etcd and kine/sqlite


* [[https://k3s.io][k3S]]
Rancher installer script sets up SE Linux; installs via a custom RPM channel.

** Docs

** Resources
+ [[https://stevex0r.medium.com/setting-up-a-lightweight-kubernetes-cluster-with-k3s-and-fedora-coreos-12d504160366][Setting up a lightweight Kubernetes cluster with K3s and Fedora CoreOS]]
+ [[https://vmguru.com/2021/04/how-to-install-rancher-on-k3s/][Installing Rancher on HA K3s]]


** Issues
*** Installing On NixOS

Similar enough to Guix. Also nix/guix are usually concise documentation of
internals, service dependencies and build requirements. I guess packages usally
are ... except I actually find myself reading these. Arch/AUR are hard to clone.

+ [[https://nixos.wiki/wiki/K3s][nixos.wiki/wiki/K3s]]
  - [[https://github.com/TUM-DSE/doctor-cluster-config/tree/master/modules/k3s][TUM-DSE/doctor-cluster-config]]
+ [[https://nixos.wiki/wiki/kubernetes][nixos.wiki/wiki/kubernetes]]
  - [[https://github.com/cmollekopf/kube-nix][cmollekopf/kube-nix]]
  - [[https://github.com/saschagrunert/kubernix][saschagrunert/kubernix]]

**** NixOS references

+ [[https://r.ryantm.com/log/updatescript/k3s/][nix build logs for k3s]]
  - output for a NixOS build of k3s
+ [[https://github.com/NixOS/nixpkgs/issues/182085][issues/182085]] k3s: support HA cluster (pull/185231 [[https://github.com/NixOS/nixpkgs/pull/185231/commits/60e0d3d73670ef8ddca24aa546a40283e3838e69][commit]])
  - starts/completes a pullreq to modify k3s package & service initiation
+ [[https://github.com/NixOS/nixpkgs/pull/185231][pull/158089]]: k3s: v1.22.3+k3s1 -> 1.23.3+k3s1
  - upgrade k3s version, change build process, split into two derivations
+ [[https://github.com/NixOS/nixpkgs/pull/161906][pull/161906]] (#156615): k3s: update script is broken
  - one of the few things i didn't grok from the package source

+ NixOS/nixpkgs: all references are in this project
  - nixos/modules/module-list.nix mentions service in =./services/cluster/k3s/default.nix=
  - nixos/modules/services/cluster/k3s/default.nix defines the =k3s= service
  - pkgs/applications/networking/cluster/...
    - ./k3s/default.nix describes the build process in comments
    - ./k3s/update.sh
    - ./kube3d/default.nix
    - patch: ./k3s/patches/0001-scrips-download-strip-downloading-just-package-CRD.patch

***** Build

Second Phase

util-linux because [[https://github.com/kubernetes/kubernetes/issues/26093#issuecomment-705994388][kubelet wants 'nsenter' from util-linux]]

+ buildInputs: kmod, socat, iptables, iproute2, bridge-utils, ethtool, util-linux, conntrack-tools
+ nativeBuildInputs: makeWrapper, rsync, yq-go, zstd
+ propagatedBuildInputs k3sCNIPlugins, k3sContainerd, k3sServer, runc

**** NixOS Hashicorp

There are also nixos packages/services for:

+ consul/nomad
+ terraform/terraform-ls
+ hashi-ui

**** NixOS Vault

+ pkgs/tools/security/vault/...
  - default.nix
  - vault-bin.nix
  - update-bin.sh
+ nixos/modules/services/security/...
  - vault.nix
+ nixos/tests/...
  - vault.nix
  - vault-dev.nix
  - vault-postgresql.nix

***** Vault Tools
+ pkgs/applications/networking/cluster/hashi-up/default.nix: install
  consul/nomad/vault on remote linux hosts (no deps)
+ pkgs/tools/misc/vsh/default.nix: hashicorp vault interactive shell (no deps)
+ pkgs/tools/security/safe/default.nix: a CLI for Vault (no deps)
+ pkgs/tools/security/vault-medusa/default.nix: import/export vault secrets. no dependencies/patches?
+  but build deps and several haskell dependencies

**** NixOS Helm

Very few dependencies for the Helm =buildGoModule=

+ pkgs/applications/networking/cluster/helm/plugins/...
  - helm-secrets.nix: installs wrapper script for several tools (e.g. vault)

* Roam
+ [[id:ac2a1ae4-a695-4226-91f0-8386dc4d9b07][DevOps]]
