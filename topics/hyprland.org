:PROPERTIES:
:ID:       bc406527-0255-4d70-b620-82495ac5c8fe
:END:
#+TITLE: Hyprland
#+DESCRIPTION:
#+TAGS:

* Roam
+ [[id:f92bb944-0269-47d4-b07c-2bd683e936f2][Wayland]]
+ [[id:da888d96-a444-49f7-865f-7b122c15b14e][Desktop]]
+ [[id:bdae77b1-d9f0-4d3a-a2fb-2ecdab5fd531][Linux]]

* Docs

* Resources

** Plugins

*** With Shaders

+ [[https://github.com/micha4w/Hypr-DarkWindow][micha4w/hypr-darkwindow]] inverts windows
+ [[https://github.com/alexhulbert/Hyprchroma/blob/main/flake.nix][alexhulbert/Hyprchroma ./main/flake.nix]] requires building darkwindow

** Configs
*** Misako
+ [[https://codeberg.org/look/misako/src/16aa0d52c0ede3f61b4b5cb91c8b0c261c1524d5/misako/home-environments/look/files/.config/hypr/rules.conf#L15][misako/home-environments: home/environments/.config/hypr/rules.conf]]
* Topics
** Dependencies

#+begin_src shell :results output file :file img/hyprland-revdeps.svg
hyprpkgs=$(guix search 'hypr' | recsel -P name | grep -E '^hypr' | grep -v hypre)
guix graph --type=reverse-package $hyprpkgs \
    | dot -Tsvg
#+end_src

#+RESULTS:
[[file:img/hyprland-revdeps.svg]]
** Rules
** Binds

** Instance Socket

A better way to get the instance socket (than =ls= or something)

#+begin_src shell
inst=$(hyprctl instances -j | jq -r 'first | .instance')
#+end_src

*** Triggering commands remotely

You can't troubleshoot everything over =ssh=, since =ssh= can't usually access
remote sockets... or something...

#+begin_quote
yeh that didn't seem right... it's not. without =jq -r=, then =$inst= will include
quotes. you can absolutely interact with the instance socket remotely.
#+end_quote

**** Using =at=

You'd need =atd= or some other =at=-like daemon to execute jobs. This isn't a good
idea, since they'll run under the authority of the =atd= user. From the remote:

#+begin_src shell
t=$(mktemp -d) # I /think/ this correct but idk
at now + 5 minutes "echo 'foob ar '\"$(date +%s)\" >> $t/foo.job"
at -c # list jobs
#+end_src

**** Using =watchexec=

Something like this:

#+begin_src shell
tf=$(mktemp -d)/task.watch # I /think/ this correct but idk
tfrun=$(dirname $tf)/task.run
debounce=25
touch $tf # again, I didn't exactly test this
watchexec -d $debounce -f "$tf" 'echo "$(date +%s)" >> $tfrun"'
#+end_src

* Issues
