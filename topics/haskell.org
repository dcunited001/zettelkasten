:PROPERTIES:
:ID:       6fbfa3fc-f147-4294-9d2b-ffc37e0e12e1
:END:
#+TITLE:     Haskell
#+AUTHOR:    David Conner
#+EMAIL:     noreply@te.xel.io
#+DESCRIPTION: notes

* Docs

* Resources

** Tooling

+ [[https://github.com/github/semantic/blob/main/docs/development.md#development-guide][github/semantic]] explains purpose behind ghc, cabal, hackage, ghcup and ghci

* Topics

** ghcup

haskell installation manager

** Tensors

*** [[https://github.com/mstksg/functor-combinators/blob/master/test/Tests/Util.hs][mstksg/functor-combinators]]

+ [[https://blog.jle.im/entry/functor-combinatorpedia.html][Functor Combinatorpedia: intro post]]

I'm looking for something to connect tensor sum/product with boolean algebra,
specifically to show whether & how commutivity/associativity require
constraints.

Seems to combine

+ [[https://github.com/mstksg/functor-combinators/blob/master/test/Tests/Util.hs][./test/Tests/Util.hs]]
+ [[https://github.com/mstksg/functor-combinators/blob/master/test/Tests/HFunctor.hs][./test/Tests/HFunctor.hs]]
+ [[https://github.com/mstksg/functor-combinators/blob/master/test/Tests/HBiFunctor.hs][./test/Tests/HBiFunctor.hs]]



* Issues

* Tools

** TUI
+ Haskell Summoner TUI
  - like Hoe for Ruby or Clojar automation for Clojure
+ Haskell Chell
  - TUI test runner (old project)

* Libraries
