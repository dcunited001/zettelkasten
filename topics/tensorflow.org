:PROPERTIES:
:ID:       4c629c53-91b5-45eb-bb45-7dd0aca51844
:END:
#+TITLE: Tensorflow
#+DESCRIPTION: Google's Tensorflow
#+TAGS:
* Roam
+ [[id:4ab045b9-ea4b-489d-b49e-8431b70dd0a5][Data Science]]

* Docs

* Resources

* Tensorflow
** Resources
+ [[https://www.tensorflow.org/install/lang_c][C API]] intended to link from other languages

*** [[https://github.com/tensorflow/tensorflow/tree/master/tensorflow/examples][C/C++ Examples]]

[[https://github.com/tensorflow/tensorflow/tree/master/tensorflow/examples/custom_ops_doc][Custom Ops Doc]]: more complete examples (CPU, GPU, Sparse)


** Topics
+ [[https://www.tensorflow.org/guide/sparse_tensor][Sparse Tensors]]
+ [[https://www.tensorflow.org/guide/dtensor_overview][DTensors]] ... okay yeh, probably not going to be using that :(

[[https://www.tensorflow.org/guide/random_numbers][Streaming Random Number Generation]] ... yeh I basically got 5150'd to a
short-term mental health facility for talking about planning to do this in WebGL
(more or less...) see [[https://te.xel.io/graphics/2017-01-04-webgl-gpu-prng.html][A Terrible GPU PRNG With WebGL]] ... it's cool, it's totally
cool, i'm totally fine with that.

*** Keras
The high-level layers API, more or less.

*** Datasets [[github:tensorflow/datasets][tensorflow/datasets]]

Both of these are defined in =./tensorflow_datasets/core/load.py=:

+ tfds.builder :: fetch a =tfds.core.DatasetBuilder= by name
+ tfds.load :: convenience method to construct a builder, download the data, and
  create an input pipeline, returning a =tf.data.Dataset=

*** Distributed TF

+ [[https://github.com/yahoo/TensorFlowOnSpark/wiki/Conversion-Guide][Converting a TF model]] to run on [[github:yahoo/TensorFlowOnSpark][yahoo/TensorFlowOnSpark]]


** TFLite
*** Docs

*** Resources

*** Topics


* Topics

* Issues
