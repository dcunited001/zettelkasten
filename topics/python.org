:PROPERTIES:
:ID:       b4c096ee-6e40-4f34-85a1-7fc901e819f5
:END:
#+TITLE: Python
#+DESCRIPTION: python stuff
#+TAGS:

* Roam
+ [[id:ca4b43cc-90fb-4434-9bca-5d43e28b00ae][blender: build on garuda archlinux]]
+ [[id:8b93d9a6-746f-4480-8ef5-45310e03b783][Fedora: setup AMD gpu for blender/tensorflow]]

* Docs

* Resources
+ [[https://www.adventuresinwhy.com/post/eglot/][eglot+tree-sitter in emacs 29]]
+ [[https://wiki.python.org/moin/PythonDocumentation][PQRC]] Python Quick RefCard (Python v2.4, but good)
  - same guy to do the [[https://perso.limsi.fr/pointal/_media/python:cours:mementopython3-v1.0.5a-english.pdf][Python 3 RefCard]] no wonder
  - this is an ideal cheatsheet (dense but visually easy to reference)
  - you can fit like 200 of these in a notebook and have a bookshelf worth of
    reference material, no javascript or batteries required.
  - And a [[https://perso.limsi.fr/pointal/python:abrege][more technical version]] (very nice) ... this one comes in French and
    others in German, Chinese, etc


* Topics

** Security

+ Yubico/python-fido2

** Metaprogramming
+ [[https://pypi.org/project/sip/][Python Sip]]

** Modules
+ Load code in a python project: [[https://www.devdungeon.com/content/python-import-syspath-and-pythonpath-tutorial][Python import, sys.path, and PYTHONPATH Tutorial]]

** Data Science

+ [[https://github.com/cupy/cupy/wiki/Projects-using-CuPy][Projects Using CuPy]]

** Jupyter

*** Docs
+ [[https://jupyterlab.readthedocs.io/en/stable/index.html][JupyterLab Docs]]
+ [[https://jupyterlab.readthedocs.io/en/stable/api/index.html][API docs]]
*** Resources

*** Security

+ JupyterLab v3.6 [[https://jupyterlab.readthedocs.io/en/stable/extension/identity.html][builds on top of the IdentityProvider]]
  - Jupyter Server v2 [[https://jupyter-server.readthedocs.io/en/latest/operators/security.html#identity-model][/api/me]] identity endpoint

+ [[https://jupyter-notebook.readthedocs.io/en/stable/public_server.html#running-a-notebook-server][Running a personal notebook server]]
+ Three means of authentication
  - how can I set up OTP/U2F? to require a yubikey touch to auth?
+ [[https://docs.docker.com/engine/security/protect-access/][Setting up Docker TLS certs]]
  - can Yubikey PIV interface with these?

* Issues

** Installing Python on [[id:b82627bf-a0de-45c5-8ff4-229936549942][Guix]]
*** Via guix packages and guix import ([[https://felsoci.sk/blog/installing-python-modules-on-guix.html][2022]])

=guix import pypi dash-bootstrap-components -r= creates a guix package
description for =dash-bootstrap-components=

*** Guix supports python3, pip3 and virtualenv ([[https://github.com/pjotrp/guix-notes/blob/master/PYTHON.org][2021]])

see [[https://github.com/pjotrp/guix-notes/blob/master/PYTHON.org#isolated-module-installation][pjotr's notes]]



** Packages

*** Builds

+ [[https://pip.pypa.io/en/stable/reference/build-system/pyproject-toml/][pyproject.toml]]

*** Pip Commands
**** TODO determine how to check whether wheel/sdist would be installed

... probably almost always, if it's a popular package. The commands =pip index=
and =pip cache= may help.

+ [[https://realpython.com/python-wheels/][What are python wheels and why should you care?]]
  - you should probably care if you have a decent machine

#+begin_example shell
$ time python -m pip install \
      --no-cache-dir \
      --force-reinstall \
      --no-binary=:all: \
      cryptography
#+end_example

***** Ensure python's pip is running with =python -m pip=

yeh, noob here

**** Parallel Builds

pip does some parallelism by default, but i'm not sure what

+ [[https://pythonspeed.com/articles/faster-pip-installs/][Making pip installs a little less slow]]

*** Data Science
**** SciPy/[[https://cupy.dev/][CuPy]] with AMD [[id:79d41758-7ad5-426a-9964-d3e4f5685e7e][Rocm]]

+ setup drivers in arch
  - =yay -Syu openblas-lapacksudo  opencl-amd-dev=
  - this installs all the ROCm, HIP and miopen packages
+ install scipy and numpy
+ install =cupy-rocm-5.0= by [[https://docs.cupy.dev/en/stable/install.html#building-cupy-for-rocm-from-source][building from source]]
  - ensure environment is set ([[rocm-opencl-runtime][install instructions]])

#+begin_example shell
export CUPY_INSTALL_USE_HIP=1
export ROCM_HOME=/opt/rocm
export HCC_AMDGPU_TARGET=gfx906

# pip install cupy-rocm-5. # specify ???

# instead run
pip install --no-cache-dir --force-reinstall --no-binary=:all: scipy numpy
pip install --no-cache-dir --no-binary=cupy cupy
#+end_example

The last option =--no-binary=:all:= is probably overkill

***** DONE rebuild cupy passing env vars to pip ([[https://docs.cupy.dev/en/stable/install.html#environment-variables][cupy docs]])
CLOSED: [2022-12-15 Thu 00:56]

**** Numba (LLVM JIT compiler, eats python & returns CUDA)
