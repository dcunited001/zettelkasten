:PROPERTIES:
:ID:       3d2330da-5a95-408a-b940-7d2b3b0c7fb2
:END:
#+TITLE: Keyboard
#+DESCRIPTION: Info on keyboards, whether x11/wayland or software/hardware or just docs
#+TAGS:

* Roam
+ [[id:8c6d7cdd-74af-4307-b1df-8641752a1c9f][Xorg]]

* Docs
+ [[https://deskthority.net/wiki/][Deskthority]]: all about keyboards

* Resources

* Layouts

** Hardware
+ [[https://configure.zsa.io/ergodox-ez/layouts/default/latest/0][Ergodox EZ Default Layout]]
+ manabu
+ [[https://github.com/system76/launch/blob/master/pcb-lite-iso/launch-lite-iso.kicad_prl][System76/launch]]

** Software
+ [[www.keyboard-layout-editor.com][Keyboard Layout Editor]]
+ [[github:manabu/keyboard-layout-image-generator][manabu/keyboard-layout-image-generator]]
+ [[github:alexriss/keyboard-layout-converter][alexriss/keyboard-layout-converter]]
  - convert windows layout to xkb symbols using python
+ [[https://github.com/xkbmon/xkbmon][xkbmon/xkbmon]] display keyboard layout in taskbar (dwm, i3, tmux, etc)
+ [[https://github.com/divvun/kbdgen][divvun/kbdgen]] (rust) generate keyboards for many platforms from one spec
  - example project: [[github:giellalt/keyboard-sme][giellalt/keyboard-sme]]
+ [[github:divvun/xkb-parser][divvun/xkb-parser]] (rust) XKB format parser
  - and it parses the geometry files ... well kinda (FIXME)
+ [[https://github.com/waldobronchart/ShortcutMapper][Waldobronchart/ShortcutMapper]]
  - Exactly what I'm looking for, except printable.
  - It should be fairly trivial to get [[https://github.com/noctuid/general.el][noctoid/general.el]] to output the last
    =X-*= modifier-key pair, for a mode/context.
  - From here, ShortcutMapper's python lib can interpret the bindings and
    generate the keyboard description metadata.

** Guides
+ [[https://emacsnotes.wordpress.com/2022/10/30/use-xkb-to-setup-full-spectrum-of-modifiers-meta-alt-super-and-hyper-for-use-with-emacs/][Use XKB to setup a full spectrum of modifiers (meta, alt, super, hyper)]]
+ [[How to modify a keyboard layout in Linux][How to modify a keyboard layout in linux]]
+ [[https://emacsnotes.wordpress.com/2022/10/30/use-xkb-to-setup-full-spectrum-of-modifiers-meta-alt-super-and-hyper-for-use-with-emacs/][mw8/white_keyboard_layout]] crazy analysis of keyboard layouts
  - both the analysis and diagrams are in rust
+ [[https://github.com/pfaion/x1carbon-xkb-geometry][pfaion/x1carbon-xkb-geometry]]

** Docs
+ [[github:freedesktop/xkbprint][freedesktop/xkbprint]]: print a keyboard layout

*** TODO produce freedesktop/xkbprint pdf's for emacs mode
+ go from list of bindings/modes in a context (along with configuration for how
  to split up modkeys in final render)
  - to org with tables (chance to customize what's displayed)
  - to largeformat xkbprint output
  - to PDF via ps2pdf
+ if it's big enough to display keycodes, it's large enough to print, especially
  if you interleave pages sent to =ps2pdf= with pages that further describe
  keycodes
+ however, getting emacs and org-exports latex to produce tables is simple
  enough for now

** Firmware
*** Embedded
+ [[https://docs.qmk.fm/#/newbs][QMK]] (quatum mechanical keyboards)
  - [[github:qmk/qmk_firmware][qmk/qmk_firmware]]
  - [[github:mihaiolteanu/mugur][mihaiolteanu/mugur]]
    
* Hardware

* Keycaps

#+begin_example text

I've never actually worked alongside someone who uses the cool "half & half" two
handed keyboards. Maybe in passing. I AM ISOLATED ... do I sound repititive? I
can explain how I end up in the extreme margins of 5,000 distributions.

I spent quite a lot of time customizing my macbook keyboards but somehow had no
idea that you can buy a keyboard that allows loading custom firmware.

I was able to engage/connect with like-minded people at VWCC about technology, including
keyboards/etc. but the DEA manipulated the supply of Amphetamine precursors. I
can deal without having Adderal, but I can't deal with 2-3 hours of phone calls
and pharmacy/doctor drop-ins ... on and off for days _and_ weeks.

Those might just be the FAFSA funds I would receive, if I didn't drop out.

#+end_example

** 3D Printable
+ (Riskable) [[https://3dprintingindustry.com/news/these-open-source-levitating-keyboard-switches-can-be-3d-printed-at-home-202645/][These open-source, levitating keyboard switches can be 3D printed at home]]
  - requires a hall-effect sensor per key. this could be expensive.
** Keycap Design Types/Ideas

Why springs/buttons? Or the butterfly switch thingies with the conductive
traces?

What else could be used?

*** Compliant Mechanism

This won't hold up to the mechanical forces, but it's the first thing that
popped into my head.

*** Ferrofluid-based pressure sensor
By itself, it's terrible for a keyboard. it would feel very wierd and your
keyboard might leak toxic chemicals. But with the right tweaks ... who knows?
If designed with the proper materials, a fluid-based mechanism would hold up to
mechanical wear.


* Drivers


* Software

** XKB
*** Docs
+ [[https://github.com/xkbcommon/libxkbcommon][libxkbcommon/libxkbcommon]]
+ [[https://people.freedesktop.org/~alanc/input/XKB-Config.html][The XKB Configuration Guide]] (Ivan U. Pascal)
  - one of those things that probably should've shown up on Google earlier
    ... but didn't
+ [[https://github.com/haata/KeyboardLayouts/tree/master][haata/KeyboardLayouts]]
+ [[https://www.x.org/docs/XKB/XKBproto.pdf][The X Keyboard Extension: Protocol Spec]] (nineteen ninety six... and it's official)
  - another one of those "little things" that should've shown up in Google
    search results, i donno, maybe the first time i seriously looked into xkb.
    probably 2011/2012 i think? it never did. the best thing i found was Ivan's
    guide in like 2016.


*** Resources
+ [[https://www.reddit.com/r/linux/comments/1ydiu7/howto_different_xkb_config_for_only_certain/][Howto: Different xkb config for only certain attached evdev keyboards]]

** Loadkeys

*** Resources
+ [[https://www.emacswiki.org/emacs/LoadKeys][EmacsWiki]]
+ [[https://wiki.archlinux.org/title/Linux_console/Keyboard_configuration][Linux Console Keyboard Config]]
*** Issues
**** Finding includes/configs/keymaps

Do a =find $keymaps -name includes -type d= to find the includes, which are
analogous to the X11 includes like =caps:hyper= or =ctrl:hyper_capscontrol=

+ on traditional systems :: /usr/share/kbd/keymaps
+ on guix systems :: /run/current-system/profile/share/keymaps




**** Updates
**** Generating Configs
++

* Wayland

* Issues
