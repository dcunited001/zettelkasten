:PROPERTIES:
:ID:       da888d96-a444-49f7-865f-7b122c15b14e
:END:
#+TITLE: Desktop
#+AUTHOR:    David Conner
#+EMAIL:     noreply@te.xel.io
#+DESCRIPTION: Desktop Tools/Utilities

* Xorg Desktops

** Launcher

+ Rofi
+ DMenu

** Panels

+ Polybar

** Notifications

+ Dunst

* Wayland Desktops

** Launcher

+ [[https://hg.sr.ht/~schoopta/wofi][wofi]]
+ [[https://github.com/nwg-piotr/nwg-launchers][nwg-launchers]]

** Panels

+ Swaybar

** Notifications

+

* Misc Tools

** Usability

+ [[github:fennerm/flashfocus][Flash Focus]]

* Flatpak

This is a platform for distributing apps, but is technically containerized.
[[https://docs.flatpak.org/en/latest/tips-and-tricks.html?highlight=%22%2Fetc%2Fflatpak%22#adding-a-custom-installation][Custom installations allow you to install to flatpak-specific disk-image]]. This
can be shared to multiple VM's via proxmox to make desktop apps like
Krita/Blender/Steam more portable.

#+begin_quote
... So, if i want to distro-hop ... but I don't want to lose my app
configurations.
#+end_quote


Environment Vars

|--------------------------+-----------------------+-----------------------------------------|
| Name                     | Default               | Desc                                    |
|--------------------------+-----------------------+-----------------------------------------|
| FLATPAK_USER_DIR         | XDG_DATA_PATH/flatpak | location of per-user installation       |
| FLATPAK_SYSTEM_DIR       | /var/lib/flatpak      | location of system-wide installation    |
| FLATPAK_SYSTEM_CACHE_DIR | /var/tmp/             | place for temp child repos during pulls |
| FLATPAK_CONFIG_DIR       | /etc/flatpak          | flatpak site config                     |
| FLATPAK_RUN_DIR          | /run/flatpak          | runtime global files                    |
|--------------------------+-----------------------+-----------------------------------------|

Modified XDG Vars

|-----------------+------------------------------|
| Base Dir        | Default                      |
|-----------------+------------------------------|
| XDG_CONFIG_HOME | ~/.var/app/$app/config       |
| XDG_DATA_HOME   | ~/.var/app/$app/data         |
| XDG_CACHE_HOME  | ~/.var/app/$app/cache        |
| XDG_STATE_HOME  | ~/.var/app/$app/.local/state |
|-----------------+------------------------------|

** Docs
+ [[https://docs.flatpak.org/en/latest][Main Docs]]
+ [[https://docs.flatpak.org/en/latest/conventions.html][Flatpak Conventions]]

** Resources
+ [[https://docs.flatpak.org/en/latest/desktop-integration.html#portals][Portals]] interface for securely permitting app to access host resources from sandbox

** Caveats

When running apps from a portable flatpak custom installation, the ABIs for a
flatpak ELF must be compatible with those your system expects binaries to adhere
to.

+ [[https://stackoverflow.com/questions/2171177/what-is-an-application-binary-interface-abi][The TLDR S/O post on ABIs I shouldve finished reading]]
+ [[https://kernelnewbies.org/ABI][Linux ABI]]
+ [[https://www.systutorials.com/docs/linux/man/1-abidiff/][abidiff]] cmdline tool


** Issues

*** Fixing Zoom Signon in flatpak

Can be fixed in =$XDG_CONFIG_HOME/zoomus.conf= with
=embeddedBrowserForSSOLogin=false= according to this [[https://github.com/flathub/us.zoom.Zoom/issues/169][github issue]].

See [[https://support.zoom.us/hc/en-us/articles/115001799006-Mass-deploying-preconfigured-settings-for-Mac][documentation of zoomus.conf]] for keys/values


* XDG Free Desktop

** Docs

** Resources

** Topics

*** XDG User Dirs

This requires the =xdg-user-dirs= tool

See [[https://wiki.archlinux.org/title/XDG_user_directories][XDG User Directories]] for more info. This file allows directories like
=$HOME/Documents= to survive reinstallation of systems & home directories in a
sane way.

#+begin_src sh :result none :eval no
dirsfile=$XDG_CONFIG_HOME/user-dirs.dirs

# overwrite (requires stow .)
echo > $dirsfile
echo "XDG_DOCUMENTS_DIR=\"$_DATA/xdg/Documents\"" >> $dirsfile
echo "XDG_MUSIC_DIR=\"$_DATA/xdg/Music\"" >> $dirsfile
echo "XDG_PICTURES_DIR=\"$_DATA/xdg/Pictures\"" >> $dirsfile
echo "XDG_VIDEOS_DIR=\"$_DATA/xdg/Videos\"" >> $dirsfile
echo "XDG_TEMPLATES_DIR=\"$_DATA/xdg/Templates\"" >> $dirsfile

# and ignore these
#XDG_DESKTOP_DIR="$_DATA/xdg/Desktop"
#XDG_DOWNLOADS_DIR="$_DATA/xdg/Downloads"
#XDG_PUBLICSHARE_DIR="$_DATA/xdg/Public"
#+end_src

**** Note

=xdg-user-dirs-update= will replace everything if anything is invalid (only
=$HOME/yyy= or =/path/to/yyy= is valid) .it will autoupdate everything if any
dirs don't exist

** Issues
+ [[https://bbs.archlinux.org/viewtopic.php?id=227166][Expanding =XDG_DATA_DIRS= in =.pam_environment=:]]

* Applications

* Design

** Resourcse

+ [[https://blog.buddiesofbudgie.org/state-of-the-budgie-may-2022/][State of the Budgie: May 2022]] long post about organizing work for a desktop
  environment.
