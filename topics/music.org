:PROPERTIES:
:ID:       2fec00a4-623b-4596-b98f-ac28c8aa26af
:END:
#+TITLE:     Music
#+AUTHOR:    David Conner
#+EMAIL:     noreply@te.xel.io
#+DESCRIPTION: notes

+ Projects
  + [[id:8bfb9ff9-2de1-43c8-b8ad-79516fe8674d][Music]]

* Transcription

** Lilypond

*** Docs
+ [[https://lilypond.org/doc/v2.22/Documentation/notation/common-notation-for-fretted-strings][Fretted Strings]]
  - [[https://lilypond.org/doc/v2.21/Documentation/notation/guitar][Guitar Tabs]]
+ [[https://lilypond.org/doc/v2.21/Documentation/notation/common-notation-for-percussion][Drums]]

*** Resources
+ [[https://orgmode.org/worg/org-contrib/babel/languages/ob-doc-lilypond.html][ob-lilypond]]
+ [[https://lilypond.org/doc/v2.21/Documentation/extending/index][Extending with scheme]] ?!
  - [[https://lilypond.org/doc/v2.21/Documentation/extending/scheme-functions][Scheme Functions]]
  - Generate [[https://lilypond.org/doc/v2.21/Documentation/extending/displaying-music-expressions][scheme from lilypond]] ?!!!
  - And hey, it's guile scheme.

#+begin_quote
Generally, whereever you see scheme, you're following a trail cut by a greybeard
-- somebody really enjoyed their undergrad programming languages class.

Support can be a bit sparse -- but this is actually a good thing: no one-off
s/o's and articles filling up your google results. Also, the code quality is
usually great. The ecosystem is a bit confusing at first (which scheme is this
again?), but actually great in the end. And scheme comes with the free SICP text
book, which has by far the best "classics" selection of programming problems.
And guile scheme seems to have been /purpose-built to drive C-libraries via FFI/
as a higher-level scripting language.

Lisp is hard though. You can't just cargo-cult clich√©s or throw macros at
everything. Also, geiser is a bit tricky for guile/guix... it's harder to use
than CIDER/SLIME, but powerful. Debugging is great, but i wish it had CIDER
features like buffers to view stack frames.

Scheme has the best lisp-style code-as-data-as-code transformations of all the
lisps (or at least the easiest to identify). Guix can autogenerate packages for
go and many other languages based on dependency trees. And here you can
transform lilypond music into scheme statements. While the geiser/guile support
for lipsy could be improved, you can effortlessly navigate ASTs-as-data-as-code.
With a /little/ metacognition to avoid the temptation of muscle-memory, this
/should/ wire your brain to traverse AST-space. i'm still not there -- not
enough hours spent with real lisp programming.
#+end_quote

**** Other Scheme Projects can be found in [[github:ectorepo/scheme][ectorepo/scheme]]

+ Meep :: electromagnetic simulations with a parallel python API
+ mcron :: cron, but in scheme
+ shepherd :: manage services with lisp. Good examples of systems programming.
+ GnuTLS

*** Issues

* Production

** Open Source DAW

*

* Programming

** [[https://overtone.github.io/][Overtone]]

[[http://supercollider.github.io/][SuperCollider]] + Clojure
