:PROPERTIES:
:ID:       6f769bd4-6f54-4da7-a329-8cf5226128c9
:END:
#+title: Emacs

+ [[id:83315604-b917-45e3-9366-afe6ba029a60][Systems]]

* Docs


* Open Souce

+ [[https://www.fosskers.ca/en/blog/contributing-to-emacs][Contributing to Emacs]]




* Killer Apps

** Tramp
*** Docs
+ [[https://www.emacswiki.org/emacs/TrampMode][EmacsWiki]]
+ GNU [[https://www.gnu.org/software/tramp/][Docs]]
*** Issues

**** [[https://stackoverflow.com/a/16408592][Getting sudo under a specific user on a remote host]]

Use =sudoedit= generally. It's far more secure.

#+begin_example
/ssh:you@remotehost|sudo:remotehost:/path/to/file
#+end_example

- explains =multi:= syntax which specifies multiple hops using SSH uri's
  separated by pipes
  - tramp breaks these up and constructs =tramp-default-proxies-alist=
    - e.g. =("remotehost" "root" "/ssh:you@remotehost:")=
- also explains sudo for a specific user on a local host

***** TODO figure out YTF this still doesn't work for me
+ what am i doing wrong? SSH is fine usually. Sudo/Edit
+ also, is there a solution to the verbose path entry in minibuffer. history
  doesn't work unless you've visited that buffer before
  - and yes, it will be there waiting for you in your history if you have
  - also, emacs undo history is a bit like a stalker. "oh the last time i opened
    that file that was a year ago. jesus christ."


* Timesavers

** Learning

** Browsing Code
+ navigating definitions in arbitrary code (esp. elisp)
  + M-. :: =+lookup/definition=
  + M-, :: =better-jump-jump-backward= (or =xref=)

** Dired
+ Q :: =dired-do-find-regexp-and-replace=

* Tools

** Completion

*** Ivy

**** TODO Browse the =*Ivy Help*= buffer for tips on using minibuffer
+ From minibuffer, type =C-h m=


* Issues

** System Programming

*** Detecting [[https://emacs.stackexchange.com/questions/31224/how-to-test-programmatically-whether-the-current-emacs-session-among-several][Whether Emacs Is Running As Daemon]]

This detects whether the focused Emacs frame is connected to a server. It will
return false if there is not another emacs process running as server.

#+begin_example emacs-lisp
(and (boundp 'server-process)
     (processp server-process)
     (server-running-p))
#+end_example

** Saving with another users permissions

+ There is =(sudo-save)= and a trick where you =chmod= with =dired=
  - but these are prone to
+ There is also the =:w !sudo tee %= trick from vim
  - It could be adopted for emacs, but handing keyboard input is dicey.
  - Not ever =(shell-... )= commend in emacs-lisp is going to make the correct
    calls for authorization.
  - [[https://vi.stackexchange.com/questions/475/how-to-save-a-file-for-which-i-have-no-write-permissions/476#476][S/O issue one]] & [[https://stackoverflow.com/questions/2600783/how-does-the-vim-write-with-sudo-trick-work][S/O issue two]]
