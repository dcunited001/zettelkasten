:PROPERTIES:
:ID:       aeff1aef-75d5-4666-8a70-a81025c5c01b
:END:
#+TITLE: Nyxt
#+DESCRIPTION:
#+TAGS:

* Roam

* Docs

* Resources

** Emacs

+ [[https://orgmode.org/worg/org-contrib/babel/languages/ob-doc-lisp.html][worg: ob-lisp]]

* Topics
** Source
*** Utilities

Can pretty-print using =prini=, defined in =./source/utilities.lisp=. This could
be useful if running lisp via CLI.

#+begin_src lisp
(prini "Hello, Nyxt!" *standard-output*)
#+end_src

** Profiles

** ASDF

*** Registries

Trying to print these all out, but they're available using =describe= and via
other means:

#+begin_src lisp
(prini (map 'string #'identity (cdr asdf:*default-source-registries*)) *standard-output*)
#+end_src

*** Packages

** Troubleshooting
*** Basics

**** Failsafe

Can run without effects from previous state/config using =nyxt -CIS= or =nyxt
--failsafe=. The latter is defined in =./source/start.lisp= as

#+begin_src lisp
(when failsafe
      (setf
       (getf *options* :verbose) t
       (getf *options* :no-config) t
       (getf *options* :no-auto-config) t
       (getf *options* :profile) (profile-name (find-class 'nofile-profile)))
      (unless remote
        (setf
         (getf *options* :no-socket) t)))
#+end_src

* Issues
