:PROPERTIES:
:ID:       4ab045b9-ea4b-489d-b49e-8431b70dd0a5
:END:
#+TITLE: Data Science

* Resources

** Cheatsheets
+ [[https://startupsventurecapital.com/essential-cheat-sheets-for-machine-learning-and-deep-learning-researchers-efb6a8ebd2e5][Essential Cheatsheets for machine learning]]
  - also [[https://github.com/kailashahirwar/cheatsheets-ai][kailashahirwar/cheatsheets-ai]]
  -
+ [[https://www.theinsaneapp.com/2020/12/machine-learning-and-data-science-cheat-sheets-pdf.html][Insane App: ML Cheatsheets]] (kinda crazy, but a lot of them)
+ [[github:mavam/stat-cookbook][mavam/stat-cookbook]]
+ [[https://github.com/rstudio/cheatsheets][rstudio/cheatsheets]]
+ [[https://github.com/aaronwangy/Data-Science-Cheatsheet][aaronwangy/Data-Science-Cheatsheet]]
  - inspired by [[https://github.com/ml874/Data-Science-Cheatsheet][ml874/Data-Science-Cheatsheet]]
  - inspired by [[github:wzchen/probability_cheatsheet][wzchen/probability_cheatsheet]]


* Languages

** R

** Matlab

** Julia

Works quite a lot better if you figure out how to forego python dependencies
(e.g. use Flux.jl instead of tensorflow/etc). It's amazing how few lines you can
implement a simple gradient descent problem in.

*** Flux.jl

+ Flux.jl example  [[id:3a7412c7-f75b-4772-85d9-015da383efbc][Attempt to solve a statics problem with Flux.jl]]

* Frameworks

** Torch

** Tensorflow
*** Resources
+ [[https://www.tensorflow.org/install/lang_c][C API]] intended to link from other languages

**** [[https://github.com/tensorflow/tensorflow/tree/master/tensorflow/examples][C/C++ Examples]]

[[https://github.com/tensorflow/tensorflow/tree/master/tensorflow/examples/custom_ops_doc][Custom Ops Doc]]: more complete examples (CPU, GPU, Sparse)


*** Topics
+ [[https://www.tensorflow.org/guide/sparse_tensor][Sparse Tensors]]
+ [[https://www.tensorflow.org/guide/dtensor_overview][DTensors]] ... okay yeh, probably not going to be using that :(

[[https://www.tensorflow.org/guide/random_numbers][Streaming Random Number Generation]] ... yeh I basically got 5150'd to a
short-term mental health facility for talking about planning to do this in WebGL
(more or less...) see [[https://te.xel.io/graphics/2017-01-04-webgl-gpu-prng.html][A Terrible GPU PRNG With WebGL]] ... it's cool, it's totally
cool, i'm totally fine with that.

**** Keras
The high-level layers API, more or less.

* In-Memory Reps
** Pandas
v2.0.0 includes datatypes backed by Apache Arrow.

*** Topics
**** Using pyarrow
Using a pyarrow backend enables integer representations alongside nullable
data. Before v2.0.0, these would automatically convert the column to a float,
requiring more memory or more intensive CPU ops.

** Apache Arrow

** Polars

* Workflows

** Common Workflow Language

* Tools

** Google Colab

Cloud notebooks

* Optimizers

** Resources
+ [[https://www.ruder.io/optimizing-gradient-descent][ruder.io/optimizing-gradient-descent]]
