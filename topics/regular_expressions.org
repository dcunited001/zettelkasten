:PROPERTIES:
:ID:       5519f9de-8a3f-43eb-a403-9429fda009f6
:END:
#+TITLE: Regular Expressions
#+DESCRIPTION:
#+TAGS:

* Roam
+ [[id:cf847bc5-31f7-4bb8-8324-7680a8f2953d][Shell]]
+ [[id:0c10bf9a-650a-4f6a-8add-a4ca09b964e1][Maths: Discrete]]
+ [[id:2cccfd7b-dd5c-47b2-963a-b22bbd1f8853][Data Structures]]

* Docs
* Resources
** Finite Automata
+ [[https://github.com/nokia/regexp-learner][nokia/regexp-learner]] implements =L*= algorithm, includes a mathy [[https://github.com/nokia/regexp-learner/blob/master/notebooks/Angluin.ipynb][Jupyter
  notebook]] and links to some papers from the late 80's

*** Implementing Regular Expressions

+ [[https://swtch.com/~rsc/regexp/][Russ Cox blog]] (regexp1 and regexp4 are below)
  - regexp1: [[swtch.com/~rsc/regexp/regexp1.html][Regular Expression Matching Can Be Simple And Fast (but is slow in
  Java, Perl, PHP, Python, Ruby, ...)]]

** Codesearch
+ [[https://github.com/google/codesearch][google/codesearch]]
+ regexp4: [[https://swtch.com/~rsc/regexp/regexp4.html][Regular Expression Matching with a Trigram Index (or How Google Code
  Search Worked)]]

* Topics


* Issues
