:PROPERTIES:
:ID:       28e75534-cb99-4273-9d74-d3e7ff3a0eaf
:END:
#+TITLE: Ansible

* Roam

* Docs
+ [[https://docs.ansible.com/ansible-core/devel/index.html][Ansible Core]] ([[https://docs.ansible.com/ansible-core/2.12_ja/index.html][jp]])
+ [[https://docs.ansible.com/ansible/latest/galaxy/user_guide.html][Ansible Galaxy Docs]]
+ [[https://docs.ansible.com/ansible_community.html][Ansible Community Docs]]
+ Ansible [[github:ansible/ansible-examples][example projects]]
+ Ansible [[https://docs.ansible.com/ansible/latest/user_guide/vault.html#playbooks-vault][Vault]] (password managemnt)
+ Ansible [[https://docs.ansible.com/ansible/latest/collections/community/general/index.html][Community Modules]]

* Resources
+ Start Here:
  + [[https://docs.ansible.com/ansible/latest/user_guide/playbooks.html][Working With Playbooks]] (from ansible docs)
  + [[https://wiki.dd-wrt.com/wiki/index.php/VLAN_Detached_Networks_%28Separate_Networks_With_Internet%29][Example Playbooks]]

** Configuration
+ Example [[https://github.com/ansible/ansible/blob/devel/examples/ansible.cfg][ansible.cfg]]
+ Ansible [[https://docs.ansible.com/ansible-core/devel/reference_appendices/config.html#ansible-configuration-settings][Environment Vars]]

** _calvinr
+ Ansible AWX/Tower [[https://gitlab.com/_calvinr/networking/automation_examples/ansible/ansible-tower-awx-cheat-sheet][deploy cheatsheet]]
+ Migration: [[https://gitlab.com/_calvinr/networking/automation_examples/nornir/SNMP_migration][SNMPv2 to SNMPv3]]
+ [[https://gitlab.com/_calvinr/networking][_calvinr/networking]] examples of automating Juniper gear
  - Follows along with these videos from [[https://www.youtube.com/c/CalvinRemsburg0][Calvin Remsburg]]
  - Firewall Configs: [[https://gitlab.com/_calvinr/networking/ansible-firewall-configuration/-/blob/master/files/ansible/config/complete/alderaan.conf][alderaan.conf]] and [[https://gitlab.com/_calvinr/networking/ansible-firewall-configuration/-/blob/master/files/ansible/config/complete/jakku.conf][jakku.conf]]
+ _calvinr: [[https://gitlab.com/_calvinr/networking/automation_examples/ansible?sort=latest_activity_desc][ansible projects]]

** Projects
*** Route/Switch
+ [[https://github.com/sfloess-archives/scripts/tree/master/ansible][sfloess-archives/scripts]] (ansible scripts)
  - [[https://github.com/FlossWare-Archives/scripts/tree/master/ansible/redhat][Flossware]]: project to build OpenWRT and DD-WRT on Redhat servers
+ [[https://github.com/varunpalekar/ansible-structure][varunpalekar/ansible-structure]] (example project structure)
*** VM/Proxmox
+ [[https://vectops.com/2020/01/provision-proxmox-vms-with-ansible-quick-and-easy/][Provision proxmox vm's with ansible]]
+ Ansible Community [[https://docs.ansible.com/ansible/latest/collections/community/general/proxmox_module.html][Proxmox Module]]
  - use guix to create images
  - use proxmox to create VM/Container Templates
  - use ansible as a =make= or =rake= tool
    * mostly for its configuration management
    * and infrastructure-as-code capacity for documentation

* Issues
+ [[https://k21academy.com/ansible/roles/][Creating Ansible Roles]]

* Integrations

** Hashicorp Vault?
+ Opens up Two Factor Auth.
+ Requires some metal to run services.
  - may require consul/salt
    - in which case, the configuration management overhead & exposure means ...
      it's probably not worth it

** StepCA?

* Ansible Galaxy

Two services:

+ [[https://hub.docker.com/r/pulp/pulp-galaxy-ng][pulp/pulp_galaxy]] (dockerhub)
+ [[https://hub.docker.com/r/pulp/pulp][pulp/pulp]] (dockerhub)

** Docs
+ [[https://galaxy.ansible.com/dzervas/router][Ansible Role for Linux Router]]
+ [[https://galaxy.ansible.com/docs/finding/search.html#finding-ansible-content][Finding Ansible Content]] (search, community, partners)

** Resources

*** [[https://www.youtube.com/watch?v=GjrWYMfjGrs&t=1550s][Host your own on-premise Ansible Galaxy]] 2021
+ [[https://pulpproject.org/pulp-in-one-container/https://pulpproject.org/pulp-in-one-container/][Pulp in one container]] (another guide)

+ ensure =ca_cert= is configured

**** Outline

+ create user/group, enable container services
+ determine port, dns, and firewall rules
+ create volumes
  - check space, create paths
  - chown to owner/etc
  - check for selinux issues/support
  - in the video, the volumes need =:Z= for selinux
+ setup pods
  - pull images
  - try creating with appropriate flags and see if UI supports req's
+ run galaxy-ng
  - sync to galaxy
  - define a collection(?) with a =requirements.txt=
    - all dependencies must be specified.
  - create some minimal users/groups
  - assign permissions for imports/approval
+ install the =pulp_installer= (using ansible collection)
  - to access roles, you need =pip install pulp_cli=
  - generate Galaxy-NG token, update =ansible.cfg= and include it
+ Pulp (via API after install)
  - create repo
  - create remote (ca_cert pops up)
  - create distribution, assoc to repo
+ Later
  - connect Ansible AWX to local NG
  - ensure sync is automated
  -



** Docker/Podman Install

* AWX

** Docs

** Resources

* Horribly Wrongnotes

This is (AFAIK) basically completely wrong.

** Ansible is confusing

The =guix= profile will set up =ansible 2.9=, which is the last version of
ansible before the platform integrated [[https://galaxy.ansible.com][Ansible Galaxy]].

#+begin_quote
Ansible :: the device from Ender's game that communicated faster than light with zero infrastructure. It didn't require internet or subscriptions from Red Hat.
#+end_quote

This can be extremely confusing (e.g. if you used ansible once in 2014 and then again in like 2018). There is still a decent use case for =v2.9= and earlier.

*** Version 2.9: for ad hoc stuff, airgapped networks or boostrapping

These versions of ansible a set of devops tools requiring no internet access and a minimal set of dependencies

- SSH on host/target systems
- Minimal dependencies on extra pip packages (still not sure on this point)
- No external web/network services -- i.e. ansible 2.9 and earlier is like
  peer-to-peer in that any system can configure any other system without a
  need to check in to anything else.

*** Version 2.10: for more functionality, modularity or collaborative devops (with AWX)

For a firewalled environment, you'll need to set up:

+ your own Ansible Galaxy
+ probably your own docker registry
+ a small kubernetes cluster for AWX and its workers. This can fit on one small
  server
