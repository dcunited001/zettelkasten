:PROPERTIES:
:ID:       286b6d1b-362b-44fe-bb19-e0e78513d615
:END:
#+title: GNU

* Docs
+ [[https://www.gnu.org/manual/manual.html][GNU Motherlode]]

* FSF
+ [ ] XMPP server: jabber.member.fsf.org
+ [ ] Mailing lists:

* Social
** Usenet

*** Issues

**** [[https://www.emacswiki.org/emacs/GnusSync][Syncing Gnus]]: using gnus on two machines

**** Configuring Gnus/NNTP


** Mailing Lists

* Topics

* Projects

** GNU Plot

*** Docs
+ cheatsheet

*** Resources
+ [[Org-babel-gnuplot][org-babel-gnuplot]]
+ [[https://github.com/dfeich/org-babel-examples][dfeich/org-babel-examples]]

** GNU Parallels

*** Docs

+ [[https://doi.org/10.5281/zenodo.1146014][GNU Parallel 2018: doi.org/10.5281/zenodo.1146014]]
+ [[https://www.gnu.org/software/parallel/parallel.html#examples][Variables doc]]
+ [[https://www.gnu.org/software/parallel/parallel_options_map.pdf][Relations map for parallel options]]
  - pointers to other PDFs via [[https://aur.archlinux.org/cgit/aur.git/tree/parallel-skip-rst-pdf-generation.patch?h=parallel-git][AUR package]]. They're these [[https://git.savannah.gnu.org/cgit/parallel.git/tree/src][.pod files]] that
    get built by CMake

**** Variables

**** Quoting

+ [[https://superuser.com/questions/1674776/passing-a-piped-variable-to-a-sub-command-called-within-gnu-parallel][Passing pipped variable to a subcommand called within GNU Parallel]]

*** Issues



**** Redirection

Can use =-a <(fdsa)= as an extra input source?

**** Heredoc

**** Awk

From [[https://stackoverflow.com/a/21549836][s/o on Cat with Heredoc]]

parallel requires =-a arg=. see [[https://www.highonscience.com/blog/2021/03/21/parallel-grep/][Parallel Grep and Awk]]

#+begin_src sh
awkp=$(cat <<EOF
BEGIN { count=0 }
{print $0}
{++count}
EOF
    )

# (count % MYMOD == 0) { print $1 count }

# file descriptors need something extra
# parallel 'awk -f <(echo $awkp) -v MYMOD=2' ::: foo bar baz qux ::: 1 2 3 4 5 6

myawk='{print $0}'
parallel "echo awk \"$my_awk\"" ::: foo bar baz qux ::: 1 2 3 4 5 6
# parallel 'echo {} | echo awk -v MYMOD=2 "$awkp"' ::: foo bar baz qux ::: 1 2 3 4 5 6

# parallel 'echo {.} | awk -v MYMOD=2 "$awkp"' ::: foo bar baz qux ::: 1 2 3 4 5 6
# parallel "awk -v MYMOD=2 '$awkp'" ::: foo bar baz qux ::: 1 2 3 4 5 6

#+end_src

** GNU [[https://www.gnu.org/software/recutils/][Recutils]]

This can be used to filter =guix package -s= output and other guix commands.

#+begin_quote
Recutils is a collection of tools, like recfmt, recsel, and rec2csv used to work
with recfile databases. Various software libraries support the format.
#+end_quote

Example: search guix for all =emacs-org= packages.

#+begin_src shell
guix search emacs-org |\
    recsel -p name |\
    cut -d' ' -f2 |\
    sort | uniq | head -n5
#+end_src

#+RESULTS:
|                  |
| emacs-org        |
| emacs-org2web    |
| emacs-orgalist   |
| emacs-org-appear |

*** Docs
+ [[https://www.gnu.org/software/recutils/manual/][manual]]

*** Resources
+ [[https://gist.github.com/gmolveau/6be062d9b9005cf985cda98dabdf0baa][tutorial]]
+ [[https://github.com/maninya/python-recutils][python bindings]] (2015)

*** Topics

**** To S-Expression

Early on, when technical data was digitized, it was fairly common to put data it
into s-expressions (electronics)

**** Guix

***** Convert to Flat YAML

okay...

#+begin_src sh :results output
guix package -s "emacs-ob-.*" |\
    recsel -p name,version |\
    sed -e 's/^$/---/' |\
    yq -sy '.[] | @text "\(.name) \(.version)"' |\
    sed -e 's/--- //'
#+end_src

#+RESULTS:
: emacs-ob-sclang 0.1-1.cd3f3c8
: emacs-ob-restclient 0.02-3.1b021ce
: emacs-ob-ipython 20180224
: emacs-ob-go 0.02-0.2067ed5
: emacs-ob-erlang 20210321-1.a029c23
: emacs-ob-elm 0.0-0.d3a9fbc
: emacs-ob-async 1.0.0
: emacs-ob-asymptote 1.0
: ...

hmmm... just generally easier with JSON

#+begin_src sh
guix package -s "emacs-ob-.*" |\
    recsel -p name,version |\
    recfmt 'name: {{name}}
version: {{version}}
---
'
#+end_src

#+RESULTS:
| name:    | emacs-ob-sclang     |
| version: | 0.1-1.cd3f3c8       |
| ---      |                     |
| name:    | emacs-ob-restclient |
| version: | 0.02-3.1b021ce      |
| ---      |                     |
| name:    | emacs-ob-ipython    |
| version: | 20180224            |
| ---      |                     |
| name:    | emacs-ob-go         |
| version: | 0.02-0.2067ed5      |
| ---      |                     |
| name:    | emacs-ob-erlang     |
| version: | 20210321-1.a029c23  |
| ---      |                     |
| name:    | emacs-ob-elm        |
| version: | 0.0-0.d3a9fbc       |
| ---      |                     |
| name:    | emacs-ob-async      |
| version: | 1.0.0               |
| ---      |                     |
| name:    | emacs-ob-asymptote  |
| version: | 1.0                 |
| ---      |                     |


**** Commands

Manage

| Type      | Command   | Description                                                      |
|-----------+-----------+------------------------------------------------------------------|
| Create    | recins    | Insert new records in a rec database                             |
| Read      | recsel    | Select and print rec data                                        |
| Update    | recset    | Alter or delete fields in records                                |
| Delete    | recdel    | Remove (or comment out) records from a rec file                  |
|-----------+-----------+------------------------------------------------------------------|
| Transform | recfmt    | Apply a template to records read from standard input             |
| Meta      | recinf    | Print information about the types of records stored in the input |
|-----------+-----------+------------------------------------------------------------------|
| Manage    | recfix    | Check and fix rec files                                         |
| Convert   | rec2csv   | Convert rec into data csv data                                   |
| Convert   | csv2rec   | Convert csv data into rec data                                   |


**** Emacs: rec-mode and ob-rec

A separate project contains =rec-mode.el= and =ob-rec.el=.

** Gnu Radio
*** Docs

+ Beginner Tutorials:
  + [[https://wiki.gnuradio.org/index.php?title=InstallingGR][Installing GR]] (probably where one should start)
  + [[https://wiki.gnuradio.org/index.php?title=Python_Block_with_Vectors][Python Block with Vectors]] (you get python for free)
+ [[https://wiki.gnuradio.org/index.php?title=Category:Guided_Tutorials][Guided Tutorials]]: [[https://wiki.gnuradio.org/index.php?title=Guided_Tutorial_GRC#My_First_Flowgraph][Guided Tutorial: GRC]]: includes a overview of flowcharts,
  which may be good code to see
+ [[https://wiki.gnuradio.org/index.php/Understanding_ZMQ_Blocks][Understanding ZMQ Blocks]]

*** Resources


* Info
