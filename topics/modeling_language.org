:PROPERTIES:
:ID:       38f43c0c-52ee-42d7-9660-af2511d19711
:END:
#+TITLE: Modeling Language
#+DESCRIPTION: Graphviz, Dot, PlantUML, Mermaid, and Less "Graphical" DSLs
#+TAGS:

* Docs
* Resources

* Graphviz/PlantUML

See [[id:e77048aa-d626-44c1-8bbb-037a1173d01d][Graphviz]]

* Mermaid

** Docs

+ [[https://mermaid.js.org/intro/][Intro]]
+ [[https://mermaid.js.org/syntax/flowchart.html][Flowchart]]
+ [[https://mermaid.js.org/syntax/examples.html][Examples]]

*** Tech/Systems

+ [[https://mermaid.js.org/syntax/sequenceDiagram.html][Sequence Diagram]] depiction of state transformations (in state machines)
+ [[https://mermaid.js.org/syntax/classDiagram.html][Class Diagrams]] UML
+ [[https://mermaid.js.org/syntax/stateDiagram.html][State Diagrams]] state machines
+ [[https://mermaid.js.org/syntax/entityRelationshipDiagram.html][Entity Relationship]] for ORM and SQL

*** Model-specific Extensions

+ [[https://mermaid.js.org/syntax/sankey.html][Sankey]] "model flows from one set of values to another"
+ [[https://mermaid.js.org/syntax/gantt.html][Gantt Chart]] project/time management
+ [[https://mermaid.js.org/syntax/gitgraph.html][Gitgraph]] for git commits/actions

** Resources

** Topics

*** Emacs

**** Usage

***** Basic

This is much simpler than =dot= (requires a command hook) and somewhat simpler
than PlantUML. Whatever you choose depends on:

+ whether it's simple to transform output into the DSL language (from an
  arbitrary script/language)
+ whether it's easy to style

#+begin_src mermaid :file img/test.svg
sequenceDiagram
 A-->B: Works!
#+end_src

#+RESULTS:
[[file:img/test.svg]]

**** Config

#+begin_src emacs-lisp
;; run from docker/podman, nice
;; https://github.com/mermaid-js/mermaid-cli#alternative-installations
(setup (:pkg mermaid-mode :straight t :type git :flavor melpa
             :host github :repo "abrochard/mermaid-mode")
  (require 'mermaid-mode)
  ;; also mermaid-mmdc-location, mermaid-flags
  (:option mermaid-output-format ".svg"))

;; both pkgs define org-babel-execute:mermaid.  ensure ob-mermaid loads after.
;; depending on how straight builds load-path, different functions could run.
;; https://github.com/abrochard/mermaid-mode/blob/master/mermaid-mode.el#L102-L121
(with-eval-after-load 'mermaid-mode
  ;; ob-mermaid basically only provides org-babel-execute:mermaid and formatting
  (setup (:pkg ob-mermaid :straight t :type git :flavor melpa
               :host github :repo "arnm/ob-mermaid")))

;; only necessary if (executable-find ...) returns nil
;; (:option ob-mermaid-cli-path "mmdc")
#+end_src

**** Emacs-Specific Issues

There is one issue where the =mermaid-mode= doesn't quite solve the
yaml-headers. This is new ([[https://github.com/mermaid-js/mermaid/pull/3706][mermaid-js/mermaid#3706]]) and a bit confusing to
implement support: inside the =---=

** Issues

* Roam
+ [[id:bb8bbe7c-6d49-4088-9161-2ae2edb4abd6][Ontology]]
