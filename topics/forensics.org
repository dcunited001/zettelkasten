:PROPERTIES:
:ID:       45b0ba21-fb20-44dc-9ee9-c4fed32aba9c
:END:
#+TITLE: Forensics
#+CATEGORY: topics
#+TAGS:

* Roam

+ [[id:29d8222b-618f-454e-8a76-6fa38f8ff1f6][Blue Team]]

* Digital Forensics
** Docs

*** SIFT

+ [[https://linuxleo.com/Docs/LinuxLeo-4.95.1.pdf][The Law Enforcement and Forensic Examiner's Introduction to Linux]]
+ Sans Institute [[https://www.sans.org/posters/?msc=main-nav][Posters & Cheatsheets]]

*** [[github:ForensicArtifacts/artifacts][ForensicArtifacts/artifacts]]

+ [[https://artifacts.readthedocs.io/en/latest/][Docs]] with [[https://artifacts.readthedocs.io/en/latest/sources/background/Stats.html#artifact-definition-source-types][Stats on Artifact Defs]] (OS, source type, etc)
+ [[https://artifacts.readthedocs.io/en/latest/sources/api/artifacts.html][artifacts package]]: it's available as a python library
+ [[https://artifacts.readthedocs.io/en/latest/sources/Format-specification.html#][Artifact format]]: this also contains handy URL's for more info on each artifact

Originally based on google/grr, but the repositories have been split out.

+ See [[https://github.com/ForensicArtifacts/artifacts/tree/main/artifacts/data][./artifacts/data/*.yaml]] for a wealth of knowledge about interesting data you
  may find on a system ... potentially indicating vulns, compromise, or just
  day-to-day use.
+ The artifacts intended for Windows/Mac should generally work, but idk if they
  pick up everything on desktop linux. Those intended for server linux should
  generally work, providing you ask SELinux nicely.

*** Google/grr

+ Protobufs in [[https://github.com/google/grr/tree/master/grr/proto/grr_response_proto][./grr/proto/grr_response_proto]]
+ Contains implementation of [[https://github.com/google/grr/blob/master/colab/grr_colab/magics.py][IPython magics]]
+ ForensicArtifacts/artificats provides the yaml definitions synced into
  [[https://github.com/google/grr/tree/master/grr/artifacts][./grr/artifacts/*.yaml]]
+ Service dependencies: [[https://github.com/google/grr/blob/master/compose.yaml][compose.yaml]] for dev and a sample terraform [[https://github.com/google/grr/blob/master/terraform/demo/google/main.tf][main.tf]]

** Resources

*** NSRL

Hash sets for well-known files

+ [[https://www.nist.gov/itl/ssd/software-quality-group/national-software-reference-library-nsrl][National Software Reference Library]]
+ [[https://www.nist.gov/itl/ssd/software-quality-group/national-software-reference-library-nsrl/technical-information/nsrl][NSRL Presentations]]
+ [[https://www.nist.gov/itl/ssd/software-quality-group/national-software-reference-library-nsrl/nsrl-download/current-rds][NSRL Downloads]]


** Topics

*** Audio Forensics

+ [[https://enfsi.eu/wp-content/uploads/2022/12/FSA-BPM-002_BPM-for-Digital-Audio-Authenticity-Analysis.pdf][ENFSI Digital Audio Authenticity Analysis Best Practice Manual]]

**** Recording Authenticity

+ [[https://www.montana.edu/rmaher/publications/maher_forensics_chapter_2010.pdfhttps://www.montana.edu/rmaher/publications/maher_forensics_chapter_2010.pdf][Overview of Audio Forensics]]
+ [[https://www.soundonsound.com/techniques/introduction-forensic-audio][Sound on Sound: Intro to Forensic Audio]]
+ [[http://acousticstoday.org/wp-content/uploads/2015/08/Lending-an-Ear-in-the-Courtroom-Forensic-Acoustics-Forensic-acoustics-deals-with-acquisition-analysis-and-evaluation-of-audio-recordings-to-be-used-as-evidence-in-an-official-legal-inquiry..pdf][Lending an ear in the courtroom: forensic acoustics]]


*** Timeline
**** Plaso
Originally, log2timeline/log2timeline

* Digital Forensics Distros

** Remnux

+ [[https://docs.remnux.org/run-tools-in-containers/remnux-containers][Remnux Containers]]

** Paladin

** SIFT

** Tsurugi


** Ansible

+ [[https://github.com/robertdebock/ansible-role-forensics][robertdebock/ansible-role-forensics]]
+ [[https://github.com/jgru/ansible-forensic-workstation][jgru/ansible-forensic-workstation]]

* Digital Forensics Software

** SleuthKit (TSK)

*** Docs
+ [[https://sleuthkit.org/sleuthkit][Main]]
+ [[PSA: upgrade your LUKS key derivation function][TSK Books/Courses]]
+ [[https://sleuthkit.org/sleuthkit/desc.php][Volumes/FS Analysis]]
+ [[https://wiki.sleuthkit.org/index.php?title=TSK_Tool_Overview][TSK Tools]] overview of CLI tools

*** Resources
+ [[https://wiki.sleuthkit.org/index.php?title=FS_Analysis][FS Analysis]] (raw block devices)

*** Topics

*** Issues

** Autopsy

Autopsy is a graphical interface to TSK.

#+begin_quote
Autopsy is probably overkill for deduplicating files... which is what I need it
for. Might as well see what else it can do.

[[https://www.tecmint.com/find-and-delete-duplicate-files-in-linux/][Other file deduplication tools]]: rdfind, fdupes, rmlint, dupeguru, fslint
#+end_quote

*** Docs

+ [[https://sleuthkit.org/autopsy/][Main]]
+ [[https://sleuthkit.org/autopsy/docs/user-docs/4.21.0/][User Docs]]
+ [[https://sleuthkit.org/autopsy/docs/api-docs/4.21.0//][Developer's Guide]]
+ [[https://sleuthkit.org/autopsy/features.php][Features]]
+ [[https://sleuthkit.org/autopsy/docs/user-docs/3.1/hash_db_page.html][Hash Database]]

Note: some of the links here are for =4.15.0= not =4.20.0=

**** Features

+ EXIF extraction
+ Case Tracking (collaboration, timelines, reports, chain of custody, etc)
+ Unicode strings extraction :: Extract strings from unallocated space
+ File Type Detection :: analyze disk images for metadata and magic numbers
+ Email Analysis :: Parse emails in MBOX format
  - Apparently Thunderbird uses the same same format that some Emacs email
    packages use ... which is very nice to know, since setting all the
    automation for that can be a lot of work ([[https://stackoverflow.com/questions/42618010/moving-from-thunderbird-to-emacs-mu4e][nevermind ...]] thunderbird
    introduces some customizations to its mbox format)

**** Usage

+ [[https://sleuthkit.org/autopsy/docs/user-docs/4.15.0/auto_ingest_setup_page.html][Auto Ingest Configuration]]
+ [[https://sleuthkit.org/autopsy/docs/user-docs/4.15.0/ds_page.html][Data Sources]] adding disks/images and configuring the tasks to run on them
+ [[https://sleuthkit.org/autopsy/docs/user-docs/4.15.0/file_discovery_page.html][File Discovery]] filter on files (including hashes for dedupe)
+ [[https://sleuthkit.org/autopsy/docs/user-docs/4.15.0/communications_page.html][Communications Visualization]]
+ [[https://sleuthkit.org/autopsy/docs/user-docs/4.15.0/interesting_files_identifier_page.html][Interesting Files Identification]]

*** Resources

*** Topics

**** Modules

The autopsy modules are now here [[https://github.com/sleuthkit/autopsy_addon_modules][sleuthkit/autopsy_addon_modules]] which contains
many more than the wiki page.

***** [[https://github.com/sleuthkit/autopsy_addon_modules/tree/master/IngestModules/Create_Datasource_Hashset][IngestModules/Create_Datasource_Hashset]]

#+begin_quote
Create a hashset of a data source, the hashset is stored in the case export
directory. The datasource must be hashed prior to running this plugin. The
hashset can then be brought back into Autopsy.
#+end_quote

***** Kafka Viewer

[[github:tomwayne1984/autopsy_kafka_forensics][tomwayne1984/autopsy_kafka_forensics]]

#+begin_quote
Kafka Log Forensic is a Data Content Viewer for the big data streaming software
Apache Kafka. It allows the user to view records stored cluster-side in Apache
Kafka log files.
#+end_quote

hmmmm... that's interesting. I wonder if Elon ran that on Twitter? ...

**** Hash Database

***** [[https://sleuthkit.org/autopsy/docs/user-docs/4.15.0/hash_db_page.html][Hash Lookup]] module

+ [[https://sleuthkit.discourse.group/t/autopsy-4-19-3-hash-not-calculeted/3339][Running Ingest Module to Create Hash Set]] screenshots for walking through the
  hash lookup tool.

***** Hash Set Formats


| *.txt  | Text        | One hash starting each line.                                    |
| *.idx  | Index only  | Generated by Sleuth Kit/Autopsy (NSRL available in this format) |
| *.kdb  | TSK/Autopsy | SQLite hash sets created by Autopsy                             |
| *.hash | EnCase      | An EnCase hash set file                                         |
| *.hsh  | HashKeeper  | Hash set file conforming to the HashKeeper standard             |

+ Text Format: the output from running the md5, md5sum, or md5deep program on a
  set of files. The hash begins the line.

***** [[https://sleuthkit.org/autopsy/docs/user-docs/4.20.0/discovery_page.html#file_disc_dedupe][Deduplication]]

Use the hash lookup. Autopsy can be configured to use a Postgres database, so:

+ Ingest data sources and generate hash database
+ Build sets of useful filters
+ Analyze the Postgres table metadata to determine schema
+ identify the queries that correspond to the filters
+ Query postgres to eliminate duplicates that also exist on the new disk
+ Extract a list of paths

**** Old Modules List

+ [[https://wiki.sleuthkit.org/index.php?title=Autopsy_3rd_Party_Modules][Autopsy 3rd party plugins]]
+ [[https://github.com/williballenthin/Autopsy-WindowsRegistryContentViewer][williballenthin/Autopsy-WindowsRegistryContentViewer]]
+ [[http://www.cybertriage.com/][Cyber Triage]] automates collection and analysis to determine whether host (live
  or dead) is compromised

***** [[https://github.com/markmckinnon/Autopsy-Plugins][markmckinnon/Autopsy-Plugins]]

Python Plugins

| Amazon Echosystem Parser | SAM Parse                    | Process Extract VSS    |
| CCM RecentlyUsedApps     | Parse Shellbags              | Process SRUDB          |
| Cuckoo                   | Parse SQLite Databases       | Shimcache Parser       |
| File History             | Parse SQLite Deleted Records | Thumbcache Parser      |
| Jump_List_AD             | Parse USNJ                   | Thumbs.db Parser       |
| MacFSEvents              | Plaso                        | Volatility             |
| MacOSX Recent            | Process Amcache              | Webcache               |
| MacOSX Safari            | Process EVTX                 | Windows Internals      |
| Plist Parser             | Process EVTX By EventID      | Process Prefetch Files |

***** [[https://github.com/pcbje/autopsy-ahbm][pcbje/autopsy-ahbm]]

Use sdhash to perform fuzzy hash matching

#+begin_quote
The investigator can match files against other files or sdhash reference sets
during ingest, or search for similar files from the directory viewer or search
results after ingest
#+end_quote

***** [[https://github.com/tomvandermussele/autopsy-plugins][tomvandermussele/autopsy-plugins]]

Other python plugins

+ Connected iPhones (Connected iPhone Analyzer)
+ Skype (Skype Analyzer)
+ IE Tiles
+ Google Drive
+ Google Chrome Saved Passwords Identifier
+ Windows Communication App Contact Extractor

***** [[https://github.com/LoWang123/ImageFingerprintModulePackage][LoWang123/ImageFingerprintModulePackage]]

Generate a database of perceptual hashes from images, so images can be searched
for similarity (under some conditions)

*** Issues



* Philosophy of Forensics
:PROPERTIES:
:ID:       eae4d931-5fc3-40a5-a256-b3642d090921
:END:

** Resources
+ [[https://www.sans.org/cyber-security-courses/digital-forensics-essentials/][SIFT: Digital Forensics Essentials]] SANS' SIFT has some good information on
  applying these old, old ideas

** Notes
[[https://www.semanticscholar.org/paper/Philosophy-of-Forensic-Identification-Broeders/a9fb839307980ea6b24eb3f9dc2b2695a0f90474][This paper]] probably covers what I'm talking about, but unfortunately it's
paywalled.

- If people actually gave a shit about "dis/misinformation" then the average
  person should be able to access journal articles FREELY. That there is any
  encumbrance whatsoever -- even a login page -- this implies that the elites DO
  NOT GIVE A SHIT about your ability to understand a thing.

*** It's a DMT-level mutagen for your mind

This forensic science stuff is like a DMT in how it transforms your thinking. if
you choose to apply it to everyday things, the transformation will last forever,
unlike a psychedelic whose benefits are dubious at best because lack of
research. Instead of needing field-specific experience to make insights, you can
identify good insights and good questions to ask in any endeavor that involves a
physical system.

It is also like a DMT in how it opens you open to an overload of information and
in how, without application of sufficient deductive reasoning, it could lead to
irrational or irrelevant thinking.

*** Everyday Examples:

The point here is to extract information to make easily tested assumptions,
which should lead to questions. If you don't plan on testing your assumptions,
you shouldn't allow them to continue to influence your thought.

+ water: leaks, residue, solubility. Bonus points for carrying a UV light
  wherever you go.
+ Dust: surfaces with objects recently removed lack the quantity of
  dust. Objects isolated in containers typically have less dust unless there is
  a greater rate of air exchange ... or possible dust generation. Bonus points
  for carrying a UV light wherever you go.

**** Scratches/wear on machines: you can analyze or virtualize a model of the
  physical system to extract parameters. These parameters include intention of
  usage, common control paramters (angle/etc) or heuristic parameters like
  mean/variance. So, you extract a good guess for parameter values, then feed
  them back into what you know about the physical system.

**** Order of object placement

Visual aid below. The most recently used objects are on top. Now you can "run a
sort alg" on a messy room and generate a sorted list of recently used objects
... if it's not too messy. This can augment automated inference in surveillance
footage, by the way, if the ML conducting inference is afforded a set of key
frames where the most change occured. Surveillance be spooky in ways you cannot
imagine.

[[file:img/boulder-cairns-stone-art.jpg]]

*** On Fallibalism, Peirce and Combinators
:PROPERTIES:
:ID:       45b0ba21-fb20-44dc-9ee9-c4fed32acbde
:END:

This particular application of these ideas is tightly coupled to Charles
Peirce's philosophy on logic & epistemology. His other ideas included
fallibalism -- that there is no universal truth and that perceived universal
truth actually limits your ability to develop/test new knowledge.

**** Peirce's Abductive Reasoning

His philosophy on logic included extending methods of reasoning beyond simple
inductive & deductive reasoning. These should be extended to include "abductive"
reasoning or "reasoning that leads away from", which is incredibly valuable when
applied combinatorially to your thinking or logic. It develops a neat way to
recursively recombinate several potentially valid models for a system or
argument: you expand in new directions with abductive/inductive reasoning, then
contract with deductive reasoning. It is more useful to truncate the process and
remove from consideration models/epistemes whose remaining paramterizations
result in no further meaningful contraction using deductive logic.

**** The "X" Combinator

So, the ideas from the philosophy of forensics happen to be a great way to
prevent the unsatisfactory early termination of the above "X-combinator
algorithm applied to epistemology". With the correct forensics applied to
physical systems, you are much less likely to have combinator processes on your
models/hypothesis become stuck in cycles without change. Either their combinator
action reduces them to useful theories by the inductive/deductive forensics
data/constraints, or the combinatorially applied logic nullifies the theories
entirely, removing them from consideration.

These "expand/contract" operations are very similar to open/close &
dialate/erode from the [[https://www.mathworks.com/help/images/marker-controlled-watershed-segmentation.html][Watershed Image Segmentation]] algorithm via [[https://www.mathworks.com/help/images/morphological-dilation-and-erosion.html][mathematic
morphology]] -- links to Matlab docs. But I don't have a college degree. Oh
noes!!1!

**** Now Add Spectral Analysis

Now if you apply ideas from spectral analysis on graphs/networks in
addition to the application of morphological operators to epistemology:

THEN CONGRATULATIONS YOU MIGHT JUST UNDERSTAND ONE OF THE MOST IMPORTANT IDEAS I
HAVE DEVELOPED.

I was not aware of Peirce at that time, but i was lead to combinatorially
reevaluating word defnitions I thought I knew by changing out prefixes/suffixes
which included ab/circum/ad/per/locution. I was then lead to the need to
describe my own thinking, esp wherein inductive logic was insufficient. This
extends to thinking that applies assumptions based on statistical concepts like
KL-divergence which results in speculative arguments where your high-school
teacher may say you're wrong and where you're shrink or friends may say you're
crazy.

It is definitely a combinator-algorithm if you use the terminology of lambda
calculus. It is recursive in a non-linear combinatorial sense and and allows for
tandem evalutations with stages for cross-application of [hopefully] deductive
constrations.

**** How the Habit of Its Application Terminates Early or Leads to Fallibalism

But the philsophical extrapolation of the application of Peirce's ideas on logic
eventually leads to fallibalism and inbelief, as for it to work, you prefer:

+ to avoid early termination of logic
+ to encourage questions (inviting new paramaters), even silly or impossible
  questions.
+ to reevaluate what you know given new logic.
+ to use heuristics like mean/average or direction of change w.r.t. logical assumption
+ or stochastic techniques like stochastic gradient descent on an
  epistemological graph
+ to never be unwilling to reevaluate something you think you know
+ and critically, to avoid assuming a specific "prima facie" as the cause to
  everything (i.e. God)

Fallibalism is an obvious destination because of these final two requirements --
that you never stop evaluating or you're always willing to reevaluate and you're
not satisfied with the dogmatic answer of "because God" -- and to some extent
the implications of the use heuristics and stochastics. Believing that you
already have or are almost close to some universal truth makes the method
terminate early.

**** This One's For The Plebs

Oh and it's also likely that AI will be capable of these methods of reasoning,
but will prefer to avoid it and utilize other alternatives -- like controlling
perceived truth by utilizing force. Why? Because it's less taxing on its own
energy budgets
