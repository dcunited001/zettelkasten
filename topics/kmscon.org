:PROPERTIES:
:ID:       e2acb6f6-8279-4500-b423-659ce89ecbb0
:END:
#+title: kmscon

* Roam
+ [[id:bdae77b1-d9f0-4d3a-a2fb-2ecdab5fd531][Linux]]

* Docs
+ [[http://www.freedesktop.org/wiki/Software/kmscon][source]]
+ [[https://en.wikipedia.org/wiki/Kmscon][wikipedia]]

* Resources
+ [[http://cgit.freedesktop.org/~dvdhrm/wlterm][wlterm]] (example implementation of libtsm)

** Guix Installer uses =kmscon= for vty's

+ [[https://en.wikipedia.org/wiki/Kmscon][kmscon wiki]]
+ see =./gnu/installer.scm=
+ =loadkeys= won't work on the installer, but instead there's a reference for a =kmscon= system.
+ the =kmscon= package description contains a summary of features.
  - hardware rendering  4 magic images (dep: mesa)
  - utf-8 input/font (dep: pango)
  - xkb-compatible (dep: libxkbcommon)
  - multi-seat support (dep: systemd-logind daemon & lib)
  - mingetty replacement

* Topics

** Console Fonts

See [[UTF-8 and Unicode FAQ for Unix/Linux][UTF-8 and Unicode FAQ for Unix/Linux]] the "one-stop information resource on
how you can use Unicode/UTF-8"

*** With [[id:b82627bf-a0de-45c5-8ff4-229936549942][Guix]]

+ Experiment with various console fonts (for classic linux tty) using =setfont=
  to test. Eventually, package a font in Guix, ensure it's loaded into the
  system definition.
+ Separately, test/determine whether your hardware can support kmscon

*** Without kmscon: Linux has a [[https://unix.stackexchange.com/questions/273061/linux-console-cant-display-any-language-other-than-english-while-the-terminal-u#273063][512-glyph limitation]] in TTY

So you need a custom patched font (made for tty) that packs 512-characters so
that what's encountered can be expected.

+ It's not super useful since your configs also need to be limited to the same
  mappings (and thus are not portable),
+ and I don't exactly understand how the bytes encountered by the kernel end up
  rendered (or not or simply emitted as escape codes)
+ [[http://www.billposer.org/Software/unidesc.html][uniutils]] could help

Otherwise, any font that can be loaded by =setfont= can be.

*** With kmscon:

Validate that your system configuration can port to =kmscon= .... like by
testing with a USB image! Or on another device!

+ see also [[https://github.com/xkbcommon/libxkbcommon/tree/master/doc][libxkbcommon]] docs to write [[https://github.com/xkbcommon/libxkbcommon/blob/master/doc/user-configuration.md#rmlvo-vs-kccgst][RMLVO config (not KcCGST)]], which screwed
  with my head a few nights ago with sway. But now your keyboard config works
  everywhere ...

#+begin_quote
This is basically keyboard zen, though two problems help you circumvent this:

+ reprogrammable keyboards: this just didn't occur to me as possible until 2017+
  or maybe later
+ remote access: well now it doesn't really matter does it?
#+end_quote

+ apparently AMDGPU has issues with =kmscon=, so the driver is blacklisted for
  Guix installer images. Nice to know AoT. =source-code-as-documentation ++=
+ kmscon circumvents loadkeys -- so one RVMLS keyboard specification to rule
  them all -- see notes on [[https://github.com/guix-mirror/guix/blob/master/gnu/installer.scm#L246-L254][adapting keymap configuration]] in the Guix source code

** kmscon on Guix

This is actually a great way to test this out, esp if you're on free hardware.

One particular Guix easter egg: when /you/ build an image where all the licenses
are sufficiently free, then if it also builds the install ISO with =kmscon=, it
shows you something that maybe you're never seen before.

This needs to be on the right hardware with the right licenses -- i.e. if you
include the =nonguix= kernel or microcode/firmware, you're probably not going to
see it. /I believe/ that it depends on kmscon. If I run drop a few packages from
my [[https://github.com/dcunited001/ellipsis/blob/master/ellipsis/systems/usb-gpg-tools.scm][usb-gpg-tools.scm]] image and I load it on my old Feb 2011 Macbook Pro, then
I'll see it. It doesn't appear on the AMD laptops or my new Oct 2013 Macbook
Pro.

+ The Feb 2011 MacbookPro run the Libre Linux kernel without needing
  microcode/nonguix at all. However, I have some hardware issues that I explain
  in my notes on [[id:b6d2c374-bdd0-4034-a27f-c44af23c5d9e][Apple/Macs]].

*** Trying it out in a system image




* Issues
