:PROPERTIES:
:ID:       6bb5bd07-0a63-4a8b-ac9e-0b5c285175d3
:END:
#+TITLE: D-Bus
#+DESCRIPTION:
#+TAGS:

* Roam
+ [[id:bdae77b1-d9f0-4d3a-a2fb-2ecdab5fd531][Linux]]

* Docs

+ [[https://dbus.freedesktop.org/doc/dbus-specification.html][D-Bus Specification]]
+ [[https://dbus.freedesktop.org/doc/dbus-api-design.html][D-Bus API Design Guidelines]]

* Resources
+ [[https://rtfm.co.ua/en/what-is-linux-keyring-gnome-keyring-secret-service-and-d-bus/][What is: Linux keyring, gnome-keyring, Secret Service and D-Bus]]

** GUI

(from "what is")

+ qdbusviewer (qt, kde)
+ d-feet (gtk, gnome)
+ [[https://gitlab.freedesktop.org/bustle/bustle][bustle]] (rust) this helps visualize bus interactions (methods, signals)

CLI: qdbus (KDE automation), dbus-monitor, dbus-send

* Topics

** Libsecret

+ [[https://flatpak.github.io/xdg-desktop-portal/docs/doc-org.freedesktop.portal.Secret.html][Flatpak Secret Portal]]

** Configuration

On Arch/Garuda, dbus configs and service defauts are here.

#+begin_src sh :results output verbatim :wrap quote
tree -d /usr/share/dbus-1
#+end_src

#+RESULTS:
#+begin_quote
/usr/share/dbus-1
├── accessibility-services
├── interfaces
├── services
├── session.d
├── system.d
└── system-services

7 directories
#+end_quote

They can be overwritten at =/etc/dbus-1= or whatever directories are listed in
=.busconfig.include=:


*** Inspecting Config

**** Output with =xq=

Probably don't share this

#+begin_src sh
for q in (".busconfig.include" ".busconfig.limit")
#+end_src


** Tools

*** D-Feet

Introspection of D-Bus (session & system bus).

+ Reflects across bus addresses to autodiscover
+ Allows manual interaction

*** busctl

+ Writes the output in [[https://github.com/pcapng/pcapng/][pcapng/pcapng]] format
+ [[https://github.com/systemd/systemd/blob/599750eb513fa8645e85214646d37d9a3913e342/man/busctl.xml#L89][busctl.xml]] interface specification
+ [[https://github.com/systemd/systemd/blob/main/src/busctl/busctl.c][busctl.c]] c implementation
+ a bunch of =*.in= templates

*** openbmc-tools

openbmc/openbmc-tools contains [[https://github.com/openbmc/openbmc-tools/tree/master/dbus-pcap][dbus-pcap]] definitions

+ afaik, in pcap, not pcapng
+ it will dump pcaps to json with =dbus-pcap --json $dotpcapfile | jq -n2=

This contains

*** Bustle

+ Source on freedesktop:[[https://gitlab.freedesktop.org/bustle/bustle][bustle/bustle]]
+ Recently revamped: [[https://summerofcode.withgoogle.com/archive/2023/projects/EfijCNWY][Rust & GTK4 Bustle Rewrite]] (GSoC 2023)
+ Blog detailing the nitty gritty: [[https://seadve.github.io/blog/9-gsoc-2023-final-overview/][GSoC 2023 (final overview)]]

**** Features

+ Connect to other D-Bus sockets by =unix:= url
+ Records to the *.pcap format (same as wireshark)

**** Rust deps

+ [[github:dbus2/zbus][dbus2/zbus]]
+ [[github:gtk-rs/gtk4-rs][gtk-rs/gtk4-rs]]
+ [[github:courvoif/pcap-file][courvoif/pcap-file]]
  - PcapReader :: Pcap
  - PcapNgReader :: PcapNg
** rtkit

*** What Processes is it supervising?

This script was suggested in this [[https://unix.stackexchange.com/a/750856][s/o answer]], but the d-bus interface doesn't
include the =RealtimeKit1= service (it mostly matches the CLI parameters)

#+begin_src shell
#!/bin/bash

# Get the list of processes managed by rtkit
processes=$(dbus-send --system --dest=org.freedesktop.RealtimeKit1 --print-reply /org/freedesktop/RealtimeKit1 org.freedesktop.RealtimeKit1.GetManagedProcesses | awk '/array/ {flag=1; next} flag')

# Loop through each process and extract the process ID and thread count
while read -r line; do
    if [[ $line =~ uint32\ ([0-9]+) ]]; then
        pid="${BASH_REMATCH[1]}"
    elif [[ $line =~ uint32\ ([0-9]+) ]]; then
        threads="${BASH_REMATCH[1]}"
        echo "Process ID: $pid, Supervised Threads: $threads"
    fi
done <<< "$processes"
#+end_src



* Issues


* org.freedesktop.Notifications

** Docs

+ [[https://specifications.freedesktop.org/notification-spec/latest/][Specification]]
+ Implementation at [[https://gitlab.gnome.org/GNOME/libnotify][gitlab.gnome.org:GNOME/libnotify]]
+ Implementation via Portal at [[https://github.com/flatpak/xdg-desktop-portal/blob/main/data/org.freedesktop.portal.Notification.xml][flatpak/xdg-desktop-portal]]


** Topics

*** MQTT

+ [[github:fabaff/mqtt-panel][fabaff/mqtt-panel]] and [[github:fabaff/mqtt-notify][fabaff/mqtt-notify]]. this guy was working with
  mqtt-notify over 12 years ago and his power level is only 9,000 (lol, j/k he
  uses NixOS)


**** D-Bus Service Specification

***** Categories

Sourced from [[https://specifications.freedesktop.org/notification-spec/latest/categories.html][§6 Categories]]

#+begin_src js
Array.from(document.querySelectorAll('#id-1\\.7\\.7 tbody tr > td'))
    .filter((el,i) => {if (i%2==1) return; else return el;})
    .map((el) => el.innerText)
    .join("| \n |")
#+end_src

The column headers are valid generic categories.

|----------------------+-----------------+----------------+---------------+-------------+------------------+-------------------|
| network              | call            | device         | email         | im          | presence         | transfer          |
|----------------------+-----------------+----------------+---------------+-------------+------------------+-------------------|
| network.connected    | call.ended      | device.added   | email.arrived | im.error    | presence.offline | transfer.complete |
| network.disconnected | call.incoming   | device.error   | email.bounced | im.received | presence.online  | transfer.error'   |
| network.error        | call.unanswered | device.removed |               |             |                  |                   |
|----------------------+-----------------+----------------+---------------+-------------+------------------+-------------------|

**** org.freedesktop.portal.Notification

***** Spec

#+name: curlmespecs
#+begin_src restclient :results value file :file img/org.freedesktop.portal.Notification.xml
:curl-me-url = https://raw.githubusercontent.com/flatpak/xdg-desktop-portal/refs/heads/main/data/org.freedesktop.portal.Notification.xml

GET :curl-me-url

# nope, just use :jq and :jq-args above.
# -> jq-set-var :repo-sizes map(.owner)
# -> jq-set-var :repo-sizes map(. | "(.owner.login)")
#+end_src

#+RESULTS: curlmespecs
[[file:img/org.freedesktop.portal.Notification.xml]]

Honestly probably easier to read as slimmed down XML

#+name: orgFreedesktopPortalNotificationYaml
#+begin_src shell :results output :var curlresult=curlmespecs :wrap example yaml
xq -x . < $curlresult
#+end_src

#+RESULTS: orgFreedesktopPortalNotificationYaml
#+begin_example yaml
<node name="/" xmlns:doc="http://www.freedesktop.org/dbus/1.0/doc.dtd">
  <interface name="org.freedesktop.portal.Notification">
    <method name="AddNotification">
      <annotation name="org.gtk.GDBus.C.UnixFD" value="true"></annotation>
      <annotation name="org.qtproject.QtDBus.QtTypeName.In1" value="QVariantMap"></annotation>
      <arg type="s" name="id" direction="in"></arg>
      <arg type="a{sv}" name="notification" direction="in"></arg>
    </method>
    <method name="RemoveNotification">
      <arg type="s" name="id" direction="in"></arg>
    </method>
    <property name="SupportedOptions" type="a{sv}" access="read">
      <annotation name="org.qtproject.QtDBus.QtTypeName" value="QVariantMap"></annotation>
    </property>
    <property name="version" type="u" access="read"></property>
    <signal name="ActionInvoked">
      <arg type="s" name="id"></arg>
      <arg type="s" name="action"></arg>
      <arg type="av" name="parameter"></arg>
    </signal>
  </interface>
</node>
#+end_example

Look at that shit right there. it's 22 lines.

Here's the same thing in YAML

#+name: orgFreedesktopPortalNotificationYaml
#+begin_src shell :results output :var curlresult=curlmespecs :wrap example yaml
xq -y . < $curlresult
#+end_src

#+RESULTS: orgFreedesktopPortalNotification
#+begin_example yaml
node:
  '@name': /
  '@xmlns:doc': http://www.freedesktop.org/dbus/1.0/doc.dtd
  interface:
    '@name': org.freedesktop.portal.Notification
    method:
      - '@name': AddNotification
        annotation:
          - '@name': org.gtk.GDBus.C.UnixFD
            '@value': 'true'
          - '@name': org.qtproject.QtDBus.QtTypeName.In1
            '@value': QVariantMap
        arg:
          - '@type': s
            '@name': id
            '@direction': in
          - '@type': a{sv}
            '@name': notification
            '@direction': in
      - '@name': RemoveNotification
        arg:
          '@type': s
          '@name': id
          '@direction': in
    property:
      - '@name': SupportedOptions
        '@type': a{sv}
        '@access': read
        annotation:
          '@name': org.qtproject.QtDBus.QtTypeName
          '@value': QVariantMap
      - '@name': version
        '@type': u
        '@access': read
    signal:
      '@name': ActionInvoked
      arg:
        - '@type': s
          '@name': id
        - '@type': s
          '@name': action
        - '@type': av
          '@name': parameter
#+end_example
