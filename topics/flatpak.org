:PROPERTIES:
:ID:       c527ee0c-ede7-4317-b57b-2a6bab110da0
:END:
#+TITLE: Flatpak
#+DESCRIPTION: building flatpaks
#+TAGS:

* Roam

* Docs
+ [[https://docs.flatpak.org/en/latest][Main Docs]]
+ [[https://docs.flatpak.org/en/latest/conventions.html][Flatpak Conventions]]

** AppStream

This is a standard for application-centric metadata about components in the
linux system (as opposed to of package-centric metadata)

+ AppStream [[https://www.freedesktop.org/software/appstream/docs/chap-Metadata.html][metainfo XML]]
+ [[https://www.freedesktop.org/software/appstream/docs/api/index.html][dev docs]]
+ Github: [[github:ximion/appstream][ximion/appstream]]

* Resources
+ [[https://docs.flatpak.org/en/latest/desktop-integration.html#portals][Portals]] interface for securely permitting app to access host resources from sandbox

This is a platform for distributing apps, but is technically containerized.
[[https://docs.flatpak.org/en/latest/tips-and-tricks.html?highlight=%22%2Fetc%2Fflatpak%22#adding-a-custom-installation][Custom installations allow you to install to flatpak-specific disk-image]]. This
can be shared to multiple VM's via proxmox to make desktop apps like
Krita/Blender/Steam more portable.

* Topics

** Environment

[[https://docs.flatpak.org/en/latest/flatpak-command-reference.html#flatpak-metadata][Environment Var Reference]]

Path Vars

|--------------------------+-----------------------+-----------------------------------------|
| Name                     | Default               | Desc                                    |
|--------------------------+-----------------------+-----------------------------------------|
| FLATPAK_USER_DIR         | XDG_DATA_PATH/flatpak | location of per-user installation       |
| FLATPAK_SYSTEM_DIR       | /var/lib/flatpak      | location of system-wide installation    |
| FLATPAK_SYSTEM_CACHE_DIR | /var/tmp/               | place for temp child repos during pulls |
| FLATPAK_CONFIG_DIR       | /etc/flatpak          | flatpak site config                     |
| FLATPAK_RUN_DIR          | /run/flatpak          | runtime global files                    |
|--------------------------+-----------------------+-----------------------------------------|

Misc vars

|----------------------+----------------------------------------------|
| Name                 | Desc                                         |
|----------------------+----------------------------------------------|
| FLATPAK_FANCY_OUTPUT | set to =0= to avoid fancy formatting           |
| FLATPAK_TTY_PROGRESS | set to =1= to enable machine readable progress |
|----------------------+----------------------------------------------|

Modified XDG Vars

|-----------------+------------------------------|
| Base Dir        | Default                      |
|-----------------+------------------------------|
| XDG_CONFIG_HOME | ~/.var/app/$app/config       |
| XDG_DATA_HOME   | ~/.var/app/$app/data         |
| XDG_CACHE_HOME  | ~/.var/app/$app/cache        |
| XDG_STATE_HOME  | ~/.var/app/$app/.local/state |
|-----------------+------------------------------|

*** Protip

... don't customize the user flatpak installation. Or do, whatever.

+ I did so that home would be a more predictable size (and thus a more
  portable partition).
+ It breaks some apps -- e.g. flatseal -- since they aren't supposed to be
  able to read outside of =$HOME= without permissions
+ If your =.config/user-dirs.dirs= points outside of =$HOME=, apps can't read
  those by default either.
  - So... like uploading files in a browser or into
    discord requires copying files into their =$FLATPAK_USER_VAR/app/$appId=
    directory.
  - Steam needs some special handling, but setting up an external library is
    the way to go. Needs special permissions AFAIK (unless it already has
    them)
+ It's confusing to untangle. =FLATPAK_USER_VAR= and =FLATPAK_USER_DIR= need to be
  set in =.profile=.
  - It's also a PITA to setup, though IMO a custom installation location is
    the way to go. A partition _could be_ shared between installations, though
    it's going to load config in your =$HOME= anyways.
  - though it's abysmally unsupported... again quite often the applications
    themselves handle some/most of the "open $file at $path" logic
  - flatpak /only/ writes to =~/.local/share/flatpak/db=, though your overrides
    are in =$FLATPAK_USER_DIR/overrides=

On the other hand, it's pretty clear that apps definitely will not be able to
access other apps' files ... though the =home= permission denies access to other
apps' =.var/app= directories.

** Multiple Installations

Install =flatseal=

Here, flatpak will be configured to use a custom installation on another
partition at =/flatpak/$USER=. To keep the flatpak app state on the same
partition, link =$HOME/.var= to =$FLATPAK_USER_VAR=.

#+begin_src sh :tangle .config/sh/profile.d/flatpak.sh :shebang #!/bin/sh
alias flatagenda="flatpak --installation=agenda"
alias flatsteam="flatpak --installation=steam"

export XDG_DATA_DIRS="/flatpak/dc/.local/share/flatpak/exports/share:${XDG_DATA_DIRS}"
# TODO move this to the guix package?
export XDG_DATA_DIRS="/flatpak/steam/.local/flatpak/exports/share:${XDG_DATA_DIRS}"
export XDG_DATA_DIRS="/flatpak/agenda/.local/flatpak/exports/share:${XDG_DATA_DIRS}"

export FLATPAK_USER_DIR=/flatpak/$(id -un)/.local/share/flatpak

# this is another variable for convenience (this var isn't used by flatpak)
export FLATPAK_USER_VAR=/flatpak/$(id -un)/.var

# Custom installations need to be configured here
# - /flatpak/steam :: $FLATPAK_CONFIG_DIR/installations.d/steam.conf
# export FLATPAK_CONFIG_DIR=/flatpak/.config/flatpak
export FLATPAK_CONFIG_DIR=/etc/flatpak

#+end_src

*** The Goal

After creating & mounting a =/flatpak= disk, syncthing can push centrally
updates to new flatpak installations to =/flatpak/syncpak123=:

+ Here they can be managed via =flatpak --installation /flatpak/syncpak123= on
  the server where flatpak is hosted
  - or, more carefully, managed from some of the local servers, assuming a consistent flatpak environment on the syncthing clients.
  - these clients (or the client disk permissions) should set some of the
    syncthing permissions to read only.
  - on the client, =XDG_CONFIG_DIR= is always read after =XDG_CONFIG_HOME=, so
    for any app, its configs can be transparently overridden, without affecting the synced flatpak installations.
+ Then the custom flatpak installations can be linked into the local system via
  =stow=, where a few modifications to =XDG= vars will pick them up.

This method has not been tested yet. However, since they are plain binaries, then they should be syncable.

*** Steam & Proton

+ [[See ][PC Gaming Wiki]] describes Steam Library & Game Data locations

#+begin_src sh :tangle .config/sh/profile.d/steam.sh :shebang #!/bin/sh
export STEAM_DIR=$_STEAM/.var/app/com.valvesoftware.Steam/.steam
export FLATPAK_STEAM_VAR=/flatpak/steam/.var

# log with PROTON_LOG=1
export PROTON_LOG_DIR=$_STEAM/log/proton
export PROTON_CRASH_REPORT_DIR=$_STEAM/log/proton-crash

alias run_steam="flatpak --installation=steam run com.valvesoftware.Steam"
#+end_src

Run with =FLATPAK_CONFIG_DIR=/etc/flatpak flatpak --installation=steam run com.valvesoftware.Steam=

Or simply =flatpak --installation=steam run com.valvesoftware.Steam=

**** Setup

+ Add =steam.sh= to =~/.config/sh/_load_profile.d.sh=

#+begin_src sh :tangle no :eval no
mkdir -p $_STEAM $FLATPAK_STEAM_VAR/com.valvesoftware.Steam

# because flatpak steam will try to symlink /flatpak/dc/.var/com.valvesoftware.Steam/.var to ~/.var (which is very confusing)
ln -s /flatpak/steam/.var/app/com.valvesoftware.Steam /flatpak/dc/.var/com.valvesoftware.Steam

# ensure that FLATPAK_CONFIG_DIR is defined and that the steam flatpak install exists
flatpak --installations

flatpak --installation=steam remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
flatpak --installation=steam remote-add --if-not-exists flathub-beta https://flathub.org/beta-repo/flathub-beta.flatpakrepo

flatpak --installation=steam install flathub com.valvesoftware.Steam
flatpak --installation=steam install flathub com.valvesoftware.Steam.CompatibilityTool.Proton
#+end_src

***** Issues

+ After invoking for the first time, if this link shows up, remove it
  - =rm /flatpak/steam/.var/app/com.valvesoftware.Steam/.var=
+ Flatpak steam will ignore =STEAM_DIR= anyways...
  - it will put the steam library within the steam install under
    =/flatpak/steam/.var/app/com.valvesoftware.Steam/.var=


****** TODO consider creating ./flatpak/installations.d/steam.conf

*** Caveats

When running apps from a portable flatpak custom installation, the ABIs for a
flatpak ELF must be compatible with those your system expects binaries to adhere
to.

+ [[https://stackoverflow.com/questions/2171177/what-is-an-application-binary-interface-abi][The TLDR S/O post on ABIs I shouldve finished reading]]
+ [[https://kernelnewbies.org/ABI][Linux ABI]]
+ [[https://www.systutorials.com/docs/linux/man/1-abidiff/][abidiff]] cmdline tool


* Issues

** Fixing Zoom Signon in flatpak

Can be fixed in =$XDG_CONFIG_HOME/zoomus.conf= with
=embeddedBrowserForSSOLogin=false= according to this [[https://github.com/flathub/us.zoom.Zoom/issues/169][github issue]].

See [[https://support.zoom.us/hc/en-us/articles/115001799006-Mass-deploying-preconfigured-settings-for-Mac][documentation of zoomus.conf]] for keys/values
