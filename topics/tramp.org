:PROPERTIES:
:ID:       786edde6-2a08-4ec5-8076-45bbd4a34243
:END:
#+TITLE: Tramp

* Docs
+ [[https://www.emacswiki.org/emacs/TrampMode][EmacsWiki]]
+ GNU [[https://www.gnu.org/software/tramp/][Docs]]

* Resources

* Issues

** File Locking
Some notes on file locking using pretty vanilla tramp setup

+ should be replicable on something like [[https://github.com/dcunited001/.emacs.guix/commit/3c25311bb20aad4b0a15cbab6d3f76c2d7cf657f][dcunited001/.emacs.guix@7cf657f]]

#+begin_quote
testing writing to bobPC copy from alicePC.

when alicePC has all changes from bobPC:

- bobPC's in memory buffer instantly gets the new file contents.

when alicePC is working with a copy, but bobPC has made local changes:

- handles several different cases and consistently notifies the user

when myuser@alicePC steals the local file lock, then you can try to save a different
  copy, but this didn't appear on the alicePC copy, even when killing/reopening
  the myuser@bobPC buffer. (not sure what's happened here)
#+end_quote

** [[https://stackoverflow.com/a/16408592][Getting sudo under a specific user on a remote host]]

Use =sudoedit= generally. It's far more secure.

#+begin_example
/ssh:you@remotehost|sudo:remotehost:/path/to/file
#+end_example

- explains =multi:= syntax which specifies multiple hops using SSH uri's
  separated by pipes
  - tramp breaks these up and constructs =tramp-default-proxies-alist=
    - e.g. =("remotehost" "root" "/ssh:you@remotehost:")=
- also explains sudo for a specific user on a local host

*** TODO figure out YTF this still doesn't work for me
+ what am i doing wrong? SSH is fine usually. Sudo/Edit
+ also, is there a solution to the verbose path entry in minibuffer. history
  doesn't work unless you've visited that buffer before
  - and yes, it will be there waiting for you in your history if you have
  - also, emacs undo history is a bit like a stalker. "oh the last time i opened
    that file that was a year ago. jesus christ."

** Grokking tramp-default-proxies-alist

+ tramp-default-proxies-alist :: a list of triples =(host user proxy)=

#+begin_src emacs-lisp
(defcustom tramp-default-proxies-alist "..."
  :type
  '(repeat
    (list
     (choice :tag "Host regexp" regexp sexp)
     (choice :tag "User regexp" regexp sexp)
     (choice :tag " Proxy name" string (const nil)))))
#+end_src

** TODO determine whether it is useful to set =tramp-default-proxies-alist= from =.dir-locals.el=

+ enable-remote-dir-locals :: remote buffers will have tramp-expand-args
  - see =hack-dir-local--get-variables=

** TODO what are these files? :lisp-data-mode:

#+begin_src emacs-lisp
     ("\\.dir-locals\\(?:-2\\)?\\.el\\'" . lisp-data-mode)
     ("eww-bookmarks\\'" . lisp-data-mode)
     ("tramp\\'" . lisp-data-mode)
     ("/archive-contents\\'" . lisp-data-mode)
     ("places\\'" . lisp-data-mode)
     ("\\.emacs-places\\'" . lisp-data-mode)
     ("\\.el\\'" . emacs-lisp-mode)
     ("Project\\.ede\\'" . emacs-lisp-mode)
#+end_src

* Resources
