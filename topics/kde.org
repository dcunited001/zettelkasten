:PROPERTIES:
:ID:       39e14ffe-75c9-49e6-b852-6c492c4ee3e0
:END:
#+TITLE: KDE

* Docs

* Resources

** KDE Frameworks
+ [[https://develop.kde.org/products/frameworks//][Main Page]]

** Compositing
+ Desktop Effects Performance

** Community
+ [[https://community.kde.org/Main_Page][Wiki Main Page]]
+ [[https://community.kde.org/KWin/Bugzilla][KDE Bugzilla]]
+ [[https://community.kde.org/KTp][KDE KTp Telepathy]]
+ [[https://community.kde.org/Akademy][Akademy]] (annual event)

*** Coordination
+ [[https://phabricator.kde.org/][Phabricator]]
+ [[https://community.kde.org/Frameworks/Git_Workflow][Git Workflow]]
+ [[https://sysadmin-docs.kde.org/services/identity.html][Sysadmin Docs]]

** Guidelines
+ [[https://community.kde.org/Guidelines_and_HOWTOs/Debugging][Debugging]] (valgrind/gdb, links to recommendations for specific apps)

* Groups

Groups on invent.kde.org

** Plasma

*** Plasma Desktop

**** KCM

***** Keys

Keyboard/Shortcuts configuration.

+ [[https://invent.kde.org/plasma/plasma-desktop/-/blob/master/kcms/keys/kcm_keys.cpp?ref_type=heads][kcm_keys.cpp]]

* Topics

** Misc

*** Hidden Features

From [[https://www.youtube.com/watch?v=ybWFSIWEfVM][6 KDE Plasma Features you *actually* didn't know]]

+ Dolphin hidden places
  - help:
  - timeline:
  - man:
  - activities:
  - baloosearch:
  - fonts:
+ Gestures: add under custom shortcuts
+ Mousemark: desktop effect to add a draw layer to the composited desktop

** Configuration
*** General
**** Order of loading

|-----------------------------+-----------------|
| ~/.config/myAppConfigrc     | (i.e dolphinrc) |
| /etc/xdg/myAppConfigrc      | (i.e dolphinrc) |
| ~/.config/kdeglobals        |                 |
| /etc/xdg/kdeglobals         |                 |
| ~/.config/system.kdeglobals |                 |
| /etc/xdg/system.kdeglobals  |                 |
| /etc/kde5rc                 |                 |
|-----------------------------+-----------------|

**** KCM: KDE Control Module

KDE allows you to set [[https://develop.kde.org/docs/administration/kiosk/introduction/][policy on user configurations via =Kiosk=]]. See [[https://develop.kde.org/docs/administration/kiosk/keys/][Kiosk keys]],
which also provides a fairly comprehensive list of the configuration surface
area.

+ Inidividual config files can be set to be ignored: by using =[module][$i]=
  where =[$i]= is not a variable, but a directive that causes the config merging
  to stop.
+ Defaults can be set for the configs.
+ To set policy, change a config file that merges earlier
+ See the config loading order above

** KSysGuard


*** Sensor Faces and Plots

+ [[https://api.kde.org/frameworks/kquickcharts/html/index.html][KQuickCharts for plots]]
+ [[https://develop.kde.org/docs/apps/sensor-faces/][Creating Sensor Faces]]
+ Styling?

*** KQuickCharts

#+ATTR_HTML: :width 800px
[[file:img/kde/doxygen-kquickcharts-hierarchy.png]]

** Automation

*** Using =qdbus=

Looking through KDE docs, quite a lot gets configured through D-Bus which is the
"source of truth" where the config files and State files are only secondary. So
it's possible to generally [[https://sleeplessbeastie.eu/2013/02/26/how-to-automate-kde-using-d-bus/][automate KDE configuration using qdbus]] (article
from 2013)

There is also this 3-part series [[https://freeaptitude.altervista.org/articles/playing-with-dbus-and-kde-applications-part-1.html][Playing with D-Bus and KDE Applications]] which
seems pretty extensive.

+ The first part covers klipper
+ the second covers automation via =org.kde.konsole-*= services (which don't
  seem to exist for me) -- nevermind: they just take a second to appear.
+ The third part covers the most ground (configuration automation) and is the
  most worthwhile.

**** Kdialog

See [[https://freeaptitude.altervista.org/tags/kdialog/][Show a dialog with Kdialog]] (3 parts)

***** Progress bars and handling dialog responses

From the [[https://develop.kde.org/docs/administration/kdialog/][administration doc on kdialog]]:

The =kdialog= command returns a dbus service name

#+begin_src sh
dbusRef=`kdialog --progressbar "Initializing" 4`
qdbus $dbusRef Set "" value 1
qdbus $dbusRef setLabelText "Thinking really hard"
sleep 2
qdbus $dbusRef Set "" value 2
sleep 2
qdbus $dbusRef setLabelText "Thinking some more"
qdbus $dbusRef Set "" value 3
sleep 2
qdbus $dbusRef Set "" value 4
sleep 2
qdbus $dbusRef close
#+end_src


#+begin_src sh
dbusRef=`kdialog --progressbar "Press Cancel at Any time" 10`
qdbus $dbusRef showCancelButton true

until test "true" = `qdbus $dbusRef wasCancelled`; do
 sleep 1
 inc=$((`qdbus $dbusRef Get "" "value"` + 1))
 qdbus $dbusRef Set "" "value" $inc;
done

qdbus $dbusRef close
#+end_src


*** Configs
+ [[https://www.thegeekdiary.com/kwriteconfig5-command-examples-in-linux/][kwriteconfig5 command examples]]
+ [[https://github.com/nbeaver/config-kde5/blob/master/config-kde.sh][nbeaver/config-kde5]] example configuration using =kwriteconfig5=
+ [[https://invent.kde.org/plasma/plasma-workspace/-/tree/master/lookandfeel][lookandfeeltool]]
+ [[https://invent.kde.org/search?search=plasma-apply&nav_source=navbar&project_id=2703&group_id=1568&search_code=true&repository_ref=master][plasma-apply-*-tool]]


*** kwriteconfig5

Example of [[florian-lefebvre/astro-tailwind-config-viewer][automating keyboard shortcuts with kwriteconfig5]]. Then [[https://www.reddit.com/r/kde/comments/6u0wo7/comment/dlqzeop/][force a reload]]
by restarting =kglobalaccel5= the shortcut key service.

... if you don't have such a process, then you're running Wayland. Thus, you may
have to restart =kwin=. I just hope it doesn't blow away my manual changes to
the config files.

**** Reload KWin Config via D-Bus

Well I'm not sure how to get the =org.kde.kwin= service to receive that
=reloadConfig()= signal, but I think that would reload the config without
needing to reload kwin.

[[file:img/kwin-dbus-service.png]]

so... this doesn't work

**** TODO diff KDE config files against a Garuda install

+ any way to completely automate the translation from added lines to
  =kwriteconfig5= commands?

* Issues
** Clipboard ([[https://invent.kde.org/plasma/plasma-workspace/-/tree/Plasma/5.27/klipper][klipper]] source)
*** The entry shows in clipboard history, but won't paste
+ when using the mouse to interact, the bug almost never occurs
+ apparently, setting [[https://www.reddit.com/r/kde/comments/11mwils/copy_and_paste_broken/][clipboard]] [[https://www.reddit.com/r/kde/comments/ueant5/clipboard_klipper_content_wont_be_pasted_if_the/][history]] from 1 to 2 fixes it

+ Can't find any klipper issues on bugzilla. The only bugs I can find are on
  [[https://invent.kde.org/plasma/plasma-workspace/-/merge_requests/2731/diffs?commit_id=49ddc19425dc09eb99b9c062b1f04598b23df876#diff-content-309604d9eaede33d62fe0eb7108dcb84dd099ca0][invent.kde.org/plasma/plasmashell]].

** Dock
*** Can't find the config file for the new Garuda Plasma Dock
+ The top dock is in =~/.config/plasma-org.kde.plasma.desktop-appletsrc= and it
  overrides [[https://gitlab.com/garuda-linux/themes-and-settings/settings/garuda-dr460nized/-/blob/master/usr/share/plasma/look-and-feel/Dr460nized/contents/layouts/org.kde.plasma.desktop-layout.js][/usr/share/plasma/look-and-feel/Dr460nized/contents/layouts/org.kde.plasma.desktop-layout.js]]

  ... i definitely noted this already...

** Wayland

*** Sometimes can't change VTY after logging in

I currently can't change VTY. Manually changing with =chvt $n= works.

+ may be a combination of KWin and SDDM, but it might be SDDM.
+ checked on invent.kde.org, but couldn't find anything about it.
+ some discussions via search results mentioned similar issues variously from
  2022-23: apparently entering your password before allowing SDDM to completely
  load causes it.


* KDE: KWin
:PROPERTIES:
:ID:       ac2a469e-bf09-4bbb-bd4a-261464f5170d
:END:

** Docs

+ [[https://community.kde.org/KWin/Environment_Variables][KWin Env Reference]]
+ [[https://community.kde.org/KWin][Developer Documentation]]
+ [[https://community.kde.org/KWin/Hacking][KWin parts/structure]]
+ [[https://community.kde.org/KWin/Class_Diagram][KWin Class Diagram]]

** Resources
+ [[https://develop.kde.org/docs/features/configuration/kconfig_xt/][Using KConfig XT]] to autogenerate C++ classes from the =.kcfg= KConfig XML
  schema (compiled via [[https://api.kde.org/frameworks/kconfig/html/kconfig_compiler.html][kconfig_compiler]] ... the [[https://api.kde.org/frameworks/kconfig/html/pages.html][Related Pages]] feature is handy)
https://develop.kde.org/docs/features/configuration/configdialog/ | KConfigDialog
https://develop.kde.org/docs/getting-started/building/kdesrc-build-compile/ | Building KDE software with kde-builder

*** KConfig

**** Modules
The KCModules from KCMUtils are technically a more generic concept, but first
appear most prominently in the settings. Many examples in [[https://invent.kde.org/plasma/plasma-workspace/-/tree/master/kcms][plasma-workspace]] and
[[https://invent.kde.org/plasma/plasma-desktop/-/tree/master/kcms][plasma-desktop]]

*** Kirigami
+ [[https://develop.kde.org/docs/getting-started/kirigami/advanced-understanding_cmakelists/][Advanced CMakeLists]]

*** KDE Builder

[[https://invent.kde.org/sdk/kde-builder][kde-builder]] is successor to [[https://invent.kde.org/sdk/kdesrc-build][kdesrc-build]]

+ [[https://kde-builder.kde.org/en/using-kde-builder/advanced-features.html#installing-login-session][Installing a new login session]] (to SDDM and a few other things, via D-Bus)

*** KWin Scripts

https://develop.kde.org/docs/plasma/widget/examples/ | Examples

https://develop.kde.org/docs/features/configuration/ | Configuration
https://develop.kde.org/docs/features/configuration/introduction/ | Introduction to KConfig
https://api.kde.org/frameworks/kconfig/html/index.html | KConfig
https://api.kde.org/frameworks/kconfig/html/kconfiggroup_8cpp_source.html | kconfiggroup.cpp
https://api.kde.org/frameworks/kconfig/html/kstandardshortcut_8cpp_source.html | kstandardshortcut.cpp
https://api.kde.org/frameworks/kconfig/html/options.html | KConfig Entry Options

https://develop.kde.org/docs/plasma/kwin/ | KWin scripting tutorial
https://develop.kde.org/docs/plasma/widget/configuration/ | Configuration

**** Examples
+ [[https://develop.kde.org/docs/plasma/kwineffect/][KDE Docs: How to write a KWin Effect in QML]] codes a grid display of windows
  where middle click closes each one

+ [[https://github.com/gerritdevriese/kzones][gerritdevriese/kzones]]

**** Bindings

+ [[https://develop.kde.org/docs/plasma/kwin/api/][KWin Scripting API (Latest)]]
  - [[https://techbase.kde.org/Development/Tutorials/KWin/Scripting/API_4.9][KWin Scripting API (4.9)]]
  - The docs are generated by [[https://www.saxonica.com/html/documentation12/about/whatis.html][saxon8]] by the script in
    [[https://invent.kde.org/nicolasfella/kwin-scripting-api-generator/-/blob/master/kwin-scripting-api-generator.sh][invent.kde.org/nicolasfella/kwin-scripting-api-generator]]
  - hmmm ... did not know about saxon

Typescript

+ [[https://github.com/RubixDev/kwin-types][RubixDev/kwin-types]]: see [[https://github.com/RubixDev/kwin-types/blob/main/src/kwin.d.ts][kwin.d.ts]] and [[https://github.com/RubixDev/kwin-types/blob/main/src/qt.d.ts][qt.d.ts]]
  - These are also in =src/extern= in the [[https://github.com/anametologin/krohnkite/tree/master/src/extern][amanetologin/khronkite]] fork
  - see also [[https://github.com/RubixDev/kwin-typescript-template][RubixDev/kwin-typescript-template]]


** Topics
*** KConfig
*** KDE Builder
Source :[[https://invent.kde.org/sdk/kde-builder][sdk/kde-builder]]

**** Modules

High-level, abstract units of organization within the KDE sourcebase. They
affect the structure of your build directory, but also how =kde-builder=
approaches organizing its work & logic.

See [[https://kde-builder.kde.org/en/developer/concepts.html#module-sets][Concepts in the KDE Builder docs]].

**** Configuration

=$HOME/.kdesrc-buildrc= mainly uses [[sections][three configuration directives]]:

+ module :: a single module
+ module-set :: a set of KDE modules
+ options :: options for the module/set

**** Dev Session

Setting =install-login-session= in =.kdesrc-buildrc= causes the builder "to
invoke session installation script from =plasma-workspace= module."

... which is this [[https://invent.kde.org/plasma/plasma-workspace/-/blob/master/login-sessions/install-sessions.sh.cmake][install-sessions.sh.cmake]] file.

#+begin_quote
This was the whole point of this excursion: how tf do i script my KDE config?

Can I make it do things without clicking?
#+end_quote

*** KWin Scripts
** Issues

* KDE: Plasma
:PROPERTIES:
:ID:       4a5ba7e9-90bc-4274-aeb5-bc5c3bd54761
:END:


** Docs
+ [[Plasma][Plasma Developer Documentation]]
+ [[https://community.kde.org/Plasma/RecommendedReading][Recommended Reading on Interaction Design]]
+ [[https://community.kde.org/Distributions/Packaging_Recommendations][Packaging Recommendations]]

*** Misc
+ [[https://community.kde.org/Plasma/RepeatedDiscussions][Repeated Discussions]]

*** Wayland

+ [[https://community.kde.org/Plasma/Wayland_Showstoppers][Plasma/Wayland showstoppers]]
** Resources

** Topics

*** Search
**** Semantic Search

+ This formerly used [[https://userbase.kde.org/Nepomuk][Nepomuk]] and now uses [[https://userbase.kde.org/Baloo][Baloo]]
+ Baloo indexes [[https://wiki.archlinux.org/title/Extended_attributes][extended attributes]] (e.g. tags stored by Dolphin or other apps)
  - check by using =xattr=


*** Shells

Shared components in =plasma-workspace=

#+begin_src dot :file img/plasma-workspace-arch.svg
digraph QT {
  "plasma-desktop" -> "plasma-workspace";
  "plasma-mobile" -> "plasma-workspace";
  "plasma-bigscreen" -> "plasma-workspace";
}
#+end_src

#+RESULTS:
[[file:img/plasma-workspace-arch.svg]]

*** Environment

Scripts added to =.config/plasma-workspace/env= will be loaded on session
initialization.


* Qt

+ [[id:0c24939d-f5b9-4cab-96ae-cef1ea4cd4f0][GUI Toolkits]]
+ [[KDE panel/desktop config][https://userbase.kde.org/Plasma/Panels]]
  - ~/.config/plasma-org.kde.plasma.desktop-appletsrc
