:PROPERTIES:
:ID:       e77048aa-d626-44c1-8bbb-037a1173d01d
:END:
#+title: Graphviz

* Docs

+ [[https://www.graphviz.org/pdf/dotguide.pdf][Dot Guide]]
+ [[https://graphviz.readthedocs.io/en/stable/][graphviz.readthedocs.io]]
+ [[https://www.graphviz.org/documentation/][Documentation Page]]

* Resources

* Issues

** can't eval org-babel blocks as graphviz-dot, [[https://github.com/ppareit/graphviz-dot-mode/pull/46][but it's reported as possible]]
+ is this possible without adding a full ob-graphviz.el?
+ this mode should probably just be restricted to evalling =dot= mode blocks
  opened with =C-c =',

** evalling org-babel blocks as dot is easier
+ [[https://vxlabs.com/2014/12/04/inline-graphviz-dot-evaluation-for-graphs-using-emacs-org-mode-and-org-babel/][Inline GraphViz DOT evaluation for graphs using Emacs, org-mode and org-babel]]

** combining elisp to generate graphviz
+ may benefit from combining dynamic-graphs package

* Examples

** Ladder Diagrams
+ [[https://stackoverflow.com/questions/40558313/how-to-make-graphviz-ladder-diagram-flows-straight][ladder diagram for a protocol]]


* Plant UML

** Docs

+ [[https://plantuml.com/guide][Drawing UML with PlantUML]]
+ [[https://ogom.github.io/draw_uml/plantuml/][Cheatsheet]]

** Resources

+ [[https://www.conexxus.org/sites/default/files/UsingPlantUML.pdf][Guidelines for Using PlantUML]]

** Tasks
*** TODO look into [[https://github.com/tj64/puml][tj64/puml]]: create reusable plantuml macros with declarative DSL (via elisp)

* Roam

+ [[id:38f43c0c-52ee-42d7-9660-af2511d19711][Modeling Language]]
