:PROPERTIES:
:ID:       38638b3e-e023-460e-9670-84776e61468e
:END:
#+title: Browser

* Chromium

* Firefox

** Topics

*** Sqlite

Hmmmm.... wow. i can haz that?

[[id:0c386ed6-5a9d-4fc0-8444-550fce2c39a4][Org-babel with more detail here]]. It's honestly more of a feature than a bug, but
the data maybe ummm should be encrypted. [[https://jhoneill.github.io/powershell/2020/11/23/Chrome-Passwords.html][Same thing]] in [[https://developer.chrome.com/blog/deprecating-web-sql/][Chromium]].
Surprise. You're naked if anyone gets a shell to your environment ... with read
access to =$HOME=. Big deal. No passwords, but yeh... does it matter? It's being
phased out... but until then, have a fig leaf.

#+begin_src shell :results output list
ffdata="$HOME/.mozilla/firefox"
ffprofile=$(grep -e "^Default=.*" $ffdata/profiles.ini | head -n1 | cut -f2 -d'=')

cd $ffdata/$ffprofile
ls *.sqlite
#+end_src

#+RESULTS:
#+begin_example
- content-prefs.sqlite
- cookies.sqlite
- credentialstate.sqlite
- favicons.sqlite
- formhistory.sqlite
- permissions.sqlite
- places.sqlite
- protections.sqlite
- storage.sqlite
- storage-sync-v2.sqlite
- webappsstore.sqlite
#+end_example

*** Extensions

**** Tree Style Tabs

+ Impressive project, given how modular/interoperable it is.
+ A lot of config options.

***** User Stylesheet Fix To Hide Tab Bar

The TST extensions can basically replace the tab bar. I kept looking for this
option (for TST to manage the horizontal tab bar visibility), but apparently you
[[https://www.reddit.com/r/firefox/comments/nwrtdv/comment/h1b6c62/?utm_source=share&utm_medium=web2x&context=3][just hide the tab bar]] altogether. This needs to be done on a per-installation,
per-profile basis, hence ... the notes.

+ [[https://github.com/MrOtherGuy/firefox-csshacks][MrOtherGuy/firefox-csshacks]] (with examples)
+ [[https://github.com/FirefoxCSS-Store/FirefoxCSS-Store.github.io/blob/main/README.md#generic-installation][Firefox-CSS-Store/Firefox-CSS-Store.github.io]]

****** Using userChrome.css

On Linux for me, the only =about:config= necessary to enable was
=toolkit.legacyUserProfileCustomizations.stylesheets=, despite what's documented
in some of these CSS repos. The other options /may/ eat all your Video RAM, but
may be necessary for those themes. I'm not sure how X11/etc framebuffers work
with multiple desktops and window previews...

If the above value is set, then
=~/.mozilla/firefox/$profile/chrome/userChrome.css= must exist.

#+begin_src css

#TabsToolbar {
    visibility: collapse;
}

/* remove headers from sidebars */
#sidebar-header {
  display: none;
}

/* reduce minimum width of sidebar */
#sidebar-box {
  min-width: 100px !important;
}

#+end_src

Or [[https://mrotherguy.github.io/firefox-csshacks/?file=autohide_tabstoolbar.css][autohide the tab bar]], though the more =userChrome.css= you use, the more
problems you may encounter... and you have to restart on every change.

****** Using treestyletabs



****** TODO port to dotfiles after finding a decent way to parse =~/.mozilla/firefox/profiles.ini=

If I don't end up using Nyxt first.

**** Debugging

The devtools are nice, but missing 5+ years of development has not been kind to
me (esp. knowing how useful the tools were then). Luckily, you can just enable
the logging in TST (and also debug, which took me a second).

Determining TST entry points was a bit complicated, but es6 modules can be
imported to eval (?) ... I would have just used breakpoints, but the issue
seemed to be in the initialization.

Not really a bug, just needed customization (to avoid unnecessary permissions: a
good thing).

***** Profiles

Isolated browser contexts can be created by using =about:profiles=

***** [[https://firefox-source-docs.mozilla.org/devtools-user/browser_console/index.html][Browser Console]]

Requires enabling the [[https://firefox-source-docs.mozilla.org/devtools-user/browser_toolbox/index.html][Browser Toolbox]].

***** Extension Console

Found in [[about:debugging][about:debugging]].

The extensions may include files built which are not in the Github.

=C-M-f/b= for =forward/backward-sexp= are about as useful as you'd think they
are, so it sucks not having that kinda most of the time. You can, of course,
connect remotely to the debugger and ... well [[https://www.reddit.com/r/xkcd/comments/46w1zc/til_that_emacs_has_a_reference_to_xkcd_378_mx/][XKCD has a comic about this]].

* Nyxt
