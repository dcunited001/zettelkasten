:PROPERTIES:
:ID:       a7cc960b-4174-4029-bf38-9966894e5bee
:END:

#+TITLE:     Guix: Code Notes
#+AUTHOR:    David Conner
#+EMAIL:     noreply@te.xel.io
#+DESCRIPTION: notes

+ [[id:b82627bf-a0de-45c5-8ff4-229936549942][Guix]]

*** IDEA Use [[https://github.com/magit/orgit][magit/orgit's orgit-rev]] for links to code in the repo

*** TODO figure out how to get a Guile Repl to allow running code within a module

*** TODO figure out issue with connecting Geiser to a remote Guix repl

* Guix

** Scripts

+ Common Interface/Patterns
  - =%options=
  - =(show-help)=
  - =(define-command (guix-X . args) ...)=


*** Describe


+ Review
  - [ ] =(current-channels)=
  - [ ] how to invoke (guix-describe) from REPL
    - this is

*** Pull

+ Let's Encrypt & x509 certs: [[file:/data/ecto/guix/guix/guix/scripts/pull.scm][./guix/guix/scripts/pull.scm]]

*** Deploy

** Modules



** Packages

* Packaging

** Issues

*** Packaging Static Files
+ =(with-output-to-file "file.eg")=
  - [[file:/data/ecto/guix/channels/guixrus/guixrus/packages/cyberia.scm::(with-output-to-file "shitchat.gemspec"][./guix/channels/guixrus/cyberia.scm]]

* Channels

** Guix R Us

+ File Structure
  - No main =packages.scm= module
  - [[file:/data/ecto/guix/channels/guixrus/guixrus/packages/emacs.scm::(patches][Patching Style]]

** Flat Whatson

+ File Structure
  - a main packages.scm module
  - [[mauin ][Patching Style]]
  - no gexps
