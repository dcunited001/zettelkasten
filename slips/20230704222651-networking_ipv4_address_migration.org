:PROPERTIES:
:ID:       021782ea-e3e9-4121-91d0-82f09df44015
:END:
#+TITLE: Networking: IPv4 Address Migration
#+CATEGORY: slips
#+TAGS:

* Resources

** Strategies

+ [[https://www.velocenetwork.com/tech/what-is-ip-migration/#Types_of_IP_Migration][IP Migration]] a solution that resembles a combination of the parallel/cutover
  strategies made the most sense to me.

* Why Not Just Change the Addresses?

Because that's too easy and I'd like to get far enough into an automated
solution to understand the first/second-order problems encountered in the
various strategies

* Plan

** IPv4 Overlay


** IPv6 Overlay

I need to double check  because doubling the IPv4 addressing on most of my
interfaces might not work.  The plan is to add a one-to-one IPv4 overlay using
trunked vlans with IP's to ping for test. This should be fairly trivial ... but
there are potentially address space conflicts, in addition to firewall issues.

* Notes

It's potentially hard to document this as I'm going along.

** Potential Problems

+ Lost network connectivity
+ General routing issues
+ Configurations that I forgot I clicked on that one time I ever clicked on
  it. Can you tell how much I love a good WebGUI for this shit?
+ Service connectivity, particularly with essential services like DNS/NTP
+ DHCP Pool Connectivity: most hobby grade stuff can only support single pools
  per interface/vlan

*** IPv4 Overlay

+ Routing issues with dual address spaces
+ Inability to rollback (though this should be less severe)

* Roam
+ [[id:ea11e6b1-6fb8-40e7-a40c-89e42697c9c4][Networking]]
+ [[id:265a53db-5aac-4be0-9395-85e02027e512][PFSense]]
+ [[id:28e75534-cb99-4273-9d74-d3e7ff3a0eaf][Ansible]]
+ [[id:e967c669-79e5-4a1a-828e-3b1dfbec1d19][Route Switch]]
