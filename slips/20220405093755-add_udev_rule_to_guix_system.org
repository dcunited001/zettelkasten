:PROPERTIES:
:ID:       c1262033-92d8-41a0-9e37-057c36a4782a
:END:
#+title: Add udev rule to guix system


+ [[id:b82627bf-a0de-45c5-8ff4-229936549942][Guix]]
+ [[id:bdae77b1-d9f0-4d3a-a2fb-2ecdab5fd531][Linux]]

* Examples

+ (gnu packages radio) ... [[file:/data/ecto/guix/guix/gnu/packages/radio.scm::(define-public hackrf][hackrf]]
+ (gnu packages android) ... [[file:/data/ecto/guix/guix/gnu/packages/android.scm::(define-public android-udev-rules][android-udev-rules]]

* Guix Udev

From [[https://guix.gnu.org/manual/en/guix.html#Base-Services][base services]] in the manual

+ udev-service :: a [[https://guix.gnu.org/manual/en/guix.html#Service-Types-and-Services][composable service]] that concatenates udev-rule's
+ udev-rules-service :: this gets ingested into the =udev-service=, but allows you to modularly define rules (with =#:groups=)

** Refactor udev logic into packages

This allows you to distribute udev logic to systems

*** TODO how to specify "#:groups" from outside of the package
+ i.e. (as a lambda/etc from the system declaration)
+ or specify more logic for the udev rules
  - for this, use =(define-* ...)= and/or lambda, not packages

* General Process

** Build udev rule

*** TODO notes on process to add udev rule for ifuse/usbmuxd

+ =udevadm= (device #)
+ tags?

*** TODO determine how to interact with =herd=
+ instead of systemd

** Update Guix System

+ [ ] create fuse group
  - add user(s) to group
+ [ ] create usbmuxd user/group
  - ensure user access
+ [ ] reference udev rules in system

** Refactor to package
