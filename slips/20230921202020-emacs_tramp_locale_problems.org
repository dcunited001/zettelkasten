:PROPERTIES:
:ID:       ab7b2d63-95b5-4df1-9ce6-9d26f955c250
:END:
#+TITLE: Emacs: Tramp Locale Problems
#+CATEGORY: slips
#+TAGS:

Tramp Locale Problems

+ tramp can't run commands in org-babel because the variables on the right are
  their defaults in =/etc/locale.conf=


| guix              |   | guix          | arch          | override | arch              |
|-------------------+---+---------------+---------------+----------+-------------------|
| LANG              | x | en_US.UTF-8   | en_US.UTF-8   | x        | LANG              |
| LC_CTYPE          |   | "en_US.UTF-8" | "en_US.UTF-8" |          | LC_CTYPE          |
| LC_NUMERIC        |   | "en_US.UTF-8" | en_US.UTF-8   | x        | LC_NUMERIC        |
| LC_TIME           |   | "en_US.UTF-8" | en_US.UTF-8   | x        | LC_TIME           |
| LC_COLLATE        |   | "en_US.UTF-8" | "en_US.UTF-8" |          | LC_COLLATE        |
| LC_MONETARY       |   | "en_US.UTF-8" | en_US.UTF-8   | x        | LC_MONETARY       |
| LC_MESSAGES       |   | "en_US.UTF-8" | "en_US.UTF-8" |          | LC_MESSAGES       |
| LC_PAPER          |   | "en_US.UTF-8" | en_US.UTF-8   | x        | LC_PAPER          |
| LC_NAME           |   | "en_US.UTF-8" | en_US.UTF-8   | x        | LC_NAME           |
| LC_ADDRESS        |   | "en_US.UTF-8" | en_US.UTF-8   | x        | LC_ADDRESS        |
| LC_TELEPHONE      |   | "en_US.UTF-8" | en_US.UTF-8   | x        | LC_TELEPHONE      |
| LC_MEASUREMENT    |   | "en_US.UTF-8" | en_US.UTF-8   | x        | LC_MEASUREMENT    |
| LC_IDENTIFICATION |   | "en_US.UTF-8" | en_US.UTF-8   | x        | LC_IDENTIFICATION |
| LC_ALL            |   |               |               |          | LC_ALL            |

This could be several things.

+ It wasn't changed on Arch recently (maybe Aug 17, notes from
  =/etc/locale.gen.pacman.conf=)
+ It could be a guix or glib thing (problems running ansible)
+ mismatch between guix profiles (when tramp connects it adds profiles to path,
  is there a problem between the two systems?)
+ the guix system definition is set to =en_US.UTF-8= with =glib 2.33= and =glib
  2.35= in =/run/current-system/locale=. I'm not sure what the inconsistency is
  ... but this is why english is best. j/k it's interesting how little you hear
  anyone complain though. I feel like you'd hear half the world about as miffed
  as I am with my capslock key right now (lol). someone somewhere must have
  gotten something right.

** Trigger problems

+ try to run anything in remote bash with tramp.
+ running on ssh or with =async-shell-command= works fine.

#+begin_src emacs-lisp
;; This is already set
;; (add-to-list 'tramp-remote-path 'tramp-own-remote-path)
#+end_src

#+begin_src bash
echo fdsa
#+end_src

#+RESULTS:
| /gnu/store/m6c5hgqg569mbcjjbp8l8m7q82ascpdl-bash-5.1.16/bin/bash: | warning: | setlocale: | LC_ALL: | cannot | change | locale | (en_US.utf8) |
| [                                                                 | Babel    | evaluation | exited  | with   | code   |      0 | ]            |

** Capture problems


*** Log

#+begin_example prolog
Executing Bash code block at position 2264...
Tramp: Encoding local file ‘/tmp/tramp.uhlJXY’ using ‘base64-encode-region’...done
Tramp: Decoding remote file ‘/ssh:dc@kratos:/tmp/ob-input-vESQt4’ using ‘base64 -d -i >%s’...done
Wrote /ssh:dc@kratos:/tmp/ob-input-vESQt4
Tramp: Inserting ‘/ssh:dc@kratos:/tmp/ob-error-iVPhS7’...done
Babel evaluation exited with code 0
Tramp: Encoding local file ‘/tmp/tramp.UifDJ2’ using ‘base64-encode-region’...done
Tramp: Decoding remote file ‘/ssh:dc@kratos:/tmp/sh-ejnPhl’ using ‘base64 -d -i >%s’...done
Tramp: Inserting ‘/ssh:dc@kratos:/tmp/sh-ejnPhl’...done
org-make-toc-mode enabled.
Code block evaluation complete (took 0.3s).
#+end_example

in other words...

#+begin_quote
           ||                        ||                        ||
           ||                        ||                        ||
           ||                     <--06-->                     ||
           ||                        ||                        ||
           ||                        ||                        ||
           ||                        ||                        ||
           ||                        ||                        ||
           ||                        ||                        ||
           ||                        ||                        ||
           ||                        ||                        ||
           ||                        ||                        ||
           ||                        ||                        ||
           ||                        ||                       <00>
           ||                        ||                       <01>
           ||                        ||                       <02>
           ||                        ||                      <-03->
           ||                        ||                      <-04->
           ||                        ||                      <-05->
      <----13---->                   ||                  <-----16----->
      <----14---->                   ||                  <-----17----->
     <-----15----->               <--07-->              <------20------>
    <------18------>              <--08-->             <-------21------->
    <------19------>             <---09--->            <-------22------->
  <--------24-------->           <---10--->            <-------23------->
 <---------27--------->          <---11--->           <--------26-------->
 <---------28--------->         <----12---->         <---------29--------->
<----------31---------->    <--------25-------->    <----------30---------->
============================================================================
#+end_quote


* Org Export

Whenever I export anything, org or org-roam cached state in
=~/.emacs.g/var/org/id-locations.el=

#+begin_example emacs-lisp

(("/ssh:dc@kratos:/data/org/roam/slips/z_locale.org" "ab7b2d63-95b5-4df1-9ce6-9d26f955c250") ("/data/org/roam/slips/20230423051118-rant_ughh_i_could_use_some_insight_from_time_to_time.org" "a5ce5893-7211-470e-8873-df98140a7329") ("/data/org/roam/slips/20230915002650-ansible_vscode_within_flatpak.org" "49637faf-1c11-46f2-9b5b-fc0d060b4c0a"))

(("/ssh:dc@kratos:/data/org/roam/slips/z_locale.org" "ab7b2d63-95b5-4df1-9ce6-9d26f955c250") ("/data/org/roam/slips/20230423051118-rant_ughh_i_could_use_some_insight_from_time_to_time.org" "a5ce5893-7211-470e-8873-df98140a7329") ("/data/org/roam/slips/20230915002650-ansible_vscode_within_flatpak.org" "49637faf-1c11-46f2-9b5b-fc0d060b4c0a"))

(("/ssh:dc@kratos:/data/org/roam/slips/z_locale.org" "ab7b2d63-95b5-4df1-9ce6-9d26f955c250") ("/data/org/roam/slips/20230423051118-rant_ughh_i_could_use_some_insight_from_time_to_time.org" "a5ce5893-7211-470e-8873-df98140a7329") ("/data/org/roam/slips/20230915002650-ansible_vscode_within_flatpak.org" "49637faf-1c11-46f2-9b5b-fc0d060b4c0a"))

#+end_example

This causes =org-export= to connect over tramp.  If I'm not connected, tramp
can't open a remote connection and the export fails.

+ Calling =org-roam-update-org-id-locations= didn't work. This function also
  causes Tramp to attempt to connect.
+ Trying to call =org-roam-db-sync= and /then/ the above function also did not
  clear the cache.
+ Even trying this after moving the file didn't work, perhaps because something
  was effectively getting cached in emacs' memory.

** Solution

+ Move the =id-locations.el= file to a backup.
+ Comment out the line that triggers =org-roam-db-autosync-mode= from
  my config
+ Load a second emacs session, which I realize may be a bad idea, since sqlite
  can only support a single connection.
+ Try the export, it should or.
+ Get =org-roam-update-org-id-locations= to complete.
+ At this point, the other (original) emacs session should be able to do
  everything with Emacs

** Cause

Is =id-locations.el= an org-roam concept? The =org-export= functionality should
have very little overlap with =org-roam=.

+ I must have left the =id-locations.el= file in a bad state and it just
  happened to persist. For some reason, I may have manually created the file
  (instead of capturing it) and I definitely moved it ... so user error (not a bug)
+ the state must get invalidated after keying on the remote file, which was
  first created remotedly.
+ Hence =org-roam= keys on the filename, which may sometimes not be purged from
  the =id-locations.el= cache. Tramp is deeply integrated in emacs, so it's
  transparent to common funcitons for files.

I don't believe I was getting warnings about duplicate ID's.

*** Why Tramp?

I work across two laptops. Most of my projects are solo, so merge/rebase issues
are rare, but they're nice to avoid. So tramp helps circumvent that sometimes.
Org notes can be frustrating to merge/rebase and I don't update one of the
computers often. Awhile ago I decided on taking this approach moving forward --
just avoid merge/rebase.

** Backtrace

The export is async, so may be a bit messy to debug. This is the backtrace from
when tramp tries to connect.

#+begin_example emacs-lisp
  tramp-maybe-open-connection((tramp-file-name "ssh" "dc" nil "kratos" nil "/bin" nil))
  tramp-send-command((tramp-file-name "ssh" "dc" nil "kratos" nil "/bin" nil) "test 0 2>/dev/null; echo tramp_exit_status $?")
  tramp-send-command-and-check((tramp-file-name "ssh" "dc" nil "kratos" nil "/bin" nil) "test 0")
  tramp-get-test-command((tramp-file-name "ssh" "dc" nil "kratos" nil "/bin" nil))
  tramp-run-test("-d" "/ssh:dc@kratos:/bin")
  tramp-sh-handle-file-directory-p("/ssh:dc@kratos:/bin")
  tramp-sh-file-name-handler(file-directory-p "/ssh:dc@kratos:/bin")
  apply(tramp-sh-file-name-handler file-directory-p "/ssh:dc@kratos:/bin")
  tramp-file-name-handler(file-directory-p "/ssh:dc@kratos:/bin")
  file-directory-p("/ssh:dc@kratos:/bin")
  mapcar(#f(compiled-function (x) #<bytecode 0xda96ff6840f37e5>) ("/bin" "/usr/bin" "~/.guix-profile/bin" "~/.guix-profile/sbin" "/run/current-system/profile/bin" "/run/current-system/profile/sbin" nil nil "/sbin" "/usr/sbin" "/usr/local/bin" "/usr/local/sbin" "/local/bin" "/local/freeware/bin" "/local/gnu/bin" "/usr/freeware/bin" "/usr/pkg/bin" "/usr/contrib/bin" "/opt/bin" "/opt/sbin" "/opt/local/bin"))
  tramp-get-remote-path((tramp-file-name "ssh" "dc" nil "kratos" nil "/data/org/roam/slips/z_locale.org" nil))
  tramp-get-remote-readlink((tramp-file-name "ssh" "dc" nil "kratos" nil "/data/org/roam/slips/z_locale.org" nil))
  tramp-sh-handle-file-truename("/ssh:dc@kratos:/data/org/roam/slips/z_locale.org")
  tramp-sh-file-name-handler(file-truename "/ssh:dc@kratos:/data/org/roam/slips/z_locale.org")
  apply(tramp-sh-file-name-handler file-truename "/ssh:dc@kratos:/data/org/roam/slips/z_locale.org")
  tramp-file-name-handler(file-truename "/ssh:dc@kratos:/data/org/roam/slips/z_locale.org")
  file-truename("/ssh:dc@kratos:/data/org/roam/slips/z_locale.org")
    file-name-handler-alist = (("\\(?:\\.tzst\\|\\.zst\\|\\.dz\\|\\.txz\\|\\.xz\\|\\.lzma\\|\\.lz..." . jka-compr-handler) ("\\.gpg\\(~\\|\\.~[0-9]+~\\)?\\'" . epa-file-handler) ("\\`\\(.+\\.\\(?:7z\\|CAB\\|LZH\\|MSU\\|ZIP\\|a\\(?:pk\\|r\\)\\|..." . tramp-archive-file-name-handler) ("\\`\\(?:\\)?/\\(?:\\(?:\\(-\\|[[:alnum:]]\\{2,\\}\\)\\(?::\\)\\..." . tramp-completion-file-name-handler) ("\\(?:^/\\)\\(\\(?:\\(?:\\(-\\|[[:alnum:]]\\{2,\\}\\)\\(?::\\)\\..." . tramp-file-name-handler) ("\\`/:" . file-name-non-special))
  org-id-update-id-locations(nil t)
  org-id-find("fecf9468-ffb8-4f9d-9816-b10568c5afe8")
  mapc(#f(compiled-function (--data) #<bytecode -0x1d67635d3928c9bf>) ((link (:type "id" :path "fecf9468-ffb8-4f9d-9816-b10568c5afe8" :format bracket :raw-link "id:fecf9468-ffb8-4f9d-9816-b10568c5afe8" :application nil :search-option nil :begin 1241 :end 1293 :contents-begin 1284 :contents-end 1291 :post-blank 0 :parent (paragraph (:begin 1241 :end 1294 :contents-begin 1241 :contents-end 1294 :post-blank 0 :post-affiliated 1241 :mode nil :granularity nil :parent (item (:bullet "+ " :begin 1239 :end 1294 :contents-begin 1241 :contents-end 1294 :checkbox nil :counter nil :structure ... :pre-blank 0 :post-blank 0 :post-affiliated 1239 :tag nil :mode item :granularity nil :parent ...) #29)) . #2)) #("Finance" 0 7 (:parent #3))) #("\n" 0 1 (:parent (paragraph (:begin 1241 :end 1294 :contents-begin 1241 :contents-end 1294 :post-blank 0 :post-affiliated 1241 :mode nil :granularity nil :parent (item (:bullet "+ " :begin 1239 :end 1294 :contents-begin 1241 :contents-end 1294 :checkbox nil :counter nil :structure ... :pre-blank 0 :post-blank 0 :post-affiliated 1239 :tag nil :mode item :granularity nil :parent ...) #7)) . #2)))))
  mapc(#f(compiled-function (--data) #<bytecode -0x1d67635d3928c9bf>) ((paragraph (:begin 1241 :end 1294 :contents-begin 1241 :contents-end 1294 :post-blank 0 :post-affiliated 1241 :mode nil :granularity nil :parent (item (:bullet "+ " :begin 1239 :end 1294 :contents-begin 1241 :contents-end 1294 :checkbox nil :counter nil :structure ((1239 0 "+ " nil nil nil 1294)) :pre-blank 0 :post-blank 0 :post-affiliated 1239 :tag nil :mode item :granularity nil :parent (plain-list (:type unordered :begin 1239 :end 1294 :contents-begin 1239 :contents-end 1294 :structure ... :post-blank 0 :post-affiliated 1239 :mode planning :granularity nil :parent ...) #23)) . #2)) (link (:type "id" :path "fecf9468-ffb8-4f9d-9816-b10568c5afe8" :format bracket :raw-link "id:fecf9468-ffb8-4f9d-9816-b10568c5afe8" :application nil :search-option nil :begin 1241 :end 1293 :contents-begin 1284 :contents-end 1291 :post-blank 0 :parent #3) #("Finance" 0 7 (:parent #6))) #("\n" 0 1 (:parent #3)))))
  mapc(#f(compiled-function (--data) #<bytecode -0x1d67635d3928c9bf>) ((item (:bullet "+ " :begin 1239 :end 1294 :contents-begin 1241 :contents-end 1294 :checkbox nil :counter nil :structure ((1239 0 "+ " nil nil nil 1294)) :pre-blank 0 :post-blank 0 :post-affiliated 1239 :tag nil :mode item :granularity nil :parent (plain-list (:type unordered :begin 1239 :end 1294 :contents-begin 1239 :contents-end 1294 :structure ((1239 0 "+ " nil nil nil 1294)) :post-blank 0 :post-affiliated 1239 :mode planning :granularity nil :parent (section (:begin 1239 :end 1294 :contents-begin 1239 :contents-end 1294 :robust-begin 1239 :robust-end 1292 :post-blank 0 :post-affiliated 1239 :mode section :granularity nil :parent ...) #35)) . #2)) (paragraph (:begin 1241 :end 1294 :contents-begin 1241 :contents-end 1294 :post-blank 0 :post-affiliated 1241 :mode nil :granularity nil :parent #3) (link (:type "id" :path "fecf9468-ffb8-4f9d-9816-b10568c5afe8" :format bracket :raw-link "id:fecf9468-ffb8-4f9d-9816-b10568c5afe8" :application nil :search-option nil :begin 1241 :end 1293 :contents-begin 1284 :contents-end 1291 :post-blank 0 :parent #6) #("Finance" 0 7 (:parent #9))) #("\n" 0 1 (:parent #6))))))
  mapc(#f(compiled-function (--data) #<bytecode -0x1d67635d3928c9bf>) ((plain-list (:type unordered :begin 1239 :end 1294 :contents-begin 1239 :contents-end 1294 :structure ((1239 0 "+ " nil nil nil 1294)) :post-blank 0 :post-affiliated 1239 :mode planning :granularity nil :parent (section (:begin 1239 :end 1294 :contents-begin 1239 :contents-end 1294 :robust-begin 1239 :robust-end 1292 :post-blank 0 :post-affiliated 1239 :mode section :granularity nil :parent (headline (:raw-value "Roam" :begin 1232 :end 1294 :pre-blank 0 :contents-begin 1239 :contents-end 1294 :robust-begin 1241 :robust-end 1292 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1232 :title ... :mode nil :granularity nil :parent ...) #27)) . #2)) (item (:bullet "+ " :begin 1239 :end 1294 :contents-begin 1241 :contents-end 1294 :checkbox nil :counter nil :structure ((1239 0 "+ " nil nil nil 1294)) :pre-blank 0 :post-blank 0 :post-affiliated 1239 :tag nil :mode item :granularity nil :parent #3) (paragraph (:begin 1241 :end 1294 :contents-begin 1241 :contents-end 1294 :post-blank 0 :post-affiliated 1241 :mode nil :granularity nil :parent #6) (link (:type "id" :path "fecf9468-ffb8-4f9d-9816-b10568c5afe8" :format bracket :raw-link "id:fecf9468-ffb8-4f9d-9816-b10568c5afe8" :application nil :search-option nil :begin 1241 :end 1293 :contents-begin 1284 :contents-end 1291 :post-blank 0 :parent #9) #("Finance" 0 7 (:parent #12))) #("\n" 0 1 (:parent #9)))))))
  mapc(#f(compiled-function (--data) #<bytecode -0x1d67635d3928c9bf>) ((section (:begin 1239 :end 1294 :contents-begin 1239 :contents-end 1294 :robust-begin 1239 :robust-end 1292 :post-blank 0 :post-affiliated 1239 :mode section :granularity nil :parent (headline (:raw-value "Roam" :begin 1232 :end 1294 :pre-blank 0 :contents-begin 1239 :contents-end 1294 :robust-begin 1241 :robust-end 1292 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1232 :title (#("Roam" 0 4 ...)) :mode nil :granularity nil :parent (org-data (:begin 1 :contents-begin 1 :contents-end 1294 :end 1294 :robust-begin 67 :robust-end 1292 :post-blank 0 :post-affiliated 1 :path "/data/org/roam/slips/20230814010203-finance-option..." :mode org-data :ID "cfc50259-b12d-45d2-8693-5dd505a03096" :CATEGORY "20230814010203-finance-option-pricing-and-volatili..." :granularity nil) (section ... ... ... ... ... ...) (headline ... ...) (headline ... ...) #27)) . #2)) (plain-list (:type unordered :begin 1239 :end 1294 :contents-begin 1239 :contents-end 1294 :structure ((1239 0 "+ " nil nil nil 1294)) :post-blank 0 :post-affiliated 1239 :mode planning :granularity nil :parent #3) (item (:bullet "+ " :begin 1239 :end 1294 :contents-begin 1241 :contents-end 1294 :checkbox nil :counter nil :structure ((1239 0 "+ " nil nil nil 1294)) :pre-blank 0 :post-blank 0 :post-affiliated 1239 :tag nil :mode item :granularity nil :parent #6) (paragraph (:begin 1241 :end 1294 :contents-begin 1241 :contents-end 1294 :post-blank 0 :post-affiliated 1241 :mode nil :granularity nil :parent #9) (link (:type "id" :path "fecf9468-ffb8-4f9d-9816-b10568c5afe8" :format bracket :raw-link "id:fecf9468-ffb8-4f9d-9816-b10568c5afe8" :application nil :search-option nil :begin 1241 :end 1293 :contents-begin 1284 :contents-end 1291 :post-blank 0 :parent #12) #("Finance" 0 7 ...)) #("\n" 0 1 (:parent #12))))))))
  mapc(#f(compiled-function (--data) #<bytecode -0x1d67635d3928c9bf>) ((section (:begin 1 :end 651 :contents-begin 1 :contents-end 649 :robust-begin 1 :robust-end 647 :post-blank 2 :post-affiliated 1 :mode first-section :granularity nil :parent (org-data (:begin 1 :contents-begin 1 :contents-end 1294 :end 1294 :robust-begin 67 :robust-end 1292 :post-blank 0 :post-affiliated 1 :path "/data/org/roam/slips/20230814010203-fi..." :mode org-data :ID "cfc50259-b12d-45d2-8693-5dd505a03096" :CATEGORY "20230814010203-finance-option-pricing-..." :granularity nil) . #2)) (keyword (:key "TITLE" :value "Finance: Option Pricing and Volatility..." :begin 68 :end 128 :post-blank 0 :post-affiliated 68 :mode nil :granularity nil :parent #3)) (keyword (:key "AUTHOR" :value "David Conner" :begin 128 :end 154 :post-blank 0 :post-affiliated 128 :mode nil :granularity nil :parent #3)) (keyword (:key "EMAIL" :value "aionfork@gmail.com" :begin 154 :end 186 :post-blank 0 :post-affiliated 154 :mode nil :granularity nil :parent #3)) (keyword (:key "DESCRIPTION" :value "notes" :begin 186 :end 209 :post-blank 2 :post-affiliated 186 :mode nil :granularity nil :parent #3)) (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 209 :end 649 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value ";; not quite what i want, but exactly ..." :post-blank 0 :post-affiliated 209 :mode nil :granularity nil :parent #3))) (headline (:raw-value "Resources" :begin 651 :end 1067 :pre-blank 1 :contents-begin 664 :contents-end 1065 :robust-begin 666 :robust-end 1063 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 651 :title (#("Resources" 0 9 ...)) ...) (headline (:raw-value "Quantpie Playlists" :begin 664 :end 1067 :pre-blank 1 :contents-begin 687 :contents-end 1065 :robust-begin 689 :robust-end 1063 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 664 :title (...) ...) (section (:begin 687 :end 1067 :contents-begin 687 :contents-end 1065 :robust-begin 687 :robust-end 1063 :post-blank 2 :post-affiliated 687 :mode section :granularity nil :parent #7) (plain-list ... ... ... ...)))) (headline (:raw-value "Volatility Surface" :begin 1067 :end 1232 :pre-blank 1 :contents-begin 1089 :contents-end 1231 :robust-begin 1091 :robust-end 1229 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1067 :title (#("Volatility Surface" 0 18 ...)) ...) (headline (:raw-value "Dupire's Local Volatility Model" :begin 1089 :end 1232 :pre-blank 1 :contents-begin 1125 :contents-end 1231 :robust-begin 1127 :robust-end 1229 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1089 :title (...) ...) (section (:begin 1125 :end 1232 :contents-begin 1125 :contents-end 1231 :robust-begin 1125 :robust-end 1229 :post-blank 1 :post-affiliated 1125 :mode section :granularity nil :parent #8) (paragraph ... ... ... ...)))) (headline (:raw-value "Roam" :begin 1232 :end 1294 :pre-blank 0 :contents-begin 1239 :contents-end 1294 :robust-begin 1241 :robust-end 1292 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1232 :title (#("Roam" 0 4 ...)) ...) (section (:begin 1239 :end 1294 :contents-begin 1239 :contents-end 1294 :robust-begin 1239 :robust-end 1292 :post-blank 0 :post-affiliated 1239 :mode section :granularity nil :parent #6) (plain-list (:type unordered :begin 1239 :end 1294 :contents-begin 1239 :contents-end 1294 :structure ... :post-blank 0 :post-affiliated 1239 :mode planning :granularity nil :parent #9) (item ... ...))))))
  org-element-map((org-data (:begin 1 :contents-begin 1 :contents-end 1294 :end 1294 :robust-begin 67 :robust-end 1292 :post-blank 0 :post-affiliated 1 :path "/data/org/roam/slips/20230814010203-finance-..." :mode org-data :ID "cfc50259-b12d-45d2-8693-5dd505a03096" :CATEGORY "20230814010203-finance-option-pricing-and-vo..." :granularity nil) (section (:begin 1 :end 651 :contents-begin 1 :contents-end 649 :robust-begin 1 :robust-end 647 :post-blank 2 :post-affiliated 1 :mode first-section :granularity nil :parent #1) (keyword (:key "TITLE" :value "Finance: Option Pricing and Volatility Surfa..." :begin 68 :end 128 :post-blank 0 :post-affiliated 68 :mode nil :granularity nil :parent #4)) (keyword (:key "AUTHOR" :value "David Conner" :begin 128 :end 154 :post-blank 0 :post-affiliated 128 :mode nil :granularity nil :parent #4)) (keyword (:key "EMAIL" :value "aionfork@gmail.com" :begin 154 :end 186 :post-blank 0 :post-affiliated 154 :mode nil :granularity nil :parent #4)) (keyword (:key "DESCRIPTION" :value "notes" :begin 186 :end 209 :post-blank 2 :post-affiliated 186 :mode nil :granularity nil :parent #4)) (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 209 :end 649 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value ";; not quite what i want, but exactly how tr..." :post-blank 0 :post-affiliated 209 :mode nil :granularity nil :parent #4))) (headline (:raw-value "Resources" :begin 651 :end 1067 :pre-blank 1 :contents-begin 664 :contents-end 1065 :robust-begin 666 :robust-end 1063 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 651 :title (#("Resources" 0 9 (:parent #5))) :mode nil :granularity nil :parent #1) (headline (:raw-value "Quantpie Playlists" :begin 664 :end 1067 :pre-blank 1 :contents-begin 687 :contents-end 1065 :robust-begin 689 :robust-end 1063 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 664 :title (#("Quantpie Playlists" 0 18 ...)) :mode section :granularity nil :parent #5) (section (:begin 687 :end 1067 :contents-begin 687 :contents-end 1065 :robust-begin 687 :robust-end 1063 :post-blank 2 :post-affiliated 687 :mode section :granularity nil :parent #8) (plain-list (:type unordered :begin 687 :end 1065 :contents-begin 687 :contents-end 1065 :structure ... :post-blank 0 :post-affiliated 687 :mode planning :granularity nil :parent #11) (item ... ...) (item ... ...) (item ... ...))))) (headline (:raw-value "Volatility Surface" :begin 1067 :end 1232 :pre-blank 1 :contents-begin 1089 :contents-end 1231 :robust-begin 1091 :robust-end 1229 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1067 :title (#("Volatility Surface" 0 18 (:parent #6))) :mode nil :granularity nil :parent #1) (headline (:raw-value "Dupire's Local Volatility Model" :begin 1089 :end 1232 :pre-blank 1 :contents-begin 1125 :contents-end 1231 :robust-begin 1127 :robust-end 1229 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1089 :title (#("Dupire's Local Volatility Model" 0 31 ...)) :mode section :granularity nil :parent #6) (section (:begin 1125 :end 1232 :contents-begin 1125 :contents-end 1231 :robust-begin 1125 :robust-end 1229 :post-blank 1 :post-affiliated 1125 :mode section :granularity nil :parent #9) (paragraph (:begin 1125 :end 1231 :contents-begin 1125 :contents-end 1231 :post-blank 0 :post-affiliated 1125 :mode planning :granularity nil :parent #12) #("Modifies the Black-Scholes assumption that v..." 0 90 ...) (latex-fragment ...) #("\n" 0 1 ...))))) (headline (:raw-value "Roam" :begin 1232 :end 1294 :pre-blank 0 :contents-begin 1239 :contents-end 1294 :robust-begin 1241 :robust-end 1292 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1232 :title (#("Roam" 0 4 (:parent #7))) :mode nil :granularity nil :parent #1) (section (:begin 1239 :end 1294 :contents-begin 1239 :contents-end 1294 :robust-begin 1239 :robust-end 1292 :post-blank 0 :post-affiliated 1239 :mode section :granularity nil :parent #7) (plain-list (:type unordered :begin 1239 :end 1294 :contents-begin 1239 :contents-end 1294 :structure (...) :post-blank 0 :post-affiliated 1239 :mode planning :granularity nil :parent #10) (item (:bullet "+ " :begin 1239 :end 1294 :contents-begin 1241 :contents-end 1294 :checkbox nil :counter nil :structure ... :pre-blank 0 :post-blank 0 :post-affiliated 1239 :tag nil :mode item :granularity nil :parent #13) (paragraph ... ... ...)))))) link #<subr F616e6f6e796d6f75732d6c616d626461_anonymous_lambda_69>)
  org-export--collect-tree-properties((org-data (:begin 1 :contents-begin 1 :contents-end 1294 :end 1294 :robust-begin 67 :robust-end 1292 :post-blank 0 :post-affiliated 1 :path "/data/org/roam/slips/20230..." :mode org-data :ID "cfc50259-b12d-45d2-8693-5d..." :CATEGORY "20230814010203-finance-opt..." :granularity nil) (section (:begin 1 :end 651 :contents-begin 1 :contents-end 649 :robust-begin 1 :robust-end 647 :post-blank 2 :post-affiliated 1 :mode first-section :granularity nil :parent #1) (keyword ...) (keyword ...) (keyword ...) (keyword ...) (src-block ...)) (headline (:raw-value "Resources" :begin 651 :end 1067 :pre-blank 1 :contents-begin 664 :contents-end 1065 :robust-begin 666 :robust-end 1063 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil ...) (headline ... ...)) (headline (:raw-value "Volatility Surface" :begin 1067 :end 1232 :pre-blank 1 :contents-begin 1089 :contents-end 1231 :robust-begin 1091 :robust-end 1229 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil ...) (headline ... ...)) (headline (:raw-value "Roam" :begin 1232 :end 1294 :pre-blank 0 :contents-begin 1239 :contents-end 1294 :robust-begin 1241 :robust-end 1292 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil ...) (section ... ...))) (:export-options nil :back-end #s(org-export-backend :name html :parent nil :transcoders (... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ...) :options (... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ...) :filters (... ... ...) :blocks nil :menu (104 "Export to HTML" ...)) :translate-alist ((bold . org-html-bold) (center-block . org-html-center-block) (clock . org-html-clock) (code . org-html-code) (drawer . org-html-drawer) (dynamic-block . org-html-dynamic-block) (entity . org-html-entity) (example-block . org-html-example-block) (export-block . org-html-export-block) (export-snippet . org-html-export-snippet) (fixed-width . org-html-fixed-width) (footnote-reference . org-html-footnote-reference) (headline . org-html-headline) (horizontal-rule . org-html-horizontal-rule) (inline-src-block . org-html-inline-src-block) (inlinetask . org-html-inlinetask) (inner-template . org-html-inner-template) (italic . org-html-italic) (item . org-html-item) (keyword . org-html-keyword) (latex-environment . org-html-latex-environment) (latex-fragment . org-html-latex-fragment) (line-break . org-html-line-break) (link . org-html-link) (node-property . org-html-node-property) (paragraph . org-html-paragraph) ...) :exported-data #<hash-table eq 0/4001 0x6c971a1> :input-buffer "20230814010203-finance-opt..." :input-file "/data/org/roam/slips/20230..." :html-doctype "xhtml-strict" :html-container "div" :html-content-class "content" :description "notes" :keywords nil :html-html5-fancy nil :html-link-use-abs-url nil ...))
  org-export-as(html nil nil nil (:output-file "20230814010203-finance-option-pricing-and-volatili..."))
  org-export-to-file(html "20230814010203-finance-option-pricing-and-volatili..." nil nil nil nil nil)
  org-html-export-to-html(nil nil nil nil)
  funcall(org-html-export-to-html nil nil nil nil)
  (save-excursion (if arg (progn (if (eq (marker-buffer org-export-dispatch-last-position) (org-base-buffer (current-buffer))) (goto-char org-export-dispatch-last-position) (move-marker org-export-dispatch-last-position nil)))) (funcall action (and (memq 'async optns) t) (and (memq 'subtree optns) t) (and (memq 'visible optns) t) (and (memq 'body optns) t)))
  (cond ((eql temp 'template) (org-export-insert-default-template nil optns)) ((eql temp 'stack) (org-export-stack)) ((eql temp 'publish-current-file) (org-publish-current-file (memq 'force optns) (memq 'async optns))) ((eql temp 'publish-current-project) (org-publish-current-project (memq 'force optns) (memq 'async optns))) ((eql temp 'publish-choose-project) (org-publish (assoc (completing-read "Publish project: " org-publish-project-alist nil t) org-publish-project-alist) (memq 'force optns) (memq 'async optns))) ((eql temp 'publish-all) (org-publish-all (memq 'force optns) (memq 'async optns))) (t (save-excursion (if arg (progn (if (eq (marker-buffer org-export-dispatch-last-position) (org-base-buffer ...)) (goto-char org-export-dispatch-last-position) (move-marker org-export-dispatch-last-position nil)))) (funcall action (and (memq 'async optns) t) (and (memq 'subtree optns) t) (and (memq 'visible optns) t) (and (memq 'body optns) t)))))
  (let* ((temp action)) (cond ((eql temp 'template) (org-export-insert-default-template nil optns)) ((eql temp 'stack) (org-export-stack)) ((eql temp 'publish-current-file) (org-publish-current-file (memq 'force optns) (memq 'async optns))) ((eql temp 'publish-current-project) (org-publish-current-project (memq 'force optns) (memq 'async optns))) ((eql temp 'publish-choose-project) (org-publish (assoc (completing-read "Publish project: " org-publish-project-alist nil t) org-publish-project-alist) (memq 'force optns) (memq 'async optns))) ((eql temp 'publish-all) (org-publish-all (memq 'force optns) (memq 'async optns))) (t (save-excursion (if arg (progn (if (eq ... ...) (goto-char org-export-dispatch-last-position) (move-marker org-export-dispatch-last-position nil)))) (funcall action (and (memq 'async optns) t) (and (memq 'subtree optns) t) (and (memq 'visible optns) t) (and (memq 'body optns) t))))))
  (let* ((input (cond ((equal arg '(16)) '(stack)) ((and arg org-export-dispatch-last-action)) (t (let ((wconfig ...)) (unwind-protect (progn ...) (set-window-configuration wconfig)))))) (action (car input)) (optns (cdr input))) (if (memq 'subtree optns) nil (move-marker org-export-dispatch-last-position nil)) (let* ((temp action)) (cond ((eql temp 'template) (org-export-insert-default-template nil optns)) ((eql temp 'stack) (org-export-stack)) ((eql temp 'publish-current-file) (org-publish-current-file (memq 'force optns) (memq 'async optns))) ((eql temp 'publish-current-project) (org-publish-current-project (memq 'force optns) (memq 'async optns))) ((eql temp 'publish-choose-project) (org-publish (assoc (completing-read "Publish project: " org-publish-project-alist nil t) org-publish-project-alist) (memq 'force optns) (memq 'async optns))) ((eql temp 'publish-all) (org-publish-all (memq 'force optns) (memq 'async optns))) (t (save-excursion (if arg (progn (if ... ... ...))) (funcall action (and (memq ... optns) t) (and (memq ... optns) t) (and (memq ... optns) t) (and (memq ... optns) t)))))))
  org-export-dispatch(nil)
  funcall-interactively(org-export-dispatch nil)
  command-execute(org-export-dispatch)

#+end_example
