:PROPERTIES:
:ID:       3c34d629-eee0-4cf7-b973-6c345c23e3cf
:END:
#+TITLE: Forensics: log2timeline, plaso and dfVFS
#+CATEGORY: slips
#+TAGS:

* Roam
+ [[id:45b0ba21-fb20-44dc-9ee9-c4fed32aba9c][Forensics]]
+ [[id:29d8222b-618f-454e-8a76-6fa38f8ff1f6][Blue Team]]
+ [[id:d7cc15ac-db8c-4eff-9a1e-f6de0eefe638][File Systems]]
+ [[id:b4c096ee-6e40-4f34-85a1-7fc901e819f5][Python]]

* Docs
** [[github:log2timeline/plaso][log2timeline/plaso]]
+ [[https://plaso.readthedocs.io/en/latest/sources/developer/Developers-Guide.html][Dev Guide]]
+ [[https://plaso.readthedocs.io/en/latest/sources/user/index.html][User Guide]]

Plaso uses dfVFS
** [[github:log2timeline/dfVFS][log2timeline/dfVFS]]
+ [[https://dfvfs.readthedocs.io/en/latest/sources/Path-specifications.html][Path Specifications]]
+ [[https://dfvfs.readthedocs.io/en/latest/sources/Supported-formats.html#][Supported Formats]]

* Resources


* Unified Paths

dfVFS unifies paths across:

+ Applications (like file-blobs in SQLite or in its application-native form)
+ File Systems (path as it's seen by a host)
+ Hosts/VMs (distinguishing a file system from it's location)

The [[https://dfvfs.readthedocs.io/en/latest/sources/Code-snippets.html][example tasks in these snippets]] demonstrates a python program that's able to
specify bits of data from OS paths, QCOW images, etc.

A program could analyze disks from multiple VM's that contain a SQLite database
of some schema (containing [[https://dfvfs.readthedocs.io/en/latest/sources/Path-specifications.html#the-sqlite-blob-file-type][SQLite blob files]], it only provides these). You
could:

+ Pull the SQLite file from each VM's PathSpec, then query these
+ and/or you could add a "SQLite dfVFS PathSpec" that provides URI's for
  file-blobs inside the database
