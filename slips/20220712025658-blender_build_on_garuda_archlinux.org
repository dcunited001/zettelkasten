:PROPERTIES:
:ID:       ca4b43cc-90fb-4434-9bca-5d43e28b00ae
:END:
#+TITLE: blender: build on garuda archlinux
#+CATEGORY: slips
#+TAGS:


+ [[id:b3826464-5132-4a77-9707-93a72bd1d4a3][Blender]]
+ [[id:fbf366f2-5c17-482b-ac7d-6dd130aa4d05][Arch]]
+ [[id:bdae77b1-d9f0-4d3a-a2fb-2ecdab5fd531][Linux]]

* Resources

+ [[https://www.reddit.com/r/archlinux/comments/u9pto2/setup_an_amd_gpu_for_daily_usage/][Set-up an AMD GPU for daily usage (Graphics,Gaming,Compute,etc) in Arch]]
  - covers all the differences between amd's drivers for vulkan/opengl/mesa
+ [[https://forum.blackmagicdesign.com/viewtopic.php?f=21&t=56878&hilit=amdgpu+pro&start=1850][setting up Davinci Resolve in arch]]
  - because no one can be bothered to properly support archlinux
  - like, honestly, why bother saying you support linux if you can't be bothered
    to properly set up some goddamn package & repository. like for arch. Deb &
    RPM ... woo hoo! wow. <applause/>
    - do these companies even want linux users to use their software?
    - seriously. you're all either fortune 500 or bragging about your about
      "fortune 100" companies. can you fucking put up a goddamn arch linux
      package?
    - i'm mad because setting up some packages should take one of your engineers
      like half a day. i know how to fucking use a computer, but people who have
      no idea what to do with one can run software to shoot zombies in fucking
      call of duty, but i can't fucking ever get around to dealing with your
      shit.
    - i could be running the Matlab examples from my [[https://www.elsevier.com/books-and-journals/book-companion/9780128240250][Orbital Dynamics]] textbook
      right now ... but no. i can't rotate my goddamn graphs in matlab because
      it's so fucking slow.


  
* Installing OpenCL

Disable Chaotic Aur in =/etc/pacman.conf= then

** Installing
Then backup package list with =pacman -Q | cut -f1 -d' ' > garuda/pre-opencl.pax=

#+begin_src sh :eval no
yay -Q | cut -f1 -d' ' > garuda/pre-opencl.pax
#+end_src

Install/build the =amdgpu-pro= drivers:

#+begin_src sh :eval no
yay -Syu amdgpu-pro-libgl  lib32-amdgpu-pro-libgl vulkan-amdgpu-pro lib32-vulkan-amdgpu-pro amf-amdgpu-pro
#+end_src

Install/build the =opencl-amd= packages:

#+begin_src sh :eval no
yay -Syu opencl-amd
#+end_src

Generate another package list:

#+begin_src sh :eval no
yay -Q | cut -f1 -d' ' > garuda/post-opencl.pax
#+end_src

** Preventing package updates

Diffing the packages lists should show:

#+begin_src sh :eval no
18a19,20
> amdgpu-pro-libgl
> amf-amdgpu-pro
590a593
> lib32-amdgpu-pro-libgl
772a776
> lib32-vulkan-amdgpu-pro
1202a1207
> ncurses5-compat-libs
1247a1253
> opencl-amd
1808a1815
> vulkan-amdgpu-pro
#+end_src

To prevent updates from chaotic aur when re-enabled, Mark the packages as "do not upgrade":

#+begin_src sh :eval no
IgnorePkg   = amdgpu-pro-libgl lib32-amdgpu-pro-libgl vulkan-amdgpu-pro lib32-vulkan-amdgpu-pro amf-amdgpu-proopencl-amd
#+end_src

** Verify that OpenCL is properly Available

Opening =gpu-viewer= at this point should show =Advanced Micro Devices, Inc.= under OpenCL, not =AMD=.

Running =clinfo -l= should show that your device is available for OpenCL

** Install Blender

Ensure that =makepkg.conf= has the following reasonable =MAKEFLAGS= . I could push this up further. Blender builds in about 5 minutes for me, but I'm not pinning my CPU's

#+begin_src sh :eval no
MAKEFLAGS="-j14"
#+end_src

Install =blender-git= review the dependencies and

Add the following to =IgnorePkg= to prevent blender from being wiped:

+ blender-git
+ blender-addons
+ blender-addons-contrib
+ blender-translations
+ blender-dev-tools

* Install Tensorflow

** Resolving Package Conflicts

Of course now that you have blender-git, openblas will immediate conflict and
pacman will refuse to allow you to install =libopenblas= in its place. Nothing
in Julia will install because you don't have =libopenblas64.so=.

Of course, if you were on Guix and if it didn't have the 64b limitations, then
you could just handle everything inside its own profile ... but because neither
Debian, RPM nor Pacman have a "profile" feature, then you can't have nice
things. Instead, every other fucking package you try to install will conflict
and you'll need to reconfigure your entire fucking system.

*** Remove almost everything useful

Don't worry, you'll get it back ... probably. It depends on whether pacman/yay
will actually honor the "provides" like it should already be doing. But that's
nothing here nor there.

#+begin_src sh :eval no
# you'll definitely need to temporarily remove these from IgnorePkg
yay -Rns openblas cblas julia lapack python-numpy opencv blender-git displaycal python-matplotlib python-scipy
#+end_src

*** Readd useful packages one by one

#+begin_src sh :eval no

yay -Syu libopenblas
yay -Syu opencblas
yay -Syu lapack
#+end_src

** Avoiding conflicts with Tensorflow

Run =pacman -Syu python-pipenv=

Navigate to a project where you'd like an isolated python environment.
