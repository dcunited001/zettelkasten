:PROPERTIES:
:ID:       81db78e3-dbc8-4913-a76d-482857bede52
:END:
#+TITLE: Nix Home Manager: Packaging Dmenu and Wofi Scripts
#+CATEGORY: slips
#+TAGS:

* Roam
+ [[id:bc406527-0255-4d70-b620-82495ac5c8fe][Hyprland]]
+ [[id:2049060e-6755-4a64-b295-F7B563B41505][NixOS]]
+ [[id:f92bb944-0269-47d4-b07c-2bd683e936f2][Wayland]]

* Docs

* Resources

* Topics

** Examples

*** anltherhadi/nixy :NIX:HYPR:TEXT:PKG:WOFI:
+ [[https://github.com/anotherhadi/nixy/blob/d9b4ef27669094df7b167151b60342c72949739b/home/system/clipman/default.nix#L8][./home/system/clipman/default.nix#L8]]
+ [[https://github.com/anotherhadi/nixy/blob/d9b4ef27669094df7b167151b60342c72949739b/home/scripts/system/default.nix#L5][./home/scripts/system/default.nix#L5]]

*** tobiaspc/wofi-scripts :SWAY:WIN:
https://github.com/tobiaspc/wofi-scripts
** Quickshell

** Nix Simple Stuff

See [[https://github.com/NixOS/nixpkgs/blob/master/doc/build-helpers/trivial-build-helpers.chapter.md][Trivial Build Helpers]]

*** Writing Content

Increasing complexity =->= ... though refs/closure is more complex

| writeText     | writeScript    | writeShellScript      | writeDirectReferencesToFile |
| writeTextDir  | writeScriptBin | writeShellScriptBin   | writeClosure                |
| writeTextFile |                | writeShellApplication |                             |

+ writeScript{,Bin} :: soft =#!/usr/bin/env shebang= or to a profile link
+ writeShellScript{,Bin} :: hard =#!/shebang= into =/nix/store=
+ writeShellApplication :: checks dependencies and bundles paths
  - runs =shellcheck=, supports =runtimeInputs=
  - bashOptions :: override defaults: =errexit=, =nounset=, =pipefail=
+ The =Bin= variants are automatically placed into =./bin=.

** Walker

*** Tweaks

**** Socket/Service

This isn't quite right (or something's wrong with my systemd
environment/targets). I think I need to check again, but it doesn't
automatically pick up on =uwsm=

#+begin_src nix

systemd.user.services.elephant = lib.mkIf elephantSystemD {
  unitConfig = {
    Description = "Elephant Launcher and Indexer Service";
    Documentation = "https://github.com/abenz1257/elephant";
    Requires = [ "sockets.target" ];
    After = [ "graphical-session.target" ];
    PartOf = [ "graphical-session.target" ];
    ConditionEnvironment = "WAYLAND_DISPLAY";
  };
  serviceConfig = {
    ExecStart = "${elephantPkg}/bin/elephant"; # "${lib.optionalString elephantCfg.debug "--debug"}";
    # ExecReload = "${elephantCfg.package}/bin/elephant ${}";

    Restart = "on-failure";
    RestartSec = 5;
  };
};

systemd.user.sockets.elephant = lib.mkIf elephantSystemD {
  unitConfig = {
    Description = "Elephant Launcher and Indexer Socket";
    Documentation = "https://github.com/abenz1257/elephant";
  };
  socketConfig = {
    # l, err := net.ListenUnix("unix", &net.UnixAddr{ ... }; # SOCK_STREAM =~ "unix"
    #
    # https://github.com/abenz1267/elephant/blob/master/internal/comm/comm.go#L41
    ListenStream = "%t/elephant/elephant.sock";
    SocketMode = "0600";
    Service = "elephant.service"; # redundant

    # elephant will otherwise creates dir (& socket) with 755
    DirectoryMode = "0700";
  };
  wantedBy = [ "sockets.target" ];
};

#+end_src

#+RESULTS:
