:PROPERTIES:
:ID:       38d0b5bb-ec7b-4fac-ae15-049071ea4108
:END:
#+TITLE: Gitforge: Querying Github GraphQL API
#+CATEGORY: slips
#+TAGS:
* Roam
+ [[id:8d789c98-5e74-4bf8-9226-52fb43c5ca51][Gitforge]]
+ [[id:8fb0a586-9c0f-4f36-b1ab-dc5c26681d15][Open Source]]

* Docs

See [[https://github.com/magit/ghub/blob/main/lisp/ghub-graphql.el][ghub-graphql.el]] in [[https://github.com/magit/ghub][magit/ghub]] for API, particularly the queries defined as
=defconstant= like =ghub-fetch-repository= and the matching =cl-defun=.

* Querying repositories

#+begin_src emacs-lisp
(graphql-query
 (myField1 myField2 (myEdges (edges (node myField3)))))
#+end_src

#+RESULTS:
: query{__schema{types{name{kind description fields{name}}}}}

* Querying Schema

Okay jebus it's 11,500 lines long (and in my kill-ring)

** Types




** Full Schema

#+name: github-schema
#+begin_src emacs-lisp :results value code
(ghub-graphql
 (graphql-query ((__schema (types name kind description (fields (name)))))))
#+end_src

#+RESULTS: github-schema
#+begin_src emacs-lisp
((data
  (__schema
   (types
    ((name . "AbortQueuedMigrationsInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of AbortQueuedMigrations")
     (fields))
    ((name . "AbortQueuedMigrationsPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of AbortQueuedMigrations")
     (fields
      ((name . "clientMutationId"))
      ((name . "success"))))
    ((name . "AcceptEnterpriseAdministratorInvitationInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of AcceptEnterpriseAdministratorInvitation")
     (fields))
    ((name . "AcceptEnterpriseAdministratorInvitationPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of AcceptEnterpriseAdministratorInvitation")
     (fields
      ((name . "clientMutationId"))
      ((name . "invitation"))
      ((name . "message"))))
    ((name . "AcceptTopicSuggestionInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of AcceptTopicSuggestion")
     (fields))
    ((name . "AcceptTopicSuggestionPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of AcceptTopicSuggestion")
     (fields
      ((name . "clientMutationId"))
      ((name . "topic"))))
    ((name . "Actor")
     (kind . "INTERFACE")
     (description . "Represents an object which can take actions on GitHub. Typically a User or Bot.")
     (fields
      ((name . "avatarUrl"))
      ((name . "login"))
      ((name . "resourcePath"))
      ((name . "url"))))
    ((name . "ActorLocation")
     (kind . "OBJECT")
     (description . "Location information for an actor")
     (fields
      ((name . "city"))
      ((name . "country"))
      ((name . "countryCode"))
      ((name . "region"))
      ((name . "regionCode"))))
    ((name . "ActorType")
     (kind . "ENUM")
     (description . "The actor's type.")
     (fields))
    ((name . "AddAssigneesToAssignableInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of AddAssigneesToAssignable")
     (fields))
    ((name . "AddAssigneesToAssignablePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of AddAssigneesToAssignable")
     (fields
      ((name . "assignable"))
      ((name . "clientMutationId"))))
    ((name . "AddCommentInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of AddComment")
     (fields))
    ((name . "AddCommentPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of AddComment")
     (fields
      ((name . "clientMutationId"))
      ((name . "commentEdge"))
      ((name . "subject"))
      ((name . "timelineEdge"))))
    ((name . "AddDiscussionCommentInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of AddDiscussionComment")
     (fields))
    ((name . "AddDiscussionCommentPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of AddDiscussionComment")
     (fields
      ((name . "clientMutationId"))
      ((name . "comment"))))
    ((name . "AddDiscussionPollVoteInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of AddDiscussionPollVote")
     (fields))
    ((name . "AddDiscussionPollVotePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of AddDiscussionPollVote")
     (fields
      ((name . "clientMutationId"))
      ((name . "pollOption"))))
    ((name . "AddEnterpriseOrganizationMemberInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of AddEnterpriseOrganizationMember")
     (fields))
    ((name . "AddEnterpriseOrganizationMemberPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of AddEnterpriseOrganizationMember")
     (fields
      ((name . "clientMutationId"))
      ((name . "users"))))
    ((name . "AddEnterpriseSupportEntitlementInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of AddEnterpriseSupportEntitlement")
     (fields))
    ((name . "AddEnterpriseSupportEntitlementPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of AddEnterpriseSupportEntitlement")
     (fields
      ((name . "clientMutationId"))
      ((name . "message"))))
    ((name . "AddLabelsToLabelableInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of AddLabelsToLabelable")
     (fields))
    ((name . "AddLabelsToLabelablePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of AddLabelsToLabelable")
     (fields
      ((name . "clientMutationId"))
      ((name . "labelable"))))
    ((name . "AddProjectCardInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of AddProjectCard")
     (fields))
    ((name . "AddProjectCardPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of AddProjectCard")
     (fields
      ((name . "cardEdge"))
      ((name . "clientMutationId"))
      ((name . "projectColumn"))))
    ((name . "AddProjectColumnInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of AddProjectColumn")
     (fields))
    ((name . "AddProjectColumnPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of AddProjectColumn")
     (fields
      ((name . "clientMutationId"))
      ((name . "columnEdge"))
      ((name . "project"))))
    ((name . "AddProjectV2DraftIssueInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of AddProjectV2DraftIssue")
     (fields))
    ((name . "AddProjectV2DraftIssuePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of AddProjectV2DraftIssue")
     (fields
      ((name . "clientMutationId"))
      ((name . "projectItem"))))
    ((name . "AddProjectV2ItemByIdInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of AddProjectV2ItemById")
     (fields))
    ((name . "AddProjectV2ItemByIdPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of AddProjectV2ItemById")
     (fields
      ((name . "clientMutationId"))
      ((name . "item"))))
    ((name . "AddPullRequestReviewCommentInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of AddPullRequestReviewComment")
     (fields))
    ((name . "AddPullRequestReviewCommentPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of AddPullRequestReviewComment")
     (fields
      ((name . "clientMutationId"))
      ((name . "comment"))
      ((name . "commentEdge"))))
    ((name . "AddPullRequestReviewInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of AddPullRequestReview")
     (fields))
    ((name . "AddPullRequestReviewPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of AddPullRequestReview")
     (fields
      ((name . "clientMutationId"))
      ((name . "pullRequestReview"))
      ((name . "reviewEdge"))))
    ((name . "AddPullRequestReviewThreadInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of AddPullRequestReviewThread")
     (fields))
    ((name . "AddPullRequestReviewThreadPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of AddPullRequestReviewThread")
     (fields
      ((name . "clientMutationId"))
      ((name . "thread"))))
    ((name . "AddReactionInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of AddReaction")
     (fields))
    ((name . "AddReactionPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of AddReaction")
     (fields
      ((name . "clientMutationId"))
      ((name . "reaction"))
      ((name . "reactionGroups"))
      ((name . "subject"))))
    ((name . "AddStarInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of AddStar")
     (fields))
    ((name . "AddStarPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of AddStar")
     (fields
      ((name . "clientMutationId"))
      ((name . "starrable"))))
    ((name . "AddUpvoteInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of AddUpvote")
     (fields))
    ((name . "AddUpvotePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of AddUpvote")
     (fields
      ((name . "clientMutationId"))
      ((name . "subject"))))
    ((name . "AddVerifiableDomainInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of AddVerifiableDomain")
     (fields))
    ((name . "AddVerifiableDomainPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of AddVerifiableDomain")
     (fields
      ((name . "clientMutationId"))
      ((name . "domain"))))
    ((name . "AddedToMergeQueueEvent")
     (kind . "OBJECT")
     (description . "Represents an 'added_to_merge_queue' event on a given pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "enqueuer"))
      ((name . "id"))
      ((name . "mergeQueue"))
      ((name . "pullRequest"))))
    ((name . "AddedToProjectEvent")
     (kind . "OBJECT")
     (description . "Represents a 'added_to_project' event on a given issue or pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "databaseId"))
      ((name . "id"))))
    ((name . "AnnouncementBanner")
     (kind . "INTERFACE")
     (description . "Represents an announcement banner.")
     (fields
      ((name . "announcement"))
      ((name . "announcementExpiresAt"))
      ((name . "announcementUserDismissible"))))
    ((name . "App")
     (kind . "OBJECT")
     (description . "A GitHub App.")
     (fields
      ((name . "createdAt"))
      ((name . "databaseId"))
      ((name . "description"))
      ((name . "id"))
      ((name . "ipAllowListEntries"))
      ((name . "logoBackgroundColor"))
      ((name . "logoUrl"))
      ((name . "name"))
      ((name . "slug"))
      ((name . "updatedAt"))
      ((name . "url"))))
    ((name . "ApproveDeploymentsInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of ApproveDeployments")
     (fields))
    ((name . "ApproveDeploymentsPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of ApproveDeployments")
     (fields
      ((name . "clientMutationId"))
      ((name . "deployments"))))
    ((name . "ApproveVerifiableDomainInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of ApproveVerifiableDomain")
     (fields))
    ((name . "ApproveVerifiableDomainPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of ApproveVerifiableDomain")
     (fields
      ((name . "clientMutationId"))
      ((name . "domain"))))
    ((name . "ArchiveProjectV2ItemInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of ArchiveProjectV2Item")
     (fields))
    ((name . "ArchiveProjectV2ItemPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of ArchiveProjectV2Item")
     (fields
      ((name . "clientMutationId"))
      ((name . "item"))))
    ((name . "ArchiveRepositoryInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of ArchiveRepository")
     (fields))
    ((name . "ArchiveRepositoryPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of ArchiveRepository")
     (fields
      ((name . "clientMutationId"))
      ((name . "repository"))))
    ((name . "Assignable")
     (kind . "INTERFACE")
     (description . "An object that can have users assigned to it.")
     (fields
      ((name . "assignees"))))
    ((name . "AssignedEvent")
     (kind . "OBJECT")
     (description . "Represents an 'assigned' event on any assignable object.")
     (fields
      ((name . "actor"))
      ((name . "assignable"))
      ((name . "assignee"))
      ((name . "createdAt"))
      ((name . "id"))))
    ((name . "Assignee")
     (kind . "UNION")
     (description . "Types that can be assigned to issues.")
     (fields))
    ((name . "AuditEntry")
     (kind . "INTERFACE")
     (description . "An entry in the audit log.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "operationType"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "AuditEntryActor")
     (kind . "UNION")
     (description . "Types that can initiate an audit log event.")
     (fields))
    ((name . "AuditLogOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for Audit Log connections.")
     (fields))
    ((name . "AuditLogOrderField")
     (kind . "ENUM")
     (description . "Properties by which Audit Log connections can be ordered.")
     (fields))
    ((name . "AutoMergeDisabledEvent")
     (kind . "OBJECT")
     (description . "Represents a 'auto_merge_disabled' event on a given pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "disabler"))
      ((name . "id"))
      ((name . "pullRequest"))
      ((name . "reason"))
      ((name . "reasonCode"))))
    ((name . "AutoMergeEnabledEvent")
     (kind . "OBJECT")
     (description . "Represents a 'auto_merge_enabled' event on a given pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "enabler"))
      ((name . "id"))
      ((name . "pullRequest"))))
    ((name . "AutoMergeRequest")
     (kind . "OBJECT")
     (description . "Represents an auto-merge request for a pull request")
     (fields
      ((name . "authorEmail"))
      ((name . "commitBody"))
      ((name . "commitHeadline"))
      ((name . "enabledAt"))
      ((name . "enabledBy"))
      ((name . "mergeMethod"))
      ((name . "pullRequest"))))
    ((name . "AutoRebaseEnabledEvent")
     (kind . "OBJECT")
     (description . "Represents a 'auto_rebase_enabled' event on a given pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "enabler"))
      ((name . "id"))
      ((name . "pullRequest"))))
    ((name . "AutoSquashEnabledEvent")
     (kind . "OBJECT")
     (description . "Represents a 'auto_squash_enabled' event on a given pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "enabler"))
      ((name . "id"))
      ((name . "pullRequest"))))
    ((name . "AutomaticBaseChangeFailedEvent")
     (kind . "OBJECT")
     (description . "Represents a 'automatic_base_change_failed' event on a given pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "newBase"))
      ((name . "oldBase"))
      ((name . "pullRequest"))))
    ((name . "AutomaticBaseChangeSucceededEvent")
     (kind . "OBJECT")
     (description . "Represents a 'automatic_base_change_succeeded' event on a given pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "newBase"))
      ((name . "oldBase"))
      ((name . "pullRequest"))))
    ((name . "Base64String")
     (kind . "SCALAR")
     (description . "A (potentially binary) string encoded using base64.")
     (fields))
    ((name . "BaseRefChangedEvent")
     (kind . "OBJECT")
     (description . "Represents a 'base_ref_changed' event on a given issue or pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "currentRefName"))
      ((name . "databaseId"))
      ((name . "id"))
      ((name . "previousRefName"))
      ((name . "pullRequest"))))
    ((name . "BaseRefDeletedEvent")
     (kind . "OBJECT")
     (description . "Represents a 'base_ref_deleted' event on a given pull request.")
     (fields
      ((name . "actor"))
      ((name . "baseRefName"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "pullRequest"))))
    ((name . "BaseRefForcePushedEvent")
     (kind . "OBJECT")
     (description . "Represents a 'base_ref_force_pushed' event on a given pull request.")
     (fields
      ((name . "actor"))
      ((name . "afterCommit"))
      ((name . "beforeCommit"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "pullRequest"))
      ((name . "ref"))))
    ((name . "BigInt")
     (kind . "SCALAR")
     (description . "Represents non-fractional signed whole numeric values. Since the value may exceed the size of a 32-bit integer, it's encoded as a string.")
     (fields))
    ((name . "Blame")
     (kind . "OBJECT")
     (description . "Represents a Git blame.")
     (fields
      ((name . "ranges"))))
    ((name . "BlameRange")
     (kind . "OBJECT")
     (description . "Represents a range of information from a Git blame.")
     (fields
      ((name . "age"))
      ((name . "commit"))
      ((name . "endingLine"))
      ((name . "startingLine"))))
    ((name . "Blob")
     (kind . "OBJECT")
     (description . "Represents a Git blob.")
     (fields
      ((name . "abbreviatedOid"))
      ((name . "byteSize"))
      ((name . "commitResourcePath"))
      ((name . "commitUrl"))
      ((name . "id"))
      ((name . "isBinary"))
      ((name . "isTruncated"))
      ((name . "oid"))
      ((name . "repository"))
      ((name . "text"))))
    ((name . "Boolean")
     (kind . "SCALAR")
     (description . "Represents `true` or `false` values.")
     (fields))
    ((name . "Bot")
     (kind . "OBJECT")
     (description . "A special type of user which takes actions on behalf of GitHub Apps.")
     (fields
      ((name . "avatarUrl"))
      ((name . "createdAt"))
      ((name . "databaseId"))
      ((name . "id"))
      ((name . "login"))
      ((name . "resourcePath"))
      ((name . "updatedAt"))
      ((name . "url"))))
    ((name . "BranchActorAllowanceActor")
     (kind . "UNION")
     (description . "Types which can be actors for `BranchActorAllowance` objects.")
     (fields))
    ((name . "BranchNamePatternParameters")
     (kind . "OBJECT")
     (description . "Parameters to be used for the branch_name_pattern rule")
     (fields
      ((name . "name"))
      ((name . "negate"))
      ((name . "operator"))
      ((name . "pattern"))))
    ((name . "BranchNamePatternParametersInput")
     (kind . "INPUT_OBJECT")
     (description . "Parameters to be used for the branch_name_pattern rule")
     (fields))
    ((name . "BranchProtectionRule")
     (kind . "OBJECT")
     (description . "A branch protection rule.")
     (fields
      ((name . "allowsDeletions"))
      ((name . "allowsForcePushes"))
      ((name . "blocksCreations"))
      ((name . "branchProtectionRuleConflicts"))
      ((name . "bypassForcePushAllowances"))
      ((name . "bypassPullRequestAllowances"))
      ((name . "creator"))
      ((name . "databaseId"))
      ((name . "dismissesStaleReviews"))
      ((name . "id"))
      ((name . "isAdminEnforced"))
      ((name . "lockAllowsFetchAndMerge"))
      ((name . "lockBranch"))
      ((name . "matchingRefs"))
      ((name . "pattern"))
      ((name . "pushAllowances"))
      ((name . "repository"))
      ((name . "requireLastPushApproval"))
      ((name . "requiredApprovingReviewCount"))
      ((name . "requiredDeploymentEnvironments"))
      ((name . "requiredStatusCheckContexts"))
      ((name . "requiredStatusChecks"))
      ((name . "requiresApprovingReviews"))
      ((name . "requiresCodeOwnerReviews"))
      ((name . "requiresCommitSignatures"))
      ((name . "requiresConversationResolution"))
      ((name . "requiresDeployments"))
      ((name . "requiresLinearHistory"))
      ((name . "requiresStatusChecks"))
      ((name . "requiresStrictStatusChecks"))
      ((name . "restrictsPushes"))
      ((name . "restrictsReviewDismissals"))
      ((name . "reviewDismissalAllowances"))))
    ((name . "BranchProtectionRuleConflict")
     (kind . "OBJECT")
     (description . "A conflict between two branch protection rules.")
     (fields
      ((name . "branchProtectionRule"))
      ((name . "conflictingBranchProtectionRule"))
      ((name . "ref"))))
    ((name . "BranchProtectionRuleConflictConnection")
     (kind . "OBJECT")
     (description . "The connection type for BranchProtectionRuleConflict.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "BranchProtectionRuleConflictEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "BranchProtectionRuleConnection")
     (kind . "OBJECT")
     (description . "The connection type for BranchProtectionRule.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "BranchProtectionRuleEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "BulkSponsorship")
     (kind . "INPUT_OBJECT")
     (description . "Information about a sponsorship to make for a user or organization with a GitHub Sponsors profile, as part of sponsoring many users or organizations at once.")
     (fields))
    ((name . "BypassActor")
     (kind . "UNION")
     (description . "Types that can represent a repository ruleset bypass actor.")
     (fields))
    ((name . "BypassForcePushAllowance")
     (kind . "OBJECT")
     (description . "A user, team, or app who has the ability to bypass a force push requirement on a protected branch.")
     (fields
      ((name . "actor"))
      ((name . "branchProtectionRule"))
      ((name . "id"))))
    ((name . "BypassForcePushAllowanceConnection")
     (kind . "OBJECT")
     (description . "The connection type for BypassForcePushAllowance.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "BypassForcePushAllowanceEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "BypassPullRequestAllowance")
     (kind . "OBJECT")
     (description . "A user, team, or app who has the ability to bypass a pull request requirement on a protected branch.")
     (fields
      ((name . "actor"))
      ((name . "branchProtectionRule"))
      ((name . "id"))))
    ((name . "BypassPullRequestAllowanceConnection")
     (kind . "OBJECT")
     (description . "The connection type for BypassPullRequestAllowance.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "BypassPullRequestAllowanceEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "CVSS")
     (kind . "OBJECT")
     (description . "The Common Vulnerability Scoring System")
     (fields
      ((name . "score"))
      ((name . "vectorString"))))
    ((name . "CWE")
     (kind . "OBJECT")
     (description . "A common weakness enumeration")
     (fields
      ((name . "cweId"))
      ((name . "description"))
      ((name . "id"))
      ((name . "name"))))
    ((name . "CWEConnection")
     (kind . "OBJECT")
     (description . "The connection type for CWE.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "CWEEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "CancelEnterpriseAdminInvitationInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CancelEnterpriseAdminInvitation")
     (fields))
    ((name . "CancelEnterpriseAdminInvitationPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CancelEnterpriseAdminInvitation")
     (fields
      ((name . "clientMutationId"))
      ((name . "invitation"))
      ((name . "message"))))
    ((name . "CancelSponsorshipInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CancelSponsorship")
     (fields))
    ((name . "CancelSponsorshipPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CancelSponsorship")
     (fields
      ((name . "clientMutationId"))
      ((name . "sponsorsTier"))))
    ((name . "ChangeUserStatusInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of ChangeUserStatus")
     (fields))
    ((name . "ChangeUserStatusPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of ChangeUserStatus")
     (fields
      ((name . "clientMutationId"))
      ((name . "status"))))
    ((name . "CheckAnnotation")
     (kind . "OBJECT")
     (description . "A single check annotation.")
     (fields
      ((name . "annotationLevel"))
      ((name . "blobUrl"))
      ((name . "databaseId"))
      ((name . "location"))
      ((name . "message"))
      ((name . "path"))
      ((name . "rawDetails"))
      ((name . "title"))))
    ((name . "CheckAnnotationConnection")
     (kind . "OBJECT")
     (description . "The connection type for CheckAnnotation.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "CheckAnnotationData")
     (kind . "INPUT_OBJECT")
     (description . "Information from a check run analysis to specific lines of code.")
     (fields))
    ((name . "CheckAnnotationEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "CheckAnnotationLevel")
     (kind . "ENUM")
     (description . "Represents an annotation's information level.")
     (fields))
    ((name . "CheckAnnotationPosition")
     (kind . "OBJECT")
     (description . "A character position in a check annotation.")
     (fields
      ((name . "column"))
      ((name . "line"))))
    ((name . "CheckAnnotationRange")
     (kind . "INPUT_OBJECT")
     (description . "Information from a check run analysis to specific lines of code.")
     (fields))
    ((name . "CheckAnnotationSpan")
     (kind . "OBJECT")
     (description . "An inclusive pair of positions for a check annotation.")
     (fields
      ((name . "end"))
      ((name . "start"))))
    ((name . "CheckConclusionState")
     (kind . "ENUM")
     (description . "The possible states for a check suite or run conclusion.")
     (fields))
    ((name . "CheckRun")
     (kind . "OBJECT")
     (description . "A check run.")
     (fields
      ((name . "annotations"))
      ((name . "checkSuite"))
      ((name . "completedAt"))
      ((name . "conclusion"))
      ((name . "databaseId"))
      ((name . "deployment"))
      ((name . "detailsUrl"))
      ((name . "externalId"))
      ((name . "id"))
      ((name . "isRequired"))
      ((name . "name"))
      ((name . "pendingDeploymentRequest"))
      ((name . "permalink"))
      ((name . "repository"))
      ((name . "resourcePath"))
      ((name . "startedAt"))
      ((name . "status"))
      ((name . "steps"))
      ((name . "summary"))
      ((name . "text"))
      ((name . "title"))
      ((name . "url"))))
    ((name . "CheckRunAction")
     (kind . "INPUT_OBJECT")
     (description . "Possible further actions the integrator can perform.")
     (fields))
    ((name . "CheckRunConnection")
     (kind . "OBJECT")
     (description . "The connection type for CheckRun.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "CheckRunEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "CheckRunFilter")
     (kind . "INPUT_OBJECT")
     (description . "The filters that are available when fetching check runs.")
     (fields))
    ((name . "CheckRunOutput")
     (kind . "INPUT_OBJECT")
     (description . "Descriptive details about the check run.")
     (fields))
    ((name . "CheckRunOutputImage")
     (kind . "INPUT_OBJECT")
     (description . "Images attached to the check run output displayed in the GitHub pull request UI.")
     (fields))
    ((name . "CheckRunState")
     (kind . "ENUM")
     (description . "The possible states of a check run in a status rollup.")
     (fields))
    ((name . "CheckRunStateCount")
     (kind . "OBJECT")
     (description . "Represents a count of the state of a check run.")
     (fields
      ((name . "count"))
      ((name . "state"))))
    ((name . "CheckRunType")
     (kind . "ENUM")
     (description . "The possible types of check runs.")
     (fields))
    ((name . "CheckStatusState")
     (kind . "ENUM")
     (description . "The possible states for a check suite or run status.")
     (fields))
    ((name . "CheckStep")
     (kind . "OBJECT")
     (description . "A single check step.")
     (fields
      ((name . "completedAt"))
      ((name . "conclusion"))
      ((name . "externalId"))
      ((name . "name"))
      ((name . "number"))
      ((name . "secondsToCompletion"))
      ((name . "startedAt"))
      ((name . "status"))))
    ((name . "CheckStepConnection")
     (kind . "OBJECT")
     (description . "The connection type for CheckStep.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "CheckStepEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "CheckSuite")
     (kind . "OBJECT")
     (description . "A check suite.")
     (fields
      ((name . "app"))
      ((name . "branch"))
      ((name . "checkRuns"))
      ((name . "commit"))
      ((name . "conclusion"))
      ((name . "createdAt"))
      ((name . "creator"))
      ((name . "databaseId"))
      ((name . "id"))
      ((name . "matchingPullRequests"))
      ((name . "push"))
      ((name . "repository"))
      ((name . "resourcePath"))
      ((name . "status"))
      ((name . "updatedAt"))
      ((name . "url"))
      ((name . "workflowRun"))))
    ((name . "CheckSuiteAutoTriggerPreference")
     (kind . "INPUT_OBJECT")
     (description . "The auto-trigger preferences that are available for check suites.")
     (fields))
    ((name . "CheckSuiteConnection")
     (kind . "OBJECT")
     (description . "The connection type for CheckSuite.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "CheckSuiteEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "CheckSuiteFilter")
     (kind . "INPUT_OBJECT")
     (description . "The filters that are available when fetching check suites.")
     (fields))
    ((name . "Claimable")
     (kind . "UNION")
     (description . "An object which can have its data claimed or claim data from another.")
     (fields))
    ((name . "ClearLabelsFromLabelableInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of ClearLabelsFromLabelable")
     (fields))
    ((name . "ClearLabelsFromLabelablePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of ClearLabelsFromLabelable")
     (fields
      ((name . "clientMutationId"))
      ((name . "labelable"))))
    ((name . "ClearProjectV2ItemFieldValueInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of ClearProjectV2ItemFieldValue")
     (fields))
    ((name . "ClearProjectV2ItemFieldValuePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of ClearProjectV2ItemFieldValue")
     (fields
      ((name . "clientMutationId"))
      ((name . "projectV2Item"))))
    ((name . "CloneProjectInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CloneProject")
     (fields))
    ((name . "CloneProjectPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CloneProject")
     (fields
      ((name . "clientMutationId"))
      ((name . "jobStatusId"))
      ((name . "project"))))
    ((name . "CloneTemplateRepositoryInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CloneTemplateRepository")
     (fields))
    ((name . "CloneTemplateRepositoryPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CloneTemplateRepository")
     (fields
      ((name . "clientMutationId"))
      ((name . "repository"))))
    ((name . "Closable")
     (kind . "INTERFACE")
     (description . "An object that can be closed")
     (fields
      ((name . "closed"))
      ((name . "closedAt"))
      ((name . "viewerCanClose"))
      ((name . "viewerCanReopen"))))
    ((name . "CloseDiscussionInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CloseDiscussion")
     (fields))
    ((name . "CloseDiscussionPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CloseDiscussion")
     (fields
      ((name . "clientMutationId"))
      ((name . "discussion"))))
    ((name . "CloseIssueInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CloseIssue")
     (fields))
    ((name . "CloseIssuePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CloseIssue")
     (fields
      ((name . "clientMutationId"))
      ((name . "issue"))))
    ((name . "ClosePullRequestInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of ClosePullRequest")
     (fields))
    ((name . "ClosePullRequestPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of ClosePullRequest")
     (fields
      ((name . "clientMutationId"))
      ((name . "pullRequest"))))
    ((name . "ClosedEvent")
     (kind . "OBJECT")
     (description . "Represents a 'closed' event on any `Closable`.")
     (fields
      ((name . "actor"))
      ((name . "closable"))
      ((name . "closer"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "resourcePath"))
      ((name . "stateReason"))
      ((name . "url"))))
    ((name . "Closer")
     (kind . "UNION")
     (description . "The object which triggered a `ClosedEvent`.")
     (fields))
    ((name . "CodeOfConduct")
     (kind . "OBJECT")
     (description . "The Code of Conduct for a repository")
     (fields
      ((name . "body"))
      ((name . "id"))
      ((name . "key"))
      ((name . "name"))
      ((name . "resourcePath"))
      ((name . "url"))))
    ((name . "CollaboratorAffiliation")
     (kind . "ENUM")
     (description . "Collaborators affiliation level with a subject.")
     (fields))
    ((name . "Comment")
     (kind . "INTERFACE")
     (description . "Represents a comment.")
     (fields
      ((name . "author"))
      ((name . "authorAssociation"))
      ((name . "body"))
      ((name . "bodyHTML"))
      ((name . "bodyText"))
      ((name . "createdAt"))
      ((name . "createdViaEmail"))
      ((name . "editor"))
      ((name . "id"))
      ((name . "includesCreatedEdit"))
      ((name . "lastEditedAt"))
      ((name . "publishedAt"))
      ((name . "updatedAt"))
      ((name . "userContentEdits"))
      ((name . "viewerDidAuthor"))))
    ((name . "CommentAuthorAssociation")
     (kind . "ENUM")
     (description . "A comment author association with repository.")
     (fields))
    ((name . "CommentCannotUpdateReason")
     (kind . "ENUM")
     (description . "The possible errors that will prevent a user from updating a comment.")
     (fields))
    ((name . "CommentDeletedEvent")
     (kind . "OBJECT")
     (description . "Represents a 'comment_deleted' event on a given issue or pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "databaseId"))
      ((name . "deletedCommentAuthor"))
      ((name . "id"))))
    ((name . "Commit")
     (kind . "OBJECT")
     (description . "Represents a Git commit.")
     (fields
      ((name . "abbreviatedOid"))
      ((name . "additions"))
      ((name . "associatedPullRequests"))
      ((name . "author"))
      ((name . "authoredByCommitter"))
      ((name . "authoredDate"))
      ((name . "authors"))
      ((name . "blame"))
      ((name . "changedFilesIfAvailable"))
      ((name . "checkSuites"))
      ((name . "comments"))
      ((name . "commitResourcePath"))
      ((name . "commitUrl"))
      ((name . "committedDate"))
      ((name . "committedViaWeb"))
      ((name . "committer"))
      ((name . "deletions"))
      ((name . "deployments"))
      ((name . "file"))
      ((name . "history"))
      ((name . "id"))
      ((name . "message"))
      ((name . "messageBody"))
      ((name . "messageBodyHTML"))
      ((name . "messageHeadline"))
      ((name . "messageHeadlineHTML"))
      ((name . "oid"))
      ((name . "onBehalfOf"))
      ((name . "parents"))
      ((name . "repository"))
      ((name . "resourcePath"))
      ((name . "signature"))
      ((name . "status"))
      ((name . "statusCheckRollup"))
      ((name . "submodules"))
      ((name . "tarballUrl"))
      ((name . "tree"))
      ((name . "treeResourcePath"))
      ((name . "treeUrl"))
      ((name . "url"))
      ((name . "viewerCanSubscribe"))
      ((name . "viewerSubscription"))
      ((name . "zipballUrl"))))
    ((name . "CommitAuthor")
     (kind . "INPUT_OBJECT")
     (description . "Specifies an author for filtering Git commits.")
     (fields))
    ((name . "CommitAuthorEmailPatternParameters")
     (kind . "OBJECT")
     (description . "Parameters to be used for the commit_author_email_pattern rule")
     (fields
      ((name . "name"))
      ((name . "negate"))
      ((name . "operator"))
      ((name . "pattern"))))
    ((name . "CommitAuthorEmailPatternParametersInput")
     (kind . "INPUT_OBJECT")
     (description . "Parameters to be used for the commit_author_email_pattern rule")
     (fields))
    ((name . "CommitComment")
     (kind . "OBJECT")
     (description . "Represents a comment on a given Commit.")
     (fields
      ((name . "author"))
      ((name . "authorAssociation"))
      ((name . "body"))
      ((name . "bodyHTML"))
      ((name . "bodyText"))
      ((name . "commit"))
      ((name . "createdAt"))
      ((name . "createdViaEmail"))
      ((name . "databaseId"))
      ((name . "editor"))
      ((name . "id"))
      ((name . "includesCreatedEdit"))
      ((name . "isMinimized"))
      ((name . "lastEditedAt"))
      ((name . "minimizedReason"))
      ((name . "path"))
      ((name . "position"))
      ((name . "publishedAt"))
      ((name . "reactionGroups"))
      ((name . "reactions"))
      ((name . "repository"))
      ((name . "resourcePath"))
      ((name . "updatedAt"))
      ((name . "url"))
      ((name . "userContentEdits"))
      ((name . "viewerCanDelete"))
      ((name . "viewerCanMinimize"))
      ((name . "viewerCanReact"))
      ((name . "viewerCanUpdate"))
      ((name . "viewerCannotUpdateReasons"))
      ((name . "viewerDidAuthor"))))
    ((name . "CommitCommentConnection")
     (kind . "OBJECT")
     (description . "The connection type for CommitComment.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "CommitCommentEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "CommitCommentThread")
     (kind . "OBJECT")
     (description . "A thread of comments on a commit.")
     (fields
      ((name . "comments"))
      ((name . "commit"))
      ((name . "id"))
      ((name . "path"))
      ((name . "position"))
      ((name . "repository"))))
    ((name . "CommitConnection")
     (kind . "OBJECT")
     (description . "The connection type for Commit.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "CommitContributionOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for commit contribution connections.")
     (fields))
    ((name . "CommitContributionOrderField")
     (kind . "ENUM")
     (description . "Properties by which commit contribution connections can be ordered.")
     (fields))
    ((name . "CommitContributionsByRepository")
     (kind . "OBJECT")
     (description . "This aggregates commits made by a user within one repository.")
     (fields
      ((name . "contributions"))
      ((name . "repository"))
      ((name . "resourcePath"))
      ((name . "url"))))
    ((name . "CommitEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "CommitHistoryConnection")
     (kind . "OBJECT")
     (description . "The connection type for Commit.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "CommitMessage")
     (kind . "INPUT_OBJECT")
     (description . "A message to include with a new commit")
     (fields))
    ((name . "CommitMessagePatternParameters")
     (kind . "OBJECT")
     (description . "Parameters to be used for the commit_message_pattern rule")
     (fields
      ((name . "name"))
      ((name . "negate"))
      ((name . "operator"))
      ((name . "pattern"))))
    ((name . "CommitMessagePatternParametersInput")
     (kind . "INPUT_OBJECT")
     (description . "Parameters to be used for the commit_message_pattern rule")
     (fields))
    ((name . "CommittableBranch")
     (kind . "INPUT_OBJECT")
     (description . "A git ref for a commit to be appended to.\n\nThe ref must be a branch, i.e. its fully qualified name must start\nwith `refs/heads/` (although the input is not required to be fully\nqualified).\n\nThe Ref may be specified by its global node ID or by the\n`repositoryNameWithOwner` and `branchName`.\n\n### Examples\n\nSpecify a branch using a global node ID:\n\n    { \"id\": \"MDM6UmVmMTpyZWZzL2hlYWRzL21haW4=\" }\n\nSpecify a branch using `repositoryNameWithOwner` and `branchName`:\n\n    {\n      \"repositoryNameWithOwner\": \"github/graphql-client\",\n      \"branchName\": \"main\"\n    }\n\n")
     (fields))
    ((name . "CommitterEmailPatternParameters")
     (kind . "OBJECT")
     (description . "Parameters to be used for the committer_email_pattern rule")
     (fields
      ((name . "name"))
      ((name . "negate"))
      ((name . "operator"))
      ((name . "pattern"))))
    ((name . "CommitterEmailPatternParametersInput")
     (kind . "INPUT_OBJECT")
     (description . "Parameters to be used for the committer_email_pattern rule")
     (fields))
    ((name . "Comparison")
     (kind . "OBJECT")
     (description . "Represents a comparison between two commit revisions.")
     (fields
      ((name . "aheadBy"))
      ((name . "baseTarget"))
      ((name . "behindBy"))
      ((name . "commits"))
      ((name . "headTarget"))
      ((name . "id"))
      ((name . "status"))))
    ((name . "ComparisonCommitConnection")
     (kind . "OBJECT")
     (description . "The connection type for Commit.")
     (fields
      ((name . "authorCount"))
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "ComparisonStatus")
     (kind . "ENUM")
     (description . "The status of a git comparison between two refs.")
     (fields))
    ((name . "ConnectedEvent")
     (kind . "OBJECT")
     (description . "Represents a 'connected' event on a given issue or pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "isCrossRepository"))
      ((name . "source"))
      ((name . "subject"))))
    ((name . "Contribution")
     (kind . "INTERFACE")
     (description . "Represents a contribution a user made on GitHub, such as opening an issue.")
     (fields
      ((name . "isRestricted"))
      ((name . "occurredAt"))
      ((name . "resourcePath"))
      ((name . "url"))
      ((name . "user"))))
    ((name . "ContributionCalendar")
     (kind . "OBJECT")
     (description . "A calendar of contributions made on GitHub by a user.")
     (fields
      ((name . "colors"))
      ((name . "isHalloween"))
      ((name . "months"))
      ((name . "totalContributions"))
      ((name . "weeks"))))
    ((name . "ContributionCalendarDay")
     (kind . "OBJECT")
     (description . "Represents a single day of contributions on GitHub by a user.")
     (fields
      ((name . "color"))
      ((name . "contributionCount"))
      ((name . "contributionLevel"))
      ((name . "date"))
      ((name . "weekday"))))
    ((name . "ContributionCalendarMonth")
     (kind . "OBJECT")
     (description . "A month of contributions in a user's contribution graph.")
     (fields
      ((name . "firstDay"))
      ((name . "name"))
      ((name . "totalWeeks"))
      ((name . "year"))))
    ((name . "ContributionCalendarWeek")
     (kind . "OBJECT")
     (description . "A week of contributions in a user's contribution graph.")
     (fields
      ((name . "contributionDays"))
      ((name . "firstDay"))))
    ((name . "ContributionLevel")
     (kind . "ENUM")
     (description . "Varying levels of contributions from none to many.")
     (fields))
    ((name . "ContributionOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for contribution connections.")
     (fields))
    ((name . "ContributionsCollection")
     (kind . "OBJECT")
     (description . "A contributions collection aggregates contributions such as opened issues and commits created by a user.")
     (fields
      ((name . "commitContributionsByRepository"))
      ((name . "contributionCalendar"))
      ((name . "contributionYears"))
      ((name . "doesEndInCurrentMonth"))
      ((name . "earliestRestrictedContributionDate"))
      ((name . "endedAt"))
      ((name . "firstIssueContribution"))
      ((name . "firstPullRequestContribution"))
      ((name . "firstRepositoryContribution"))
      ((name . "hasActivityInThePast"))
      ((name . "hasAnyContributions"))
      ((name . "hasAnyRestrictedContributions"))
      ((name . "isSingleDay"))
      ((name . "issueContributions"))
      ((name . "issueContributionsByRepository"))
      ((name . "joinedGitHubContribution"))
      ((name . "latestRestrictedContributionDate"))
      ((name . "mostRecentCollectionWithActivity"))
      ((name . "mostRecentCollectionWithoutActivity"))
      ((name . "popularIssueContribution"))
      ((name . "popularPullRequestContribution"))
      ((name . "pullRequestContributions"))
      ((name . "pullRequestContributionsByRepository"))
      ((name . "pullRequestReviewContributions"))
      ((name . "pullRequestReviewContributionsByRepository"))
      ((name . "repositoryContributions"))
      ((name . "restrictedContributionsCount"))
      ((name . "startedAt"))
      ((name . "totalCommitContributions"))
      ((name . "totalIssueContributions"))
      ((name . "totalPullRequestContributions"))
      ((name . "totalPullRequestReviewContributions"))
      ((name . "totalRepositoriesWithContributedCommits"))
      ((name . "totalRepositoriesWithContributedIssues"))
      ((name . "totalRepositoriesWithContributedPullRequestReviews"))
      ((name . "totalRepositoriesWithContributedPullRequests"))
      ((name . "totalRepositoryContributions"))
      ((name . "user"))))
    ((name . "ConvertProjectCardNoteToIssueInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of ConvertProjectCardNoteToIssue")
     (fields))
    ((name . "ConvertProjectCardNoteToIssuePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of ConvertProjectCardNoteToIssue")
     (fields
      ((name . "clientMutationId"))
      ((name . "projectCard"))))
    ((name . "ConvertPullRequestToDraftInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of ConvertPullRequestToDraft")
     (fields))
    ((name . "ConvertPullRequestToDraftPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of ConvertPullRequestToDraft")
     (fields
      ((name . "clientMutationId"))
      ((name . "pullRequest"))))
    ((name . "ConvertToDraftEvent")
     (kind . "OBJECT")
     (description . "Represents a 'convert_to_draft' event on a given pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "pullRequest"))
      ((name . "resourcePath"))
      ((name . "url"))))
    ((name . "ConvertedNoteToIssueEvent")
     (kind . "OBJECT")
     (description . "Represents a 'converted_note_to_issue' event on a given issue or pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "databaseId"))
      ((name . "id"))))
    ((name . "ConvertedToDiscussionEvent")
     (kind . "OBJECT")
     (description . "Represents a 'converted_to_discussion' event on a given issue.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "discussion"))
      ((name . "id"))))
    ((name . "CopyProjectV2Input")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CopyProjectV2")
     (fields))
    ((name . "CopyProjectV2Payload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CopyProjectV2")
     (fields
      ((name . "clientMutationId"))
      ((name . "projectV2"))))
    ((name . "CreateAttributionInvitationInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CreateAttributionInvitation")
     (fields))
    ((name . "CreateAttributionInvitationPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CreateAttributionInvitation")
     (fields
      ((name . "clientMutationId"))
      ((name . "owner"))
      ((name . "source"))
      ((name . "target"))))
    ((name . "CreateBranchProtectionRuleInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CreateBranchProtectionRule")
     (fields))
    ((name . "CreateBranchProtectionRulePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CreateBranchProtectionRule")
     (fields
      ((name . "branchProtectionRule"))
      ((name . "clientMutationId"))))
    ((name . "CreateCheckRunInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CreateCheckRun")
     (fields))
    ((name . "CreateCheckRunPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CreateCheckRun")
     (fields
      ((name . "checkRun"))
      ((name . "clientMutationId"))))
    ((name . "CreateCheckSuiteInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CreateCheckSuite")
     (fields))
    ((name . "CreateCheckSuitePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CreateCheckSuite")
     (fields
      ((name . "checkSuite"))
      ((name . "clientMutationId"))))
    ((name . "CreateCommitOnBranchInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CreateCommitOnBranch")
     (fields))
    ((name . "CreateCommitOnBranchPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CreateCommitOnBranch")
     (fields
      ((name . "clientMutationId"))
      ((name . "commit"))
      ((name . "ref"))))
    ((name . "CreateDiscussionInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CreateDiscussion")
     (fields))
    ((name . "CreateDiscussionPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CreateDiscussion")
     (fields
      ((name . "clientMutationId"))
      ((name . "discussion"))))
    ((name . "CreateEnterpriseOrganizationInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CreateEnterpriseOrganization")
     (fields))
    ((name . "CreateEnterpriseOrganizationPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CreateEnterpriseOrganization")
     (fields
      ((name . "clientMutationId"))
      ((name . "enterprise"))
      ((name . "organization"))))
    ((name . "CreateEnvironmentInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CreateEnvironment")
     (fields))
    ((name . "CreateEnvironmentPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CreateEnvironment")
     (fields
      ((name . "clientMutationId"))
      ((name . "environment"))))
    ((name . "CreateIpAllowListEntryInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CreateIpAllowListEntry")
     (fields))
    ((name . "CreateIpAllowListEntryPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CreateIpAllowListEntry")
     (fields
      ((name . "clientMutationId"))
      ((name . "ipAllowListEntry"))))
    ((name . "CreateIssueInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CreateIssue")
     (fields))
    ((name . "CreateIssuePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CreateIssue")
     (fields
      ((name . "clientMutationId"))
      ((name . "issue"))))
    ((name . "CreateLinkedBranchInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CreateLinkedBranch")
     (fields))
    ((name . "CreateLinkedBranchPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CreateLinkedBranch")
     (fields
      ((name . "clientMutationId"))
      ((name . "linkedBranch"))))
    ((name . "CreateMigrationSourceInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CreateMigrationSource")
     (fields))
    ((name . "CreateMigrationSourcePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CreateMigrationSource")
     (fields
      ((name . "clientMutationId"))
      ((name . "migrationSource"))))
    ((name . "CreateProjectInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CreateProject")
     (fields))
    ((name . "CreateProjectPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CreateProject")
     (fields
      ((name . "clientMutationId"))
      ((name . "project"))))
    ((name . "CreateProjectV2FieldInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CreateProjectV2Field")
     (fields))
    ((name . "CreateProjectV2FieldPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CreateProjectV2Field")
     (fields
      ((name . "clientMutationId"))
      ((name . "projectV2Field"))))
    ((name . "CreateProjectV2Input")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CreateProjectV2")
     (fields))
    ((name . "CreateProjectV2Payload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CreateProjectV2")
     (fields
      ((name . "clientMutationId"))
      ((name . "projectV2"))))
    ((name . "CreatePullRequestInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CreatePullRequest")
     (fields))
    ((name . "CreatePullRequestPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CreatePullRequest")
     (fields
      ((name . "clientMutationId"))
      ((name . "pullRequest"))))
    ((name . "CreateRefInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CreateRef")
     (fields))
    ((name . "CreateRefPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CreateRef")
     (fields
      ((name . "clientMutationId"))
      ((name . "ref"))))
    ((name . "CreateRepositoryInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CreateRepository")
     (fields))
    ((name . "CreateRepositoryPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CreateRepository")
     (fields
      ((name . "clientMutationId"))
      ((name . "repository"))))
    ((name . "CreateRepositoryRulesetInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CreateRepositoryRuleset")
     (fields))
    ((name . "CreateRepositoryRulesetPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CreateRepositoryRuleset")
     (fields
      ((name . "clientMutationId"))
      ((name . "ruleset"))))
    ((name . "CreateSponsorsListingInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CreateSponsorsListing")
     (fields))
    ((name . "CreateSponsorsListingPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CreateSponsorsListing")
     (fields
      ((name . "clientMutationId"))
      ((name . "sponsorsListing"))))
    ((name . "CreateSponsorsTierInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CreateSponsorsTier")
     (fields))
    ((name . "CreateSponsorsTierPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CreateSponsorsTier")
     (fields
      ((name . "clientMutationId"))
      ((name . "sponsorsTier"))))
    ((name . "CreateSponsorshipInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CreateSponsorship")
     (fields))
    ((name . "CreateSponsorshipPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CreateSponsorship")
     (fields
      ((name . "clientMutationId"))
      ((name . "sponsorship"))))
    ((name . "CreateSponsorshipsInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CreateSponsorships")
     (fields))
    ((name . "CreateSponsorshipsPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CreateSponsorships")
     (fields
      ((name . "clientMutationId"))
      ((name . "sponsorables"))))
    ((name . "CreateTeamDiscussionCommentInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CreateTeamDiscussionComment")
     (fields))
    ((name . "CreateTeamDiscussionCommentPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CreateTeamDiscussionComment")
     (fields
      ((name . "clientMutationId"))
      ((name . "teamDiscussionComment"))))
    ((name . "CreateTeamDiscussionInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of CreateTeamDiscussion")
     (fields))
    ((name . "CreateTeamDiscussionPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of CreateTeamDiscussion")
     (fields
      ((name . "clientMutationId"))
      ((name . "teamDiscussion"))))
    ((name . "CreatedCommitContribution")
     (kind . "OBJECT")
     (description . "Represents the contribution a user made by committing to a repository.")
     (fields
      ((name . "commitCount"))
      ((name . "isRestricted"))
      ((name . "occurredAt"))
      ((name . "repository"))
      ((name . "resourcePath"))
      ((name . "url"))
      ((name . "user"))))
    ((name . "CreatedCommitContributionConnection")
     (kind . "OBJECT")
     (description . "The connection type for CreatedCommitContribution.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "CreatedCommitContributionEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "CreatedIssueContribution")
     (kind . "OBJECT")
     (description . "Represents the contribution a user made on GitHub by opening an issue.")
     (fields
      ((name . "isRestricted"))
      ((name . "issue"))
      ((name . "occurredAt"))
      ((name . "resourcePath"))
      ((name . "url"))
      ((name . "user"))))
    ((name . "CreatedIssueContributionConnection")
     (kind . "OBJECT")
     (description . "The connection type for CreatedIssueContribution.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "CreatedIssueContributionEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "CreatedIssueOrRestrictedContribution")
     (kind . "UNION")
     (description . "Represents either a issue the viewer can access or a restricted contribution.")
     (fields))
    ((name . "CreatedPullRequestContribution")
     (kind . "OBJECT")
     (description . "Represents the contribution a user made on GitHub by opening a pull request.")
     (fields
      ((name . "isRestricted"))
      ((name . "occurredAt"))
      ((name . "pullRequest"))
      ((name . "resourcePath"))
      ((name . "url"))
      ((name . "user"))))
    ((name . "CreatedPullRequestContributionConnection")
     (kind . "OBJECT")
     (description . "The connection type for CreatedPullRequestContribution.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "CreatedPullRequestContributionEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "CreatedPullRequestOrRestrictedContribution")
     (kind . "UNION")
     (description . "Represents either a pull request the viewer can access or a restricted contribution.")
     (fields))
    ((name . "CreatedPullRequestReviewContribution")
     (kind . "OBJECT")
     (description . "Represents the contribution a user made by leaving a review on a pull request.")
     (fields
      ((name . "isRestricted"))
      ((name . "occurredAt"))
      ((name . "pullRequest"))
      ((name . "pullRequestReview"))
      ((name . "repository"))
      ((name . "resourcePath"))
      ((name . "url"))
      ((name . "user"))))
    ((name . "CreatedPullRequestReviewContributionConnection")
     (kind . "OBJECT")
     (description . "The connection type for CreatedPullRequestReviewContribution.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "CreatedPullRequestReviewContributionEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "CreatedRepositoryContribution")
     (kind . "OBJECT")
     (description . "Represents the contribution a user made on GitHub by creating a repository.")
     (fields
      ((name . "isRestricted"))
      ((name . "occurredAt"))
      ((name . "repository"))
      ((name . "resourcePath"))
      ((name . "url"))
      ((name . "user"))))
    ((name . "CreatedRepositoryContributionConnection")
     (kind . "OBJECT")
     (description . "The connection type for CreatedRepositoryContribution.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "CreatedRepositoryContributionEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "CreatedRepositoryOrRestrictedContribution")
     (kind . "UNION")
     (description . "Represents either a repository the viewer can access or a restricted contribution.")
     (fields))
    ((name . "CrossReferencedEvent")
     (kind . "OBJECT")
     (description . "Represents a mention made by one issue or pull request to another.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "isCrossRepository"))
      ((name . "referencedAt"))
      ((name . "resourcePath"))
      ((name . "source"))
      ((name . "target"))
      ((name . "url"))
      ((name . "willCloseTarget"))))
    ((name . "Date")
     (kind . "SCALAR")
     (description . "An ISO-8601 encoded date string.")
     (fields))
    ((name . "DateTime")
     (kind . "SCALAR")
     (description . "An ISO-8601 encoded UTC date string.")
     (fields))
    ((name . "DeclineTopicSuggestionInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of DeclineTopicSuggestion")
     (fields))
    ((name . "DeclineTopicSuggestionPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of DeclineTopicSuggestion")
     (fields
      ((name . "clientMutationId"))
      ((name . "topic"))))
    ((name . "DefaultRepositoryPermissionField")
     (kind . "ENUM")
     (description . "The possible base permissions for repositories.")
     (fields))
    ((name . "Deletable")
     (kind . "INTERFACE")
     (description . "Entities that can be deleted.")
     (fields
      ((name . "viewerCanDelete"))))
    ((name . "DeleteBranchProtectionRuleInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of DeleteBranchProtectionRule")
     (fields))
    ((name . "DeleteBranchProtectionRulePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of DeleteBranchProtectionRule")
     (fields
      ((name . "clientMutationId"))))
    ((name . "DeleteDeploymentInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of DeleteDeployment")
     (fields))
    ((name . "DeleteDeploymentPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of DeleteDeployment")
     (fields
      ((name . "clientMutationId"))))
    ((name . "DeleteDiscussionCommentInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of DeleteDiscussionComment")
     (fields))
    ((name . "DeleteDiscussionCommentPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of DeleteDiscussionComment")
     (fields
      ((name . "clientMutationId"))
      ((name . "comment"))))
    ((name . "DeleteDiscussionInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of DeleteDiscussion")
     (fields))
    ((name . "DeleteDiscussionPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of DeleteDiscussion")
     (fields
      ((name . "clientMutationId"))
      ((name . "discussion"))))
    ((name . "DeleteEnvironmentInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of DeleteEnvironment")
     (fields))
    ((name . "DeleteEnvironmentPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of DeleteEnvironment")
     (fields
      ((name . "clientMutationId"))))
    ((name . "DeleteIpAllowListEntryInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of DeleteIpAllowListEntry")
     (fields))
    ((name . "DeleteIpAllowListEntryPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of DeleteIpAllowListEntry")
     (fields
      ((name . "clientMutationId"))
      ((name . "ipAllowListEntry"))))
    ((name . "DeleteIssueCommentInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of DeleteIssueComment")
     (fields))
    ((name . "DeleteIssueCommentPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of DeleteIssueComment")
     (fields
      ((name . "clientMutationId"))))
    ((name . "DeleteIssueInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of DeleteIssue")
     (fields))
    ((name . "DeleteIssuePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of DeleteIssue")
     (fields
      ((name . "clientMutationId"))
      ((name . "repository"))))
    ((name . "DeleteLinkedBranchInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of DeleteLinkedBranch")
     (fields))
    ((name . "DeleteLinkedBranchPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of DeleteLinkedBranch")
     (fields
      ((name . "clientMutationId"))
      ((name . "issue"))))
    ((name . "DeleteProjectCardInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of DeleteProjectCard")
     (fields))
    ((name . "DeleteProjectCardPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of DeleteProjectCard")
     (fields
      ((name . "clientMutationId"))
      ((name . "column"))
      ((name . "deletedCardId"))))
    ((name . "DeleteProjectColumnInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of DeleteProjectColumn")
     (fields))
    ((name . "DeleteProjectColumnPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of DeleteProjectColumn")
     (fields
      ((name . "clientMutationId"))
      ((name . "deletedColumnId"))
      ((name . "project"))))
    ((name . "DeleteProjectInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of DeleteProject")
     (fields))
    ((name . "DeleteProjectPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of DeleteProject")
     (fields
      ((name . "clientMutationId"))
      ((name . "owner"))))
    ((name . "DeleteProjectV2FieldInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of DeleteProjectV2Field")
     (fields))
    ((name . "DeleteProjectV2FieldPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of DeleteProjectV2Field")
     (fields
      ((name . "clientMutationId"))
      ((name . "projectV2Field"))))
    ((name . "DeleteProjectV2Input")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of DeleteProjectV2")
     (fields))
    ((name . "DeleteProjectV2ItemInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of DeleteProjectV2Item")
     (fields))
    ((name . "DeleteProjectV2ItemPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of DeleteProjectV2Item")
     (fields
      ((name . "clientMutationId"))
      ((name . "deletedItemId"))))
    ((name . "DeleteProjectV2Payload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of DeleteProjectV2")
     (fields
      ((name . "clientMutationId"))
      ((name . "projectV2"))))
    ((name . "DeleteProjectV2WorkflowInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of DeleteProjectV2Workflow")
     (fields))
    ((name . "DeleteProjectV2WorkflowPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of DeleteProjectV2Workflow")
     (fields
      ((name . "clientMutationId"))
      ((name . "deletedWorkflowId"))
      ((name . "projectV2"))))
    ((name . "DeletePullRequestReviewCommentInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of DeletePullRequestReviewComment")
     (fields))
    ((name . "DeletePullRequestReviewCommentPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of DeletePullRequestReviewComment")
     (fields
      ((name . "clientMutationId"))
      ((name . "pullRequestReview"))
      ((name . "pullRequestReviewComment"))))
    ((name . "DeletePullRequestReviewInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of DeletePullRequestReview")
     (fields))
    ((name . "DeletePullRequestReviewPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of DeletePullRequestReview")
     (fields
      ((name . "clientMutationId"))
      ((name . "pullRequestReview"))))
    ((name . "DeleteRefInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of DeleteRef")
     (fields))
    ((name . "DeleteRefPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of DeleteRef")
     (fields
      ((name . "clientMutationId"))))
    ((name . "DeleteRepositoryRulesetInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of DeleteRepositoryRuleset")
     (fields))
    ((name . "DeleteRepositoryRulesetPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of DeleteRepositoryRuleset")
     (fields
      ((name . "clientMutationId"))))
    ((name . "DeleteTeamDiscussionCommentInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of DeleteTeamDiscussionComment")
     (fields))
    ((name . "DeleteTeamDiscussionCommentPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of DeleteTeamDiscussionComment")
     (fields
      ((name . "clientMutationId"))))
    ((name . "DeleteTeamDiscussionInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of DeleteTeamDiscussion")
     (fields))
    ((name . "DeleteTeamDiscussionPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of DeleteTeamDiscussion")
     (fields
      ((name . "clientMutationId"))))
    ((name . "DeleteVerifiableDomainInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of DeleteVerifiableDomain")
     (fields))
    ((name . "DeleteVerifiableDomainPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of DeleteVerifiableDomain")
     (fields
      ((name . "clientMutationId"))
      ((name . "owner"))))
    ((name . "DemilestonedEvent")
     (kind . "OBJECT")
     (description . "Represents a 'demilestoned' event on a given issue or pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "milestoneTitle"))
      ((name . "subject"))))
    ((name . "DependabotUpdate")
     (kind . "OBJECT")
     (description . "A Dependabot Update for a dependency in a repository")
     (fields
      ((name . "error"))
      ((name . "pullRequest"))
      ((name . "repository"))))
    ((name . "DependabotUpdateError")
     (kind . "OBJECT")
     (description . "An error produced from a Dependabot Update")
     (fields
      ((name . "body"))
      ((name . "errorType"))
      ((name . "title"))))
    ((name . "DependencyGraphEcosystem")
     (kind . "ENUM")
     (description . "The possible ecosystems of a dependency graph package.")
     (fields))
    ((name . "DeployKey")
     (kind . "OBJECT")
     (description . "A repository deploy key.")
     (fields
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "key"))
      ((name . "readOnly"))
      ((name . "title"))
      ((name . "verified"))))
    ((name . "DeployKeyConnection")
     (kind . "OBJECT")
     (description . "The connection type for DeployKey.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "DeployKeyEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "DeployedEvent")
     (kind . "OBJECT")
     (description . "Represents a 'deployed' event on a given pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "databaseId"))
      ((name . "deployment"))
      ((name . "id"))
      ((name . "pullRequest"))
      ((name . "ref"))))
    ((name . "Deployment")
     (kind . "OBJECT")
     (description . "Represents triggered deployment instance.")
     (fields
      ((name . "commit"))
      ((name . "commitOid"))
      ((name . "createdAt"))
      ((name . "creator"))
      ((name . "databaseId"))
      ((name . "description"))
      ((name . "environment"))
      ((name . "id"))
      ((name . "latestEnvironment"))
      ((name . "latestStatus"))
      ((name . "originalEnvironment"))
      ((name . "payload"))
      ((name . "ref"))
      ((name . "repository"))
      ((name . "state"))
      ((name . "statuses"))
      ((name . "task"))
      ((name . "updatedAt"))))
    ((name . "DeploymentConnection")
     (kind . "OBJECT")
     (description . "The connection type for Deployment.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "DeploymentEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "DeploymentEnvironmentChangedEvent")
     (kind . "OBJECT")
     (description . "Represents a 'deployment_environment_changed' event on a given pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "deploymentStatus"))
      ((name . "id"))
      ((name . "pullRequest"))))
    ((name . "DeploymentOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for deployment connections")
     (fields))
    ((name . "DeploymentOrderField")
     (kind . "ENUM")
     (description . "Properties by which deployment connections can be ordered.")
     (fields))
    ((name . "DeploymentProtectionRule")
     (kind . "OBJECT")
     (description . "A protection rule.")
     (fields
      ((name . "databaseId"))
      ((name . "reviewers"))
      ((name . "timeout"))
      ((name . "type"))))
    ((name . "DeploymentProtectionRuleConnection")
     (kind . "OBJECT")
     (description . "The connection type for DeploymentProtectionRule.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "DeploymentProtectionRuleEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "DeploymentProtectionRuleType")
     (kind . "ENUM")
     (description . "The possible protection rule types.")
     (fields))
    ((name . "DeploymentRequest")
     (kind . "OBJECT")
     (description . "A request to deploy a workflow run to an environment.")
     (fields
      ((name . "currentUserCanApprove"))
      ((name . "environment"))
      ((name . "reviewers"))
      ((name . "waitTimer"))
      ((name . "waitTimerStartedAt"))))
    ((name . "DeploymentRequestConnection")
     (kind . "OBJECT")
     (description . "The connection type for DeploymentRequest.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "DeploymentRequestEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "DeploymentReview")
     (kind . "OBJECT")
     (description . "A deployment review.")
     (fields
      ((name . "comment"))
      ((name . "databaseId"))
      ((name . "environments"))
      ((name . "id"))
      ((name . "state"))
      ((name . "user"))))
    ((name . "DeploymentReviewConnection")
     (kind . "OBJECT")
     (description . "The connection type for DeploymentReview.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "DeploymentReviewEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "DeploymentReviewState")
     (kind . "ENUM")
     (description . "The possible states for a deployment review.")
     (fields))
    ((name . "DeploymentReviewer")
     (kind . "UNION")
     (description . "Users and teams.")
     (fields))
    ((name . "DeploymentReviewerConnection")
     (kind . "OBJECT")
     (description . "The connection type for DeploymentReviewer.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "DeploymentReviewerEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "DeploymentState")
     (kind . "ENUM")
     (description . "The possible states in which a deployment can be.")
     (fields))
    ((name . "DeploymentStatus")
     (kind . "OBJECT")
     (description . "Describes the status of a given deployment attempt.")
     (fields
      ((name . "createdAt"))
      ((name . "creator"))
      ((name . "deployment"))
      ((name . "description"))
      ((name . "environmentUrl"))
      ((name . "id"))
      ((name . "logUrl"))
      ((name . "state"))
      ((name . "updatedAt"))))
    ((name . "DeploymentStatusConnection")
     (kind . "OBJECT")
     (description . "The connection type for DeploymentStatus.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "DeploymentStatusEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "DeploymentStatusState")
     (kind . "ENUM")
     (description . "The possible states for a deployment status.")
     (fields))
    ((name . "DequeuePullRequestInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of DequeuePullRequest")
     (fields))
    ((name . "DequeuePullRequestPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of DequeuePullRequest")
     (fields
      ((name . "clientMutationId"))
      ((name . "mergeQueueEntry"))))
    ((name . "DiffSide")
     (kind . "ENUM")
     (description . "The possible sides of a diff.")
     (fields))
    ((name . "DisablePullRequestAutoMergeInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of DisablePullRequestAutoMerge")
     (fields))
    ((name . "DisablePullRequestAutoMergePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of DisablePullRequestAutoMerge")
     (fields
      ((name . "actor"))
      ((name . "clientMutationId"))
      ((name . "pullRequest"))))
    ((name . "DisconnectedEvent")
     (kind . "OBJECT")
     (description . "Represents a 'disconnected' event on a given issue or pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "isCrossRepository"))
      ((name . "source"))
      ((name . "subject"))))
    ((name . "Discussion")
     (kind . "OBJECT")
     (description . "A discussion in a repository.")
     (fields
      ((name . "activeLockReason"))
      ((name . "answer"))
      ((name . "answerChosenAt"))
      ((name . "answerChosenBy"))
      ((name . "author"))
      ((name . "authorAssociation"))
      ((name . "body"))
      ((name . "bodyHTML"))
      ((name . "bodyText"))
      ((name . "category"))
      ((name . "closed"))
      ((name . "closedAt"))
      ((name . "comments"))
      ((name . "createdAt"))
      ((name . "createdViaEmail"))
      ((name . "databaseId"))
      ((name . "editor"))
      ((name . "id"))
      ((name . "includesCreatedEdit"))
      ((name . "labels"))
      ((name . "lastEditedAt"))
      ((name . "locked"))
      ((name . "number"))
      ((name . "poll"))
      ((name . "publishedAt"))
      ((name . "reactionGroups"))
      ((name . "reactions"))
      ((name . "repository"))
      ((name . "resourcePath"))
      ((name . "stateReason"))
      ((name . "title"))
      ((name . "updatedAt"))
      ((name . "upvoteCount"))
      ((name . "url"))
      ((name . "userContentEdits"))
      ((name . "viewerCanClose"))
      ((name . "viewerCanDelete"))
      ((name . "viewerCanReact"))
      ((name . "viewerCanReopen"))
      ((name . "viewerCanSubscribe"))
      ((name . "viewerCanUpdate"))
      ((name . "viewerCanUpvote"))
      ((name . "viewerDidAuthor"))
      ((name . "viewerHasUpvoted"))
      ((name . "viewerSubscription"))))
    ((name . "DiscussionCategory")
     (kind . "OBJECT")
     (description . "A category for discussions in a repository.")
     (fields
      ((name . "createdAt"))
      ((name . "description"))
      ((name . "emoji"))
      ((name . "emojiHTML"))
      ((name . "id"))
      ((name . "isAnswerable"))
      ((name . "name"))
      ((name . "repository"))
      ((name . "slug"))
      ((name . "updatedAt"))))
    ((name . "DiscussionCategoryConnection")
     (kind . "OBJECT")
     (description . "The connection type for DiscussionCategory.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "DiscussionCategoryEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "DiscussionCloseReason")
     (kind . "ENUM")
     (description . "The possible reasons for closing a discussion.")
     (fields))
    ((name . "DiscussionComment")
     (kind . "OBJECT")
     (description . "A comment on a discussion.")
     (fields
      ((name . "author"))
      ((name . "authorAssociation"))
      ((name . "body"))
      ((name . "bodyHTML"))
      ((name . "bodyText"))
      ((name . "createdAt"))
      ((name . "createdViaEmail"))
      ((name . "databaseId"))
      ((name . "deletedAt"))
      ((name . "discussion"))
      ((name . "editor"))
      ((name . "id"))
      ((name . "includesCreatedEdit"))
      ((name . "isAnswer"))
      ((name . "isMinimized"))
      ((name . "lastEditedAt"))
      ((name . "minimizedReason"))
      ((name . "publishedAt"))
      ((name . "reactionGroups"))
      ((name . "reactions"))
      ((name . "replies"))
      ((name . "replyTo"))
      ((name . "resourcePath"))
      ((name . "updatedAt"))
      ((name . "upvoteCount"))
      ((name . "url"))
      ((name . "userContentEdits"))
      ((name . "viewerCanDelete"))
      ((name . "viewerCanMarkAsAnswer"))
      ((name . "viewerCanMinimize"))
      ((name . "viewerCanReact"))
      ((name . "viewerCanUnmarkAsAnswer"))
      ((name . "viewerCanUpdate"))
      ((name . "viewerCanUpvote"))
      ((name . "viewerCannotUpdateReasons"))
      ((name . "viewerDidAuthor"))
      ((name . "viewerHasUpvoted"))))
    ((name . "DiscussionCommentConnection")
     (kind . "OBJECT")
     (description . "The connection type for DiscussionComment.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "DiscussionCommentEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "DiscussionConnection")
     (kind . "OBJECT")
     (description . "The connection type for Discussion.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "DiscussionEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "DiscussionOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ways in which lists of discussions can be ordered upon return.")
     (fields))
    ((name . "DiscussionOrderField")
     (kind . "ENUM")
     (description . "Properties by which discussion connections can be ordered.")
     (fields))
    ((name . "DiscussionPoll")
     (kind . "OBJECT")
     (description . "A poll for a discussion.")
     (fields
      ((name . "discussion"))
      ((name . "id"))
      ((name . "options"))
      ((name . "question"))
      ((name . "totalVoteCount"))
      ((name . "viewerCanVote"))
      ((name . "viewerHasVoted"))))
    ((name . "DiscussionPollOption")
     (kind . "OBJECT")
     (description . "An option for a discussion poll.")
     (fields
      ((name . "id"))
      ((name . "option"))
      ((name . "poll"))
      ((name . "totalVoteCount"))
      ((name . "viewerHasVoted"))))
    ((name . "DiscussionPollOptionConnection")
     (kind . "OBJECT")
     (description . "The connection type for DiscussionPollOption.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "DiscussionPollOptionEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "DiscussionPollOptionOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for discussion poll option connections.")
     (fields))
    ((name . "DiscussionPollOptionOrderField")
     (kind . "ENUM")
     (description . "Properties by which discussion poll option connections can be ordered.")
     (fields))
    ((name . "DiscussionState")
     (kind . "ENUM")
     (description . "The possible states of a discussion.")
     (fields))
    ((name . "DiscussionStateReason")
     (kind . "ENUM")
     (description . "The possible state reasons of a discussion.")
     (fields))
    ((name . "DismissPullRequestReviewInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of DismissPullRequestReview")
     (fields))
    ((name . "DismissPullRequestReviewPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of DismissPullRequestReview")
     (fields
      ((name . "clientMutationId"))
      ((name . "pullRequestReview"))))
    ((name . "DismissReason")
     (kind . "ENUM")
     (description . "The possible reasons that a Dependabot alert was dismissed.")
     (fields))
    ((name . "DismissRepositoryVulnerabilityAlertInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of DismissRepositoryVulnerabilityAlert")
     (fields))
    ((name . "DismissRepositoryVulnerabilityAlertPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of DismissRepositoryVulnerabilityAlert")
     (fields
      ((name . "clientMutationId"))
      ((name . "repositoryVulnerabilityAlert"))))
    ((name . "DraftIssue")
     (kind . "OBJECT")
     (description . "A draft issue within a project.")
     (fields
      ((name . "assignees"))
      ((name . "body"))
      ((name . "bodyHTML"))
      ((name . "bodyText"))
      ((name . "createdAt"))
      ((name . "creator"))
      ((name . "id"))
      ((name . "projectV2Items"))
      ((name . "projectsV2"))
      ((name . "title"))
      ((name . "updatedAt"))))
    ((name . "DraftPullRequestReviewComment")
     (kind . "INPUT_OBJECT")
     (description . "Specifies a review comment to be left with a Pull Request Review.")
     (fields))
    ((name . "DraftPullRequestReviewThread")
     (kind . "INPUT_OBJECT")
     (description . "Specifies a review comment thread to be left with a Pull Request Review.")
     (fields))
    ((name . "EnablePullRequestAutoMergeInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of EnablePullRequestAutoMerge")
     (fields))
    ((name . "EnablePullRequestAutoMergePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of EnablePullRequestAutoMerge")
     (fields
      ((name . "actor"))
      ((name . "clientMutationId"))
      ((name . "pullRequest"))))
    ((name . "EnqueuePullRequestInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of EnqueuePullRequest")
     (fields))
    ((name . "EnqueuePullRequestPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of EnqueuePullRequest")
     (fields
      ((name . "clientMutationId"))
      ((name . "mergeQueueEntry"))))
    ((name . "Enterprise")
     (kind . "OBJECT")
     (description . "An account to manage multiple organizations with consolidated policy and billing.")
     (fields
      ((name . "announcement"))
      ((name . "announcementExpiresAt"))
      ((name . "announcementUserDismissible"))
      ((name . "avatarUrl"))
      ((name . "billingInfo"))
      ((name . "createdAt"))
      ((name . "databaseId"))
      ((name . "description"))
      ((name . "descriptionHTML"))
      ((name . "id"))
      ((name . "location"))
      ((name . "members"))
      ((name . "name"))
      ((name . "organizations"))
      ((name . "ownerInfo"))
      ((name . "resourcePath"))
      ((name . "slug"))
      ((name . "url"))
      ((name . "viewerIsAdmin"))
      ((name . "websiteUrl"))))
    ((name . "EnterpriseAdministratorConnection")
     (kind . "OBJECT")
     (description . "The connection type for User.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "EnterpriseAdministratorEdge")
     (kind . "OBJECT")
     (description . "A User who is an administrator of an enterprise.")
     (fields
      ((name . "cursor"))
      ((name . "node"))
      ((name . "role"))))
    ((name . "EnterpriseAdministratorInvitation")
     (kind . "OBJECT")
     (description . "An invitation for a user to become an owner or billing manager of an enterprise.")
     (fields
      ((name . "createdAt"))
      ((name . "email"))
      ((name . "enterprise"))
      ((name . "id"))
      ((name . "invitee"))
      ((name . "inviter"))
      ((name . "role"))))
    ((name . "EnterpriseAdministratorInvitationConnection")
     (kind . "OBJECT")
     (description . "The connection type for EnterpriseAdministratorInvitation.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "EnterpriseAdministratorInvitationEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "EnterpriseAdministratorInvitationOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for enterprise administrator invitation connections")
     (fields))
    ((name . "EnterpriseAdministratorInvitationOrderField")
     (kind . "ENUM")
     (description . "Properties by which enterprise administrator invitation connections can be ordered.")
     (fields))
    ((name . "EnterpriseAdministratorRole")
     (kind . "ENUM")
     (description . "The possible administrator roles in an enterprise account.")
     (fields))
    ((name . "EnterpriseAllowPrivateRepositoryForkingPolicyValue")
     (kind . "ENUM")
     (description . "The possible values for the enterprise allow private repository forking policy value.")
     (fields))
    ((name . "EnterpriseAuditEntryData")
     (kind . "INTERFACE")
     (description . "Metadata for an audit entry containing enterprise account information.")
     (fields
      ((name . "enterpriseResourcePath"))
      ((name . "enterpriseSlug"))
      ((name . "enterpriseUrl"))))
    ((name . "EnterpriseBillingInfo")
     (kind . "OBJECT")
     (description . "Enterprise billing information visible to enterprise billing managers and owners.")
     (fields
      ((name . "allLicensableUsersCount"))
      ((name . "assetPacks"))
      ((name . "bandwidthQuota"))
      ((name . "bandwidthUsage"))
      ((name . "bandwidthUsagePercentage"))
      ((name . "storageQuota"))
      ((name . "storageUsage"))
      ((name . "storageUsagePercentage"))
      ((name . "totalAvailableLicenses"))
      ((name . "totalLicenses"))))
    ((name . "EnterpriseDefaultRepositoryPermissionSettingValue")
     (kind . "ENUM")
     (description . "The possible values for the enterprise base repository permission setting.")
     (fields))
    ((name . "EnterpriseEnabledDisabledSettingValue")
     (kind . "ENUM")
     (description . "The possible values for an enabled/disabled enterprise setting.")
     (fields))
    ((name . "EnterpriseEnabledSettingValue")
     (kind . "ENUM")
     (description . "The possible values for an enabled/no policy enterprise setting.")
     (fields))
    ((name . "EnterpriseFailedInvitationConnection")
     (kind . "OBJECT")
     (description . "The connection type for OrganizationInvitation.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))
      ((name . "totalUniqueUserCount"))))
    ((name . "EnterpriseFailedInvitationEdge")
     (kind . "OBJECT")
     (description . "A failed invitation to be a member in an enterprise organization.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "EnterpriseIdentityProvider")
     (kind . "OBJECT")
     (description . "An identity provider configured to provision identities for an enterprise. Visible to enterprise owners or enterprise owners' personal access tokens (classic) with read:enterprise or admin:enterprise scope.")
     (fields
      ((name . "digestMethod"))
      ((name . "enterprise"))
      ((name . "externalIdentities"))
      ((name . "id"))
      ((name . "idpCertificate"))
      ((name . "issuer"))
      ((name . "recoveryCodes"))
      ((name . "signatureMethod"))
      ((name . "ssoUrl"))))
    ((name . "EnterpriseMember")
     (kind . "UNION")
     (description . "An object that is a member of an enterprise.")
     (fields))
    ((name . "EnterpriseMemberConnection")
     (kind . "OBJECT")
     (description . "The connection type for EnterpriseMember.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "EnterpriseMemberEdge")
     (kind . "OBJECT")
     (description . "A User who is a member of an enterprise through one or more organizations.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "EnterpriseMemberOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for enterprise member connections.")
     (fields))
    ((name . "EnterpriseMemberOrderField")
     (kind . "ENUM")
     (description . "Properties by which enterprise member connections can be ordered.")
     (fields))
    ((name . "EnterpriseMembersCanCreateRepositoriesSettingValue")
     (kind . "ENUM")
     (description . "The possible values for the enterprise members can create repositories setting.")
     (fields))
    ((name . "EnterpriseMembersCanMakePurchasesSettingValue")
     (kind . "ENUM")
     (description . "The possible values for the members can make purchases setting.")
     (fields))
    ((name . "EnterpriseOrganizationMembershipConnection")
     (kind . "OBJECT")
     (description . "The connection type for Organization.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "EnterpriseOrganizationMembershipEdge")
     (kind . "OBJECT")
     (description . "An enterprise organization that a user is a member of.")
     (fields
      ((name . "cursor"))
      ((name . "node"))
      ((name . "role"))))
    ((name . "EnterpriseOutsideCollaboratorConnection")
     (kind . "OBJECT")
     (description . "The connection type for User.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "EnterpriseOutsideCollaboratorEdge")
     (kind . "OBJECT")
     (description . "A User who is an outside collaborator of an enterprise through one or more organizations.")
     (fields
      ((name . "cursor"))
      ((name . "node"))
      ((name . "repositories"))))
    ((name . "EnterpriseOwnerInfo")
     (kind . "OBJECT")
     (description . "Enterprise information visible to enterprise owners or enterprise owners' personal access tokens (classic) with read:enterprise or admin:enterprise scope.")
     (fields
      ((name . "admins"))
      ((name . "affiliatedUsersWithTwoFactorDisabled"))
      ((name . "affiliatedUsersWithTwoFactorDisabledExist"))
      ((name . "allowPrivateRepositoryForkingSetting"))
      ((name . "allowPrivateRepositoryForkingSettingOrganizations"))
      ((name . "allowPrivateRepositoryForkingSettingPolicyValue"))
      ((name . "defaultRepositoryPermissionSetting"))
      ((name . "defaultRepositoryPermissionSettingOrganizations"))
      ((name . "domains"))
      ((name . "enterpriseServerInstallations"))
      ((name . "failedInvitations"))
      ((name . "ipAllowListEnabledSetting"))
      ((name . "ipAllowListEntries"))
      ((name . "ipAllowListForInstalledAppsEnabledSetting"))
      ((name . "isUpdatingDefaultRepositoryPermission"))
      ((name . "isUpdatingTwoFactorRequirement"))
      ((name . "membersCanChangeRepositoryVisibilitySetting"))
      ((name . "membersCanChangeRepositoryVisibilitySettingOrganizations"))
      ((name . "membersCanCreateInternalRepositoriesSetting"))
      ((name . "membersCanCreatePrivateRepositoriesSetting"))
      ((name . "membersCanCreatePublicRepositoriesSetting"))
      ((name . "membersCanCreateRepositoriesSetting"))
      ((name . "membersCanCreateRepositoriesSettingOrganizations"))
      ((name . "membersCanDeleteIssuesSetting"))
      ((name . "membersCanDeleteIssuesSettingOrganizations"))
      ((name . "membersCanDeleteRepositoriesSetting"))
      ((name . "membersCanDeleteRepositoriesSettingOrganizations"))
      ((name . "membersCanInviteCollaboratorsSetting"))
      ((name . "membersCanInviteCollaboratorsSettingOrganizations"))
      ((name . "membersCanMakePurchasesSetting"))
      ((name . "membersCanUpdateProtectedBranchesSetting"))
      ((name . "membersCanUpdateProtectedBranchesSettingOrganizations"))
      ((name . "membersCanViewDependencyInsightsSetting"))
      ((name . "membersCanViewDependencyInsightsSettingOrganizations"))
      ((name . "notificationDeliveryRestrictionEnabledSetting"))
      ((name . "oidcProvider"))
      ((name . "organizationProjectsSetting"))
      ((name . "organizationProjectsSettingOrganizations"))
      ((name . "outsideCollaborators"))
      ((name . "pendingAdminInvitations"))
      ((name . "pendingCollaboratorInvitations"))
      ((name . "pendingMemberInvitations"))
      ((name . "repositoryProjectsSetting"))
      ((name . "repositoryProjectsSettingOrganizations"))
      ((name . "samlIdentityProvider"))
      ((name . "samlIdentityProviderSettingOrganizations"))
      ((name . "supportEntitlements"))
      ((name . "teamDiscussionsSetting"))
      ((name . "teamDiscussionsSettingOrganizations"))
      ((name . "twoFactorRequiredSetting"))
      ((name . "twoFactorRequiredSettingOrganizations"))))
    ((name . "EnterprisePendingMemberInvitationConnection")
     (kind . "OBJECT")
     (description . "The connection type for OrganizationInvitation.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))
      ((name . "totalUniqueUserCount"))))
    ((name . "EnterprisePendingMemberInvitationEdge")
     (kind . "OBJECT")
     (description . "An invitation to be a member in an enterprise organization.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "EnterpriseRepositoryInfo")
     (kind . "OBJECT")
     (description . "A subset of repository information queryable from an enterprise.")
     (fields
      ((name . "id"))
      ((name . "isPrivate"))
      ((name . "name"))
      ((name . "nameWithOwner"))))
    ((name . "EnterpriseRepositoryInfoConnection")
     (kind . "OBJECT")
     (description . "The connection type for EnterpriseRepositoryInfo.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "EnterpriseRepositoryInfoEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "EnterpriseServerInstallation")
     (kind . "OBJECT")
     (description . "An Enterprise Server installation.")
     (fields
      ((name . "createdAt"))
      ((name . "customerName"))
      ((name . "hostName"))
      ((name . "id"))
      ((name . "isConnected"))
      ((name . "updatedAt"))
      ((name . "userAccounts"))
      ((name . "userAccountsUploads"))))
    ((name . "EnterpriseServerInstallationConnection")
     (kind . "OBJECT")
     (description . "The connection type for EnterpriseServerInstallation.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "EnterpriseServerInstallationEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "EnterpriseServerInstallationMembershipConnection")
     (kind . "OBJECT")
     (description . "The connection type for EnterpriseServerInstallation.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "EnterpriseServerInstallationMembershipEdge")
     (kind . "OBJECT")
     (description . "An Enterprise Server installation that a user is a member of.")
     (fields
      ((name . "cursor"))
      ((name . "node"))
      ((name . "role"))))
    ((name . "EnterpriseServerInstallationOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for Enterprise Server installation connections.")
     (fields))
    ((name . "EnterpriseServerInstallationOrderField")
     (kind . "ENUM")
     (description . "Properties by which Enterprise Server installation connections can be ordered.")
     (fields))
    ((name . "EnterpriseServerUserAccount")
     (kind . "OBJECT")
     (description . "A user account on an Enterprise Server installation.")
     (fields
      ((name . "createdAt"))
      ((name . "emails"))
      ((name . "enterpriseServerInstallation"))
      ((name . "id"))
      ((name . "isSiteAdmin"))
      ((name . "login"))
      ((name . "profileName"))
      ((name . "remoteCreatedAt"))
      ((name . "remoteUserId"))
      ((name . "updatedAt"))))
    ((name . "EnterpriseServerUserAccountConnection")
     (kind . "OBJECT")
     (description . "The connection type for EnterpriseServerUserAccount.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "EnterpriseServerUserAccountEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "EnterpriseServerUserAccountEmail")
     (kind . "OBJECT")
     (description . "An email belonging to a user account on an Enterprise Server installation.")
     (fields
      ((name . "createdAt"))
      ((name . "email"))
      ((name . "id"))
      ((name . "isPrimary"))
      ((name . "updatedAt"))
      ((name . "userAccount"))))
    ((name . "EnterpriseServerUserAccountEmailConnection")
     (kind . "OBJECT")
     (description . "The connection type for EnterpriseServerUserAccountEmail.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "EnterpriseServerUserAccountEmailEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "EnterpriseServerUserAccountEmailOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for Enterprise Server user account email connections.")
     (fields))
    ((name . "EnterpriseServerUserAccountEmailOrderField")
     (kind . "ENUM")
     (description . "Properties by which Enterprise Server user account email connections can be ordered.")
     (fields))
    ((name . "EnterpriseServerUserAccountOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for Enterprise Server user account connections.")
     (fields))
    ((name . "EnterpriseServerUserAccountOrderField")
     (kind . "ENUM")
     (description . "Properties by which Enterprise Server user account connections can be ordered.")
     (fields))
    ((name . "EnterpriseServerUserAccountsUpload")
     (kind . "OBJECT")
     (description . "A user accounts upload from an Enterprise Server installation.")
     (fields
      ((name . "createdAt"))
      ((name . "enterprise"))
      ((name . "enterpriseServerInstallation"))
      ((name . "id"))
      ((name . "name"))
      ((name . "syncState"))
      ((name . "updatedAt"))))
    ((name . "EnterpriseServerUserAccountsUploadConnection")
     (kind . "OBJECT")
     (description . "The connection type for EnterpriseServerUserAccountsUpload.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "EnterpriseServerUserAccountsUploadEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "EnterpriseServerUserAccountsUploadOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for Enterprise Server user accounts upload connections.")
     (fields))
    ((name . "EnterpriseServerUserAccountsUploadOrderField")
     (kind . "ENUM")
     (description . "Properties by which Enterprise Server user accounts upload connections can be ordered.")
     (fields))
    ((name . "EnterpriseServerUserAccountsUploadSyncState")
     (kind . "ENUM")
     (description . "Synchronization state of the Enterprise Server user accounts upload")
     (fields))
    ((name . "EnterpriseUserAccount")
     (kind . "OBJECT")
     (description . "An account for a user who is an admin of an enterprise or a member of an enterprise through one or more organizations.")
     (fields
      ((name . "avatarUrl"))
      ((name . "createdAt"))
      ((name . "enterprise"))
      ((name . "enterpriseInstallations"))
      ((name . "id"))
      ((name . "login"))
      ((name . "name"))
      ((name . "organizations"))
      ((name . "resourcePath"))
      ((name . "updatedAt"))
      ((name . "url"))
      ((name . "user"))))
    ((name . "EnterpriseUserAccountMembershipRole")
     (kind . "ENUM")
     (description . "The possible roles for enterprise membership.")
     (fields))
    ((name . "EnterpriseUserDeployment")
     (kind . "ENUM")
     (description . "The possible GitHub Enterprise deployments where this user can exist.")
     (fields))
    ((name . "Environment")
     (kind . "OBJECT")
     (description . "An environment.")
     (fields
      ((name . "databaseId"))
      ((name . "id"))
      ((name . "name"))
      ((name . "protectionRules"))))
    ((name . "EnvironmentConnection")
     (kind . "OBJECT")
     (description . "The connection type for Environment.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "EnvironmentEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "ExternalIdentity")
     (kind . "OBJECT")
     (description . "An external identity provisioned by SAML SSO or SCIM. If SAML is configured on the organization, the external identity is visible to (1) organization owners, (2) organization owners' personal access tokens (classic) with read:org or admin:org scope, (3) GitHub App with an installation token with read or write access to members. If SAML is configured on the enterprise, the external identity is visible to (1) enterprise owners, (2) enterprise owners' personal access tokens (classic) with read:enterprise or admin:enterprise scope.")
     (fields
      ((name . "guid"))
      ((name . "id"))
      ((name . "organizationInvitation"))
      ((name . "samlIdentity"))
      ((name . "scimIdentity"))
      ((name . "user"))))
    ((name . "ExternalIdentityAttribute")
     (kind . "OBJECT")
     (description . "An attribute for the External Identity attributes collection")
     (fields
      ((name . "metadata"))
      ((name . "name"))
      ((name . "value"))))
    ((name . "ExternalIdentityConnection")
     (kind . "OBJECT")
     (description . "The connection type for ExternalIdentity.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "ExternalIdentityEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "ExternalIdentitySamlAttributes")
     (kind . "OBJECT")
     (description . "SAML attributes for the External Identity")
     (fields
      ((name . "attributes"))
      ((name . "emails"))
      ((name . "familyName"))
      ((name . "givenName"))
      ((name . "groups"))
      ((name . "nameId"))
      ((name . "username"))))
    ((name . "ExternalIdentityScimAttributes")
     (kind . "OBJECT")
     (description . "SCIM attributes for the External Identity")
     (fields
      ((name . "emails"))
      ((name . "familyName"))
      ((name . "givenName"))
      ((name . "groups"))
      ((name . "username"))))
    ((name . "FileAddition")
     (kind . "INPUT_OBJECT")
     (description . "A command to add a file at the given path with the given contents as part of a commit.  Any existing file at that that path will be replaced.")
     (fields))
    ((name . "FileChanges")
     (kind . "INPUT_OBJECT")
     (description . "A description of a set of changes to a file tree to be made as part of\na git commit, modeled as zero or more file `additions` and zero or more\nfile `deletions`.\n\nBoth fields are optional; omitting both will produce a commit with no\nfile changes.\n\n`deletions` and `additions` describe changes to files identified\nby their path in the git tree using unix-style path separators, i.e.\n`/`.  The root of a git tree is an empty string, so paths are not\nslash-prefixed.\n\n`path` values must be unique across all `additions` and `deletions`\nprovided.  Any duplication will result in a validation error.\n\n### Encoding\n\nFile contents must be provided in full for each `FileAddition`.\n\nThe `contents` of a `FileAddition` must be encoded using RFC 4648\ncompliant base64, i.e. correct padding is required and no characters\noutside the standard alphabet may be used.  Invalid base64\nencoding will be rejected with a validation error.\n\nThe encoded contents may be binary.\n\nFor text files, no assumptions are made about the character encoding of\nthe file contents (after base64 decoding).  No charset transcoding or\nline-ending normalization will be performed; it is the client's\nresponsibility to manage the character encoding of files they provide.\nHowever, for maximum compatibility we recommend using UTF-8 encoding\nand ensuring that all files in a repository use a consistent\nline-ending convention (`\\n` or `\\r\\n`), and that all files end\nwith a newline.\n\n### Modeling file changes\n\nEach of the the five types of conceptual changes that can be made in a\ngit commit can be described using the `FileChanges` type as follows:\n\n1. New file addition: create file `hello world\\n` at path `docs/README.txt`:\n\n       {\n         \"additions\" [\n           {\n             \"path\": \"docs/README.txt\",\n             \"contents\": base64encode(\"hello world\\n\")\n           }\n         ]\n       }\n\n2. Existing file modification: change existing `docs/README.txt` to have new\n   content `new content here\\n`:\n\n       {\n         \"additions\" [\n           {\n             \"path\": \"docs/README.txt\",\n             \"contents\": base64encode(\"new content here\\n\")\n           }\n         ]\n       }\n\n3. Existing file deletion: remove existing file `docs/README.txt`.\n   Note that the path is required to exist -- specifying a\n   path that does not exist on the given branch will abort the\n   commit and return an error.\n\n       {\n         \"deletions\" [\n           {\n             \"path\": \"docs/README.txt\"\n           }\n         ]\n       }\n\n\n4. File rename with no changes: rename `docs/README.txt` with\n   previous content `hello world\\n` to the same content at\n   `newdocs/README.txt`:\n\n       {\n         \"deletions\" [\n           {\n             \"path\": \"docs/README.txt\",\n           }\n         ],\n         \"additions\" [\n           {\n             \"path\": \"newdocs/README.txt\",\n             \"contents\": base64encode(\"hello world\\n\")\n           }\n         ]\n       }\n\n\n5. File rename with changes: rename `docs/README.txt` with\n   previous content `hello world\\n` to a file at path\n   `newdocs/README.txt` with content `new contents\\n`:\n\n       {\n         \"deletions\" [\n           {\n             \"path\": \"docs/README.txt\",\n           }\n         ],\n         \"additions\" [\n           {\n             \"path\": \"newdocs/README.txt\",\n             \"contents\": base64encode(\"new contents\\n\")\n           }\n         ]\n       }\n")
     (fields))
    ((name . "FileDeletion")
     (kind . "INPUT_OBJECT")
     (description . "A command to delete the file at the given path as part of a commit.")
     (fields))
    ((name . "FileViewedState")
     (kind . "ENUM")
     (description . "The possible viewed states of a file .")
     (fields))
    ((name . "Float")
     (kind . "SCALAR")
     (description . "Represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).")
     (fields))
    ((name . "FollowOrganizationInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of FollowOrganization")
     (fields))
    ((name . "FollowOrganizationPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of FollowOrganization")
     (fields
      ((name . "clientMutationId"))
      ((name . "organization"))))
    ((name . "FollowUserInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of FollowUser")
     (fields))
    ((name . "FollowUserPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of FollowUser")
     (fields
      ((name . "clientMutationId"))
      ((name . "user"))))
    ((name . "FollowerConnection")
     (kind . "OBJECT")
     (description . "The connection type for User.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "FollowingConnection")
     (kind . "OBJECT")
     (description . "The connection type for User.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "FundingLink")
     (kind . "OBJECT")
     (description . "A funding platform link for a repository.")
     (fields
      ((name . "platform"))
      ((name . "url"))))
    ((name . "FundingPlatform")
     (kind . "ENUM")
     (description . "The possible funding platforms for repository funding links.")
     (fields))
    ((name . "GenericHovercardContext")
     (kind . "OBJECT")
     (description . "A generic hovercard context with a message and icon")
     (fields
      ((name . "message"))
      ((name . "octicon"))))
    ((name . "Gist")
     (kind . "OBJECT")
     (description . "A Gist.")
     (fields
      ((name . "comments"))
      ((name . "createdAt"))
      ((name . "description"))
      ((name . "files"))
      ((name . "forks"))
      ((name . "id"))
      ((name . "isFork"))
      ((name . "isPublic"))
      ((name . "name"))
      ((name . "owner"))
      ((name . "pushedAt"))
      ((name . "resourcePath"))
      ((name . "stargazerCount"))
      ((name . "stargazers"))
      ((name . "updatedAt"))
      ((name . "url"))
      ((name . "viewerHasStarred"))))
    ((name . "GistComment")
     (kind . "OBJECT")
     (description . "Represents a comment on an Gist.")
     (fields
      ((name . "author"))
      ((name . "authorAssociation"))
      ((name . "body"))
      ((name . "bodyHTML"))
      ((name . "bodyText"))
      ((name . "createdAt"))
      ((name . "createdViaEmail"))
      ((name . "databaseId"))
      ((name . "editor"))
      ((name . "gist"))
      ((name . "id"))
      ((name . "includesCreatedEdit"))
      ((name . "isMinimized"))
      ((name . "lastEditedAt"))
      ((name . "minimizedReason"))
      ((name . "publishedAt"))
      ((name . "updatedAt"))
      ((name . "userContentEdits"))
      ((name . "viewerCanDelete"))
      ((name . "viewerCanMinimize"))
      ((name . "viewerCanUpdate"))
      ((name . "viewerCannotUpdateReasons"))
      ((name . "viewerDidAuthor"))))
    ((name . "GistCommentConnection")
     (kind . "OBJECT")
     (description . "The connection type for GistComment.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "GistCommentEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "GistConnection")
     (kind . "OBJECT")
     (description . "The connection type for Gist.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "GistEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "GistFile")
     (kind . "OBJECT")
     (description . "A file in a gist.")
     (fields
      ((name . "encodedName"))
      ((name . "encoding"))
      ((name . "extension"))
      ((name . "isImage"))
      ((name . "isTruncated"))
      ((name . "language"))
      ((name . "name"))
      ((name . "size"))
      ((name . "text"))))
    ((name . "GistOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for gist connections")
     (fields))
    ((name . "GistOrderField")
     (kind . "ENUM")
     (description . "Properties by which gist connections can be ordered.")
     (fields))
    ((name . "GistPrivacy")
     (kind . "ENUM")
     (description . "The privacy of a Gist")
     (fields))
    ((name . "GitActor")
     (kind . "OBJECT")
     (description . "Represents an actor in a Git commit (ie. an author or committer).")
     (fields
      ((name . "avatarUrl"))
      ((name . "date"))
      ((name . "email"))
      ((name . "name"))
      ((name . "user"))))
    ((name . "GitActorConnection")
     (kind . "OBJECT")
     (description . "The connection type for GitActor.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "GitActorEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "GitHubMetadata")
     (kind . "OBJECT")
     (description . "Represents information about the GitHub instance.")
     (fields
      ((name . "gitHubServicesSha"))
      ((name . "gitIpAddresses"))
      ((name . "hookIpAddresses"))
      ((name . "importerIpAddresses"))
      ((name . "isPasswordAuthenticationVerifiable"))
      ((name . "pagesIpAddresses"))))
    ((name . "GitObject")
     (kind . "INTERFACE")
     (description . "Represents a Git object.")
     (fields
      ((name . "abbreviatedOid"))
      ((name . "commitResourcePath"))
      ((name . "commitUrl"))
      ((name . "id"))
      ((name . "oid"))
      ((name . "repository"))))
    ((name . "GitObjectID")
     (kind . "SCALAR")
     (description . "A Git object ID.")
     (fields))
    ((name . "GitSSHRemote")
     (kind . "SCALAR")
     (description . "Git SSH string")
     (fields))
    ((name . "GitSignature")
     (kind . "INTERFACE")
     (description . "Information about a signature (GPG or S/MIME) on a Commit or Tag.")
     (fields
      ((name . "email"))
      ((name . "isValid"))
      ((name . "payload"))
      ((name . "signature"))
      ((name . "signer"))
      ((name . "state"))
      ((name . "wasSignedByGitHub"))))
    ((name . "GitSignatureState")
     (kind . "ENUM")
     (description . "The state of a Git signature.")
     (fields))
    ((name . "GitTimestamp")
     (kind . "SCALAR")
     (description . "An ISO-8601 encoded date string. Unlike the DateTime type, GitTimestamp is not converted in UTC.")
     (fields))
    ((name . "GpgSignature")
     (kind . "OBJECT")
     (description . "Represents a GPG signature on a Commit or Tag.")
     (fields
      ((name . "email"))
      ((name . "isValid"))
      ((name . "keyId"))
      ((name . "payload"))
      ((name . "signature"))
      ((name . "signer"))
      ((name . "state"))
      ((name . "wasSignedByGitHub"))))
    ((name . "GrantEnterpriseOrganizationsMigratorRoleInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of GrantEnterpriseOrganizationsMigratorRole")
     (fields))
    ((name . "GrantEnterpriseOrganizationsMigratorRolePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of GrantEnterpriseOrganizationsMigratorRole")
     (fields
      ((name . "clientMutationId"))
      ((name . "organizations"))))
    ((name . "GrantMigratorRoleInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of GrantMigratorRole")
     (fields))
    ((name . "GrantMigratorRolePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of GrantMigratorRole")
     (fields
      ((name . "clientMutationId"))
      ((name . "success"))))
    ((name . "HTML")
     (kind . "SCALAR")
     (description . "A string containing HTML code.")
     (fields))
    ((name . "HeadRefDeletedEvent")
     (kind . "OBJECT")
     (description . "Represents a 'head_ref_deleted' event on a given pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "headRef"))
      ((name . "headRefName"))
      ((name . "id"))
      ((name . "pullRequest"))))
    ((name . "HeadRefForcePushedEvent")
     (kind . "OBJECT")
     (description . "Represents a 'head_ref_force_pushed' event on a given pull request.")
     (fields
      ((name . "actor"))
      ((name . "afterCommit"))
      ((name . "beforeCommit"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "pullRequest"))
      ((name . "ref"))))
    ((name . "HeadRefRestoredEvent")
     (kind . "OBJECT")
     (description . "Represents a 'head_ref_restored' event on a given pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "pullRequest"))))
    ((name . "Hovercard")
     (kind . "OBJECT")
     (description . "Detail needed to display a hovercard for a user")
     (fields
      ((name . "contexts"))))
    ((name . "HovercardContext")
     (kind . "INTERFACE")
     (description . "An individual line of a hovercard")
     (fields
      ((name . "message"))
      ((name . "octicon"))))
    ((name . "ID")
     (kind . "SCALAR")
     (description . "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.")
     (fields))
    ((name . "IdentityProviderConfigurationState")
     (kind . "ENUM")
     (description . "The possible states in which authentication can be configured with an identity provider.")
     (fields))
    ((name . "Int")
     (kind . "SCALAR")
     (description . "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.")
     (fields))
    ((name . "InviteEnterpriseAdminInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of InviteEnterpriseAdmin")
     (fields))
    ((name . "InviteEnterpriseAdminPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of InviteEnterpriseAdmin")
     (fields
      ((name . "clientMutationId"))
      ((name . "invitation"))))
    ((name . "IpAllowListEnabledSettingValue")
     (kind . "ENUM")
     (description . "The possible values for the IP allow list enabled setting.")
     (fields))
    ((name . "IpAllowListEntry")
     (kind . "OBJECT")
     (description . "An IP address or range of addresses that is allowed to access an owner's resources.")
     (fields
      ((name . "allowListValue"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "isActive"))
      ((name . "name"))
      ((name . "owner"))
      ((name . "updatedAt"))))
    ((name . "IpAllowListEntryConnection")
     (kind . "OBJECT")
     (description . "The connection type for IpAllowListEntry.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "IpAllowListEntryEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "IpAllowListEntryOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for IP allow list entry connections.")
     (fields))
    ((name . "IpAllowListEntryOrderField")
     (kind . "ENUM")
     (description . "Properties by which IP allow list entry connections can be ordered.")
     (fields))
    ((name . "IpAllowListForInstalledAppsEnabledSettingValue")
     (kind . "ENUM")
     (description . "The possible values for the IP allow list configuration for installed GitHub Apps setting.")
     (fields))
    ((name . "IpAllowListOwner")
     (kind . "UNION")
     (description . "Types that can own an IP allow list.")
     (fields))
    ((name . "Issue")
     (kind . "OBJECT")
     (description . "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.")
     (fields
      ((name . "activeLockReason"))
      ((name . "assignees"))
      ((name . "author"))
      ((name . "authorAssociation"))
      ((name . "body"))
      ((name . "bodyHTML"))
      ((name . "bodyResourcePath"))
      ((name . "bodyText"))
      ((name . "bodyUrl"))
      ((name . "closed"))
      ((name . "closedAt"))
      ((name . "comments"))
      ((name . "createdAt"))
      ((name . "createdViaEmail"))
      ((name . "databaseId"))
      ((name . "editor"))
      ((name . "fullDatabaseId"))
      ((name . "hovercard"))
      ((name . "id"))
      ((name . "includesCreatedEdit"))
      ((name . "isPinned"))
      ((name . "isReadByViewer"))
      ((name . "labels"))
      ((name . "lastEditedAt"))
      ((name . "linkedBranches"))
      ((name . "locked"))
      ((name . "milestone"))
      ((name . "number"))
      ((name . "participants"))
      ((name . "projectCards"))
      ((name . "projectItems"))
      ((name . "projectV2"))
      ((name . "projectsV2"))
      ((name . "publishedAt"))
      ((name . "reactionGroups"))
      ((name . "reactions"))
      ((name . "repository"))
      ((name . "resourcePath"))
      ((name . "state"))
      ((name . "stateReason"))
      ((name . "timelineItems"))
      ((name . "title"))
      ((name . "titleHTML"))
      ((name . "trackedInIssues"))
      ((name . "trackedIssues"))
      ((name . "trackedIssuesCount"))
      ((name . "updatedAt"))
      ((name . "url"))
      ((name . "userContentEdits"))
      ((name . "viewerCanClose"))
      ((name . "viewerCanReact"))
      ((name . "viewerCanReopen"))
      ((name . "viewerCanSubscribe"))
      ((name . "viewerCanUpdate"))
      ((name . "viewerCannotUpdateReasons"))
      ((name . "viewerDidAuthor"))
      ((name . "viewerSubscription"))))
    ((name . "IssueClosedStateReason")
     (kind . "ENUM")
     (description . "The possible state reasons of a closed issue.")
     (fields))
    ((name . "IssueComment")
     (kind . "OBJECT")
     (description . "Represents a comment on an Issue.")
     (fields
      ((name . "author"))
      ((name . "authorAssociation"))
      ((name . "body"))
      ((name . "bodyHTML"))
      ((name . "bodyText"))
      ((name . "createdAt"))
      ((name . "createdViaEmail"))
      ((name . "databaseId"))
      ((name . "editor"))
      ((name . "fullDatabaseId"))
      ((name . "id"))
      ((name . "includesCreatedEdit"))
      ((name . "isMinimized"))
      ((name . "issue"))
      ((name . "lastEditedAt"))
      ((name . "minimizedReason"))
      ((name . "publishedAt"))
      ((name . "pullRequest"))
      ((name . "reactionGroups"))
      ((name . "reactions"))
      ((name . "repository"))
      ((name . "resourcePath"))
      ((name . "updatedAt"))
      ((name . "url"))
      ((name . "userContentEdits"))
      ((name . "viewerCanDelete"))
      ((name . "viewerCanMinimize"))
      ((name . "viewerCanReact"))
      ((name . "viewerCanUpdate"))
      ((name . "viewerCannotUpdateReasons"))
      ((name . "viewerDidAuthor"))))
    ((name . "IssueCommentConnection")
     (kind . "OBJECT")
     (description . "The connection type for IssueComment.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "IssueCommentEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "IssueCommentOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ways in which lists of issue comments can be ordered upon return.")
     (fields))
    ((name . "IssueCommentOrderField")
     (kind . "ENUM")
     (description . "Properties by which issue comment connections can be ordered.")
     (fields))
    ((name . "IssueConnection")
     (kind . "OBJECT")
     (description . "The connection type for Issue.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "IssueContributionsByRepository")
     (kind . "OBJECT")
     (description . "This aggregates issues opened by a user within one repository.")
     (fields
      ((name . "contributions"))
      ((name . "repository"))))
    ((name . "IssueEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "IssueFilters")
     (kind . "INPUT_OBJECT")
     (description . "Ways in which to filter lists of issues.")
     (fields))
    ((name . "IssueOrPullRequest")
     (kind . "UNION")
     (description . "Used for return value of Repository.issueOrPullRequest.")
     (fields))
    ((name . "IssueOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ways in which lists of issues can be ordered upon return.")
     (fields))
    ((name . "IssueOrderField")
     (kind . "ENUM")
     (description . "Properties by which issue connections can be ordered.")
     (fields))
    ((name . "IssueState")
     (kind . "ENUM")
     (description . "The possible states of an issue.")
     (fields))
    ((name . "IssueStateReason")
     (kind . "ENUM")
     (description . "The possible state reasons of an issue.")
     (fields))
    ((name . "IssueTemplate")
     (kind . "OBJECT")
     (description . "A repository issue template.")
     (fields
      ((name . "about"))
      ((name . "assignees"))
      ((name . "body"))
      ((name . "filename"))
      ((name . "labels"))
      ((name . "name"))
      ((name . "title"))))
    ((name . "IssueTimelineConnection")
     (kind . "OBJECT")
     (description . "The connection type for IssueTimelineItem.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "IssueTimelineItem")
     (kind . "UNION")
     (description . "An item in an issue timeline")
     (fields))
    ((name . "IssueTimelineItemEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "IssueTimelineItems")
     (kind . "UNION")
     (description . "An item in an issue timeline")
     (fields))
    ((name . "IssueTimelineItemsConnection")
     (kind . "OBJECT")
     (description . "The connection type for IssueTimelineItems.")
     (fields
      ((name . "edges"))
      ((name . "filteredCount"))
      ((name . "nodes"))
      ((name . "pageCount"))
      ((name . "pageInfo"))
      ((name . "totalCount"))
      ((name . "updatedAt"))))
    ((name . "IssueTimelineItemsEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "IssueTimelineItemsItemType")
     (kind . "ENUM")
     (description . "The possible item types found in a timeline.")
     (fields))
    ((name . "JoinedGitHubContribution")
     (kind . "OBJECT")
     (description . "Represents a user signing up for a GitHub account.")
     (fields
      ((name . "isRestricted"))
      ((name . "occurredAt"))
      ((name . "resourcePath"))
      ((name . "url"))
      ((name . "user"))))
    ((name . "Label")
     (kind . "OBJECT")
     (description . "A label for categorizing Issues, Pull Requests, Milestones, or Discussions with a given Repository.")
     (fields
      ((name . "color"))
      ((name . "createdAt"))
      ((name . "description"))
      ((name . "id"))
      ((name . "isDefault"))
      ((name . "issues"))
      ((name . "name"))
      ((name . "pullRequests"))
      ((name . "repository"))
      ((name . "resourcePath"))
      ((name . "updatedAt"))
      ((name . "url"))))
    ((name . "LabelConnection")
     (kind . "OBJECT")
     (description . "The connection type for Label.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "LabelEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "LabelOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ways in which lists of labels can be ordered upon return.")
     (fields))
    ((name . "LabelOrderField")
     (kind . "ENUM")
     (description . "Properties by which label connections can be ordered.")
     (fields))
    ((name . "Labelable")
     (kind . "INTERFACE")
     (description . "An object that can have labels assigned to it.")
     (fields
      ((name . "labels"))))
    ((name . "LabeledEvent")
     (kind . "OBJECT")
     (description . "Represents a 'labeled' event on a given issue or pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "label"))
      ((name . "labelable"))))
    ((name . "Language")
     (kind . "OBJECT")
     (description . "Represents a given language found in repositories.")
     (fields
      ((name . "color"))
      ((name . "id"))
      ((name . "name"))))
    ((name . "LanguageConnection")
     (kind . "OBJECT")
     (description . "A list of languages associated with the parent.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))
      ((name . "totalSize"))))
    ((name . "LanguageEdge")
     (kind . "OBJECT")
     (description . "Represents the language of a repository.")
     (fields
      ((name . "cursor"))
      ((name . "node"))
      ((name . "size"))))
    ((name . "LanguageOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for language connections.")
     (fields))
    ((name . "LanguageOrderField")
     (kind . "ENUM")
     (description . "Properties by which language connections can be ordered.")
     (fields))
    ((name . "License")
     (kind . "OBJECT")
     (description . "A repository's open source license")
     (fields
      ((name . "body"))
      ((name . "conditions"))
      ((name . "description"))
      ((name . "featured"))
      ((name . "hidden"))
      ((name . "id"))
      ((name . "implementation"))
      ((name . "key"))
      ((name . "limitations"))
      ((name . "name"))
      ((name . "nickname"))
      ((name . "permissions"))
      ((name . "pseudoLicense"))
      ((name . "spdxId"))
      ((name . "url"))))
    ((name . "LicenseRule")
     (kind . "OBJECT")
     (description . "Describes a License's conditions, permissions, and limitations")
     (fields
      ((name . "description"))
      ((name . "key"))
      ((name . "label"))))
    ((name . "LinkProjectV2ToRepositoryInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of LinkProjectV2ToRepository")
     (fields))
    ((name . "LinkProjectV2ToRepositoryPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of LinkProjectV2ToRepository")
     (fields
      ((name . "clientMutationId"))
      ((name . "repository"))))
    ((name . "LinkProjectV2ToTeamInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of LinkProjectV2ToTeam")
     (fields))
    ((name . "LinkProjectV2ToTeamPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of LinkProjectV2ToTeam")
     (fields
      ((name . "clientMutationId"))
      ((name . "team"))))
    ((name . "LinkRepositoryToProjectInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of LinkRepositoryToProject")
     (fields))
    ((name . "LinkRepositoryToProjectPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of LinkRepositoryToProject")
     (fields
      ((name . "clientMutationId"))
      ((name . "project"))
      ((name . "repository"))))
    ((name . "LinkedBranch")
     (kind . "OBJECT")
     (description . "A branch linked to an issue.")
     (fields
      ((name . "id"))
      ((name . "ref"))))
    ((name . "LinkedBranchConnection")
     (kind . "OBJECT")
     (description . "The connection type for LinkedBranch.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "LinkedBranchEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "LockLockableInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of LockLockable")
     (fields))
    ((name . "LockLockablePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of LockLockable")
     (fields
      ((name . "actor"))
      ((name . "clientMutationId"))
      ((name . "lockedRecord"))))
    ((name . "LockReason")
     (kind . "ENUM")
     (description . "The possible reasons that an issue or pull request was locked.")
     (fields))
    ((name . "Lockable")
     (kind . "INTERFACE")
     (description . "An object that can be locked.")
     (fields
      ((name . "activeLockReason"))
      ((name . "locked"))))
    ((name . "LockedEvent")
     (kind . "OBJECT")
     (description . "Represents a 'locked' event on a given issue or pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "lockReason"))
      ((name . "lockable"))))
    ((name . "Mannequin")
     (kind . "OBJECT")
     (description . "A placeholder user for attribution of imported data on GitHub.")
     (fields
      ((name . "avatarUrl"))
      ((name . "claimant"))
      ((name . "createdAt"))
      ((name . "databaseId"))
      ((name . "email"))
      ((name . "id"))
      ((name . "login"))
      ((name . "resourcePath"))
      ((name . "updatedAt"))
      ((name . "url"))))
    ((name . "MannequinConnection")
     (kind . "OBJECT")
     (description . "The connection type for Mannequin.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "MannequinEdge")
     (kind . "OBJECT")
     (description . "Represents a mannequin.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "MannequinOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for mannequins.")
     (fields))
    ((name . "MannequinOrderField")
     (kind . "ENUM")
     (description . "Properties by which mannequins can be ordered.")
     (fields))
    ((name . "MarkDiscussionCommentAsAnswerInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of MarkDiscussionCommentAsAnswer")
     (fields))
    ((name . "MarkDiscussionCommentAsAnswerPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of MarkDiscussionCommentAsAnswer")
     (fields
      ((name . "clientMutationId"))
      ((name . "discussion"))))
    ((name . "MarkFileAsViewedInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of MarkFileAsViewed")
     (fields))
    ((name . "MarkFileAsViewedPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of MarkFileAsViewed")
     (fields
      ((name . "clientMutationId"))
      ((name . "pullRequest"))))
    ((name . "MarkPullRequestReadyForReviewInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of MarkPullRequestReadyForReview")
     (fields))
    ((name . "MarkPullRequestReadyForReviewPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of MarkPullRequestReadyForReview")
     (fields
      ((name . "clientMutationId"))
      ((name . "pullRequest"))))
    ((name . "MarkedAsDuplicateEvent")
     (kind . "OBJECT")
     (description . "Represents a 'marked_as_duplicate' event on a given issue or pull request.")
     (fields
      ((name . "actor"))
      ((name . "canonical"))
      ((name . "createdAt"))
      ((name . "duplicate"))
      ((name . "id"))
      ((name . "isCrossRepository"))))
    ((name . "MarketplaceCategory")
     (kind . "OBJECT")
     (description . "A public description of a Marketplace category.")
     (fields
      ((name . "description"))
      ((name . "howItWorks"))
      ((name . "id"))
      ((name . "name"))
      ((name . "primaryListingCount"))
      ((name . "resourcePath"))
      ((name . "secondaryListingCount"))
      ((name . "slug"))
      ((name . "url"))))
    ((name . "MarketplaceListing")
     (kind . "OBJECT")
     (description . "A listing in the GitHub integration marketplace.")
     (fields
      ((name . "app"))
      ((name . "companyUrl"))
      ((name . "configurationResourcePath"))
      ((name . "configurationUrl"))
      ((name . "documentationUrl"))
      ((name . "extendedDescription"))
      ((name . "extendedDescriptionHTML"))
      ((name . "fullDescription"))
      ((name . "fullDescriptionHTML"))
      ((name . "hasPublishedFreeTrialPlans"))
      ((name . "hasTermsOfService"))
      ((name . "hasVerifiedOwner"))
      ((name . "howItWorks"))
      ((name . "howItWorksHTML"))
      ((name . "id"))
      ((name . "installationUrl"))
      ((name . "installedForViewer"))
      ((name . "isArchived"))
      ((name . "isDraft"))
      ((name . "isPaid"))
      ((name . "isPublic"))
      ((name . "isRejected"))
      ((name . "isUnverified"))
      ((name . "isUnverifiedPending"))
      ((name . "isVerificationPendingFromDraft"))
      ((name . "isVerificationPendingFromUnverified"))
      ((name . "isVerified"))
      ((name . "logoBackgroundColor"))
      ((name . "logoUrl"))
      ((name . "name"))
      ((name . "normalizedShortDescription"))
      ((name . "pricingUrl"))
      ((name . "primaryCategory"))
      ((name . "privacyPolicyUrl"))
      ((name . "resourcePath"))
      ((name . "screenshotUrls"))
      ((name . "secondaryCategory"))
      ((name . "shortDescription"))
      ((name . "slug"))
      ((name . "statusUrl"))
      ((name . "supportEmail"))
      ((name . "supportUrl"))
      ((name . "termsOfServiceUrl"))
      ((name . "url"))
      ((name . "viewerCanAddPlans"))
      ((name . "viewerCanApprove"))
      ((name . "viewerCanDelist"))
      ((name . "viewerCanEdit"))
      ((name . "viewerCanEditCategories"))
      ((name . "viewerCanEditPlans"))
      ((name . "viewerCanRedraft"))
      ((name . "viewerCanReject"))
      ((name . "viewerCanRequestApproval"))
      ((name . "viewerHasPurchased"))
      ((name . "viewerHasPurchasedForAllOrganizations"))
      ((name . "viewerIsListingAdmin"))))
    ((name . "MarketplaceListingConnection")
     (kind . "OBJECT")
     (description . "Look up Marketplace Listings")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "MarketplaceListingEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "MemberStatusable")
     (kind . "INTERFACE")
     (description . "Entities that have members who can set status messages.")
     (fields
      ((name . "memberStatuses"))))
    ((name . "MembersCanDeleteReposClearAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a members_can_delete_repos.clear event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "enterpriseResourcePath"))
      ((name . "enterpriseSlug"))
      ((name . "enterpriseUrl"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "MembersCanDeleteReposDisableAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a members_can_delete_repos.disable event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "enterpriseResourcePath"))
      ((name . "enterpriseSlug"))
      ((name . "enterpriseUrl"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "MembersCanDeleteReposEnableAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a members_can_delete_repos.enable event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "enterpriseResourcePath"))
      ((name . "enterpriseSlug"))
      ((name . "enterpriseUrl"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "MentionedEvent")
     (kind . "OBJECT")
     (description . "Represents a 'mentioned' event on a given issue or pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "databaseId"))
      ((name . "id"))))
    ((name . "MergeBranchInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of MergeBranch")
     (fields))
    ((name . "MergeBranchPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of MergeBranch")
     (fields
      ((name . "clientMutationId"))
      ((name . "mergeCommit"))))
    ((name . "MergeCommitMessage")
     (kind . "ENUM")
     (description . "The possible default commit messages for merges.")
     (fields))
    ((name . "MergeCommitTitle")
     (kind . "ENUM")
     (description . "The possible default commit titles for merges.")
     (fields))
    ((name . "MergePullRequestInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of MergePullRequest")
     (fields))
    ((name . "MergePullRequestPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of MergePullRequest")
     (fields
      ((name . "actor"))
      ((name . "clientMutationId"))
      ((name . "pullRequest"))))
    ((name . "MergeQueue")
     (kind . "OBJECT")
     (description . "The queue of pull request entries to be merged into a protected branch in a repository.")
     (fields
      ((name . "configuration"))
      ((name . "entries"))
      ((name . "id"))
      ((name . "nextEntryEstimatedTimeToMerge"))
      ((name . "repository"))
      ((name . "resourcePath"))
      ((name . "url"))))
    ((name . "MergeQueueConfiguration")
     (kind . "OBJECT")
     (description . "Configuration for a MergeQueue")
     (fields
      ((name . "checkResponseTimeout"))
      ((name . "maximumEntriesToBuild"))
      ((name . "maximumEntriesToMerge"))
      ((name . "mergeMethod"))
      ((name . "mergingStrategy"))
      ((name . "minimumEntriesToMerge"))
      ((name . "minimumEntriesToMergeWaitTime"))))
    ((name . "MergeQueueEntry")
     (kind . "OBJECT")
     (description . "Entries in a MergeQueue")
     (fields
      ((name . "baseCommit"))
      ((name . "enqueuedAt"))
      ((name . "enqueuer"))
      ((name . "estimatedTimeToMerge"))
      ((name . "headCommit"))
      ((name . "id"))
      ((name . "jump"))
      ((name . "mergeQueue"))
      ((name . "position"))
      ((name . "pullRequest"))
      ((name . "solo"))
      ((name . "state"))))
    ((name . "MergeQueueEntryConnection")
     (kind . "OBJECT")
     (description . "The connection type for MergeQueueEntry.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "MergeQueueEntryEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "MergeQueueEntryState")
     (kind . "ENUM")
     (description . "The possible states for a merge queue entry.")
     (fields))
    ((name . "MergeQueueMergingStrategy")
     (kind . "ENUM")
     (description . "The possible merging strategies for a merge queue.")
     (fields))
    ((name . "MergeableState")
     (kind . "ENUM")
     (description . "Whether or not a PullRequest can be merged.")
     (fields))
    ((name . "MergedEvent")
     (kind . "OBJECT")
     (description . "Represents a 'merged' event on a given pull request.")
     (fields
      ((name . "actor"))
      ((name . "commit"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "mergeRef"))
      ((name . "mergeRefName"))
      ((name . "pullRequest"))
      ((name . "resourcePath"))
      ((name . "url"))))
    ((name . "Migration")
     (kind . "INTERFACE")
     (description . "Represents a GitHub Enterprise Importer (GEI) migration.")
     (fields
      ((name . "continueOnError"))
      ((name . "createdAt"))
      ((name . "databaseId"))
      ((name . "failureReason"))
      ((name . "id"))
      ((name . "migrationLogUrl"))
      ((name . "migrationSource"))
      ((name . "repositoryName"))
      ((name . "sourceUrl"))
      ((name . "state"))))
    ((name . "MigrationSource")
     (kind . "OBJECT")
     (description . "A GitHub Enterprise Importer (GEI) migration source.")
     (fields
      ((name . "id"))
      ((name . "name"))
      ((name . "type"))
      ((name . "url"))))
    ((name . "MigrationSourceType")
     (kind . "ENUM")
     (description . "Represents the different GitHub Enterprise Importer (GEI) migration sources.")
     (fields))
    ((name . "MigrationState")
     (kind . "ENUM")
     (description . "The GitHub Enterprise Importer (GEI) migration state.")
     (fields))
    ((name . "Milestone")
     (kind . "OBJECT")
     (description . "Represents a Milestone object on a given repository.")
     (fields
      ((name . "closed"))
      ((name . "closedAt"))
      ((name . "createdAt"))
      ((name . "creator"))
      ((name . "description"))
      ((name . "dueOn"))
      ((name . "id"))
      ((name . "issues"))
      ((name . "number"))
      ((name . "progressPercentage"))
      ((name . "pullRequests"))
      ((name . "repository"))
      ((name . "resourcePath"))
      ((name . "state"))
      ((name . "title"))
      ((name . "updatedAt"))
      ((name . "url"))
      ((name . "viewerCanClose"))
      ((name . "viewerCanReopen"))))
    ((name . "MilestoneConnection")
     (kind . "OBJECT")
     (description . "The connection type for Milestone.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "MilestoneEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "MilestoneItem")
     (kind . "UNION")
     (description . "Types that can be inside a Milestone.")
     (fields))
    ((name . "MilestoneOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for milestone connections.")
     (fields))
    ((name . "MilestoneOrderField")
     (kind . "ENUM")
     (description . "Properties by which milestone connections can be ordered.")
     (fields))
    ((name . "MilestoneState")
     (kind . "ENUM")
     (description . "The possible states of a milestone.")
     (fields))
    ((name . "MilestonedEvent")
     (kind . "OBJECT")
     (description . "Represents a 'milestoned' event on a given issue or pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "milestoneTitle"))
      ((name . "subject"))))
    ((name . "Minimizable")
     (kind . "INTERFACE")
     (description . "Entities that can be minimized.")
     (fields
      ((name . "isMinimized"))
      ((name . "minimizedReason"))
      ((name . "viewerCanMinimize"))))
    ((name . "MinimizeCommentInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of MinimizeComment")
     (fields))
    ((name . "MinimizeCommentPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of MinimizeComment")
     (fields
      ((name . "clientMutationId"))
      ((name . "minimizedComment"))))
    ((name . "MoveProjectCardInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of MoveProjectCard")
     (fields))
    ((name . "MoveProjectCardPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of MoveProjectCard")
     (fields
      ((name . "cardEdge"))
      ((name . "clientMutationId"))))
    ((name . "MoveProjectColumnInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of MoveProjectColumn")
     (fields))
    ((name . "MoveProjectColumnPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of MoveProjectColumn")
     (fields
      ((name . "clientMutationId"))
      ((name . "columnEdge"))))
    ((name . "MovedColumnsInProjectEvent")
     (kind . "OBJECT")
     (description . "Represents a 'moved_columns_in_project' event on a given issue or pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "databaseId"))
      ((name . "id"))))
    ((name . "Mutation")
     (kind . "OBJECT")
     (description . "The root query for implementing GraphQL mutations.")
     (fields
      ((name . "abortQueuedMigrations"))
      ((name . "acceptEnterpriseAdministratorInvitation"))
      ((name . "acceptTopicSuggestion"))
      ((name . "addAssigneesToAssignable"))
      ((name . "addComment"))
      ((name . "addDiscussionComment"))
      ((name . "addDiscussionPollVote"))
      ((name . "addEnterpriseOrganizationMember"))
      ((name . "addEnterpriseSupportEntitlement"))
      ((name . "addLabelsToLabelable"))
      ((name . "addProjectCard"))
      ((name . "addProjectColumn"))
      ((name . "addProjectV2DraftIssue"))
      ((name . "addProjectV2ItemById"))
      ((name . "addPullRequestReview"))
      ((name . "addPullRequestReviewComment"))
      ((name . "addPullRequestReviewThread"))
      ((name . "addReaction"))
      ((name . "addStar"))
      ((name . "addUpvote"))
      ((name . "addVerifiableDomain"))
      ((name . "approveDeployments"))
      ((name . "approveVerifiableDomain"))
      ((name . "archiveProjectV2Item"))
      ((name . "archiveRepository"))
      ((name . "cancelEnterpriseAdminInvitation"))
      ((name . "cancelSponsorship"))
      ((name . "changeUserStatus"))
      ((name . "clearLabelsFromLabelable"))
      ((name . "clearProjectV2ItemFieldValue"))
      ((name . "cloneProject"))
      ((name . "cloneTemplateRepository"))
      ((name . "closeDiscussion"))
      ((name . "closeIssue"))
      ((name . "closePullRequest"))
      ((name . "convertProjectCardNoteToIssue"))
      ((name . "convertPullRequestToDraft"))
      ((name . "copyProjectV2"))
      ((name . "createAttributionInvitation"))
      ((name . "createBranchProtectionRule"))
      ((name . "createCheckRun"))
      ((name . "createCheckSuite"))
      ((name . "createCommitOnBranch"))
      ((name . "createDiscussion"))
      ((name . "createEnterpriseOrganization"))
      ((name . "createEnvironment"))
      ((name . "createIpAllowListEntry"))
      ((name . "createIssue"))
      ((name . "createLinkedBranch"))
      ((name . "createMigrationSource"))
      ((name . "createProject"))
      ((name . "createProjectV2"))
      ((name . "createProjectV2Field"))
      ((name . "createPullRequest"))
      ((name . "createRef"))
      ((name . "createRepository"))
      ((name . "createRepositoryRuleset"))
      ((name . "createSponsorsListing"))
      ((name . "createSponsorsTier"))
      ((name . "createSponsorship"))
      ((name . "createSponsorships"))
      ((name . "createTeamDiscussion"))
      ((name . "createTeamDiscussionComment"))
      ((name . "declineTopicSuggestion"))
      ((name . "deleteBranchProtectionRule"))
      ((name . "deleteDeployment"))
      ((name . "deleteDiscussion"))
      ((name . "deleteDiscussionComment"))
      ((name . "deleteEnvironment"))
      ((name . "deleteIpAllowListEntry"))
      ((name . "deleteIssue"))
      ((name . "deleteIssueComment"))
      ((name . "deleteLinkedBranch"))
      ((name . "deleteProject"))
      ((name . "deleteProjectCard"))
      ((name . "deleteProjectColumn"))
      ((name . "deleteProjectV2"))
      ((name . "deleteProjectV2Field"))
      ((name . "deleteProjectV2Item"))
      ((name . "deleteProjectV2Workflow"))
      ((name . "deletePullRequestReview"))
      ((name . "deletePullRequestReviewComment"))
      ((name . "deleteRef"))
      ((name . "deleteRepositoryRuleset"))
      ((name . "deleteTeamDiscussion"))
      ((name . "deleteTeamDiscussionComment"))
      ((name . "deleteVerifiableDomain"))
      ((name . "dequeuePullRequest"))
      ((name . "disablePullRequestAutoMerge"))
      ((name . "dismissPullRequestReview"))
      ((name . "dismissRepositoryVulnerabilityAlert"))
      ((name . "enablePullRequestAutoMerge"))
      ((name . "enqueuePullRequest"))
      ((name . "followOrganization"))
      ((name . "followUser"))
      ((name . "grantEnterpriseOrganizationsMigratorRole"))
      ((name . "grantMigratorRole"))
      ((name . "inviteEnterpriseAdmin"))
      ((name . "linkProjectV2ToRepository"))
      ((name . "linkProjectV2ToTeam"))
      ((name . "linkRepositoryToProject"))
      ((name . "lockLockable"))
      ((name . "markDiscussionCommentAsAnswer"))
      ((name . "markFileAsViewed"))
      ((name . "markPullRequestReadyForReview"))
      ((name . "mergeBranch"))
      ((name . "mergePullRequest"))
      ((name . "minimizeComment"))
      ((name . "moveProjectCard"))
      ((name . "moveProjectColumn"))
      ((name . "pinIssue"))
      ((name . "publishSponsorsTier"))
      ((name . "regenerateEnterpriseIdentityProviderRecoveryCodes"))
      ((name . "regenerateVerifiableDomainToken"))
      ((name . "rejectDeployments"))
      ((name . "removeAssigneesFromAssignable"))
      ((name . "removeEnterpriseAdmin"))
      ((name . "removeEnterpriseIdentityProvider"))
      ((name . "removeEnterpriseMember"))
      ((name . "removeEnterpriseOrganization"))
      ((name . "removeEnterpriseSupportEntitlement"))
      ((name . "removeLabelsFromLabelable"))
      ((name . "removeOutsideCollaborator"))
      ((name . "removeReaction"))
      ((name . "removeStar"))
      ((name . "removeUpvote"))
      ((name . "reopenDiscussion"))
      ((name . "reopenIssue"))
      ((name . "reopenPullRequest"))
      ((name . "requestReviews"))
      ((name . "rerequestCheckSuite"))
      ((name . "resolveReviewThread"))
      ((name . "retireSponsorsTier"))
      ((name . "revertPullRequest"))
      ((name . "revokeEnterpriseOrganizationsMigratorRole"))
      ((name . "revokeMigratorRole"))
      ((name . "setEnterpriseIdentityProvider"))
      ((name . "setOrganizationInteractionLimit"))
      ((name . "setRepositoryInteractionLimit"))
      ((name . "setUserInteractionLimit"))
      ((name . "startOrganizationMigration"))
      ((name . "startRepositoryMigration"))
      ((name . "submitPullRequestReview"))
      ((name . "transferEnterpriseOrganization"))
      ((name . "transferIssue"))
      ((name . "unarchiveProjectV2Item"))
      ((name . "unarchiveRepository"))
      ((name . "unfollowOrganization"))
      ((name . "unfollowUser"))
      ((name . "unlinkProjectV2FromRepository"))
      ((name . "unlinkProjectV2FromTeam"))
      ((name . "unlinkRepositoryFromProject"))
      ((name . "unlockLockable"))
      ((name . "unmarkDiscussionCommentAsAnswer"))
      ((name . "unmarkFileAsViewed"))
      ((name . "unmarkIssueAsDuplicate"))
      ((name . "unminimizeComment"))
      ((name . "unpinIssue"))
      ((name . "unresolveReviewThread"))
      ((name . "updateBranchProtectionRule"))
      ((name . "updateCheckRun"))
      ((name . "updateCheckSuitePreferences"))
      ((name . "updateDiscussion"))
      ((name . "updateDiscussionComment"))
      ((name . "updateEnterpriseAdministratorRole"))
      ((name . "updateEnterpriseAllowPrivateRepositoryForkingSetting"))
      ((name . "updateEnterpriseDefaultRepositoryPermissionSetting"))
      ((name . "updateEnterpriseMembersCanChangeRepositoryVisibilitySetting"))
      ((name . "updateEnterpriseMembersCanCreateRepositoriesSetting"))
      ((name . "updateEnterpriseMembersCanDeleteIssuesSetting"))
      ((name . "updateEnterpriseMembersCanDeleteRepositoriesSetting"))
      ((name . "updateEnterpriseMembersCanInviteCollaboratorsSetting"))
      ((name . "updateEnterpriseMembersCanMakePurchasesSetting"))
      ((name . "updateEnterpriseMembersCanUpdateProtectedBranchesSetting"))
      ((name . "updateEnterpriseMembersCanViewDependencyInsightsSetting"))
      ((name . "updateEnterpriseOrganizationProjectsSetting"))
      ((name . "updateEnterpriseOwnerOrganizationRole"))
      ((name . "updateEnterpriseProfile"))
      ((name . "updateEnterpriseRepositoryProjectsSetting"))
      ((name . "updateEnterpriseTeamDiscussionsSetting"))
      ((name . "updateEnterpriseTwoFactorAuthenticationRequiredSetting"))
      ((name . "updateEnvironment"))
      ((name . "updateIpAllowListEnabledSetting"))
      ((name . "updateIpAllowListEntry"))
      ((name . "updateIpAllowListForInstalledAppsEnabledSetting"))
      ((name . "updateIssue"))
      ((name . "updateIssueComment"))
      ((name . "updateNotificationRestrictionSetting"))
      ((name . "updateOrganizationAllowPrivateRepositoryForkingSetting"))
      ((name . "updateOrganizationWebCommitSignoffSetting"))
      ((name . "updateProject"))
      ((name . "updateProjectCard"))
      ((name . "updateProjectColumn"))
      ((name . "updateProjectV2"))
      ((name . "updateProjectV2DraftIssue"))
      ((name . "updateProjectV2ItemFieldValue"))
      ((name . "updateProjectV2ItemPosition"))
      ((name . "updatePullRequest"))
      ((name . "updatePullRequestBranch"))
      ((name . "updatePullRequestReview"))
      ((name . "updatePullRequestReviewComment"))
      ((name . "updateRef"))
      ((name . "updateRepository"))
      ((name . "updateRepositoryRuleset"))
      ((name . "updateRepositoryWebCommitSignoffSetting"))
      ((name . "updateSponsorshipPreferences"))
      ((name . "updateSubscription"))
      ((name . "updateTeamDiscussion"))
      ((name . "updateTeamDiscussionComment"))
      ((name . "updateTeamsRepository"))
      ((name . "updateTopics"))
      ((name . "verifyVerifiableDomain"))))
    ((name . "Node")
     (kind . "INTERFACE")
     (description . "An object with an ID.")
     (fields
      ((name . "id"))))
    ((name . "NotificationRestrictionSettingValue")
     (kind . "ENUM")
     (description . "The possible values for the notification restriction setting.")
     (fields))
    ((name . "OIDCProvider")
     (kind . "OBJECT")
     (description . "An OIDC identity provider configured to provision identities for an enterprise. Visible to enterprise owners or enterprise owners' personal access tokens (classic) with read:enterprise or admin:enterprise scope.")
     (fields
      ((name . "enterprise"))
      ((name . "externalIdentities"))
      ((name . "id"))
      ((name . "providerType"))
      ((name . "tenantId"))))
    ((name . "OIDCProviderType")
     (kind . "ENUM")
     (description . "The OIDC identity provider type")
     (fields))
    ((name . "OauthApplicationAuditEntryData")
     (kind . "INTERFACE")
     (description . "Metadata for an audit entry with action oauth_application.*")
     (fields
      ((name . "oauthApplicationName"))
      ((name . "oauthApplicationResourcePath"))
      ((name . "oauthApplicationUrl"))))
    ((name . "OauthApplicationCreateAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a oauth_application.create event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "applicationUrl"))
      ((name . "callbackUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "oauthApplicationName"))
      ((name . "oauthApplicationResourcePath"))
      ((name . "oauthApplicationUrl"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "rateLimit"))
      ((name . "state"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "OauthApplicationCreateAuditEntryState")
     (kind . "ENUM")
     (description . "The state of an OAuth Application when it was created.")
     (fields))
    ((name . "OperationType")
     (kind . "ENUM")
     (description . "The corresponding operation type for the action")
     (fields))
    ((name . "OrderDirection")
     (kind . "ENUM")
     (description . "Possible directions in which to order a list of items when provided an `orderBy` argument.")
     (fields))
    ((name . "OrgAddBillingManagerAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a org.add_billing_manager")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "invitationEmail"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "OrgAddMemberAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a org.add_member")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "permission"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "OrgAddMemberAuditEntryPermission")
     (kind . "ENUM")
     (description . "The permissions available to members on an Organization.")
     (fields))
    ((name . "OrgBlockUserAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a org.block_user")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "blockedUser"))
      ((name . "blockedUserName"))
      ((name . "blockedUserResourcePath"))
      ((name . "blockedUserUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "OrgConfigDisableCollaboratorsOnlyAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a org.config.disable_collaborators_only event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "OrgConfigEnableCollaboratorsOnlyAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a org.config.enable_collaborators_only event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "OrgCreateAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a org.create event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "billingPlan"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "OrgCreateAuditEntryBillingPlan")
     (kind . "ENUM")
     (description . "The billing plans available for organizations.")
     (fields))
    ((name . "OrgDisableOauthAppRestrictionsAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a org.disable_oauth_app_restrictions event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "OrgDisableSamlAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a org.disable_saml event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "digestMethodUrl"))
      ((name . "id"))
      ((name . "issuerUrl"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "signatureMethodUrl"))
      ((name . "singleSignOnUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "OrgDisableTwoFactorRequirementAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a org.disable_two_factor_requirement event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "OrgEnableOauthAppRestrictionsAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a org.enable_oauth_app_restrictions event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "OrgEnableSamlAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a org.enable_saml event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "digestMethodUrl"))
      ((name . "id"))
      ((name . "issuerUrl"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "signatureMethodUrl"))
      ((name . "singleSignOnUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "OrgEnableTwoFactorRequirementAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a org.enable_two_factor_requirement event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "OrgEnterpriseOwnerOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for an organization's enterprise owner connections.")
     (fields))
    ((name . "OrgEnterpriseOwnerOrderField")
     (kind . "ENUM")
     (description . "Properties by which enterprise owners can be ordered.")
     (fields))
    ((name . "OrgInviteMemberAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a org.invite_member event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "email"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationInvitation"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "OrgInviteToBusinessAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a org.invite_to_business event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "enterpriseResourcePath"))
      ((name . "enterpriseSlug"))
      ((name . "enterpriseUrl"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "OrgOauthAppAccessApprovedAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a org.oauth_app_access_approved event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "oauthApplicationName"))
      ((name . "oauthApplicationResourcePath"))
      ((name . "oauthApplicationUrl"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "OrgOauthAppAccessDeniedAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a org.oauth_app_access_denied event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "oauthApplicationName"))
      ((name . "oauthApplicationResourcePath"))
      ((name . "oauthApplicationUrl"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "OrgOauthAppAccessRequestedAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a org.oauth_app_access_requested event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "oauthApplicationName"))
      ((name . "oauthApplicationResourcePath"))
      ((name . "oauthApplicationUrl"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "OrgRemoveBillingManagerAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a org.remove_billing_manager event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "reason"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "OrgRemoveBillingManagerAuditEntryReason")
     (kind . "ENUM")
     (description . "The reason a billing manager was removed from an Organization.")
     (fields))
    ((name . "OrgRemoveMemberAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a org.remove_member event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "membershipTypes"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "reason"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "OrgRemoveMemberAuditEntryMembershipType")
     (kind . "ENUM")
     (description . "The type of membership a user has with an Organization.")
     (fields))
    ((name . "OrgRemoveMemberAuditEntryReason")
     (kind . "ENUM")
     (description . "The reason a member was removed from an Organization.")
     (fields))
    ((name . "OrgRemoveOutsideCollaboratorAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a org.remove_outside_collaborator event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "membershipTypes"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "reason"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "OrgRemoveOutsideCollaboratorAuditEntryMembershipType")
     (kind . "ENUM")
     (description . "The type of membership a user has with an Organization.")
     (fields))
    ((name . "OrgRemoveOutsideCollaboratorAuditEntryReason")
     (kind . "ENUM")
     (description . "The reason an outside collaborator was removed from an Organization.")
     (fields))
    ((name . "OrgRestoreMemberAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a org.restore_member event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "restoredCustomEmailRoutingsCount"))
      ((name . "restoredIssueAssignmentsCount"))
      ((name . "restoredMemberships"))
      ((name . "restoredMembershipsCount"))
      ((name . "restoredRepositoriesCount"))
      ((name . "restoredRepositoryStarsCount"))
      ((name . "restoredRepositoryWatchesCount"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "OrgRestoreMemberAuditEntryMembership")
     (kind . "UNION")
     (description . "Types of memberships that can be restored for an Organization member.")
     (fields))
    ((name . "OrgRestoreMemberMembershipOrganizationAuditEntryData")
     (kind . "OBJECT")
     (description . "Metadata for an organization membership for org.restore_member actions")
     (fields
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))))
    ((name . "OrgRestoreMemberMembershipRepositoryAuditEntryData")
     (kind . "OBJECT")
     (description . "Metadata for a repository membership for org.restore_member actions")
     (fields
      ((name . "repository"))
      ((name . "repositoryName"))
      ((name . "repositoryResourcePath"))
      ((name . "repositoryUrl"))))
    ((name . "OrgRestoreMemberMembershipTeamAuditEntryData")
     (kind . "OBJECT")
     (description . "Metadata for a team membership for org.restore_member actions")
     (fields
      ((name . "team"))
      ((name . "teamName"))
      ((name . "teamResourcePath"))
      ((name . "teamUrl"))))
    ((name . "OrgUnblockUserAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a org.unblock_user")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "blockedUser"))
      ((name . "blockedUserName"))
      ((name . "blockedUserResourcePath"))
      ((name . "blockedUserUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "OrgUpdateDefaultRepositoryPermissionAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a org.update_default_repository_permission")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "permission"))
      ((name . "permissionWas"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "OrgUpdateDefaultRepositoryPermissionAuditEntryPermission")
     (kind . "ENUM")
     (description . "The default permission a repository can have in an Organization.")
     (fields))
    ((name . "OrgUpdateMemberAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a org.update_member event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "permission"))
      ((name . "permissionWas"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "OrgUpdateMemberAuditEntryPermission")
     (kind . "ENUM")
     (description . "The permissions available to members on an Organization.")
     (fields))
    ((name . "OrgUpdateMemberRepositoryCreationPermissionAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a org.update_member_repository_creation_permission event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "canCreateRepositories"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))
      ((name . "visibility"))))
    ((name . "OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility")
     (kind . "ENUM")
     (description . "The permissions available for repository creation on an Organization.")
     (fields))
    ((name . "OrgUpdateMemberRepositoryInvitationPermissionAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a org.update_member_repository_invitation_permission event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "canInviteOutsideCollaboratorsToRepositories"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "Organization")
     (kind . "OBJECT")
     (description . "An account on GitHub, with one or more owners, that has repositories, members and teams.")
     (fields
      ((name . "announcement"))
      ((name . "announcementExpiresAt"))
      ((name . "announcementUserDismissible"))
      ((name . "anyPinnableItems"))
      ((name . "auditLog"))
      ((name . "avatarUrl"))
      ((name . "createdAt"))
      ((name . "databaseId"))
      ((name . "description"))
      ((name . "descriptionHTML"))
      ((name . "domains"))
      ((name . "email"))
      ((name . "enterpriseOwners"))
      ((name . "estimatedNextSponsorsPayoutInCents"))
      ((name . "hasSponsorsListing"))
      ((name . "id"))
      ((name . "interactionAbility"))
      ((name . "ipAllowListEnabledSetting"))
      ((name . "ipAllowListEntries"))
      ((name . "ipAllowListForInstalledAppsEnabledSetting"))
      ((name . "isSponsoredBy"))
      ((name . "isSponsoringViewer"))
      ((name . "isVerified"))
      ((name . "itemShowcase"))
      ((name . "location"))
      ((name . "login"))
      ((name . "mannequins"))
      ((name . "memberStatuses"))
      ((name . "membersCanForkPrivateRepositories"))
      ((name . "membersWithRole"))
      ((name . "monthlyEstimatedSponsorsIncomeInCents"))
      ((name . "name"))
      ((name . "newTeamResourcePath"))
      ((name . "newTeamUrl"))
      ((name . "notificationDeliveryRestrictionEnabledSetting"))
      ((name . "organizationBillingEmail"))
      ((name . "packages"))
      ((name . "pendingMembers"))
      ((name . "pinnableItems"))
      ((name . "pinnedItems"))
      ((name . "pinnedItemsRemaining"))
      ((name . "project"))
      ((name . "projectV2"))
      ((name . "projects"))
      ((name . "projectsResourcePath"))
      ((name . "projectsUrl"))
      ((name . "projectsV2"))
      ((name . "recentProjects"))
      ((name . "repositories"))
      ((name . "repository"))
      ((name . "repositoryDiscussionComments"))
      ((name . "repositoryDiscussions"))
      ((name . "repositoryMigrations"))
      ((name . "requiresTwoFactorAuthentication"))
      ((name . "resourcePath"))
      ((name . "rulesets"))
      ((name . "samlIdentityProvider"))
      ((name . "sponsoring"))
      ((name . "sponsors"))
      ((name . "sponsorsActivities"))
      ((name . "sponsorsListing"))
      ((name . "sponsorshipForViewerAsSponsor"))
      ((name . "sponsorshipForViewerAsSponsorable"))
      ((name . "sponsorshipNewsletters"))
      ((name . "sponsorshipsAsMaintainer"))
      ((name . "sponsorshipsAsSponsor"))
      ((name . "team"))
      ((name . "teams"))
      ((name . "teamsResourcePath"))
      ((name . "teamsUrl"))
      ((name . "totalSponsorshipAmountAsSponsorInCents"))
      ((name . "twitterUsername"))
      ((name . "updatedAt"))
      ((name . "url"))
      ((name . "viewerCanAdminister"))
      ((name . "viewerCanChangePinnedItems"))
      ((name . "viewerCanCreateProjects"))
      ((name . "viewerCanCreateRepositories"))
      ((name . "viewerCanCreateTeams"))
      ((name . "viewerCanSponsor"))
      ((name . "viewerIsAMember"))
      ((name . "viewerIsFollowing"))
      ((name . "viewerIsSponsoring"))
      ((name . "webCommitSignoffRequired"))
      ((name . "websiteUrl"))))
    ((name . "OrganizationAuditEntry")
     (kind . "UNION")
     (description . "An audit entry in an organization audit log.")
     (fields))
    ((name . "OrganizationAuditEntryConnection")
     (kind . "OBJECT")
     (description . "The connection type for OrganizationAuditEntry.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "OrganizationAuditEntryData")
     (kind . "INTERFACE")
     (description . "Metadata for an audit entry with action org.*")
     (fields
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))))
    ((name . "OrganizationAuditEntryEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "OrganizationConnection")
     (kind . "OBJECT")
     (description . "A list of organizations managed by an enterprise.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "OrganizationEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "OrganizationEnterpriseOwnerConnection")
     (kind . "OBJECT")
     (description . "The connection type for User.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "OrganizationEnterpriseOwnerEdge")
     (kind . "OBJECT")
     (description . "An enterprise owner in the context of an organization that is part of the enterprise.")
     (fields
      ((name . "cursor"))
      ((name . "node"))
      ((name . "organizationRole"))))
    ((name . "OrganizationIdentityProvider")
     (kind . "OBJECT")
     (description . "An Identity Provider configured to provision SAML and SCIM identities for Organizations. Visible to (1) organization owners, (2) organization owners' personal access tokens (classic) with read:org or admin:org scope, (3) GitHub App with an installation token with read or write access to members.")
     (fields
      ((name . "digestMethod"))
      ((name . "externalIdentities"))
      ((name . "id"))
      ((name . "idpCertificate"))
      ((name . "issuer"))
      ((name . "organization"))
      ((name . "signatureMethod"))
      ((name . "ssoUrl"))))
    ((name . "OrganizationInvitation")
     (kind . "OBJECT")
     (description . "An Invitation for a user to an organization.")
     (fields
      ((name . "createdAt"))
      ((name . "email"))
      ((name . "id"))
      ((name . "invitationSource"))
      ((name . "invitationType"))
      ((name . "invitee"))
      ((name . "inviter"))
      ((name . "organization"))
      ((name . "role"))))
    ((name . "OrganizationInvitationConnection")
     (kind . "OBJECT")
     (description . "The connection type for OrganizationInvitation.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "OrganizationInvitationEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "OrganizationInvitationRole")
     (kind . "ENUM")
     (description . "The possible organization invitation roles.")
     (fields))
    ((name . "OrganizationInvitationSource")
     (kind . "ENUM")
     (description . "The possible organization invitation sources.")
     (fields))
    ((name . "OrganizationInvitationType")
     (kind . "ENUM")
     (description . "The possible organization invitation types.")
     (fields))
    ((name . "OrganizationMemberConnection")
     (kind . "OBJECT")
     (description . "The connection type for User.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "OrganizationMemberEdge")
     (kind . "OBJECT")
     (description . "Represents a user within an organization.")
     (fields
      ((name . "cursor"))
      ((name . "hasTwoFactorEnabled"))
      ((name . "node"))
      ((name . "role"))))
    ((name . "OrganizationMemberRole")
     (kind . "ENUM")
     (description . "The possible roles within an organization for its members.")
     (fields))
    ((name . "OrganizationMembersCanCreateRepositoriesSettingValue")
     (kind . "ENUM")
     (description . "The possible values for the members can create repositories setting on an organization.")
     (fields))
    ((name . "OrganizationMigration")
     (kind . "OBJECT")
     (description . "A GitHub Enterprise Importer (GEI) organization migration.")
     (fields
      ((name . "createdAt"))
      ((name . "databaseId"))
      ((name . "failureReason"))
      ((name . "id"))
      ((name . "remainingRepositoriesCount"))
      ((name . "sourceOrgName"))
      ((name . "sourceOrgUrl"))
      ((name . "state"))
      ((name . "targetOrgName"))
      ((name . "totalRepositoriesCount"))))
    ((name . "OrganizationMigrationState")
     (kind . "ENUM")
     (description . "The Octoshift Organization migration state.")
     (fields))
    ((name . "OrganizationOrUser")
     (kind . "UNION")
     (description . "Used for argument of CreateProjectV2 mutation.")
     (fields))
    ((name . "OrganizationOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for organization connections.")
     (fields))
    ((name . "OrganizationOrderField")
     (kind . "ENUM")
     (description . "Properties by which organization connections can be ordered.")
     (fields))
    ((name . "OrganizationTeamsHovercardContext")
     (kind . "OBJECT")
     (description . "An organization teams hovercard context")
     (fields
      ((name . "message"))
      ((name . "octicon"))
      ((name . "relevantTeams"))
      ((name . "teamsResourcePath"))
      ((name . "teamsUrl"))
      ((name . "totalTeamCount"))))
    ((name . "OrganizationsHovercardContext")
     (kind . "OBJECT")
     (description . "An organization list hovercard context")
     (fields
      ((name . "message"))
      ((name . "octicon"))
      ((name . "relevantOrganizations"))
      ((name . "totalOrganizationCount"))))
    ((name . "Package")
     (kind . "OBJECT")
     (description . "Information for an uploaded package.")
     (fields
      ((name . "id"))
      ((name . "latestVersion"))
      ((name . "name"))
      ((name . "packageType"))
      ((name . "repository"))
      ((name . "statistics"))
      ((name . "version"))
      ((name . "versions"))))
    ((name . "PackageConnection")
     (kind . "OBJECT")
     (description . "The connection type for Package.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "PackageEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "PackageFile")
     (kind . "OBJECT")
     (description . "A file in a package version.")
     (fields
      ((name . "id"))
      ((name . "md5"))
      ((name . "name"))
      ((name . "packageVersion"))
      ((name . "sha1"))
      ((name . "sha256"))
      ((name . "size"))
      ((name . "updatedAt"))
      ((name . "url"))))
    ((name . "PackageFileConnection")
     (kind . "OBJECT")
     (description . "The connection type for PackageFile.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "PackageFileEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "PackageFileOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ways in which lists of package files can be ordered upon return.")
     (fields))
    ((name . "PackageFileOrderField")
     (kind . "ENUM")
     (description . "Properties by which package file connections can be ordered.")
     (fields))
    ((name . "PackageOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ways in which lists of packages can be ordered upon return.")
     (fields))
    ((name . "PackageOrderField")
     (kind . "ENUM")
     (description . "Properties by which package connections can be ordered.")
     (fields))
    ((name . "PackageOwner")
     (kind . "INTERFACE")
     (description . "Represents an owner of a package.")
     (fields
      ((name . "id"))
      ((name . "packages"))))
    ((name . "PackageStatistics")
     (kind . "OBJECT")
     (description . "Represents a object that contains package activity statistics such as downloads.")
     (fields
      ((name . "downloadsTotalCount"))))
    ((name . "PackageTag")
     (kind . "OBJECT")
     (description . "A version tag contains the mapping between a tag name and a version.")
     (fields
      ((name . "id"))
      ((name . "name"))
      ((name . "version"))))
    ((name . "PackageType")
     (kind . "ENUM")
     (description . "The possible types of a package.")
     (fields))
    ((name . "PackageVersion")
     (kind . "OBJECT")
     (description . "Information about a specific package version.")
     (fields
      ((name . "files"))
      ((name . "id"))
      ((name . "package"))
      ((name . "platform"))
      ((name . "preRelease"))
      ((name . "readme"))
      ((name . "release"))
      ((name . "statistics"))
      ((name . "summary"))
      ((name . "version"))))
    ((name . "PackageVersionConnection")
     (kind . "OBJECT")
     (description . "The connection type for PackageVersion.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "PackageVersionEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "PackageVersionOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ways in which lists of package versions can be ordered upon return.")
     (fields))
    ((name . "PackageVersionOrderField")
     (kind . "ENUM")
     (description . "Properties by which package version connections can be ordered.")
     (fields))
    ((name . "PackageVersionStatistics")
     (kind . "OBJECT")
     (description . "Represents a object that contains package version activity statistics such as downloads.")
     (fields
      ((name . "downloadsTotalCount"))))
    ((name . "PageInfo")
     (kind . "OBJECT")
     (description . "Information about pagination in a connection.")
     (fields
      ((name . "endCursor"))
      ((name . "hasNextPage"))
      ((name . "hasPreviousPage"))
      ((name . "startCursor"))))
    ((name . "PatchStatus")
     (kind . "ENUM")
     (description . "The possible types of patch statuses.")
     (fields))
    ((name . "PermissionGranter")
     (kind . "UNION")
     (description . "Types that can grant permissions on a repository to a user")
     (fields))
    ((name . "PermissionSource")
     (kind . "OBJECT")
     (description . "A level of permission and source for a user's access to a repository.")
     (fields
      ((name . "organization"))
      ((name . "permission"))
      ((name . "source"))))
    ((name . "PinIssueInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of PinIssue")
     (fields))
    ((name . "PinIssuePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of PinIssue")
     (fields
      ((name . "clientMutationId"))
      ((name . "issue"))))
    ((name . "PinnableItem")
     (kind . "UNION")
     (description . "Types that can be pinned to a profile page.")
     (fields))
    ((name . "PinnableItemConnection")
     (kind . "OBJECT")
     (description . "The connection type for PinnableItem.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "PinnableItemEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "PinnableItemType")
     (kind . "ENUM")
     (description . "Represents items that can be pinned to a profile page or dashboard.")
     (fields))
    ((name . "PinnedDiscussion")
     (kind . "OBJECT")
     (description . "A Pinned Discussion is a discussion pinned to a repository's index page.")
     (fields
      ((name . "createdAt"))
      ((name . "databaseId"))
      ((name . "discussion"))
      ((name . "gradientStopColors"))
      ((name . "id"))
      ((name . "pattern"))
      ((name . "pinnedBy"))
      ((name . "preconfiguredGradient"))
      ((name . "repository"))
      ((name . "updatedAt"))))
    ((name . "PinnedDiscussionConnection")
     (kind . "OBJECT")
     (description . "The connection type for PinnedDiscussion.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "PinnedDiscussionEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "PinnedDiscussionGradient")
     (kind . "ENUM")
     (description . "Preconfigured gradients that may be used to style discussions pinned within a repository.")
     (fields))
    ((name . "PinnedDiscussionPattern")
     (kind . "ENUM")
     (description . "Preconfigured background patterns that may be used to style discussions pinned within a repository.")
     (fields))
    ((name . "PinnedEvent")
     (kind . "OBJECT")
     (description . "Represents a 'pinned' event on a given issue or pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "issue"))))
    ((name . "PinnedIssue")
     (kind . "OBJECT")
     (description . "A Pinned Issue is a issue pinned to a repository's index page.")
     (fields
      ((name . "databaseId"))
      ((name . "fullDatabaseId"))
      ((name . "id"))
      ((name . "issue"))
      ((name . "pinnedBy"))
      ((name . "repository"))))
    ((name . "PinnedIssueConnection")
     (kind . "OBJECT")
     (description . "The connection type for PinnedIssue.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "PinnedIssueEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "PreciseDateTime")
     (kind . "SCALAR")
     (description . "An ISO-8601 encoded UTC date string with millisecond precision.")
     (fields))
    ((name . "PrivateRepositoryForkingDisableAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a private_repository_forking.disable event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "enterpriseResourcePath"))
      ((name . "enterpriseSlug"))
      ((name . "enterpriseUrl"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "repository"))
      ((name . "repositoryName"))
      ((name . "repositoryResourcePath"))
      ((name . "repositoryUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "PrivateRepositoryForkingEnableAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a private_repository_forking.enable event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "enterpriseResourcePath"))
      ((name . "enterpriseSlug"))
      ((name . "enterpriseUrl"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "repository"))
      ((name . "repositoryName"))
      ((name . "repositoryResourcePath"))
      ((name . "repositoryUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "ProfileItemShowcase")
     (kind . "OBJECT")
     (description . "A curatable list of repositories relating to a repository owner, which defaults to showing the most popular repositories they own.")
     (fields
      ((name . "hasPinnedItems"))
      ((name . "items"))))
    ((name . "ProfileOwner")
     (kind . "INTERFACE")
     (description . "Represents any entity on GitHub that has a profile page.")
     (fields
      ((name . "anyPinnableItems"))
      ((name . "email"))
      ((name . "id"))
      ((name . "itemShowcase"))
      ((name . "location"))
      ((name . "login"))
      ((name . "name"))
      ((name . "pinnableItems"))
      ((name . "pinnedItems"))
      ((name . "pinnedItemsRemaining"))
      ((name . "viewerCanChangePinnedItems"))
      ((name . "websiteUrl"))))
    ((name . "Project")
     (kind . "OBJECT")
     (description . "Projects manage issues, pull requests and notes within a project owner.")
     (fields
      ((name . "body"))
      ((name . "bodyHTML"))
      ((name . "closed"))
      ((name . "closedAt"))
      ((name . "columns"))
      ((name . "createdAt"))
      ((name . "creator"))
      ((name . "databaseId"))
      ((name . "id"))
      ((name . "name"))
      ((name . "number"))
      ((name . "owner"))
      ((name . "pendingCards"))
      ((name . "progress"))
      ((name . "resourcePath"))
      ((name . "state"))
      ((name . "updatedAt"))
      ((name . "url"))
      ((name . "viewerCanClose"))
      ((name . "viewerCanReopen"))
      ((name . "viewerCanUpdate"))))
    ((name . "ProjectCard")
     (kind . "OBJECT")
     (description . "A card in a project.")
     (fields
      ((name . "column"))
      ((name . "content"))
      ((name . "createdAt"))
      ((name . "creator"))
      ((name . "databaseId"))
      ((name . "id"))
      ((name . "isArchived"))
      ((name . "note"))
      ((name . "project"))
      ((name . "resourcePath"))
      ((name . "state"))
      ((name . "updatedAt"))
      ((name . "url"))))
    ((name . "ProjectCardArchivedState")
     (kind . "ENUM")
     (description . "The possible archived states of a project card.")
     (fields))
    ((name . "ProjectCardConnection")
     (kind . "OBJECT")
     (description . "The connection type for ProjectCard.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "ProjectCardEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "ProjectCardItem")
     (kind . "UNION")
     (description . "Types that can be inside Project Cards.")
     (fields))
    ((name . "ProjectCardState")
     (kind . "ENUM")
     (description . "Various content states of a ProjectCard")
     (fields))
    ((name . "ProjectColumn")
     (kind . "OBJECT")
     (description . "A column inside a project.")
     (fields
      ((name . "cards"))
      ((name . "createdAt"))
      ((name . "databaseId"))
      ((name . "id"))
      ((name . "name"))
      ((name . "project"))
      ((name . "purpose"))
      ((name . "resourcePath"))
      ((name . "updatedAt"))
      ((name . "url"))))
    ((name . "ProjectColumnConnection")
     (kind . "OBJECT")
     (description . "The connection type for ProjectColumn.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "ProjectColumnEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "ProjectColumnPurpose")
     (kind . "ENUM")
     (description . "The semantic purpose of the column - todo, in progress, or done.")
     (fields))
    ((name . "ProjectConnection")
     (kind . "OBJECT")
     (description . "A list of projects associated with the owner.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "ProjectEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "ProjectOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ways in which lists of projects can be ordered upon return.")
     (fields))
    ((name . "ProjectOrderField")
     (kind . "ENUM")
     (description . "Properties by which project connections can be ordered.")
     (fields))
    ((name . "ProjectOwner")
     (kind . "INTERFACE")
     (description . "Represents an owner of a Project.")
     (fields
      ((name . "id"))
      ((name . "project"))
      ((name . "projects"))
      ((name . "projectsResourcePath"))
      ((name . "projectsUrl"))
      ((name . "viewerCanCreateProjects"))))
    ((name . "ProjectProgress")
     (kind . "OBJECT")
     (description . "Project progress stats.")
     (fields
      ((name . "doneCount"))
      ((name . "donePercentage"))
      ((name . "enabled"))
      ((name . "inProgressCount"))
      ((name . "inProgressPercentage"))
      ((name . "todoCount"))
      ((name . "todoPercentage"))))
    ((name . "ProjectState")
     (kind . "ENUM")
     (description . "State of the project; either 'open' or 'closed'")
     (fields))
    ((name . "ProjectTemplate")
     (kind . "ENUM")
     (description . "GitHub-provided templates for Projects")
     (fields))
    ((name . "ProjectV2")
     (kind . "OBJECT")
     (description . "New projects that manage issues, pull requests and drafts using tables and boards.")
     (fields
      ((name . "closed"))
      ((name . "closedAt"))
      ((name . "createdAt"))
      ((name . "creator"))
      ((name . "databaseId"))
      ((name . "field"))
      ((name . "fields"))
      ((name . "id"))
      ((name . "items"))
      ((name . "number"))
      ((name . "owner"))
      ((name . "public"))
      ((name . "readme"))
      ((name . "repositories"))
      ((name . "resourcePath"))
      ((name . "shortDescription"))
      ((name . "teams"))
      ((name . "template"))
      ((name . "title"))
      ((name . "updatedAt"))
      ((name . "url"))
      ((name . "view"))
      ((name . "viewerCanClose"))
      ((name . "viewerCanReopen"))
      ((name . "viewerCanUpdate"))
      ((name . "views"))
      ((name . "workflow"))
      ((name . "workflows"))))
    ((name . "ProjectV2Connection")
     (kind . "OBJECT")
     (description . "The connection type for ProjectV2.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "ProjectV2CustomFieldType")
     (kind . "ENUM")
     (description . "The type of a project field.")
     (fields))
    ((name . "ProjectV2Edge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "ProjectV2Field")
     (kind . "OBJECT")
     (description . "A field inside a project.")
     (fields
      ((name . "createdAt"))
      ((name . "dataType"))
      ((name . "databaseId"))
      ((name . "id"))
      ((name . "name"))
      ((name . "project"))
      ((name . "updatedAt"))))
    ((name . "ProjectV2FieldCommon")
     (kind . "INTERFACE")
     (description . "Common fields across different project field types")
     (fields
      ((name . "createdAt"))
      ((name . "dataType"))
      ((name . "databaseId"))
      ((name . "id"))
      ((name . "name"))
      ((name . "project"))
      ((name . "updatedAt"))))
    ((name . "ProjectV2FieldConfiguration")
     (kind . "UNION")
     (description . "Configurations for project fields.")
     (fields))
    ((name . "ProjectV2FieldConfigurationConnection")
     (kind . "OBJECT")
     (description . "The connection type for ProjectV2FieldConfiguration.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "ProjectV2FieldConfigurationEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "ProjectV2FieldConnection")
     (kind . "OBJECT")
     (description . "The connection type for ProjectV2Field.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "ProjectV2FieldEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "ProjectV2FieldOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for project v2 field connections")
     (fields))
    ((name . "ProjectV2FieldOrderField")
     (kind . "ENUM")
     (description . "Properties by which project v2 field connections can be ordered.")
     (fields))
    ((name . "ProjectV2FieldType")
     (kind . "ENUM")
     (description . "The type of a project field.")
     (fields))
    ((name . "ProjectV2FieldValue")
     (kind . "INPUT_OBJECT")
     (description . "The values that can be used to update a field of an item inside a Project. Only 1 value can be updated at a time.")
     (fields))
    ((name . "ProjectV2Filters")
     (kind . "INPUT_OBJECT")
     (description . "Ways in which to filter lists of projects.")
     (fields))
    ((name . "ProjectV2Item")
     (kind . "OBJECT")
     (description . "An item within a Project.")
     (fields
      ((name . "content"))
      ((name . "createdAt"))
      ((name . "creator"))
      ((name . "databaseId"))
      ((name . "fieldValueByName"))
      ((name . "fieldValues"))
      ((name . "id"))
      ((name . "isArchived"))
      ((name . "project"))
      ((name . "type"))
      ((name . "updatedAt"))))
    ((name . "ProjectV2ItemConnection")
     (kind . "OBJECT")
     (description . "The connection type for ProjectV2Item.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "ProjectV2ItemContent")
     (kind . "UNION")
     (description . "Types that can be inside Project Items.")
     (fields))
    ((name . "ProjectV2ItemEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "ProjectV2ItemFieldDateValue")
     (kind . "OBJECT")
     (description . "The value of a date field in a Project item.")
     (fields
      ((name . "createdAt"))
      ((name . "creator"))
      ((name . "databaseId"))
      ((name . "date"))
      ((name . "field"))
      ((name . "id"))
      ((name . "item"))
      ((name . "updatedAt"))))
    ((name . "ProjectV2ItemFieldIterationValue")
     (kind . "OBJECT")
     (description . "The value of an iteration field in a Project item.")
     (fields
      ((name . "createdAt"))
      ((name . "creator"))
      ((name . "databaseId"))
      ((name . "duration"))
      ((name . "field"))
      ((name . "id"))
      ((name . "item"))
      ((name . "iterationId"))
      ((name . "startDate"))
      ((name . "title"))
      ((name . "titleHTML"))
      ((name . "updatedAt"))))
    ((name . "ProjectV2ItemFieldLabelValue")
     (kind . "OBJECT")
     (description . "The value of the labels field in a Project item.")
     (fields
      ((name . "field"))
      ((name . "labels"))))
    ((name . "ProjectV2ItemFieldMilestoneValue")
     (kind . "OBJECT")
     (description . "The value of a milestone field in a Project item.")
     (fields
      ((name . "field"))
      ((name . "milestone"))))
    ((name . "ProjectV2ItemFieldNumberValue")
     (kind . "OBJECT")
     (description . "The value of a number field in a Project item.")
     (fields
      ((name . "createdAt"))
      ((name . "creator"))
      ((name . "databaseId"))
      ((name . "field"))
      ((name . "id"))
      ((name . "item"))
      ((name . "number"))
      ((name . "updatedAt"))))
    ((name . "ProjectV2ItemFieldPullRequestValue")
     (kind . "OBJECT")
     (description . "The value of a pull request field in a Project item.")
     (fields
      ((name . "field"))
      ((name . "pullRequests"))))
    ((name . "ProjectV2ItemFieldRepositoryValue")
     (kind . "OBJECT")
     (description . "The value of a repository field in a Project item.")
     (fields
      ((name . "field"))
      ((name . "repository"))))
    ((name . "ProjectV2ItemFieldReviewerValue")
     (kind . "OBJECT")
     (description . "The value of a reviewers field in a Project item.")
     (fields
      ((name . "field"))
      ((name . "reviewers"))))
    ((name . "ProjectV2ItemFieldSingleSelectValue")
     (kind . "OBJECT")
     (description . "The value of a single select field in a Project item.")
     (fields
      ((name . "createdAt"))
      ((name . "creator"))
      ((name . "databaseId"))
      ((name . "field"))
      ((name . "id"))
      ((name . "item"))
      ((name . "name"))
      ((name . "nameHTML"))
      ((name . "optionId"))
      ((name . "updatedAt"))))
    ((name . "ProjectV2ItemFieldTextValue")
     (kind . "OBJECT")
     (description . "The value of a text field in a Project item.")
     (fields
      ((name . "createdAt"))
      ((name . "creator"))
      ((name . "databaseId"))
      ((name . "field"))
      ((name . "id"))
      ((name . "item"))
      ((name . "text"))
      ((name . "updatedAt"))))
    ((name . "ProjectV2ItemFieldUserValue")
     (kind . "OBJECT")
     (description . "The value of a user field in a Project item.")
     (fields
      ((name . "field"))
      ((name . "users"))))
    ((name . "ProjectV2ItemFieldValue")
     (kind . "UNION")
     (description . "Project field values")
     (fields))
    ((name . "ProjectV2ItemFieldValueCommon")
     (kind . "INTERFACE")
     (description . "Common fields across different project field value types")
     (fields
      ((name . "createdAt"))
      ((name . "creator"))
      ((name . "databaseId"))
      ((name . "field"))
      ((name . "id"))
      ((name . "item"))
      ((name . "updatedAt"))))
    ((name . "ProjectV2ItemFieldValueConnection")
     (kind . "OBJECT")
     (description . "The connection type for ProjectV2ItemFieldValue.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "ProjectV2ItemFieldValueEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "ProjectV2ItemFieldValueOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for project v2 item field value connections")
     (fields))
    ((name . "ProjectV2ItemFieldValueOrderField")
     (kind . "ENUM")
     (description . "Properties by which project v2 item field value connections can be ordered.")
     (fields))
    ((name . "ProjectV2ItemOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for project v2 item connections")
     (fields))
    ((name . "ProjectV2ItemOrderField")
     (kind . "ENUM")
     (description . "Properties by which project v2 item connections can be ordered.")
     (fields))
    ((name . "ProjectV2ItemType")
     (kind . "ENUM")
     (description . "The type of a project item.")
     (fields))
    ((name . "ProjectV2IterationField")
     (kind . "OBJECT")
     (description . "An iteration field inside a project.")
     (fields
      ((name . "configuration"))
      ((name . "createdAt"))
      ((name . "dataType"))
      ((name . "databaseId"))
      ((name . "id"))
      ((name . "name"))
      ((name . "project"))
      ((name . "updatedAt"))))
    ((name . "ProjectV2IterationFieldConfiguration")
     (kind . "OBJECT")
     (description . "Iteration field configuration for a project.")
     (fields
      ((name . "completedIterations"))
      ((name . "duration"))
      ((name . "iterations"))
      ((name . "startDay"))))
    ((name . "ProjectV2IterationFieldIteration")
     (kind . "OBJECT")
     (description . "Iteration field iteration settings for a project.")
     (fields
      ((name . "duration"))
      ((name . "id"))
      ((name . "startDate"))
      ((name . "title"))
      ((name . "titleHTML"))))
    ((name . "ProjectV2Order")
     (kind . "INPUT_OBJECT")
     (description . "Ways in which lists of projects can be ordered upon return.")
     (fields))
    ((name . "ProjectV2OrderField")
     (kind . "ENUM")
     (description . "Properties by which projects can be ordered.")
     (fields))
    ((name . "ProjectV2Owner")
     (kind . "INTERFACE")
     (description . "Represents an owner of a project (beta).")
     (fields
      ((name . "id"))
      ((name . "projectV2"))
      ((name . "projectsV2"))))
    ((name . "ProjectV2Recent")
     (kind . "INTERFACE")
     (description . "Recent projects for the owner.")
     (fields
      ((name . "recentProjects"))))
    ((name . "ProjectV2SingleSelectField")
     (kind . "OBJECT")
     (description . "A single select field inside a project.")
     (fields
      ((name . "createdAt"))
      ((name . "dataType"))
      ((name . "databaseId"))
      ((name . "id"))
      ((name . "name"))
      ((name . "options"))
      ((name . "project"))
      ((name . "updatedAt"))))
    ((name . "ProjectV2SingleSelectFieldOption")
     (kind . "OBJECT")
     (description . "Single select field option for a configuration for a project.")
     (fields
      ((name . "id"))
      ((name . "name"))
      ((name . "nameHTML"))))
    ((name . "ProjectV2SingleSelectFieldOptionColor")
     (kind . "ENUM")
     (description . "The display color of a single-select field option.")
     (fields))
    ((name . "ProjectV2SingleSelectFieldOptionInput")
     (kind . "INPUT_OBJECT")
     (description . "Represents a single select field option")
     (fields))
    ((name . "ProjectV2SortBy")
     (kind . "OBJECT")
     (description . "Represents a sort by field and direction.")
     (fields
      ((name . "direction"))
      ((name . "field"))))
    ((name . "ProjectV2SortByConnection")
     (kind . "OBJECT")
     (description . "The connection type for ProjectV2SortBy.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "ProjectV2SortByEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "ProjectV2SortByField")
     (kind . "OBJECT")
     (description . "Represents a sort by field and direction.")
     (fields
      ((name . "direction"))
      ((name . "field"))))
    ((name . "ProjectV2SortByFieldConnection")
     (kind . "OBJECT")
     (description . "The connection type for ProjectV2SortByField.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "ProjectV2SortByFieldEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "ProjectV2State")
     (kind . "ENUM")
     (description . "The possible states of a project v2.")
     (fields))
    ((name . "ProjectV2View")
     (kind . "OBJECT")
     (description . "A view within a ProjectV2.")
     (fields
      ((name . "createdAt"))
      ((name . "databaseId"))
      ((name . "fields"))
      ((name . "filter"))
      ((name . "groupByFields"))
      ((name . "id"))
      ((name . "layout"))
      ((name . "name"))
      ((name . "number"))
      ((name . "project"))
      ((name . "sortByFields"))
      ((name . "updatedAt"))
      ((name . "verticalGroupByFields"))))
    ((name . "ProjectV2ViewConnection")
     (kind . "OBJECT")
     (description . "The connection type for ProjectV2View.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "ProjectV2ViewEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "ProjectV2ViewLayout")
     (kind . "ENUM")
     (description . "The layout of a project v2 view.")
     (fields))
    ((name . "ProjectV2ViewOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for project v2 view connections")
     (fields))
    ((name . "ProjectV2ViewOrderField")
     (kind . "ENUM")
     (description . "Properties by which project v2 view connections can be ordered.")
     (fields))
    ((name . "ProjectV2Workflow")
     (kind . "OBJECT")
     (description . "A workflow inside a project.")
     (fields
      ((name . "createdAt"))
      ((name . "databaseId"))
      ((name . "enabled"))
      ((name . "id"))
      ((name . "name"))
      ((name . "number"))
      ((name . "project"))
      ((name . "updatedAt"))))
    ((name . "ProjectV2WorkflowConnection")
     (kind . "OBJECT")
     (description . "The connection type for ProjectV2Workflow.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "ProjectV2WorkflowEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "ProjectV2WorkflowOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for project v2 workflows connections")
     (fields))
    ((name . "ProjectV2WorkflowsOrderField")
     (kind . "ENUM")
     (description . "Properties by which project workflows can be ordered.")
     (fields))
    ((name . "PublicKey")
     (kind . "OBJECT")
     (description . "A user's public key.")
     (fields
      ((name . "accessedAt"))
      ((name . "createdAt"))
      ((name . "fingerprint"))
      ((name . "id"))
      ((name . "isReadOnly"))
      ((name . "key"))
      ((name . "updatedAt"))))
    ((name . "PublicKeyConnection")
     (kind . "OBJECT")
     (description . "The connection type for PublicKey.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "PublicKeyEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "PublishSponsorsTierInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of PublishSponsorsTier")
     (fields))
    ((name . "PublishSponsorsTierPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of PublishSponsorsTier")
     (fields
      ((name . "clientMutationId"))
      ((name . "sponsorsTier"))))
    ((name . "PullRequest")
     (kind . "OBJECT")
     (description . "A repository pull request.")
     (fields
      ((name . "activeLockReason"))
      ((name . "additions"))
      ((name . "assignees"))
      ((name . "author"))
      ((name . "authorAssociation"))
      ((name . "autoMergeRequest"))
      ((name . "baseRef"))
      ((name . "baseRefName"))
      ((name . "baseRefOid"))
      ((name . "baseRepository"))
      ((name . "body"))
      ((name . "bodyHTML"))
      ((name . "bodyText"))
      ((name . "changedFiles"))
      ((name . "checksResourcePath"))
      ((name . "checksUrl"))
      ((name . "closed"))
      ((name . "closedAt"))
      ((name . "closingIssuesReferences"))
      ((name . "comments"))
      ((name . "commits"))
      ((name . "createdAt"))
      ((name . "createdViaEmail"))
      ((name . "databaseId"))
      ((name . "deletions"))
      ((name . "editor"))
      ((name . "files"))
      ((name . "headRef"))
      ((name . "headRefName"))
      ((name . "headRefOid"))
      ((name . "headRepository"))
      ((name . "headRepositoryOwner"))
      ((name . "hovercard"))
      ((name . "id"))
      ((name . "includesCreatedEdit"))
      ((name . "isCrossRepository"))
      ((name . "isDraft"))
      ((name . "isReadByViewer"))
      ((name . "labels"))
      ((name . "lastEditedAt"))
      ((name . "latestOpinionatedReviews"))
      ((name . "latestReviews"))
      ((name . "locked"))
      ((name . "maintainerCanModify"))
      ((name . "mergeCommit"))
      ((name . "mergeQueueEntry"))
      ((name . "mergeable"))
      ((name . "merged"))
      ((name . "mergedAt"))
      ((name . "mergedBy"))
      ((name . "milestone"))
      ((name . "number"))
      ((name . "participants"))
      ((name . "permalink"))
      ((name . "potentialMergeCommit"))
      ((name . "projectCards"))
      ((name . "projectItems"))
      ((name . "projectV2"))
      ((name . "projectsV2"))
      ((name . "publishedAt"))
      ((name . "reactionGroups"))
      ((name . "reactions"))
      ((name . "repository"))
      ((name . "resourcePath"))
      ((name . "revertResourcePath"))
      ((name . "revertUrl"))
      ((name . "reviewDecision"))
      ((name . "reviewRequests"))
      ((name . "reviewThreads"))
      ((name . "reviews"))
      ((name . "state"))
      ((name . "suggestedReviewers"))
      ((name . "timelineItems"))
      ((name . "title"))
      ((name . "titleHTML"))
      ((name . "totalCommentsCount"))
      ((name . "updatedAt"))
      ((name . "url"))
      ((name . "userContentEdits"))
      ((name . "viewerCanApplySuggestion"))
      ((name . "viewerCanClose"))
      ((name . "viewerCanDeleteHeadRef"))
      ((name . "viewerCanDisableAutoMerge"))
      ((name . "viewerCanEditFiles"))
      ((name . "viewerCanEnableAutoMerge"))
      ((name . "viewerCanMergeAsAdmin"))
      ((name . "viewerCanReact"))
      ((name . "viewerCanReopen"))
      ((name . "viewerCanSubscribe"))
      ((name . "viewerCanUpdate"))
      ((name . "viewerCanUpdateBranch"))
      ((name . "viewerCannotUpdateReasons"))
      ((name . "viewerDidAuthor"))
      ((name . "viewerLatestReview"))
      ((name . "viewerLatestReviewRequest"))
      ((name . "viewerMergeBodyText"))
      ((name . "viewerMergeHeadlineText"))
      ((name . "viewerSubscription"))))
    ((name . "PullRequestChangedFile")
     (kind . "OBJECT")
     (description . "A file changed in a pull request.")
     (fields
      ((name . "additions"))
      ((name . "changeType"))
      ((name . "deletions"))
      ((name . "path"))
      ((name . "viewerViewedState"))))
    ((name . "PullRequestChangedFileConnection")
     (kind . "OBJECT")
     (description . "The connection type for PullRequestChangedFile.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "PullRequestChangedFileEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "PullRequestCommit")
     (kind . "OBJECT")
     (description . "Represents a Git commit part of a pull request.")
     (fields
      ((name . "commit"))
      ((name . "id"))
      ((name . "pullRequest"))
      ((name . "resourcePath"))
      ((name . "url"))))
    ((name . "PullRequestCommitCommentThread")
     (kind . "OBJECT")
     (description . "Represents a commit comment thread part of a pull request.")
     (fields
      ((name . "comments"))
      ((name . "commit"))
      ((name . "id"))
      ((name . "path"))
      ((name . "position"))
      ((name . "pullRequest"))
      ((name . "repository"))))
    ((name . "PullRequestCommitConnection")
     (kind . "OBJECT")
     (description . "The connection type for PullRequestCommit.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "PullRequestCommitEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "PullRequestConnection")
     (kind . "OBJECT")
     (description . "The connection type for PullRequest.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "PullRequestContributionsByRepository")
     (kind . "OBJECT")
     (description . "This aggregates pull requests opened by a user within one repository.")
     (fields
      ((name . "contributions"))
      ((name . "repository"))))
    ((name . "PullRequestEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "PullRequestMergeMethod")
     (kind . "ENUM")
     (description . "Represents available types of methods to use when merging a pull request.")
     (fields))
    ((name . "PullRequestOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ways in which lists of issues can be ordered upon return.")
     (fields))
    ((name . "PullRequestOrderField")
     (kind . "ENUM")
     (description . "Properties by which pull_requests connections can be ordered.")
     (fields))
    ((name . "PullRequestParameters")
     (kind . "OBJECT")
     (description . "Parameters to be used for the pull_request rule")
     (fields
      ((name . "dismissStaleReviewsOnPush"))
      ((name . "requireCodeOwnerReview"))
      ((name . "requireLastPushApproval"))
      ((name . "requiredApprovingReviewCount"))
      ((name . "requiredReviewThreadResolution"))))
    ((name . "PullRequestParametersInput")
     (kind . "INPUT_OBJECT")
     (description . "Parameters to be used for the pull_request rule")
     (fields))
    ((name . "PullRequestReview")
     (kind . "OBJECT")
     (description . "A review object for a given pull request.")
     (fields
      ((name . "author"))
      ((name . "authorAssociation"))
      ((name . "authorCanPushToRepository"))
      ((name . "body"))
      ((name . "bodyHTML"))
      ((name . "bodyText"))
      ((name . "comments"))
      ((name . "commit"))
      ((name . "createdAt"))
      ((name . "createdViaEmail"))
      ((name . "databaseId"))
      ((name . "editor"))
      ((name . "id"))
      ((name . "includesCreatedEdit"))
      ((name . "lastEditedAt"))
      ((name . "onBehalfOf"))
      ((name . "publishedAt"))
      ((name . "pullRequest"))
      ((name . "reactionGroups"))
      ((name . "reactions"))
      ((name . "repository"))
      ((name . "resourcePath"))
      ((name . "state"))
      ((name . "submittedAt"))
      ((name . "updatedAt"))
      ((name . "url"))
      ((name . "userContentEdits"))
      ((name . "viewerCanDelete"))
      ((name . "viewerCanReact"))
      ((name . "viewerCanUpdate"))
      ((name . "viewerCannotUpdateReasons"))
      ((name . "viewerDidAuthor"))))
    ((name . "PullRequestReviewComment")
     (kind . "OBJECT")
     (description . "A review comment associated with a given repository pull request.")
     (fields
      ((name . "author"))
      ((name . "authorAssociation"))
      ((name . "body"))
      ((name . "bodyHTML"))
      ((name . "bodyText"))
      ((name . "commit"))
      ((name . "createdAt"))
      ((name . "createdViaEmail"))
      ((name . "databaseId"))
      ((name . "diffHunk"))
      ((name . "draftedAt"))
      ((name . "editor"))
      ((name . "id"))
      ((name . "includesCreatedEdit"))
      ((name . "isMinimized"))
      ((name . "lastEditedAt"))
      ((name . "line"))
      ((name . "minimizedReason"))
      ((name . "originalCommit"))
      ((name . "originalLine"))
      ((name . "originalStartLine"))
      ((name . "outdated"))
      ((name . "path"))
      ((name . "publishedAt"))
      ((name . "pullRequest"))
      ((name . "pullRequestReview"))
      ((name . "reactionGroups"))
      ((name . "reactions"))
      ((name . "replyTo"))
      ((name . "repository"))
      ((name . "resourcePath"))
      ((name . "startLine"))
      ((name . "state"))
      ((name . "subjectType"))
      ((name . "updatedAt"))
      ((name . "url"))
      ((name . "userContentEdits"))
      ((name . "viewerCanDelete"))
      ((name . "viewerCanMinimize"))
      ((name . "viewerCanReact"))
      ((name . "viewerCanUpdate"))
      ((name . "viewerCannotUpdateReasons"))
      ((name . "viewerDidAuthor"))))
    ((name . "PullRequestReviewCommentConnection")
     (kind . "OBJECT")
     (description . "The connection type for PullRequestReviewComment.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "PullRequestReviewCommentEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "PullRequestReviewCommentState")
     (kind . "ENUM")
     (description . "The possible states of a pull request review comment.")
     (fields))
    ((name . "PullRequestReviewConnection")
     (kind . "OBJECT")
     (description . "The connection type for PullRequestReview.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "PullRequestReviewContributionsByRepository")
     (kind . "OBJECT")
     (description . "This aggregates pull request reviews made by a user within one repository.")
     (fields
      ((name . "contributions"))
      ((name . "repository"))))
    ((name . "PullRequestReviewDecision")
     (kind . "ENUM")
     (description . "The review status of a pull request.")
     (fields))
    ((name . "PullRequestReviewEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "PullRequestReviewEvent")
     (kind . "ENUM")
     (description . "The possible events to perform on a pull request review.")
     (fields))
    ((name . "PullRequestReviewState")
     (kind . "ENUM")
     (description . "The possible states of a pull request review.")
     (fields))
    ((name . "PullRequestReviewThread")
     (kind . "OBJECT")
     (description . "A threaded list of comments for a given pull request.")
     (fields
      ((name . "comments"))
      ((name . "diffSide"))
      ((name . "id"))
      ((name . "isCollapsed"))
      ((name . "isOutdated"))
      ((name . "isResolved"))
      ((name . "line"))
      ((name . "originalLine"))
      ((name . "originalStartLine"))
      ((name . "path"))
      ((name . "pullRequest"))
      ((name . "repository"))
      ((name . "resolvedBy"))
      ((name . "startDiffSide"))
      ((name . "startLine"))
      ((name . "subjectType"))
      ((name . "viewerCanReply"))
      ((name . "viewerCanResolve"))
      ((name . "viewerCanUnresolve"))))
    ((name . "PullRequestReviewThreadConnection")
     (kind . "OBJECT")
     (description . "Review comment threads for a pull request review.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "PullRequestReviewThreadEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "PullRequestReviewThreadSubjectType")
     (kind . "ENUM")
     (description . "The possible subject types of a pull request review comment.")
     (fields))
    ((name . "PullRequestRevisionMarker")
     (kind . "OBJECT")
     (description . "Represents the latest point in the pull request timeline for which the viewer has seen the pull request's commits.")
     (fields
      ((name . "createdAt"))
      ((name . "lastSeenCommit"))
      ((name . "pullRequest"))))
    ((name . "PullRequestState")
     (kind . "ENUM")
     (description . "The possible states of a pull request.")
     (fields))
    ((name . "PullRequestTemplate")
     (kind . "OBJECT")
     (description . "A repository pull request template.")
     (fields
      ((name . "body"))
      ((name . "filename"))
      ((name . "repository"))))
    ((name . "PullRequestThread")
     (kind . "OBJECT")
     (description . "A threaded list of comments for a given pull request.")
     (fields
      ((name . "comments"))
      ((name . "diffSide"))
      ((name . "id"))
      ((name . "isCollapsed"))
      ((name . "isOutdated"))
      ((name . "isResolved"))
      ((name . "line"))
      ((name . "pullRequest"))
      ((name . "repository"))
      ((name . "resolvedBy"))
      ((name . "startDiffSide"))
      ((name . "startLine"))
      ((name . "viewerCanReply"))
      ((name . "viewerCanResolve"))
      ((name . "viewerCanUnresolve"))))
    ((name . "PullRequestTimelineConnection")
     (kind . "OBJECT")
     (description . "The connection type for PullRequestTimelineItem.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "PullRequestTimelineItem")
     (kind . "UNION")
     (description . "An item in a pull request timeline")
     (fields))
    ((name . "PullRequestTimelineItemEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "PullRequestTimelineItems")
     (kind . "UNION")
     (description . "An item in a pull request timeline")
     (fields))
    ((name . "PullRequestTimelineItemsConnection")
     (kind . "OBJECT")
     (description . "The connection type for PullRequestTimelineItems.")
     (fields
      ((name . "edges"))
      ((name . "filteredCount"))
      ((name . "nodes"))
      ((name . "pageCount"))
      ((name . "pageInfo"))
      ((name . "totalCount"))
      ((name . "updatedAt"))))
    ((name . "PullRequestTimelineItemsEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "PullRequestTimelineItemsItemType")
     (kind . "ENUM")
     (description . "The possible item types found in a timeline.")
     (fields))
    ((name . "PullRequestUpdateState")
     (kind . "ENUM")
     (description . "The possible target states when updating a pull request.")
     (fields))
    ((name . "Push")
     (kind . "OBJECT")
     (description . "A Git push.")
     (fields
      ((name . "id"))
      ((name . "nextSha"))
      ((name . "permalink"))
      ((name . "previousSha"))
      ((name . "pusher"))
      ((name . "repository"))))
    ((name . "PushAllowance")
     (kind . "OBJECT")
     (description . "A team, user, or app who has the ability to push to a protected branch.")
     (fields
      ((name . "actor"))
      ((name . "branchProtectionRule"))
      ((name . "id"))))
    ((name . "PushAllowanceActor")
     (kind . "UNION")
     (description . "Types that can be an actor.")
     (fields))
    ((name . "PushAllowanceConnection")
     (kind . "OBJECT")
     (description . "The connection type for PushAllowance.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "PushAllowanceEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "Query")
     (kind . "OBJECT")
     (description . "The query root of GitHub's GraphQL interface.")
     (fields
      ((name . "codeOfConduct"))
      ((name . "codesOfConduct"))
      ((name . "enterprise"))
      ((name . "enterpriseAdministratorInvitation"))
      ((name . "enterpriseAdministratorInvitationByToken"))
      ((name . "license"))
      ((name . "licenses"))
      ((name . "marketplaceCategories"))
      ((name . "marketplaceCategory"))
      ((name . "marketplaceListing"))
      ((name . "marketplaceListings"))
      ((name . "meta"))
      ((name . "node"))
      ((name . "nodes"))
      ((name . "organization"))
      ((name . "rateLimit"))
      ((name . "relay"))
      ((name . "repository"))
      ((name . "repositoryOwner"))
      ((name . "resource"))
      ((name . "search"))
      ((name . "securityAdvisories"))
      ((name . "securityAdvisory"))
      ((name . "securityVulnerabilities"))
      ((name . "sponsorables"))
      ((name . "topic"))
      ((name . "user"))
      ((name . "viewer"))))
    ((name . "RateLimit")
     (kind . "OBJECT")
     (description . "Represents the client's rate limit.")
     (fields
      ((name . "cost"))
      ((name . "limit"))
      ((name . "nodeCount"))
      ((name . "remaining"))
      ((name . "resetAt"))
      ((name . "used"))))
    ((name . "Reactable")
     (kind . "INTERFACE")
     (description . "Represents a subject that can be reacted on.")
     (fields
      ((name . "databaseId"))
      ((name . "id"))
      ((name . "reactionGroups"))
      ((name . "reactions"))
      ((name . "viewerCanReact"))))
    ((name . "ReactingUserConnection")
     (kind . "OBJECT")
     (description . "The connection type for User.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "ReactingUserEdge")
     (kind . "OBJECT")
     (description . "Represents a user that's made a reaction.")
     (fields
      ((name . "cursor"))
      ((name . "node"))
      ((name . "reactedAt"))))
    ((name . "Reaction")
     (kind . "OBJECT")
     (description . "An emoji reaction to a particular piece of content.")
     (fields
      ((name . "content"))
      ((name . "createdAt"))
      ((name . "databaseId"))
      ((name . "id"))
      ((name . "reactable"))
      ((name . "user"))))
    ((name . "ReactionConnection")
     (kind . "OBJECT")
     (description . "A list of reactions that have been left on the subject.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))
      ((name . "viewerHasReacted"))))
    ((name . "ReactionContent")
     (kind . "ENUM")
     (description . "Emojis that can be attached to Issues, Pull Requests and Comments.")
     (fields))
    ((name . "ReactionEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "ReactionGroup")
     (kind . "OBJECT")
     (description . "A group of emoji reactions to a particular piece of content.")
     (fields
      ((name . "content"))
      ((name . "createdAt"))
      ((name . "reactors"))
      ((name . "subject"))
      ((name . "viewerHasReacted"))))
    ((name . "ReactionOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ways in which lists of reactions can be ordered upon return.")
     (fields))
    ((name . "ReactionOrderField")
     (kind . "ENUM")
     (description . "A list of fields that reactions can be ordered by.")
     (fields))
    ((name . "Reactor")
     (kind . "UNION")
     (description . "Types that can be assigned to reactions.")
     (fields))
    ((name . "ReactorConnection")
     (kind . "OBJECT")
     (description . "The connection type for Reactor.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "ReactorEdge")
     (kind . "OBJECT")
     (description . "Represents an author of a reaction.")
     (fields
      ((name . "cursor"))
      ((name . "node"))
      ((name . "reactedAt"))))
    ((name . "ReadyForReviewEvent")
     (kind . "OBJECT")
     (description . "Represents a 'ready_for_review' event on a given pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "pullRequest"))
      ((name . "resourcePath"))
      ((name . "url"))))
    ((name . "Ref")
     (kind . "OBJECT")
     (description . "Represents a Git reference.")
     (fields
      ((name . "associatedPullRequests"))
      ((name . "branchProtectionRule"))
      ((name . "compare"))
      ((name . "id"))
      ((name . "name"))
      ((name . "prefix"))
      ((name . "refUpdateRule"))
      ((name . "repository"))
      ((name . "target"))))
    ((name . "RefConnection")
     (kind . "OBJECT")
     (description . "The connection type for Ref.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "RefEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "RefNameConditionTarget")
     (kind . "OBJECT")
     (description . "Parameters to be used for the ref_name condition")
     (fields
      ((name . "exclude"))
      ((name . "include"))))
    ((name . "RefNameConditionTargetInput")
     (kind . "INPUT_OBJECT")
     (description . "Parameters to be used for the ref_name condition")
     (fields))
    ((name . "RefOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ways in which lists of git refs can be ordered upon return.")
     (fields))
    ((name . "RefOrderField")
     (kind . "ENUM")
     (description . "Properties by which ref connections can be ordered.")
     (fields))
    ((name . "RefUpdateRule")
     (kind . "OBJECT")
     (description . "A ref update rules for a viewer.")
     (fields
      ((name . "allowsDeletions"))
      ((name . "allowsForcePushes"))
      ((name . "blocksCreations"))
      ((name . "pattern"))
      ((name . "requiredApprovingReviewCount"))
      ((name . "requiredStatusCheckContexts"))
      ((name . "requiresCodeOwnerReviews"))
      ((name . "requiresConversationResolution"))
      ((name . "requiresLinearHistory"))
      ((name . "requiresSignatures"))
      ((name . "viewerAllowedToDismissReviews"))
      ((name . "viewerCanPush"))))
    ((name . "ReferencedEvent")
     (kind . "OBJECT")
     (description . "Represents a 'referenced' event on a given `ReferencedSubject`.")
     (fields
      ((name . "actor"))
      ((name . "commit"))
      ((name . "commitRepository"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "isCrossRepository"))
      ((name . "isDirectReference"))
      ((name . "subject"))))
    ((name . "ReferencedSubject")
     (kind . "UNION")
     (description . "Any referencable object")
     (fields))
    ((name . "RegenerateEnterpriseIdentityProviderRecoveryCodesInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of RegenerateEnterpriseIdentityProviderRecoveryCodes")
     (fields))
    ((name . "RegenerateEnterpriseIdentityProviderRecoveryCodesPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of RegenerateEnterpriseIdentityProviderRecoveryCodes")
     (fields
      ((name . "clientMutationId"))
      ((name . "identityProvider"))))
    ((name . "RegenerateVerifiableDomainTokenInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of RegenerateVerifiableDomainToken")
     (fields))
    ((name . "RegenerateVerifiableDomainTokenPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of RegenerateVerifiableDomainToken")
     (fields
      ((name . "clientMutationId"))
      ((name . "verificationToken"))))
    ((name . "RejectDeploymentsInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of RejectDeployments")
     (fields))
    ((name . "RejectDeploymentsPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of RejectDeployments")
     (fields
      ((name . "clientMutationId"))
      ((name . "deployments"))))
    ((name . "Release")
     (kind . "OBJECT")
     (description . "A release contains the content for a release.")
     (fields
      ((name . "author"))
      ((name . "createdAt"))
      ((name . "databaseId"))
      ((name . "description"))
      ((name . "descriptionHTML"))
      ((name . "id"))
      ((name . "isDraft"))
      ((name . "isLatest"))
      ((name . "isPrerelease"))
      ((name . "mentions"))
      ((name . "name"))
      ((name . "publishedAt"))
      ((name . "reactionGroups"))
      ((name . "reactions"))
      ((name . "releaseAssets"))
      ((name . "repository"))
      ((name . "resourcePath"))
      ((name . "shortDescriptionHTML"))
      ((name . "tag"))
      ((name . "tagCommit"))
      ((name . "tagName"))
      ((name . "updatedAt"))
      ((name . "url"))
      ((name . "viewerCanReact"))))
    ((name . "ReleaseAsset")
     (kind . "OBJECT")
     (description . "A release asset contains the content for a release asset.")
     (fields
      ((name . "contentType"))
      ((name . "createdAt"))
      ((name . "downloadCount"))
      ((name . "downloadUrl"))
      ((name . "id"))
      ((name . "name"))
      ((name . "release"))
      ((name . "size"))
      ((name . "updatedAt"))
      ((name . "uploadedBy"))
      ((name . "url"))))
    ((name . "ReleaseAssetConnection")
     (kind . "OBJECT")
     (description . "The connection type for ReleaseAsset.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "ReleaseAssetEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "ReleaseConnection")
     (kind . "OBJECT")
     (description . "The connection type for Release.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "ReleaseEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "ReleaseOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ways in which lists of releases can be ordered upon return.")
     (fields))
    ((name . "ReleaseOrderField")
     (kind . "ENUM")
     (description . "Properties by which release connections can be ordered.")
     (fields))
    ((name . "RemoveAssigneesFromAssignableInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of RemoveAssigneesFromAssignable")
     (fields))
    ((name . "RemoveAssigneesFromAssignablePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of RemoveAssigneesFromAssignable")
     (fields
      ((name . "assignable"))
      ((name . "clientMutationId"))))
    ((name . "RemoveEnterpriseAdminInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of RemoveEnterpriseAdmin")
     (fields))
    ((name . "RemoveEnterpriseAdminPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of RemoveEnterpriseAdmin")
     (fields
      ((name . "admin"))
      ((name . "clientMutationId"))
      ((name . "enterprise"))
      ((name . "message"))
      ((name . "viewer"))))
    ((name . "RemoveEnterpriseIdentityProviderInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of RemoveEnterpriseIdentityProvider")
     (fields))
    ((name . "RemoveEnterpriseIdentityProviderPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of RemoveEnterpriseIdentityProvider")
     (fields
      ((name . "clientMutationId"))
      ((name . "identityProvider"))))
    ((name . "RemoveEnterpriseMemberInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of RemoveEnterpriseMember")
     (fields))
    ((name . "RemoveEnterpriseMemberPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of RemoveEnterpriseMember")
     (fields
      ((name . "clientMutationId"))
      ((name . "enterprise"))
      ((name . "user"))
      ((name . "viewer"))))
    ((name . "RemoveEnterpriseOrganizationInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of RemoveEnterpriseOrganization")
     (fields))
    ((name . "RemoveEnterpriseOrganizationPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of RemoveEnterpriseOrganization")
     (fields
      ((name . "clientMutationId"))
      ((name . "enterprise"))
      ((name . "organization"))
      ((name . "viewer"))))
    ((name . "RemoveEnterpriseSupportEntitlementInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of RemoveEnterpriseSupportEntitlement")
     (fields))
    ((name . "RemoveEnterpriseSupportEntitlementPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of RemoveEnterpriseSupportEntitlement")
     (fields
      ((name . "clientMutationId"))
      ((name . "message"))))
    ((name . "RemoveLabelsFromLabelableInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of RemoveLabelsFromLabelable")
     (fields))
    ((name . "RemoveLabelsFromLabelablePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of RemoveLabelsFromLabelable")
     (fields
      ((name . "clientMutationId"))
      ((name . "labelable"))))
    ((name . "RemoveOutsideCollaboratorInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of RemoveOutsideCollaborator")
     (fields))
    ((name . "RemoveOutsideCollaboratorPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of RemoveOutsideCollaborator")
     (fields
      ((name . "clientMutationId"))
      ((name . "removedUser"))))
    ((name . "RemoveReactionInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of RemoveReaction")
     (fields))
    ((name . "RemoveReactionPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of RemoveReaction")
     (fields
      ((name . "clientMutationId"))
      ((name . "reaction"))
      ((name . "reactionGroups"))
      ((name . "subject"))))
    ((name . "RemoveStarInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of RemoveStar")
     (fields))
    ((name . "RemoveStarPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of RemoveStar")
     (fields
      ((name . "clientMutationId"))
      ((name . "starrable"))))
    ((name . "RemoveUpvoteInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of RemoveUpvote")
     (fields))
    ((name . "RemoveUpvotePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of RemoveUpvote")
     (fields
      ((name . "clientMutationId"))
      ((name . "subject"))))
    ((name . "RemovedFromMergeQueueEvent")
     (kind . "OBJECT")
     (description . "Represents a 'removed_from_merge_queue' event on a given pull request.")
     (fields
      ((name . "actor"))
      ((name . "beforeCommit"))
      ((name . "createdAt"))
      ((name . "enqueuer"))
      ((name . "id"))
      ((name . "mergeQueue"))
      ((name . "pullRequest"))
      ((name . "reason"))))
    ((name . "RemovedFromProjectEvent")
     (kind . "OBJECT")
     (description . "Represents a 'removed_from_project' event on a given issue or pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "databaseId"))
      ((name . "id"))))
    ((name . "RenamedTitleEvent")
     (kind . "OBJECT")
     (description . "Represents a 'renamed' event on a given issue or pull request")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "currentTitle"))
      ((name . "id"))
      ((name . "previousTitle"))
      ((name . "subject"))))
    ((name . "RenamedTitleSubject")
     (kind . "UNION")
     (description . "An object which has a renamable title")
     (fields))
    ((name . "ReopenDiscussionInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of ReopenDiscussion")
     (fields))
    ((name . "ReopenDiscussionPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of ReopenDiscussion")
     (fields
      ((name . "clientMutationId"))
      ((name . "discussion"))))
    ((name . "ReopenIssueInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of ReopenIssue")
     (fields))
    ((name . "ReopenIssuePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of ReopenIssue")
     (fields
      ((name . "clientMutationId"))
      ((name . "issue"))))
    ((name . "ReopenPullRequestInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of ReopenPullRequest")
     (fields))
    ((name . "ReopenPullRequestPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of ReopenPullRequest")
     (fields
      ((name . "clientMutationId"))
      ((name . "pullRequest"))))
    ((name . "ReopenedEvent")
     (kind . "OBJECT")
     (description . "Represents a 'reopened' event on any `Closable`.")
     (fields
      ((name . "actor"))
      ((name . "closable"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "stateReason"))))
    ((name . "RepoAccessAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a repo.access event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "repository"))
      ((name . "repositoryName"))
      ((name . "repositoryResourcePath"))
      ((name . "repositoryUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))
      ((name . "visibility"))))
    ((name . "RepoAccessAuditEntryVisibility")
     (kind . "ENUM")
     (description . "The privacy of a repository")
     (fields))
    ((name . "RepoAddMemberAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a repo.add_member event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "repository"))
      ((name . "repositoryName"))
      ((name . "repositoryResourcePath"))
      ((name . "repositoryUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))
      ((name . "visibility"))))
    ((name . "RepoAddMemberAuditEntryVisibility")
     (kind . "ENUM")
     (description . "The privacy of a repository")
     (fields))
    ((name . "RepoAddTopicAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a repo.add_topic event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "repository"))
      ((name . "repositoryName"))
      ((name . "repositoryResourcePath"))
      ((name . "repositoryUrl"))
      ((name . "topic"))
      ((name . "topicName"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "RepoArchivedAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a repo.archived event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "repository"))
      ((name . "repositoryName"))
      ((name . "repositoryResourcePath"))
      ((name . "repositoryUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))
      ((name . "visibility"))))
    ((name . "RepoArchivedAuditEntryVisibility")
     (kind . "ENUM")
     (description . "The privacy of a repository")
     (fields))
    ((name . "RepoChangeMergeSettingAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a repo.change_merge_setting event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "isEnabled"))
      ((name . "mergeType"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "repository"))
      ((name . "repositoryName"))
      ((name . "repositoryResourcePath"))
      ((name . "repositoryUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "RepoChangeMergeSettingAuditEntryMergeType")
     (kind . "ENUM")
     (description . "The merge options available for pull requests to this repository.")
     (fields))
    ((name . "RepoConfigDisableAnonymousGitAccessAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a repo.config.disable_anonymous_git_access event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "repository"))
      ((name . "repositoryName"))
      ((name . "repositoryResourcePath"))
      ((name . "repositoryUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "RepoConfigDisableCollaboratorsOnlyAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a repo.config.disable_collaborators_only event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "repository"))
      ((name . "repositoryName"))
      ((name . "repositoryResourcePath"))
      ((name . "repositoryUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "RepoConfigDisableContributorsOnlyAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a repo.config.disable_contributors_only event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "repository"))
      ((name . "repositoryName"))
      ((name . "repositoryResourcePath"))
      ((name . "repositoryUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "RepoConfigDisableSockpuppetDisallowedAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a repo.config.disable_sockpuppet_disallowed event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "repository"))
      ((name . "repositoryName"))
      ((name . "repositoryResourcePath"))
      ((name . "repositoryUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "RepoConfigEnableAnonymousGitAccessAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a repo.config.enable_anonymous_git_access event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "repository"))
      ((name . "repositoryName"))
      ((name . "repositoryResourcePath"))
      ((name . "repositoryUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "RepoConfigEnableCollaboratorsOnlyAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a repo.config.enable_collaborators_only event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "repository"))
      ((name . "repositoryName"))
      ((name . "repositoryResourcePath"))
      ((name . "repositoryUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "RepoConfigEnableContributorsOnlyAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a repo.config.enable_contributors_only event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "repository"))
      ((name . "repositoryName"))
      ((name . "repositoryResourcePath"))
      ((name . "repositoryUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "RepoConfigEnableSockpuppetDisallowedAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a repo.config.enable_sockpuppet_disallowed event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "repository"))
      ((name . "repositoryName"))
      ((name . "repositoryResourcePath"))
      ((name . "repositoryUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "RepoConfigLockAnonymousGitAccessAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a repo.config.lock_anonymous_git_access event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "repository"))
      ((name . "repositoryName"))
      ((name . "repositoryResourcePath"))
      ((name . "repositoryUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "RepoConfigUnlockAnonymousGitAccessAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a repo.config.unlock_anonymous_git_access event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "repository"))
      ((name . "repositoryName"))
      ((name . "repositoryResourcePath"))
      ((name . "repositoryUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "RepoCreateAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a repo.create event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "forkParentName"))
      ((name . "forkSourceName"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "repository"))
      ((name . "repositoryName"))
      ((name . "repositoryResourcePath"))
      ((name . "repositoryUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))
      ((name . "visibility"))))
    ((name . "RepoCreateAuditEntryVisibility")
     (kind . "ENUM")
     (description . "The privacy of a repository")
     (fields))
    ((name . "RepoDestroyAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a repo.destroy event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "repository"))
      ((name . "repositoryName"))
      ((name . "repositoryResourcePath"))
      ((name . "repositoryUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))
      ((name . "visibility"))))
    ((name . "RepoDestroyAuditEntryVisibility")
     (kind . "ENUM")
     (description . "The privacy of a repository")
     (fields))
    ((name . "RepoRemoveMemberAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a repo.remove_member event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "repository"))
      ((name . "repositoryName"))
      ((name . "repositoryResourcePath"))
      ((name . "repositoryUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))
      ((name . "visibility"))))
    ((name . "RepoRemoveMemberAuditEntryVisibility")
     (kind . "ENUM")
     (description . "The privacy of a repository")
     (fields))
    ((name . "RepoRemoveTopicAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a repo.remove_topic event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "repository"))
      ((name . "repositoryName"))
      ((name . "repositoryResourcePath"))
      ((name . "repositoryUrl"))
      ((name . "topic"))
      ((name . "topicName"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "ReportedContentClassifiers")
     (kind . "ENUM")
     (description . "The reasons a piece of content can be reported or minimized.")
     (fields))
    ((name . "Repository")
     (kind . "OBJECT")
     (description . "A repository contains the content for a project.")
     (fields
      ((name . "allowUpdateBranch"))
      ((name . "archivedAt"))
      ((name . "assignableUsers"))
      ((name . "autoMergeAllowed"))
      ((name . "branchProtectionRules"))
      ((name . "codeOfConduct"))
      ((name . "codeowners"))
      ((name . "collaborators"))
      ((name . "commitComments"))
      ((name . "contactLinks"))
      ((name . "createdAt"))
      ((name . "databaseId"))
      ((name . "defaultBranchRef"))
      ((name . "deleteBranchOnMerge"))
      ((name . "deployKeys"))
      ((name . "deployments"))
      ((name . "description"))
      ((name . "descriptionHTML"))
      ((name . "discussion"))
      ((name . "discussionCategories"))
      ((name . "discussionCategory"))
      ((name . "discussions"))
      ((name . "diskUsage"))
      ((name . "environment"))
      ((name . "environments"))
      ((name . "forkCount"))
      ((name . "forkingAllowed"))
      ((name . "forks"))
      ((name . "fundingLinks"))
      ((name . "hasDiscussionsEnabled"))
      ((name . "hasIssuesEnabled"))
      ((name . "hasProjectsEnabled"))
      ((name . "hasVulnerabilityAlertsEnabled"))
      ((name . "hasWikiEnabled"))
      ((name . "homepageUrl"))
      ((name . "id"))
      ((name . "interactionAbility"))
      ((name . "isArchived"))
      ((name . "isBlankIssuesEnabled"))
      ((name . "isDisabled"))
      ((name . "isEmpty"))
      ((name . "isFork"))
      ((name . "isInOrganization"))
      ((name . "isLocked"))
      ((name . "isMirror"))
      ((name . "isPrivate"))
      ((name . "isSecurityPolicyEnabled"))
      ((name . "isTemplate"))
      ((name . "isUserConfigurationRepository"))
      ((name . "issue"))
      ((name . "issueOrPullRequest"))
      ((name . "issueTemplates"))
      ((name . "issues"))
      ((name . "label"))
      ((name . "labels"))
      ((name . "languages"))
      ((name . "latestRelease"))
      ((name . "licenseInfo"))
      ((name . "lockReason"))
      ((name . "mentionableUsers"))
      ((name . "mergeCommitAllowed"))
      ((name . "mergeCommitMessage"))
      ((name . "mergeCommitTitle"))
      ((name . "mergeQueue"))
      ((name . "milestone"))
      ((name . "milestones"))
      ((name . "mirrorUrl"))
      ((name . "name"))
      ((name . "nameWithOwner"))
      ((name . "object"))
      ((name . "openGraphImageUrl"))
      ((name . "owner"))
      ((name . "packages"))
      ((name . "parent"))
      ((name . "pinnedDiscussions"))
      ((name . "pinnedIssues"))
      ((name . "primaryLanguage"))
      ((name . "project"))
      ((name . "projectV2"))
      ((name . "projects"))
      ((name . "projectsResourcePath"))
      ((name . "projectsUrl"))
      ((name . "projectsV2"))
      ((name . "pullRequest"))
      ((name . "pullRequestTemplates"))
      ((name . "pullRequests"))
      ((name . "pushedAt"))
      ((name . "rebaseMergeAllowed"))
      ((name . "recentProjects"))
      ((name . "ref"))
      ((name . "refs"))
      ((name . "release"))
      ((name . "releases"))
      ((name . "repositoryTopics"))
      ((name . "resourcePath"))
      ((name . "rulesets"))
      ((name . "securityPolicyUrl"))
      ((name . "shortDescriptionHTML"))
      ((name . "squashMergeAllowed"))
      ((name . "squashMergeCommitMessage"))
      ((name . "squashMergeCommitTitle"))
      ((name . "sshUrl"))
      ((name . "stargazerCount"))
      ((name . "stargazers"))
      ((name . "submodules"))
      ((name . "tempCloneToken"))
      ((name . "templateRepository"))
      ((name . "updatedAt"))
      ((name . "url"))
      ((name . "usesCustomOpenGraphImage"))
      ((name . "viewerCanAdminister"))
      ((name . "viewerCanCreateProjects"))
      ((name . "viewerCanSubscribe"))
      ((name . "viewerCanUpdateTopics"))
      ((name . "viewerDefaultCommitEmail"))
      ((name . "viewerDefaultMergeMethod"))
      ((name . "viewerHasStarred"))
      ((name . "viewerPermission"))
      ((name . "viewerPossibleCommitEmails"))
      ((name . "viewerSubscription"))
      ((name . "visibility"))
      ((name . "vulnerabilityAlert"))
      ((name . "vulnerabilityAlerts"))
      ((name . "watchers"))
      ((name . "webCommitSignoffRequired"))))
    ((name . "RepositoryAffiliation")
     (kind . "ENUM")
     (description . "The affiliation of a user to a repository")
     (fields))
    ((name . "RepositoryAuditEntryData")
     (kind . "INTERFACE")
     (description . "Metadata for an audit entry with action repo.*")
     (fields
      ((name . "repository"))
      ((name . "repositoryName"))
      ((name . "repositoryResourcePath"))
      ((name . "repositoryUrl"))))
    ((name . "RepositoryCodeowners")
     (kind . "OBJECT")
     (description . "Information extracted from a repository's `CODEOWNERS` file.")
     (fields
      ((name . "errors"))))
    ((name . "RepositoryCodeownersError")
     (kind . "OBJECT")
     (description . "An error in a `CODEOWNERS` file.")
     (fields
      ((name . "column"))
      ((name . "kind"))
      ((name . "line"))
      ((name . "message"))
      ((name . "path"))
      ((name . "source"))
      ((name . "suggestion"))))
    ((name . "RepositoryCollaboratorConnection")
     (kind . "OBJECT")
     (description . "The connection type for User.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "RepositoryCollaboratorEdge")
     (kind . "OBJECT")
     (description . "Represents a user who is a collaborator of a repository.")
     (fields
      ((name . "cursor"))
      ((name . "node"))
      ((name . "permission"))
      ((name . "permissionSources"))))
    ((name . "RepositoryConnection")
     (kind . "OBJECT")
     (description . "A list of repositories owned by the subject.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))
      ((name . "totalDiskUsage"))))
    ((name . "RepositoryContactLink")
     (kind . "OBJECT")
     (description . "A repository contact link.")
     (fields
      ((name . "about"))
      ((name . "name"))
      ((name . "url"))))
    ((name . "RepositoryContributionType")
     (kind . "ENUM")
     (description . "The reason a repository is listed as 'contributed'.")
     (fields))
    ((name . "RepositoryDiscussionAuthor")
     (kind . "INTERFACE")
     (description . "Represents an author of discussions in repositories.")
     (fields
      ((name . "repositoryDiscussions"))))
    ((name . "RepositoryDiscussionCommentAuthor")
     (kind . "INTERFACE")
     (description . "Represents an author of discussion comments in repositories.")
     (fields
      ((name . "repositoryDiscussionComments"))))
    ((name . "RepositoryEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "RepositoryInfo")
     (kind . "INTERFACE")
     (description . "A subset of repository info.")
     (fields
      ((name . "archivedAt"))
      ((name . "createdAt"))
      ((name . "description"))
      ((name . "descriptionHTML"))
      ((name . "forkCount"))
      ((name . "hasDiscussionsEnabled"))
      ((name . "hasIssuesEnabled"))
      ((name . "hasProjectsEnabled"))
      ((name . "hasWikiEnabled"))
      ((name . "homepageUrl"))
      ((name . "isArchived"))
      ((name . "isFork"))
      ((name . "isInOrganization"))
      ((name . "isLocked"))
      ((name . "isMirror"))
      ((name . "isPrivate"))
      ((name . "isTemplate"))
      ((name . "licenseInfo"))
      ((name . "lockReason"))
      ((name . "mirrorUrl"))
      ((name . "name"))
      ((name . "nameWithOwner"))
      ((name . "openGraphImageUrl"))
      ((name . "owner"))
      ((name . "pushedAt"))
      ((name . "resourcePath"))
      ((name . "shortDescriptionHTML"))
      ((name . "updatedAt"))
      ((name . "url"))
      ((name . "usesCustomOpenGraphImage"))
      ((name . "visibility"))))
    ((name . "RepositoryInteractionAbility")
     (kind . "OBJECT")
     (description . "Repository interaction limit that applies to this object.")
     (fields
      ((name . "expiresAt"))
      ((name . "limit"))
      ((name . "origin"))))
    ((name . "RepositoryInteractionLimit")
     (kind . "ENUM")
     (description . "A repository interaction limit.")
     (fields))
    ((name . "RepositoryInteractionLimitExpiry")
     (kind . "ENUM")
     (description . "The length for a repository interaction limit to be enabled for.")
     (fields))
    ((name . "RepositoryInteractionLimitOrigin")
     (kind . "ENUM")
     (description . "Indicates where an interaction limit is configured.")
     (fields))
    ((name . "RepositoryInvitation")
     (kind . "OBJECT")
     (description . "An invitation for a user to be added to a repository.")
     (fields
      ((name . "email"))
      ((name . "id"))
      ((name . "invitee"))
      ((name . "inviter"))
      ((name . "permalink"))
      ((name . "permission"))
      ((name . "repository"))))
    ((name . "RepositoryInvitationConnection")
     (kind . "OBJECT")
     (description . "A list of repository invitations.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "RepositoryInvitationEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "RepositoryInvitationOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for repository invitation connections.")
     (fields))
    ((name . "RepositoryInvitationOrderField")
     (kind . "ENUM")
     (description . "Properties by which repository invitation connections can be ordered.")
     (fields))
    ((name . "RepositoryLockReason")
     (kind . "ENUM")
     (description . "The possible reasons a given repository could be in a locked state.")
     (fields))
    ((name . "RepositoryMigration")
     (kind . "OBJECT")
     (description . "A GitHub Enterprise Importer (GEI) repository migration.")
     (fields
      ((name . "continueOnError"))
      ((name . "createdAt"))
      ((name . "databaseId"))
      ((name . "failureReason"))
      ((name . "id"))
      ((name . "migrationLogUrl"))
      ((name . "migrationSource"))
      ((name . "repositoryName"))
      ((name . "sourceUrl"))
      ((name . "state"))))
    ((name . "RepositoryMigrationConnection")
     (kind . "OBJECT")
     (description . "The connection type for RepositoryMigration.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "RepositoryMigrationEdge")
     (kind . "OBJECT")
     (description . "Represents a repository migration.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "RepositoryMigrationOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for repository migrations.")
     (fields))
    ((name . "RepositoryMigrationOrderDirection")
     (kind . "ENUM")
     (description . "Possible directions in which to order a list of repository migrations when provided an `orderBy` argument.")
     (fields))
    ((name . "RepositoryMigrationOrderField")
     (kind . "ENUM")
     (description . "Properties by which repository migrations can be ordered.")
     (fields))
    ((name . "RepositoryNameConditionTarget")
     (kind . "OBJECT")
     (description . "Parameters to be used for the repository_name condition")
     (fields
      ((name . "exclude"))
      ((name . "include"))
      ((name . "protected"))))
    ((name . "RepositoryNameConditionTargetInput")
     (kind . "INPUT_OBJECT")
     (description . "Parameters to be used for the repository_name condition")
     (fields))
    ((name . "RepositoryNode")
     (kind . "INTERFACE")
     (description . "Represents a object that belongs to a repository.")
     (fields
      ((name . "repository"))))
    ((name . "RepositoryOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for repository connections")
     (fields))
    ((name . "RepositoryOrderField")
     (kind . "ENUM")
     (description . "Properties by which repository connections can be ordered.")
     (fields))
    ((name . "RepositoryOwner")
     (kind . "INTERFACE")
     (description . "Represents an owner of a Repository.")
     (fields
      ((name . "avatarUrl"))
      ((name . "id"))
      ((name . "login"))
      ((name . "repositories"))
      ((name . "repository"))
      ((name . "resourcePath"))
      ((name . "url"))))
    ((name . "RepositoryPermission")
     (kind . "ENUM")
     (description . "The access level to a repository")
     (fields))
    ((name . "RepositoryPrivacy")
     (kind . "ENUM")
     (description . "The privacy of a repository")
     (fields))
    ((name . "RepositoryRule")
     (kind . "OBJECT")
     (description . "A repository rule.")
     (fields
      ((name . "id"))
      ((name . "parameters"))
      ((name . "type"))))
    ((name . "RepositoryRuleConditions")
     (kind . "OBJECT")
     (description . "Set of conditions that determine if a ruleset will evaluate")
     (fields
      ((name . "refName"))
      ((name . "repositoryName"))))
    ((name . "RepositoryRuleConditionsInput")
     (kind . "INPUT_OBJECT")
     (description . "Specifies the conditions required for a ruleset to evaluate")
     (fields))
    ((name . "RepositoryRuleConnection")
     (kind . "OBJECT")
     (description . "The connection type for RepositoryRule.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "RepositoryRuleEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "RepositoryRuleInput")
     (kind . "INPUT_OBJECT")
     (description . "Specifies the attributes for a new or updated rule.")
     (fields))
    ((name . "RepositoryRuleType")
     (kind . "ENUM")
     (description . "The rule types supported in rulesets")
     (fields))
    ((name . "RepositoryRuleset")
     (kind . "OBJECT")
     (description . "A repository ruleset.")
     (fields
      ((name . "bypassActors"))
      ((name . "bypassMode"))
      ((name . "conditions"))
      ((name . "databaseId"))
      ((name . "enforcement"))
      ((name . "id"))
      ((name . "name"))
      ((name . "rules"))
      ((name . "source"))
      ((name . "target"))))
    ((name . "RepositoryRulesetBypassActor")
     (kind . "OBJECT")
     (description . "A team or app that has the ability to bypass a rules defined on a ruleset")
     (fields
      ((name . "actor"))
      ((name . "id"))
      ((name . "repositoryRuleset"))))
    ((name . "RepositoryRulesetBypassActorConnection")
     (kind . "OBJECT")
     (description . "The connection type for RepositoryRulesetBypassActor.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "RepositoryRulesetBypassActorEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "RepositoryRulesetConnection")
     (kind . "OBJECT")
     (description . "The connection type for RepositoryRuleset.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "RepositoryRulesetEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "RepositoryRulesetTarget")
     (kind . "ENUM")
     (description . "The targets supported for rulesets")
     (fields))
    ((name . "RepositoryTopic")
     (kind . "OBJECT")
     (description . "A repository-topic connects a repository to a topic.")
     (fields
      ((name . "id"))
      ((name . "resourcePath"))
      ((name . "topic"))
      ((name . "url"))))
    ((name . "RepositoryTopicConnection")
     (kind . "OBJECT")
     (description . "The connection type for RepositoryTopic.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "RepositoryTopicEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "RepositoryVisibility")
     (kind . "ENUM")
     (description . "The repository's visibility level.")
     (fields))
    ((name . "RepositoryVisibilityChangeDisableAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a repository_visibility_change.disable event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "enterpriseResourcePath"))
      ((name . "enterpriseSlug"))
      ((name . "enterpriseUrl"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "RepositoryVisibilityChangeEnableAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a repository_visibility_change.enable event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "enterpriseResourcePath"))
      ((name . "enterpriseSlug"))
      ((name . "enterpriseUrl"))
      ((name . "id"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "RepositoryVulnerabilityAlert")
     (kind . "OBJECT")
     (description . "A Dependabot alert for a repository with a dependency affected by a security vulnerability.")
     (fields
      ((name . "autoDismissedAt"))
      ((name . "createdAt"))
      ((name . "dependabotUpdate"))
      ((name . "dependencyScope"))
      ((name . "dismissComment"))
      ((name . "dismissReason"))
      ((name . "dismissedAt"))
      ((name . "dismisser"))
      ((name . "fixedAt"))
      ((name . "id"))
      ((name . "number"))
      ((name . "repository"))
      ((name . "securityAdvisory"))
      ((name . "securityVulnerability"))
      ((name . "state"))
      ((name . "vulnerableManifestFilename"))
      ((name . "vulnerableManifestPath"))
      ((name . "vulnerableRequirements"))))
    ((name . "RepositoryVulnerabilityAlertConnection")
     (kind . "OBJECT")
     (description . "The connection type for RepositoryVulnerabilityAlert.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "RepositoryVulnerabilityAlertDependencyScope")
     (kind . "ENUM")
     (description . "The possible scopes of an alert's dependency.")
     (fields))
    ((name . "RepositoryVulnerabilityAlertEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "RepositoryVulnerabilityAlertState")
     (kind . "ENUM")
     (description . "The possible states of an alert")
     (fields))
    ((name . "RequestReviewsInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of RequestReviews")
     (fields))
    ((name . "RequestReviewsPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of RequestReviews")
     (fields
      ((name . "actor"))
      ((name . "clientMutationId"))
      ((name . "pullRequest"))
      ((name . "requestedReviewersEdge"))))
    ((name . "RequestableCheckStatusState")
     (kind . "ENUM")
     (description . "The possible states that can be requested when creating a check run.")
     (fields))
    ((name . "RequestedReviewer")
     (kind . "UNION")
     (description . "Types that can be requested reviewers.")
     (fields))
    ((name . "RequestedReviewerConnection")
     (kind . "OBJECT")
     (description . "The connection type for RequestedReviewer.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "RequestedReviewerEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "RequirableByPullRequest")
     (kind . "INTERFACE")
     (description . "Represents a type that can be required by a pull request for merging.")
     (fields
      ((name . "isRequired"))))
    ((name . "RequiredDeploymentsParameters")
     (kind . "OBJECT")
     (description . "Parameters to be used for the required_deployments rule")
     (fields
      ((name . "requiredDeploymentEnvironments"))))
    ((name . "RequiredDeploymentsParametersInput")
     (kind . "INPUT_OBJECT")
     (description . "Parameters to be used for the required_deployments rule")
     (fields))
    ((name . "RequiredStatusCheckDescription")
     (kind . "OBJECT")
     (description . "Represents a required status check for a protected branch, but not any specific run of that check.")
     (fields
      ((name . "app"))
      ((name . "context"))))
    ((name . "RequiredStatusCheckInput")
     (kind . "INPUT_OBJECT")
     (description . "Specifies the attributes for a new or updated required status check.")
     (fields))
    ((name . "RequiredStatusChecksParameters")
     (kind . "OBJECT")
     (description . "Parameters to be used for the required_status_checks rule")
     (fields
      ((name . "requiredStatusChecks"))
      ((name . "strictRequiredStatusChecksPolicy"))))
    ((name . "RequiredStatusChecksParametersInput")
     (kind . "INPUT_OBJECT")
     (description . "Parameters to be used for the required_status_checks rule")
     (fields))
    ((name . "RerequestCheckSuiteInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of RerequestCheckSuite")
     (fields))
    ((name . "RerequestCheckSuitePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of RerequestCheckSuite")
     (fields
      ((name . "checkSuite"))
      ((name . "clientMutationId"))))
    ((name . "ResolveReviewThreadInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of ResolveReviewThread")
     (fields))
    ((name . "ResolveReviewThreadPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of ResolveReviewThread")
     (fields
      ((name . "clientMutationId"))
      ((name . "thread"))))
    ((name . "RestrictedContribution")
     (kind . "OBJECT")
     (description . "Represents a private contribution a user made on GitHub.")
     (fields
      ((name . "isRestricted"))
      ((name . "occurredAt"))
      ((name . "resourcePath"))
      ((name . "url"))
      ((name . "user"))))
    ((name . "RetireSponsorsTierInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of RetireSponsorsTier")
     (fields))
    ((name . "RetireSponsorsTierPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of RetireSponsorsTier")
     (fields
      ((name . "clientMutationId"))
      ((name . "sponsorsTier"))))
    ((name . "RevertPullRequestInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of RevertPullRequest")
     (fields))
    ((name . "RevertPullRequestPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of RevertPullRequest")
     (fields
      ((name . "clientMutationId"))
      ((name . "pullRequest"))
      ((name . "revertPullRequest"))))
    ((name . "ReviewDismissalAllowance")
     (kind . "OBJECT")
     (description . "A user, team, or app who has the ability to dismiss a review on a protected branch.")
     (fields
      ((name . "actor"))
      ((name . "branchProtectionRule"))
      ((name . "id"))))
    ((name . "ReviewDismissalAllowanceActor")
     (kind . "UNION")
     (description . "Types that can be an actor.")
     (fields))
    ((name . "ReviewDismissalAllowanceConnection")
     (kind . "OBJECT")
     (description . "The connection type for ReviewDismissalAllowance.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "ReviewDismissalAllowanceEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "ReviewDismissedEvent")
     (kind . "OBJECT")
     (description . "Represents a 'review_dismissed' event on a given issue or pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "databaseId"))
      ((name . "dismissalMessage"))
      ((name . "dismissalMessageHTML"))
      ((name . "id"))
      ((name . "previousReviewState"))
      ((name . "pullRequest"))
      ((name . "pullRequestCommit"))
      ((name . "resourcePath"))
      ((name . "review"))
      ((name . "url"))))
    ((name . "ReviewRequest")
     (kind . "OBJECT")
     (description . "A request for a user to review a pull request.")
     (fields
      ((name . "asCodeOwner"))
      ((name . "databaseId"))
      ((name . "id"))
      ((name . "pullRequest"))
      ((name . "requestedReviewer"))))
    ((name . "ReviewRequestConnection")
     (kind . "OBJECT")
     (description . "The connection type for ReviewRequest.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "ReviewRequestEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "ReviewRequestRemovedEvent")
     (kind . "OBJECT")
     (description . "Represents an 'review_request_removed' event on a given pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "pullRequest"))
      ((name . "requestedReviewer"))))
    ((name . "ReviewRequestedEvent")
     (kind . "OBJECT")
     (description . "Represents an 'review_requested' event on a given pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "pullRequest"))
      ((name . "requestedReviewer"))))
    ((name . "ReviewStatusHovercardContext")
     (kind . "OBJECT")
     (description . "A hovercard context with a message describing the current code review state of the pull\nrequest.\n")
     (fields
      ((name . "message"))
      ((name . "octicon"))
      ((name . "reviewDecision"))))
    ((name . "RevokeEnterpriseOrganizationsMigratorRoleInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of RevokeEnterpriseOrganizationsMigratorRole")
     (fields))
    ((name . "RevokeEnterpriseOrganizationsMigratorRolePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of RevokeEnterpriseOrganizationsMigratorRole")
     (fields
      ((name . "clientMutationId"))
      ((name . "organizations"))))
    ((name . "RevokeMigratorRoleInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of RevokeMigratorRole")
     (fields))
    ((name . "RevokeMigratorRolePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of RevokeMigratorRole")
     (fields
      ((name . "clientMutationId"))
      ((name . "success"))))
    ((name . "RoleInOrganization")
     (kind . "ENUM")
     (description . "Possible roles a user may have in relation to an organization.")
     (fields))
    ((name . "RuleBypassMode")
     (kind . "ENUM")
     (description . "The bypass mode for a rule or ruleset.")
     (fields))
    ((name . "RuleEnforcement")
     (kind . "ENUM")
     (description . "The level of enforcement for a rule or ruleset.")
     (fields))
    ((name . "RuleParameters")
     (kind . "UNION")
     (description . "Types which can be parameters for `RepositoryRule` objects.")
     (fields))
    ((name . "RuleParametersInput")
     (kind . "INPUT_OBJECT")
     (description . "Specifies the parameters for a `RepositoryRule` object. Only one of the fields should be specified.")
     (fields))
    ((name . "RuleSource")
     (kind . "UNION")
     (description . "Types which can have `RepositoryRule` objects.")
     (fields))
    ((name . "SamlDigestAlgorithm")
     (kind . "ENUM")
     (description . "The possible digest algorithms used to sign SAML requests for an identity provider.")
     (fields))
    ((name . "SamlSignatureAlgorithm")
     (kind . "ENUM")
     (description . "The possible signature algorithms used to sign SAML requests for a Identity Provider.")
     (fields))
    ((name . "SavedReply")
     (kind . "OBJECT")
     (description . "A Saved Reply is text a user can use to reply quickly.")
     (fields
      ((name . "body"))
      ((name . "bodyHTML"))
      ((name . "databaseId"))
      ((name . "id"))
      ((name . "title"))
      ((name . "user"))))
    ((name . "SavedReplyConnection")
     (kind . "OBJECT")
     (description . "The connection type for SavedReply.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "SavedReplyEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "SavedReplyOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for saved reply connections.")
     (fields))
    ((name . "SavedReplyOrderField")
     (kind . "ENUM")
     (description . "Properties by which saved reply connections can be ordered.")
     (fields))
    ((name . "SearchResultItem")
     (kind . "UNION")
     (description . "The results of a search.")
     (fields))
    ((name . "SearchResultItemConnection")
     (kind . "OBJECT")
     (description . "A list of results that matched against a search query. Regardless of the number of matches, a maximum of 1,000 results will be available across all types, potentially split across many pages.")
     (fields
      ((name . "codeCount"))
      ((name . "discussionCount"))
      ((name . "edges"))
      ((name . "issueCount"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "repositoryCount"))
      ((name . "userCount"))
      ((name . "wikiCount"))))
    ((name . "SearchResultItemEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))
      ((name . "textMatches"))))
    ((name . "SearchType")
     (kind . "ENUM")
     (description . "Represents the individual results of a search.")
     (fields))
    ((name . "SecurityAdvisory")
     (kind . "OBJECT")
     (description . "A GitHub Security Advisory")
     (fields
      ((name . "classification"))
      ((name . "cvss"))
      ((name . "cwes"))
      ((name . "databaseId"))
      ((name . "description"))
      ((name . "ghsaId"))
      ((name . "id"))
      ((name . "identifiers"))
      ((name . "notificationsPermalink"))
      ((name . "origin"))
      ((name . "permalink"))
      ((name . "publishedAt"))
      ((name . "references"))
      ((name . "severity"))
      ((name . "summary"))
      ((name . "updatedAt"))
      ((name . "vulnerabilities"))
      ((name . "withdrawnAt"))))
    ((name . "SecurityAdvisoryClassification")
     (kind . "ENUM")
     (description . "Classification of the advisory.")
     (fields))
    ((name . "SecurityAdvisoryConnection")
     (kind . "OBJECT")
     (description . "The connection type for SecurityAdvisory.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "SecurityAdvisoryEcosystem")
     (kind . "ENUM")
     (description . "The possible ecosystems of a security vulnerability's package.")
     (fields))
    ((name . "SecurityAdvisoryEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "SecurityAdvisoryIdentifier")
     (kind . "OBJECT")
     (description . "A GitHub Security Advisory Identifier")
     (fields
      ((name . "type"))
      ((name . "value"))))
    ((name . "SecurityAdvisoryIdentifierFilter")
     (kind . "INPUT_OBJECT")
     (description . "An advisory identifier to filter results on.")
     (fields))
    ((name . "SecurityAdvisoryIdentifierType")
     (kind . "ENUM")
     (description . "Identifier formats available for advisories.")
     (fields))
    ((name . "SecurityAdvisoryOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for security advisory connections")
     (fields))
    ((name . "SecurityAdvisoryOrderField")
     (kind . "ENUM")
     (description . "Properties by which security advisory connections can be ordered.")
     (fields))
    ((name . "SecurityAdvisoryPackage")
     (kind . "OBJECT")
     (description . "An individual package")
     (fields
      ((name . "ecosystem"))
      ((name . "name"))))
    ((name . "SecurityAdvisoryPackageVersion")
     (kind . "OBJECT")
     (description . "An individual package version")
     (fields
      ((name . "identifier"))))
    ((name . "SecurityAdvisoryReference")
     (kind . "OBJECT")
     (description . "A GitHub Security Advisory Reference")
     (fields
      ((name . "url"))))
    ((name . "SecurityAdvisorySeverity")
     (kind . "ENUM")
     (description . "Severity of the vulnerability.")
     (fields))
    ((name . "SecurityVulnerability")
     (kind . "OBJECT")
     (description . "An individual vulnerability within an Advisory")
     (fields
      ((name . "advisory"))
      ((name . "firstPatchedVersion"))
      ((name . "package"))
      ((name . "severity"))
      ((name . "updatedAt"))
      ((name . "vulnerableVersionRange"))))
    ((name . "SecurityVulnerabilityConnection")
     (kind . "OBJECT")
     (description . "The connection type for SecurityVulnerability.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "SecurityVulnerabilityEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "SecurityVulnerabilityOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for security vulnerability connections")
     (fields))
    ((name . "SecurityVulnerabilityOrderField")
     (kind . "ENUM")
     (description . "Properties by which security vulnerability connections can be ordered.")
     (fields))
    ((name . "SetEnterpriseIdentityProviderInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of SetEnterpriseIdentityProvider")
     (fields))
    ((name . "SetEnterpriseIdentityProviderPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of SetEnterpriseIdentityProvider")
     (fields
      ((name . "clientMutationId"))
      ((name . "identityProvider"))))
    ((name . "SetOrganizationInteractionLimitInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of SetOrganizationInteractionLimit")
     (fields))
    ((name . "SetOrganizationInteractionLimitPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of SetOrganizationInteractionLimit")
     (fields
      ((name . "clientMutationId"))
      ((name . "organization"))))
    ((name . "SetRepositoryInteractionLimitInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of SetRepositoryInteractionLimit")
     (fields))
    ((name . "SetRepositoryInteractionLimitPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of SetRepositoryInteractionLimit")
     (fields
      ((name . "clientMutationId"))
      ((name . "repository"))))
    ((name . "SetUserInteractionLimitInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of SetUserInteractionLimit")
     (fields))
    ((name . "SetUserInteractionLimitPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of SetUserInteractionLimit")
     (fields
      ((name . "clientMutationId"))
      ((name . "user"))))
    ((name . "SmimeSignature")
     (kind . "OBJECT")
     (description . "Represents an S/MIME signature on a Commit or Tag.")
     (fields
      ((name . "email"))
      ((name . "isValid"))
      ((name . "payload"))
      ((name . "signature"))
      ((name . "signer"))
      ((name . "state"))
      ((name . "wasSignedByGitHub"))))
    ((name . "SocialAccount")
     (kind . "OBJECT")
     (description . "Social media profile associated with a user.")
     (fields
      ((name . "displayName"))
      ((name . "provider"))
      ((name . "url"))))
    ((name . "SocialAccountConnection")
     (kind . "OBJECT")
     (description . "The connection type for SocialAccount.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "SocialAccountEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "SocialAccountProvider")
     (kind . "ENUM")
     (description . "Software or company that hosts social media accounts.")
     (fields))
    ((name . "Sponsor")
     (kind . "UNION")
     (description . "Entities that can sponsor others via GitHub Sponsors")
     (fields))
    ((name . "SponsorConnection")
     (kind . "OBJECT")
     (description . "The connection type for Sponsor.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "SponsorEdge")
     (kind . "OBJECT")
     (description . "Represents a user or organization who is sponsoring someone in GitHub Sponsors.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "SponsorOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for connections to get sponsor entities for GitHub Sponsors.")
     (fields))
    ((name . "SponsorOrderField")
     (kind . "ENUM")
     (description . "Properties by which sponsor connections can be ordered.")
     (fields))
    ((name . "Sponsorable")
     (kind . "INTERFACE")
     (description . "Entities that can sponsor or be sponsored through GitHub Sponsors.")
     (fields
      ((name . "estimatedNextSponsorsPayoutInCents"))
      ((name . "hasSponsorsListing"))
      ((name . "isSponsoredBy"))
      ((name . "isSponsoringViewer"))
      ((name . "monthlyEstimatedSponsorsIncomeInCents"))
      ((name . "sponsoring"))
      ((name . "sponsors"))
      ((name . "sponsorsActivities"))
      ((name . "sponsorsListing"))
      ((name . "sponsorshipForViewerAsSponsor"))
      ((name . "sponsorshipForViewerAsSponsorable"))
      ((name . "sponsorshipNewsletters"))
      ((name . "sponsorshipsAsMaintainer"))
      ((name . "sponsorshipsAsSponsor"))
      ((name . "totalSponsorshipAmountAsSponsorInCents"))
      ((name . "viewerCanSponsor"))
      ((name . "viewerIsSponsoring"))))
    ((name . "SponsorableItem")
     (kind . "UNION")
     (description . "Entities that can be sponsored via GitHub Sponsors")
     (fields))
    ((name . "SponsorableItemConnection")
     (kind . "OBJECT")
     (description . "The connection type for SponsorableItem.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "SponsorableItemEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "SponsorableOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for connections to get sponsorable entities for GitHub Sponsors.")
     (fields))
    ((name . "SponsorableOrderField")
     (kind . "ENUM")
     (description . "Properties by which sponsorable connections can be ordered.")
     (fields))
    ((name . "SponsorsActivity")
     (kind . "OBJECT")
     (description . "An event related to sponsorship activity.")
     (fields
      ((name . "action"))
      ((name . "id"))
      ((name . "previousSponsorsTier"))
      ((name . "sponsor"))
      ((name . "sponsorable"))
      ((name . "sponsorsTier"))
      ((name . "timestamp"))
      ((name . "viaBulkSponsorship"))))
    ((name . "SponsorsActivityAction")
     (kind . "ENUM")
     (description . "The possible actions that GitHub Sponsors activities can represent.")
     (fields))
    ((name . "SponsorsActivityConnection")
     (kind . "OBJECT")
     (description . "The connection type for SponsorsActivity.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "SponsorsActivityEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "SponsorsActivityOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for GitHub Sponsors activity connections.")
     (fields))
    ((name . "SponsorsActivityOrderField")
     (kind . "ENUM")
     (description . "Properties by which GitHub Sponsors activity connections can be ordered.")
     (fields))
    ((name . "SponsorsActivityPeriod")
     (kind . "ENUM")
     (description . "The possible time periods for which Sponsors activities can be requested.")
     (fields))
    ((name . "SponsorsCountryOrRegionCode")
     (kind . "ENUM")
     (description . "Represents countries or regions for billing and residence for a GitHub Sponsors profile.")
     (fields))
    ((name . "SponsorsGoal")
     (kind . "OBJECT")
     (description . "A goal associated with a GitHub Sponsors listing, representing a target the sponsored maintainer would like to attain.")
     (fields
      ((name . "description"))
      ((name . "kind"))
      ((name . "percentComplete"))
      ((name . "targetValue"))
      ((name . "title"))))
    ((name . "SponsorsGoalKind")
     (kind . "ENUM")
     (description . "The different kinds of goals a GitHub Sponsors member can have.")
     (fields))
    ((name . "SponsorsListing")
     (kind . "OBJECT")
     (description . "A GitHub Sponsors listing.")
     (fields
      ((name . "activeGoal"))
      ((name . "activeStripeConnectAccount"))
      ((name . "billingCountryOrRegion"))
      ((name . "contactEmailAddress"))
      ((name . "createdAt"))
      ((name . "dashboardResourcePath"))
      ((name . "dashboardUrl"))
      ((name . "featuredItems"))
      ((name . "fiscalHost"))
      ((name . "fullDescription"))
      ((name . "fullDescriptionHTML"))
      ((name . "id"))
      ((name . "isPublic"))
      ((name . "name"))
      ((name . "nextPayoutDate"))
      ((name . "residenceCountryOrRegion"))
      ((name . "resourcePath"))
      ((name . "shortDescription"))
      ((name . "slug"))
      ((name . "sponsorable"))
      ((name . "tiers"))
      ((name . "url"))))
    ((name . "SponsorsListingFeatureableItem")
     (kind . "UNION")
     (description . "A record that can be featured on a GitHub Sponsors profile.")
     (fields))
    ((name . "SponsorsListingFeaturedItem")
     (kind . "OBJECT")
     (description . "A record that is promoted on a GitHub Sponsors profile.")
     (fields
      ((name . "createdAt"))
      ((name . "description"))
      ((name . "featureable"))
      ((name . "id"))
      ((name . "position"))
      ((name . "sponsorsListing"))
      ((name . "updatedAt"))))
    ((name . "SponsorsListingFeaturedItemFeatureableType")
     (kind . "ENUM")
     (description . "The different kinds of records that can be featured on a GitHub Sponsors profile page.")
     (fields))
    ((name . "SponsorsTier")
     (kind . "OBJECT")
     (description . "A GitHub Sponsors tier associated with a GitHub Sponsors listing.")
     (fields
      ((name . "adminInfo"))
      ((name . "closestLesserValueTier"))
      ((name . "createdAt"))
      ((name . "description"))
      ((name . "descriptionHTML"))
      ((name . "id"))
      ((name . "isCustomAmount"))
      ((name . "isOneTime"))
      ((name . "monthlyPriceInCents"))
      ((name . "monthlyPriceInDollars"))
      ((name . "name"))
      ((name . "sponsorsListing"))
      ((name . "updatedAt"))))
    ((name . "SponsorsTierAdminInfo")
     (kind . "OBJECT")
     (description . "SponsorsTier information only visible to users that can administer the associated Sponsors listing.")
     (fields
      ((name . "isDraft"))
      ((name . "isPublished"))
      ((name . "isRetired"))
      ((name . "sponsorships"))))
    ((name . "SponsorsTierConnection")
     (kind . "OBJECT")
     (description . "The connection type for SponsorsTier.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "SponsorsTierEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "SponsorsTierOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for Sponsors tiers connections.")
     (fields))
    ((name . "SponsorsTierOrderField")
     (kind . "ENUM")
     (description . "Properties by which Sponsors tiers connections can be ordered.")
     (fields))
    ((name . "Sponsorship")
     (kind . "OBJECT")
     (description . "A sponsorship relationship between a sponsor and a maintainer")
     (fields
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "isActive"))
      ((name . "isOneTimePayment"))
      ((name . "isSponsorOptedIntoEmail"))
      ((name . "privacyLevel"))
      ((name . "sponsorEntity"))
      ((name . "sponsorable"))
      ((name . "tier"))
      ((name . "tierSelectedAt"))))
    ((name . "SponsorshipConnection")
     (kind . "OBJECT")
     (description . "The connection type for Sponsorship.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))
      ((name . "totalRecurringMonthlyPriceInCents"))
      ((name . "totalRecurringMonthlyPriceInDollars"))))
    ((name . "SponsorshipEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "SponsorshipNewsletter")
     (kind . "OBJECT")
     (description . "An update sent to sponsors of a user or organization on GitHub Sponsors.")
     (fields
      ((name . "author"))
      ((name . "body"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "isPublished"))
      ((name . "sponsorable"))
      ((name . "subject"))
      ((name . "updatedAt"))))
    ((name . "SponsorshipNewsletterConnection")
     (kind . "OBJECT")
     (description . "The connection type for SponsorshipNewsletter.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "SponsorshipNewsletterEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "SponsorshipNewsletterOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for sponsorship newsletter connections.")
     (fields))
    ((name . "SponsorshipNewsletterOrderField")
     (kind . "ENUM")
     (description . "Properties by which sponsorship update connections can be ordered.")
     (fields))
    ((name . "SponsorshipOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for sponsorship connections.")
     (fields))
    ((name . "SponsorshipOrderField")
     (kind . "ENUM")
     (description . "Properties by which sponsorship connections can be ordered.")
     (fields))
    ((name . "SponsorshipPrivacy")
     (kind . "ENUM")
     (description . "The privacy of a sponsorship")
     (fields))
    ((name . "SquashMergeCommitMessage")
     (kind . "ENUM")
     (description . "The possible default commit messages for squash merges.")
     (fields))
    ((name . "SquashMergeCommitTitle")
     (kind . "ENUM")
     (description . "The possible default commit titles for squash merges.")
     (fields))
    ((name . "SshSignature")
     (kind . "OBJECT")
     (description . "Represents an SSH signature on a Commit or Tag.")
     (fields
      ((name . "email"))
      ((name . "isValid"))
      ((name . "keyFingerprint"))
      ((name . "payload"))
      ((name . "signature"))
      ((name . "signer"))
      ((name . "state"))
      ((name . "wasSignedByGitHub"))))
    ((name . "StarOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ways in which star connections can be ordered.")
     (fields))
    ((name . "StarOrderField")
     (kind . "ENUM")
     (description . "Properties by which star connections can be ordered.")
     (fields))
    ((name . "StargazerConnection")
     (kind . "OBJECT")
     (description . "The connection type for User.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "StargazerEdge")
     (kind . "OBJECT")
     (description . "Represents a user that's starred a repository.")
     (fields
      ((name . "cursor"))
      ((name . "node"))
      ((name . "starredAt"))))
    ((name . "Starrable")
     (kind . "INTERFACE")
     (description . "Things that can be starred.")
     (fields
      ((name . "id"))
      ((name . "stargazerCount"))
      ((name . "stargazers"))
      ((name . "viewerHasStarred"))))
    ((name . "StarredRepositoryConnection")
     (kind . "OBJECT")
     (description . "The connection type for Repository.")
     (fields
      ((name . "edges"))
      ((name . "isOverLimit"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "StarredRepositoryEdge")
     (kind . "OBJECT")
     (description . "Represents a starred repository.")
     (fields
      ((name . "cursor"))
      ((name . "node"))
      ((name . "starredAt"))))
    ((name . "StartOrganizationMigrationInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of StartOrganizationMigration")
     (fields))
    ((name . "StartOrganizationMigrationPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of StartOrganizationMigration")
     (fields
      ((name . "clientMutationId"))
      ((name . "orgMigration"))))
    ((name . "StartRepositoryMigrationInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of StartRepositoryMigration")
     (fields))
    ((name . "StartRepositoryMigrationPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of StartRepositoryMigration")
     (fields
      ((name . "clientMutationId"))
      ((name . "repositoryMigration"))))
    ((name . "Status")
     (kind . "OBJECT")
     (description . "Represents a commit status.")
     (fields
      ((name . "combinedContexts"))
      ((name . "commit"))
      ((name . "context"))
      ((name . "contexts"))
      ((name . "id"))
      ((name . "state"))))
    ((name . "StatusCheckConfiguration")
     (kind . "OBJECT")
     (description . "Required status check")
     (fields
      ((name . "context"))
      ((name . "integrationId"))))
    ((name . "StatusCheckConfigurationInput")
     (kind . "INPUT_OBJECT")
     (description . "Required status check")
     (fields))
    ((name . "StatusCheckRollup")
     (kind . "OBJECT")
     (description . "Represents the rollup for both the check runs and status for a commit.")
     (fields
      ((name . "commit"))
      ((name . "contexts"))
      ((name . "id"))
      ((name . "state"))))
    ((name . "StatusCheckRollupContext")
     (kind . "UNION")
     (description . "Types that can be inside a StatusCheckRollup context.")
     (fields))
    ((name . "StatusCheckRollupContextConnection")
     (kind . "OBJECT")
     (description . "The connection type for StatusCheckRollupContext.")
     (fields
      ((name . "checkRunCount"))
      ((name . "checkRunCountsByState"))
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "statusContextCount"))
      ((name . "statusContextCountsByState"))
      ((name . "totalCount"))))
    ((name . "StatusCheckRollupContextEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "StatusContext")
     (kind . "OBJECT")
     (description . "Represents an individual commit status context")
     (fields
      ((name . "avatarUrl"))
      ((name . "commit"))
      ((name . "context"))
      ((name . "createdAt"))
      ((name . "creator"))
      ((name . "description"))
      ((name . "id"))
      ((name . "isRequired"))
      ((name . "state"))
      ((name . "targetUrl"))))
    ((name . "StatusContextStateCount")
     (kind . "OBJECT")
     (description . "Represents a count of the state of a status context.")
     (fields
      ((name . "count"))
      ((name . "state"))))
    ((name . "StatusState")
     (kind . "ENUM")
     (description . "The possible commit status states.")
     (fields))
    ((name . "String")
     (kind . "SCALAR")
     (description . "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.")
     (fields))
    ((name . "StripeConnectAccount")
     (kind . "OBJECT")
     (description . "A Stripe Connect account for receiving sponsorship funds from GitHub Sponsors.")
     (fields
      ((name . "accountId"))
      ((name . "billingCountryOrRegion"))
      ((name . "countryOrRegion"))
      ((name . "isActive"))
      ((name . "sponsorsListing"))
      ((name . "stripeDashboardUrl"))))
    ((name . "SubmitPullRequestReviewInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of SubmitPullRequestReview")
     (fields))
    ((name . "SubmitPullRequestReviewPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of SubmitPullRequestReview")
     (fields
      ((name . "clientMutationId"))
      ((name . "pullRequestReview"))))
    ((name . "Submodule")
     (kind . "OBJECT")
     (description . "A pointer to a repository at a specific revision embedded inside another repository.")
     (fields
      ((name . "branch"))
      ((name . "gitUrl"))
      ((name . "name"))
      ((name . "nameRaw"))
      ((name . "path"))
      ((name . "pathRaw"))
      ((name . "subprojectCommitOid"))))
    ((name . "SubmoduleConnection")
     (kind . "OBJECT")
     (description . "The connection type for Submodule.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "SubmoduleEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "Subscribable")
     (kind . "INTERFACE")
     (description . "Entities that can be subscribed to for web and email notifications.")
     (fields
      ((name . "id"))
      ((name . "viewerCanSubscribe"))
      ((name . "viewerSubscription"))))
    ((name . "SubscribedEvent")
     (kind . "OBJECT")
     (description . "Represents a 'subscribed' event on a given `Subscribable`.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "subscribable"))))
    ((name . "SubscriptionState")
     (kind . "ENUM")
     (description . "The possible states of a subscription.")
     (fields))
    ((name . "SuggestedReviewer")
     (kind . "OBJECT")
     (description . "A suggestion to review a pull request based on a user's commit history and review comments.")
     (fields
      ((name . "isAuthor"))
      ((name . "isCommenter"))
      ((name . "reviewer"))))
    ((name . "Tag")
     (kind . "OBJECT")
     (description . "Represents a Git tag.")
     (fields
      ((name . "abbreviatedOid"))
      ((name . "commitResourcePath"))
      ((name . "commitUrl"))
      ((name . "id"))
      ((name . "message"))
      ((name . "name"))
      ((name . "oid"))
      ((name . "repository"))
      ((name . "tagger"))
      ((name . "target"))))
    ((name . "TagNamePatternParameters")
     (kind . "OBJECT")
     (description . "Parameters to be used for the tag_name_pattern rule")
     (fields
      ((name . "name"))
      ((name . "negate"))
      ((name . "operator"))
      ((name . "pattern"))))
    ((name . "TagNamePatternParametersInput")
     (kind . "INPUT_OBJECT")
     (description . "Parameters to be used for the tag_name_pattern rule")
     (fields))
    ((name . "Team")
     (kind . "OBJECT")
     (description . "A team of users in an organization.")
     (fields
      ((name . "ancestors"))
      ((name . "avatarUrl"))
      ((name . "childTeams"))
      ((name . "combinedSlug"))
      ((name . "createdAt"))
      ((name . "databaseId"))
      ((name . "description"))
      ((name . "discussion"))
      ((name . "discussions"))
      ((name . "discussionsResourcePath"))
      ((name . "discussionsUrl"))
      ((name . "editTeamResourcePath"))
      ((name . "editTeamUrl"))
      ((name . "id"))
      ((name . "invitations"))
      ((name . "memberStatuses"))
      ((name . "members"))
      ((name . "membersResourcePath"))
      ((name . "membersUrl"))
      ((name . "name"))
      ((name . "newTeamResourcePath"))
      ((name . "newTeamUrl"))
      ((name . "notificationSetting"))
      ((name . "organization"))
      ((name . "parentTeam"))
      ((name . "privacy"))
      ((name . "projectV2"))
      ((name . "projectsV2"))
      ((name . "repositories"))
      ((name . "repositoriesResourcePath"))
      ((name . "repositoriesUrl"))
      ((name . "resourcePath"))
      ((name . "slug"))
      ((name . "teamsResourcePath"))
      ((name . "teamsUrl"))
      ((name . "updatedAt"))
      ((name . "url"))
      ((name . "viewerCanAdminister"))
      ((name . "viewerCanSubscribe"))
      ((name . "viewerSubscription"))))
    ((name . "TeamAddMemberAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a team.add_member event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "isLdapMapped"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "team"))
      ((name . "teamName"))
      ((name . "teamResourcePath"))
      ((name . "teamUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "TeamAddRepositoryAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a team.add_repository event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "isLdapMapped"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "repository"))
      ((name . "repositoryName"))
      ((name . "repositoryResourcePath"))
      ((name . "repositoryUrl"))
      ((name . "team"))
      ((name . "teamName"))
      ((name . "teamResourcePath"))
      ((name . "teamUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "TeamAuditEntryData")
     (kind . "INTERFACE")
     (description . "Metadata for an audit entry with action team.*")
     (fields
      ((name . "team"))
      ((name . "teamName"))
      ((name . "teamResourcePath"))
      ((name . "teamUrl"))))
    ((name . "TeamChangeParentTeamAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a team.change_parent_team event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "isLdapMapped"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "parentTeam"))
      ((name . "parentTeamName"))
      ((name . "parentTeamNameWas"))
      ((name . "parentTeamResourcePath"))
      ((name . "parentTeamUrl"))
      ((name . "parentTeamWas"))
      ((name . "parentTeamWasResourcePath"))
      ((name . "parentTeamWasUrl"))
      ((name . "team"))
      ((name . "teamName"))
      ((name . "teamResourcePath"))
      ((name . "teamUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "TeamConnection")
     (kind . "OBJECT")
     (description . "The connection type for Team.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "TeamDiscussion")
     (kind . "OBJECT")
     (description . "A team discussion.")
     (fields
      ((name . "author"))
      ((name . "authorAssociation"))
      ((name . "body"))
      ((name . "bodyHTML"))
      ((name . "bodyText"))
      ((name . "bodyVersion"))
      ((name . "comments"))
      ((name . "commentsResourcePath"))
      ((name . "commentsUrl"))
      ((name . "createdAt"))
      ((name . "createdViaEmail"))
      ((name . "databaseId"))
      ((name . "editor"))
      ((name . "id"))
      ((name . "includesCreatedEdit"))
      ((name . "isPinned"))
      ((name . "isPrivate"))
      ((name . "lastEditedAt"))
      ((name . "number"))
      ((name . "publishedAt"))
      ((name . "reactionGroups"))
      ((name . "reactions"))
      ((name . "resourcePath"))
      ((name . "team"))
      ((name . "title"))
      ((name . "updatedAt"))
      ((name . "url"))
      ((name . "userContentEdits"))
      ((name . "viewerCanDelete"))
      ((name . "viewerCanPin"))
      ((name . "viewerCanReact"))
      ((name . "viewerCanSubscribe"))
      ((name . "viewerCanUpdate"))
      ((name . "viewerCannotUpdateReasons"))
      ((name . "viewerDidAuthor"))
      ((name . "viewerSubscription"))))
    ((name . "TeamDiscussionComment")
     (kind . "OBJECT")
     (description . "A comment on a team discussion.")
     (fields
      ((name . "author"))
      ((name . "authorAssociation"))
      ((name . "body"))
      ((name . "bodyHTML"))
      ((name . "bodyText"))
      ((name . "bodyVersion"))
      ((name . "createdAt"))
      ((name . "createdViaEmail"))
      ((name . "databaseId"))
      ((name . "discussion"))
      ((name . "editor"))
      ((name . "id"))
      ((name . "includesCreatedEdit"))
      ((name . "lastEditedAt"))
      ((name . "number"))
      ((name . "publishedAt"))
      ((name . "reactionGroups"))
      ((name . "reactions"))
      ((name . "resourcePath"))
      ((name . "updatedAt"))
      ((name . "url"))
      ((name . "userContentEdits"))
      ((name . "viewerCanDelete"))
      ((name . "viewerCanReact"))
      ((name . "viewerCanUpdate"))
      ((name . "viewerCannotUpdateReasons"))
      ((name . "viewerDidAuthor"))))
    ((name . "TeamDiscussionCommentConnection")
     (kind . "OBJECT")
     (description . "The connection type for TeamDiscussionComment.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "TeamDiscussionCommentEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "TeamDiscussionCommentOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ways in which team discussion comment connections can be ordered.")
     (fields))
    ((name . "TeamDiscussionCommentOrderField")
     (kind . "ENUM")
     (description . "Properties by which team discussion comment connections can be ordered.")
     (fields))
    ((name . "TeamDiscussionConnection")
     (kind . "OBJECT")
     (description . "The connection type for TeamDiscussion.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "TeamDiscussionEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "TeamDiscussionOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ways in which team discussion connections can be ordered.")
     (fields))
    ((name . "TeamDiscussionOrderField")
     (kind . "ENUM")
     (description . "Properties by which team discussion connections can be ordered.")
     (fields))
    ((name . "TeamEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "TeamMemberConnection")
     (kind . "OBJECT")
     (description . "The connection type for User.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "TeamMemberEdge")
     (kind . "OBJECT")
     (description . "Represents a user who is a member of a team.")
     (fields
      ((name . "cursor"))
      ((name . "memberAccessResourcePath"))
      ((name . "memberAccessUrl"))
      ((name . "node"))
      ((name . "role"))))
    ((name . "TeamMemberOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for team member connections")
     (fields))
    ((name . "TeamMemberOrderField")
     (kind . "ENUM")
     (description . "Properties by which team member connections can be ordered.")
     (fields))
    ((name . "TeamMemberRole")
     (kind . "ENUM")
     (description . "The possible team member roles; either 'maintainer' or 'member'.")
     (fields))
    ((name . "TeamMembershipType")
     (kind . "ENUM")
     (description . "Defines which types of team members are included in the returned list. Can be one of IMMEDIATE, CHILD_TEAM or ALL.")
     (fields))
    ((name . "TeamNotificationSetting")
     (kind . "ENUM")
     (description . "The possible team notification values.")
     (fields))
    ((name . "TeamOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ways in which team connections can be ordered.")
     (fields))
    ((name . "TeamOrderField")
     (kind . "ENUM")
     (description . "Properties by which team connections can be ordered.")
     (fields))
    ((name . "TeamPrivacy")
     (kind . "ENUM")
     (description . "The possible team privacy values.")
     (fields))
    ((name . "TeamRemoveMemberAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a team.remove_member event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "isLdapMapped"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "team"))
      ((name . "teamName"))
      ((name . "teamResourcePath"))
      ((name . "teamUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "TeamRemoveRepositoryAuditEntry")
     (kind . "OBJECT")
     (description . "Audit log entry for a team.remove_repository event.")
     (fields
      ((name . "action"))
      ((name . "actor"))
      ((name . "actorIp"))
      ((name . "actorLocation"))
      ((name . "actorLogin"))
      ((name . "actorResourcePath"))
      ((name . "actorUrl"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "isLdapMapped"))
      ((name . "operationType"))
      ((name . "organization"))
      ((name . "organizationName"))
      ((name . "organizationResourcePath"))
      ((name . "organizationUrl"))
      ((name . "repository"))
      ((name . "repositoryName"))
      ((name . "repositoryResourcePath"))
      ((name . "repositoryUrl"))
      ((name . "team"))
      ((name . "teamName"))
      ((name . "teamResourcePath"))
      ((name . "teamUrl"))
      ((name . "user"))
      ((name . "userLogin"))
      ((name . "userResourcePath"))
      ((name . "userUrl"))))
    ((name . "TeamRepositoryConnection")
     (kind . "OBJECT")
     (description . "The connection type for Repository.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "TeamRepositoryEdge")
     (kind . "OBJECT")
     (description . "Represents a team repository.")
     (fields
      ((name . "cursor"))
      ((name . "node"))
      ((name . "permission"))))
    ((name . "TeamRepositoryOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for team repository connections")
     (fields))
    ((name . "TeamRepositoryOrderField")
     (kind . "ENUM")
     (description . "Properties by which team repository connections can be ordered.")
     (fields))
    ((name . "TeamRole")
     (kind . "ENUM")
     (description . "The role of a user on a team.")
     (fields))
    ((name . "TextMatch")
     (kind . "OBJECT")
     (description . "A text match within a search result.")
     (fields
      ((name . "fragment"))
      ((name . "highlights"))
      ((name . "property"))))
    ((name . "TextMatchHighlight")
     (kind . "OBJECT")
     (description . "Represents a single highlight in a search result match.")
     (fields
      ((name . "beginIndice"))
      ((name . "endIndice"))
      ((name . "text"))))
    ((name . "Topic")
     (kind . "OBJECT")
     (description . "A topic aggregates entities that are related to a subject.")
     (fields
      ((name . "id"))
      ((name . "name"))
      ((name . "relatedTopics"))
      ((name . "repositories"))
      ((name . "stargazerCount"))
      ((name . "stargazers"))
      ((name . "viewerHasStarred"))))
    ((name . "TopicAuditEntryData")
     (kind . "INTERFACE")
     (description . "Metadata for an audit entry with a topic.")
     (fields
      ((name . "topic"))
      ((name . "topicName"))))
    ((name . "TopicSuggestionDeclineReason")
     (kind . "ENUM")
     (description . "Reason that the suggested topic is declined.")
     (fields))
    ((name . "TrackedIssueStates")
     (kind . "ENUM")
     (description . "The possible states of a tracked issue.")
     (fields))
    ((name . "TransferEnterpriseOrganizationInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of TransferEnterpriseOrganization")
     (fields))
    ((name . "TransferEnterpriseOrganizationPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of TransferEnterpriseOrganization")
     (fields
      ((name . "clientMutationId"))
      ((name . "organization"))))
    ((name . "TransferIssueInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of TransferIssue")
     (fields))
    ((name . "TransferIssuePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of TransferIssue")
     (fields
      ((name . "clientMutationId"))
      ((name . "issue"))))
    ((name . "TransferredEvent")
     (kind . "OBJECT")
     (description . "Represents a 'transferred' event on a given issue or pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "fromRepository"))
      ((name . "id"))
      ((name . "issue"))))
    ((name . "Tree")
     (kind . "OBJECT")
     (description . "Represents a Git tree.")
     (fields
      ((name . "abbreviatedOid"))
      ((name . "commitResourcePath"))
      ((name . "commitUrl"))
      ((name . "entries"))
      ((name . "id"))
      ((name . "oid"))
      ((name . "repository"))))
    ((name . "TreeEntry")
     (kind . "OBJECT")
     (description . "Represents a Git tree entry.")
     (fields
      ((name . "extension"))
      ((name . "isGenerated"))
      ((name . "language"))
      ((name . "lineCount"))
      ((name . "mode"))
      ((name . "name"))
      ((name . "nameRaw"))
      ((name . "object"))
      ((name . "oid"))
      ((name . "path"))
      ((name . "pathRaw"))
      ((name . "repository"))
      ((name . "size"))
      ((name . "submodule"))
      ((name . "type"))))
    ((name . "URI")
     (kind . "SCALAR")
     (description . "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.")
     (fields))
    ((name . "UnarchiveProjectV2ItemInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UnarchiveProjectV2Item")
     (fields))
    ((name . "UnarchiveProjectV2ItemPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UnarchiveProjectV2Item")
     (fields
      ((name . "clientMutationId"))
      ((name . "item"))))
    ((name . "UnarchiveRepositoryInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UnarchiveRepository")
     (fields))
    ((name . "UnarchiveRepositoryPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UnarchiveRepository")
     (fields
      ((name . "clientMutationId"))
      ((name . "repository"))))
    ((name . "UnassignedEvent")
     (kind . "OBJECT")
     (description . "Represents an 'unassigned' event on any assignable object.")
     (fields
      ((name . "actor"))
      ((name . "assignable"))
      ((name . "assignee"))
      ((name . "createdAt"))
      ((name . "id"))))
    ((name . "UnfollowOrganizationInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UnfollowOrganization")
     (fields))
    ((name . "UnfollowOrganizationPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UnfollowOrganization")
     (fields
      ((name . "clientMutationId"))
      ((name . "organization"))))
    ((name . "UnfollowUserInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UnfollowUser")
     (fields))
    ((name . "UnfollowUserPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UnfollowUser")
     (fields
      ((name . "clientMutationId"))
      ((name . "user"))))
    ((name . "UniformResourceLocatable")
     (kind . "INTERFACE")
     (description . "Represents a type that can be retrieved by a URL.")
     (fields
      ((name . "resourcePath"))
      ((name . "url"))))
    ((name . "UnknownSignature")
     (kind . "OBJECT")
     (description . "Represents an unknown signature on a Commit or Tag.")
     (fields
      ((name . "email"))
      ((name . "isValid"))
      ((name . "payload"))
      ((name . "signature"))
      ((name . "signer"))
      ((name . "state"))
      ((name . "wasSignedByGitHub"))))
    ((name . "UnlabeledEvent")
     (kind . "OBJECT")
     (description . "Represents an 'unlabeled' event on a given issue or pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "label"))
      ((name . "labelable"))))
    ((name . "UnlinkProjectV2FromRepositoryInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UnlinkProjectV2FromRepository")
     (fields))
    ((name . "UnlinkProjectV2FromRepositoryPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UnlinkProjectV2FromRepository")
     (fields
      ((name . "clientMutationId"))
      ((name . "repository"))))
    ((name . "UnlinkProjectV2FromTeamInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UnlinkProjectV2FromTeam")
     (fields))
    ((name . "UnlinkProjectV2FromTeamPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UnlinkProjectV2FromTeam")
     (fields
      ((name . "clientMutationId"))
      ((name . "team"))))
    ((name . "UnlinkRepositoryFromProjectInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UnlinkRepositoryFromProject")
     (fields))
    ((name . "UnlinkRepositoryFromProjectPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UnlinkRepositoryFromProject")
     (fields
      ((name . "clientMutationId"))
      ((name . "project"))
      ((name . "repository"))))
    ((name . "UnlockLockableInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UnlockLockable")
     (fields))
    ((name . "UnlockLockablePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UnlockLockable")
     (fields
      ((name . "actor"))
      ((name . "clientMutationId"))
      ((name . "unlockedRecord"))))
    ((name . "UnlockedEvent")
     (kind . "OBJECT")
     (description . "Represents an 'unlocked' event on a given issue or pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "lockable"))))
    ((name . "UnmarkDiscussionCommentAsAnswerInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UnmarkDiscussionCommentAsAnswer")
     (fields))
    ((name . "UnmarkDiscussionCommentAsAnswerPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UnmarkDiscussionCommentAsAnswer")
     (fields
      ((name . "clientMutationId"))
      ((name . "discussion"))))
    ((name . "UnmarkFileAsViewedInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UnmarkFileAsViewed")
     (fields))
    ((name . "UnmarkFileAsViewedPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UnmarkFileAsViewed")
     (fields
      ((name . "clientMutationId"))
      ((name . "pullRequest"))))
    ((name . "UnmarkIssueAsDuplicateInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UnmarkIssueAsDuplicate")
     (fields))
    ((name . "UnmarkIssueAsDuplicatePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UnmarkIssueAsDuplicate")
     (fields
      ((name . "clientMutationId"))
      ((name . "duplicate"))))
    ((name . "UnmarkedAsDuplicateEvent")
     (kind . "OBJECT")
     (description . "Represents an 'unmarked_as_duplicate' event on a given issue or pull request.")
     (fields
      ((name . "actor"))
      ((name . "canonical"))
      ((name . "createdAt"))
      ((name . "duplicate"))
      ((name . "id"))
      ((name . "isCrossRepository"))))
    ((name . "UnminimizeCommentInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UnminimizeComment")
     (fields))
    ((name . "UnminimizeCommentPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UnminimizeComment")
     (fields
      ((name . "clientMutationId"))
      ((name . "unminimizedComment"))))
    ((name . "UnpinIssueInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UnpinIssue")
     (fields))
    ((name . "UnpinIssuePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UnpinIssue")
     (fields
      ((name . "clientMutationId"))
      ((name . "issue"))))
    ((name . "UnpinnedEvent")
     (kind . "OBJECT")
     (description . "Represents an 'unpinned' event on a given issue or pull request.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "issue"))))
    ((name . "UnresolveReviewThreadInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UnresolveReviewThread")
     (fields))
    ((name . "UnresolveReviewThreadPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UnresolveReviewThread")
     (fields
      ((name . "clientMutationId"))
      ((name . "thread"))))
    ((name . "UnsubscribedEvent")
     (kind . "OBJECT")
     (description . "Represents an 'unsubscribed' event on a given `Subscribable`.")
     (fields
      ((name . "actor"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "subscribable"))))
    ((name . "Updatable")
     (kind . "INTERFACE")
     (description . "Entities that can be updated.")
     (fields
      ((name . "viewerCanUpdate"))))
    ((name . "UpdatableComment")
     (kind . "INTERFACE")
     (description . "Comments that can be updated.")
     (fields
      ((name . "viewerCannotUpdateReasons"))))
    ((name . "UpdateBranchProtectionRuleInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateBranchProtectionRule")
     (fields))
    ((name . "UpdateBranchProtectionRulePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateBranchProtectionRule")
     (fields
      ((name . "branchProtectionRule"))
      ((name . "clientMutationId"))))
    ((name . "UpdateCheckRunInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateCheckRun")
     (fields))
    ((name . "UpdateCheckRunPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateCheckRun")
     (fields
      ((name . "checkRun"))
      ((name . "clientMutationId"))))
    ((name . "UpdateCheckSuitePreferencesInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateCheckSuitePreferences")
     (fields))
    ((name . "UpdateCheckSuitePreferencesPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateCheckSuitePreferences")
     (fields
      ((name . "clientMutationId"))
      ((name . "repository"))))
    ((name . "UpdateDiscussionCommentInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateDiscussionComment")
     (fields))
    ((name . "UpdateDiscussionCommentPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateDiscussionComment")
     (fields
      ((name . "clientMutationId"))
      ((name . "comment"))))
    ((name . "UpdateDiscussionInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateDiscussion")
     (fields))
    ((name . "UpdateDiscussionPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateDiscussion")
     (fields
      ((name . "clientMutationId"))
      ((name . "discussion"))))
    ((name . "UpdateEnterpriseAdministratorRoleInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateEnterpriseAdministratorRole")
     (fields))
    ((name . "UpdateEnterpriseAdministratorRolePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateEnterpriseAdministratorRole")
     (fields
      ((name . "clientMutationId"))
      ((name . "message"))))
    ((name . "UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateEnterpriseAllowPrivateRepositoryForkingSetting")
     (fields))
    ((name . "UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateEnterpriseAllowPrivateRepositoryForkingSetting")
     (fields
      ((name . "clientMutationId"))
      ((name . "enterprise"))
      ((name . "message"))))
    ((name . "UpdateEnterpriseDefaultRepositoryPermissionSettingInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateEnterpriseDefaultRepositoryPermissionSetting")
     (fields))
    ((name . "UpdateEnterpriseDefaultRepositoryPermissionSettingPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateEnterpriseDefaultRepositoryPermissionSetting")
     (fields
      ((name . "clientMutationId"))
      ((name . "enterprise"))
      ((name . "message"))))
    ((name . "UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateEnterpriseMembersCanChangeRepositoryVisibilitySetting")
     (fields))
    ((name . "UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateEnterpriseMembersCanChangeRepositoryVisibilitySetting")
     (fields
      ((name . "clientMutationId"))
      ((name . "enterprise"))
      ((name . "message"))))
    ((name . "UpdateEnterpriseMembersCanCreateRepositoriesSettingInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateEnterpriseMembersCanCreateRepositoriesSetting")
     (fields))
    ((name . "UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateEnterpriseMembersCanCreateRepositoriesSetting")
     (fields
      ((name . "clientMutationId"))
      ((name . "enterprise"))
      ((name . "message"))))
    ((name . "UpdateEnterpriseMembersCanDeleteIssuesSettingInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateEnterpriseMembersCanDeleteIssuesSetting")
     (fields))
    ((name . "UpdateEnterpriseMembersCanDeleteIssuesSettingPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateEnterpriseMembersCanDeleteIssuesSetting")
     (fields
      ((name . "clientMutationId"))
      ((name . "enterprise"))
      ((name . "message"))))
    ((name . "UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateEnterpriseMembersCanDeleteRepositoriesSetting")
     (fields))
    ((name . "UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateEnterpriseMembersCanDeleteRepositoriesSetting")
     (fields
      ((name . "clientMutationId"))
      ((name . "enterprise"))
      ((name . "message"))))
    ((name . "UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateEnterpriseMembersCanInviteCollaboratorsSetting")
     (fields))
    ((name . "UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateEnterpriseMembersCanInviteCollaboratorsSetting")
     (fields
      ((name . "clientMutationId"))
      ((name . "enterprise"))
      ((name . "message"))))
    ((name . "UpdateEnterpriseMembersCanMakePurchasesSettingInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateEnterpriseMembersCanMakePurchasesSetting")
     (fields))
    ((name . "UpdateEnterpriseMembersCanMakePurchasesSettingPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateEnterpriseMembersCanMakePurchasesSetting")
     (fields
      ((name . "clientMutationId"))
      ((name . "enterprise"))
      ((name . "message"))))
    ((name . "UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateEnterpriseMembersCanUpdateProtectedBranchesSetting")
     (fields))
    ((name . "UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateEnterpriseMembersCanUpdateProtectedBranchesSetting")
     (fields
      ((name . "clientMutationId"))
      ((name . "enterprise"))
      ((name . "message"))))
    ((name . "UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateEnterpriseMembersCanViewDependencyInsightsSetting")
     (fields))
    ((name . "UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateEnterpriseMembersCanViewDependencyInsightsSetting")
     (fields
      ((name . "clientMutationId"))
      ((name . "enterprise"))
      ((name . "message"))))
    ((name . "UpdateEnterpriseOrganizationProjectsSettingInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateEnterpriseOrganizationProjectsSetting")
     (fields))
    ((name . "UpdateEnterpriseOrganizationProjectsSettingPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateEnterpriseOrganizationProjectsSetting")
     (fields
      ((name . "clientMutationId"))
      ((name . "enterprise"))
      ((name . "message"))))
    ((name . "UpdateEnterpriseOwnerOrganizationRoleInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateEnterpriseOwnerOrganizationRole")
     (fields))
    ((name . "UpdateEnterpriseOwnerOrganizationRolePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateEnterpriseOwnerOrganizationRole")
     (fields
      ((name . "clientMutationId"))
      ((name . "message"))))
    ((name . "UpdateEnterpriseProfileInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateEnterpriseProfile")
     (fields))
    ((name . "UpdateEnterpriseProfilePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateEnterpriseProfile")
     (fields
      ((name . "clientMutationId"))
      ((name . "enterprise"))))
    ((name . "UpdateEnterpriseRepositoryProjectsSettingInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateEnterpriseRepositoryProjectsSetting")
     (fields))
    ((name . "UpdateEnterpriseRepositoryProjectsSettingPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateEnterpriseRepositoryProjectsSetting")
     (fields
      ((name . "clientMutationId"))
      ((name . "enterprise"))
      ((name . "message"))))
    ((name . "UpdateEnterpriseTeamDiscussionsSettingInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateEnterpriseTeamDiscussionsSetting")
     (fields))
    ((name . "UpdateEnterpriseTeamDiscussionsSettingPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateEnterpriseTeamDiscussionsSetting")
     (fields
      ((name . "clientMutationId"))
      ((name . "enterprise"))
      ((name . "message"))))
    ((name . "UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateEnterpriseTwoFactorAuthenticationRequiredSetting")
     (fields))
    ((name . "UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateEnterpriseTwoFactorAuthenticationRequiredSetting")
     (fields
      ((name . "clientMutationId"))
      ((name . "enterprise"))
      ((name . "message"))))
    ((name . "UpdateEnvironmentInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateEnvironment")
     (fields))
    ((name . "UpdateEnvironmentPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateEnvironment")
     (fields
      ((name . "clientMutationId"))
      ((name . "environment"))))
    ((name . "UpdateIpAllowListEnabledSettingInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateIpAllowListEnabledSetting")
     (fields))
    ((name . "UpdateIpAllowListEnabledSettingPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateIpAllowListEnabledSetting")
     (fields
      ((name . "clientMutationId"))
      ((name . "owner"))))
    ((name . "UpdateIpAllowListEntryInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateIpAllowListEntry")
     (fields))
    ((name . "UpdateIpAllowListEntryPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateIpAllowListEntry")
     (fields
      ((name . "clientMutationId"))
      ((name . "ipAllowListEntry"))))
    ((name . "UpdateIpAllowListForInstalledAppsEnabledSettingInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateIpAllowListForInstalledAppsEnabledSetting")
     (fields))
    ((name . "UpdateIpAllowListForInstalledAppsEnabledSettingPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateIpAllowListForInstalledAppsEnabledSetting")
     (fields
      ((name . "clientMutationId"))
      ((name . "owner"))))
    ((name . "UpdateIssueCommentInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateIssueComment")
     (fields))
    ((name . "UpdateIssueCommentPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateIssueComment")
     (fields
      ((name . "clientMutationId"))
      ((name . "issueComment"))))
    ((name . "UpdateIssueInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateIssue")
     (fields))
    ((name . "UpdateIssuePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateIssue")
     (fields
      ((name . "actor"))
      ((name . "clientMutationId"))
      ((name . "issue"))))
    ((name . "UpdateNotificationRestrictionSettingInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateNotificationRestrictionSetting")
     (fields))
    ((name . "UpdateNotificationRestrictionSettingPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateNotificationRestrictionSetting")
     (fields
      ((name . "clientMutationId"))
      ((name . "owner"))))
    ((name . "UpdateOrganizationAllowPrivateRepositoryForkingSettingInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateOrganizationAllowPrivateRepositoryForkingSetting")
     (fields))
    ((name . "UpdateOrganizationAllowPrivateRepositoryForkingSettingPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateOrganizationAllowPrivateRepositoryForkingSetting")
     (fields
      ((name . "clientMutationId"))
      ((name . "message"))
      ((name . "organization"))))
    ((name . "UpdateOrganizationWebCommitSignoffSettingInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateOrganizationWebCommitSignoffSetting")
     (fields))
    ((name . "UpdateOrganizationWebCommitSignoffSettingPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateOrganizationWebCommitSignoffSetting")
     (fields
      ((name . "clientMutationId"))
      ((name . "message"))
      ((name . "organization"))))
    ((name . "UpdateParameters")
     (kind . "OBJECT")
     (description . "Parameters to be used for the update rule")
     (fields
      ((name . "updateAllowsFetchAndMerge"))))
    ((name . "UpdateParametersInput")
     (kind . "INPUT_OBJECT")
     (description . "Parameters to be used for the update rule")
     (fields))
    ((name . "UpdateProjectCardInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateProjectCard")
     (fields))
    ((name . "UpdateProjectCardPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateProjectCard")
     (fields
      ((name . "clientMutationId"))
      ((name . "projectCard"))))
    ((name . "UpdateProjectColumnInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateProjectColumn")
     (fields))
    ((name . "UpdateProjectColumnPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateProjectColumn")
     (fields
      ((name . "clientMutationId"))
      ((name . "projectColumn"))))
    ((name . "UpdateProjectInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateProject")
     (fields))
    ((name . "UpdateProjectPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateProject")
     (fields
      ((name . "clientMutationId"))
      ((name . "project"))))
    ((name . "UpdateProjectV2DraftIssueInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateProjectV2DraftIssue")
     (fields))
    ((name . "UpdateProjectV2DraftIssuePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateProjectV2DraftIssue")
     (fields
      ((name . "clientMutationId"))
      ((name . "draftIssue"))))
    ((name . "UpdateProjectV2Input")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateProjectV2")
     (fields))
    ((name . "UpdateProjectV2ItemFieldValueInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateProjectV2ItemFieldValue")
     (fields))
    ((name . "UpdateProjectV2ItemFieldValuePayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateProjectV2ItemFieldValue")
     (fields
      ((name . "clientMutationId"))
      ((name . "projectV2Item"))))
    ((name . "UpdateProjectV2ItemPositionInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateProjectV2ItemPosition")
     (fields))
    ((name . "UpdateProjectV2ItemPositionPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateProjectV2ItemPosition")
     (fields
      ((name . "clientMutationId"))
      ((name . "items"))))
    ((name . "UpdateProjectV2Payload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateProjectV2")
     (fields
      ((name . "clientMutationId"))
      ((name . "projectV2"))))
    ((name . "UpdatePullRequestBranchInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdatePullRequestBranch")
     (fields))
    ((name . "UpdatePullRequestBranchPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdatePullRequestBranch")
     (fields
      ((name . "clientMutationId"))
      ((name . "pullRequest"))))
    ((name . "UpdatePullRequestInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdatePullRequest")
     (fields))
    ((name . "UpdatePullRequestPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdatePullRequest")
     (fields
      ((name . "actor"))
      ((name . "clientMutationId"))
      ((name . "pullRequest"))))
    ((name . "UpdatePullRequestReviewCommentInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdatePullRequestReviewComment")
     (fields))
    ((name . "UpdatePullRequestReviewCommentPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdatePullRequestReviewComment")
     (fields
      ((name . "clientMutationId"))
      ((name . "pullRequestReviewComment"))))
    ((name . "UpdatePullRequestReviewInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdatePullRequestReview")
     (fields))
    ((name . "UpdatePullRequestReviewPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdatePullRequestReview")
     (fields
      ((name . "clientMutationId"))
      ((name . "pullRequestReview"))))
    ((name . "UpdateRefInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateRef")
     (fields))
    ((name . "UpdateRefPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateRef")
     (fields
      ((name . "clientMutationId"))
      ((name . "ref"))))
    ((name . "UpdateRepositoryInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateRepository")
     (fields))
    ((name . "UpdateRepositoryPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateRepository")
     (fields
      ((name . "clientMutationId"))
      ((name . "repository"))))
    ((name . "UpdateRepositoryRulesetInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateRepositoryRuleset")
     (fields))
    ((name . "UpdateRepositoryRulesetPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateRepositoryRuleset")
     (fields
      ((name . "clientMutationId"))
      ((name . "ruleset"))))
    ((name . "UpdateRepositoryWebCommitSignoffSettingInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateRepositoryWebCommitSignoffSetting")
     (fields))
    ((name . "UpdateRepositoryWebCommitSignoffSettingPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateRepositoryWebCommitSignoffSetting")
     (fields
      ((name . "clientMutationId"))
      ((name . "message"))
      ((name . "repository"))))
    ((name . "UpdateSponsorshipPreferencesInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateSponsorshipPreferences")
     (fields))
    ((name . "UpdateSponsorshipPreferencesPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateSponsorshipPreferences")
     (fields
      ((name . "clientMutationId"))
      ((name . "sponsorship"))))
    ((name . "UpdateSubscriptionInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateSubscription")
     (fields))
    ((name . "UpdateSubscriptionPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateSubscription")
     (fields
      ((name . "clientMutationId"))
      ((name . "subscribable"))))
    ((name . "UpdateTeamDiscussionCommentInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateTeamDiscussionComment")
     (fields))
    ((name . "UpdateTeamDiscussionCommentPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateTeamDiscussionComment")
     (fields
      ((name . "clientMutationId"))
      ((name . "teamDiscussionComment"))))
    ((name . "UpdateTeamDiscussionInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateTeamDiscussion")
     (fields))
    ((name . "UpdateTeamDiscussionPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateTeamDiscussion")
     (fields
      ((name . "clientMutationId"))
      ((name . "teamDiscussion"))))
    ((name . "UpdateTeamsRepositoryInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateTeamsRepository")
     (fields))
    ((name . "UpdateTeamsRepositoryPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateTeamsRepository")
     (fields
      ((name . "clientMutationId"))
      ((name . "repository"))
      ((name . "teams"))))
    ((name . "UpdateTopicsInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of UpdateTopics")
     (fields))
    ((name . "UpdateTopicsPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of UpdateTopics")
     (fields
      ((name . "clientMutationId"))
      ((name . "invalidTopicNames"))
      ((name . "repository"))))
    ((name . "User")
     (kind . "OBJECT")
     (description . "A user is an individual's account on GitHub that owns repositories and can make new content.")
     (fields
      ((name . "anyPinnableItems"))
      ((name . "avatarUrl"))
      ((name . "bio"))
      ((name . "bioHTML"))
      ((name . "canReceiveOrganizationEmailsWhenNotificationsRestricted"))
      ((name . "commitComments"))
      ((name . "company"))
      ((name . "companyHTML"))
      ((name . "contributionsCollection"))
      ((name . "createdAt"))
      ((name . "databaseId"))
      ((name . "email"))
      ((name . "estimatedNextSponsorsPayoutInCents"))
      ((name . "followers"))
      ((name . "following"))
      ((name . "gist"))
      ((name . "gistComments"))
      ((name . "gists"))
      ((name . "hasSponsorsListing"))
      ((name . "hovercard"))
      ((name . "id"))
      ((name . "interactionAbility"))
      ((name . "isBountyHunter"))
      ((name . "isCampusExpert"))
      ((name . "isDeveloperProgramMember"))
      ((name . "isEmployee"))
      ((name . "isFollowingViewer"))
      ((name . "isGitHubStar"))
      ((name . "isHireable"))
      ((name . "isSiteAdmin"))
      ((name . "isSponsoredBy"))
      ((name . "isSponsoringViewer"))
      ((name . "isViewer"))
      ((name . "issueComments"))
      ((name . "issues"))
      ((name . "itemShowcase"))
      ((name . "location"))
      ((name . "login"))
      ((name . "monthlyEstimatedSponsorsIncomeInCents"))
      ((name . "name"))
      ((name . "organization"))
      ((name . "organizationVerifiedDomainEmails"))
      ((name . "organizations"))
      ((name . "packages"))
      ((name . "pinnableItems"))
      ((name . "pinnedItems"))
      ((name . "pinnedItemsRemaining"))
      ((name . "project"))
      ((name . "projectV2"))
      ((name . "projects"))
      ((name . "projectsResourcePath"))
      ((name . "projectsUrl"))
      ((name . "projectsV2"))
      ((name . "pronouns"))
      ((name . "publicKeys"))
      ((name . "pullRequests"))
      ((name . "recentProjects"))
      ((name . "repositories"))
      ((name . "repositoriesContributedTo"))
      ((name . "repository"))
      ((name . "repositoryDiscussionComments"))
      ((name . "repositoryDiscussions"))
      ((name . "resourcePath"))
      ((name . "savedReplies"))
      ((name . "socialAccounts"))
      ((name . "sponsoring"))
      ((name . "sponsors"))
      ((name . "sponsorsActivities"))
      ((name . "sponsorsListing"))
      ((name . "sponsorshipForViewerAsSponsor"))
      ((name . "sponsorshipForViewerAsSponsorable"))
      ((name . "sponsorshipNewsletters"))
      ((name . "sponsorshipsAsMaintainer"))
      ((name . "sponsorshipsAsSponsor"))
      ((name . "starredRepositories"))
      ((name . "status"))
      ((name . "topRepositories"))
      ((name . "totalSponsorshipAmountAsSponsorInCents"))
      ((name . "twitterUsername"))
      ((name . "updatedAt"))
      ((name . "url"))
      ((name . "viewerCanChangePinnedItems"))
      ((name . "viewerCanCreateProjects"))
      ((name . "viewerCanFollow"))
      ((name . "viewerCanSponsor"))
      ((name . "viewerIsFollowing"))
      ((name . "viewerIsSponsoring"))
      ((name . "watching"))
      ((name . "websiteUrl"))))
    ((name . "UserBlockDuration")
     (kind . "ENUM")
     (description . "The possible durations that a user can be blocked for.")
     (fields))
    ((name . "UserBlockedEvent")
     (kind . "OBJECT")
     (description . "Represents a 'user_blocked' event on a given user.")
     (fields
      ((name . "actor"))
      ((name . "blockDuration"))
      ((name . "createdAt"))
      ((name . "id"))
      ((name . "subject"))))
    ((name . "UserConnection")
     (kind . "OBJECT")
     (description . "The connection type for User.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "UserContentEdit")
     (kind . "OBJECT")
     (description . "An edit on user content")
     (fields
      ((name . "createdAt"))
      ((name . "deletedAt"))
      ((name . "deletedBy"))
      ((name . "diff"))
      ((name . "editedAt"))
      ((name . "editor"))
      ((name . "id"))
      ((name . "updatedAt"))))
    ((name . "UserContentEditConnection")
     (kind . "OBJECT")
     (description . "A list of edits to content.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "UserContentEditEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "UserEdge")
     (kind . "OBJECT")
     (description . "Represents a user.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "UserEmailMetadata")
     (kind . "OBJECT")
     (description . "Email attributes from External Identity")
     (fields
      ((name . "primary"))
      ((name . "type"))
      ((name . "value"))))
    ((name . "UserStatus")
     (kind . "OBJECT")
     (description . "The user's description of what they're currently doing.")
     (fields
      ((name . "createdAt"))
      ((name . "emoji"))
      ((name . "emojiHTML"))
      ((name . "expiresAt"))
      ((name . "id"))
      ((name . "indicatesLimitedAvailability"))
      ((name . "message"))
      ((name . "organization"))
      ((name . "updatedAt"))
      ((name . "user"))))
    ((name . "UserStatusConnection")
     (kind . "OBJECT")
     (description . "The connection type for UserStatus.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "UserStatusEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "UserStatusOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for user status connections.")
     (fields))
    ((name . "UserStatusOrderField")
     (kind . "ENUM")
     (description . "Properties by which user status connections can be ordered.")
     (fields))
    ((name . "VerifiableDomain")
     (kind . "OBJECT")
     (description . "A domain that can be verified or approved for an organization or an enterprise.")
     (fields
      ((name . "createdAt"))
      ((name . "databaseId"))
      ((name . "dnsHostName"))
      ((name . "domain"))
      ((name . "hasFoundHostName"))
      ((name . "hasFoundVerificationToken"))
      ((name . "id"))
      ((name . "isApproved"))
      ((name . "isRequiredForPolicyEnforcement"))
      ((name . "isVerified"))
      ((name . "owner"))
      ((name . "punycodeEncodedDomain"))
      ((name . "tokenExpirationTime"))
      ((name . "updatedAt"))
      ((name . "verificationToken"))))
    ((name . "VerifiableDomainConnection")
     (kind . "OBJECT")
     (description . "The connection type for VerifiableDomain.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "VerifiableDomainEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "VerifiableDomainOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ordering options for verifiable domain connections.")
     (fields))
    ((name . "VerifiableDomainOrderField")
     (kind . "ENUM")
     (description . "Properties by which verifiable domain connections can be ordered.")
     (fields))
    ((name . "VerifiableDomainOwner")
     (kind . "UNION")
     (description . "Types that can own a verifiable domain.")
     (fields))
    ((name . "VerifyVerifiableDomainInput")
     (kind . "INPUT_OBJECT")
     (description . "Autogenerated input type of VerifyVerifiableDomain")
     (fields))
    ((name . "VerifyVerifiableDomainPayload")
     (kind . "OBJECT")
     (description . "Autogenerated return type of VerifyVerifiableDomain")
     (fields
      ((name . "clientMutationId"))
      ((name . "domain"))))
    ((name . "ViewerHovercardContext")
     (kind . "OBJECT")
     (description . "A hovercard context with a message describing how the viewer is related.")
     (fields
      ((name . "message"))
      ((name . "octicon"))
      ((name . "viewer"))))
    ((name . "Votable")
     (kind . "INTERFACE")
     (description . "A subject that may be upvoted.")
     (fields
      ((name . "upvoteCount"))
      ((name . "viewerCanUpvote"))
      ((name . "viewerHasUpvoted"))))
    ((name . "Workflow")
     (kind . "OBJECT")
     (description . "A workflow contains meta information about an Actions workflow file.")
     (fields
      ((name . "createdAt"))
      ((name . "databaseId"))
      ((name . "id"))
      ((name . "name"))
      ((name . "resourcePath"))
      ((name . "runs"))
      ((name . "state"))
      ((name . "updatedAt"))
      ((name . "url"))))
    ((name . "WorkflowRun")
     (kind . "OBJECT")
     (description . "A workflow run.")
     (fields
      ((name . "checkSuite"))
      ((name . "createdAt"))
      ((name . "databaseId"))
      ((name . "deploymentReviews"))
      ((name . "event"))
      ((name . "id"))
      ((name . "pendingDeploymentRequests"))
      ((name . "resourcePath"))
      ((name . "runNumber"))
      ((name . "updatedAt"))
      ((name . "url"))
      ((name . "workflow"))))
    ((name . "WorkflowRunConnection")
     (kind . "OBJECT")
     (description . "The connection type for WorkflowRun.")
     (fields
      ((name . "edges"))
      ((name . "nodes"))
      ((name . "pageInfo"))
      ((name . "totalCount"))))
    ((name . "WorkflowRunEdge")
     (kind . "OBJECT")
     (description . "An edge in a connection.")
     (fields
      ((name . "cursor"))
      ((name . "node"))))
    ((name . "WorkflowRunOrder")
     (kind . "INPUT_OBJECT")
     (description . "Ways in which lists of workflow runs can be ordered upon return.")
     (fields))
    ((name . "WorkflowRunOrderField")
     (kind . "ENUM")
     (description . "Properties by which workflow run connections can be ordered.")
     (fields))
    ((name . "WorkflowState")
     (kind . "ENUM")
     (description . "The possible states for a workflow.")
     (fields))
    ((name . "X509Certificate")
     (kind . "SCALAR")
     (description . "A valid x509 certificate string")
     (fields))
    ((name . "__Directive")
     (kind . "OBJECT")
     (description . "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.")
     (fields
      ((name . "args"))
      ((name . "description"))
      ((name . "locations"))
      ((name . "name"))))
    ((name . "__DirectiveLocation")
     (kind . "ENUM")
     (description . "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.")
     (fields))
    ((name . "__EnumValue")
     (kind . "OBJECT")
     (description . "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.")
     (fields
      ((name . "deprecationReason"))
      ((name . "description"))
      ((name . "isDeprecated"))
      ((name . "name"))))
    ((name . "__Field")
     (kind . "OBJECT")
     (description . "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.")
     (fields
      ((name . "args"))
      ((name . "deprecationReason"))
      ((name . "description"))
      ((name . "isDeprecated"))
      ((name . "name"))
      ((name . "type"))))
    ((name . "__InputValue")
     (kind . "OBJECT")
     (description . "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.")
     (fields
      ((name . "defaultValue"))
      ((name . "deprecationReason"))
      ((name . "description"))
      ((name . "isDeprecated"))
      ((name . "name"))
      ((name . "type"))))
    ((name . "__Schema")
     (kind . "OBJECT")
     (description . "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.")
     (fields
      ((name . "directives"))
      ((name . "mutationType"))
      ((name . "queryType"))
      ((name . "subscriptionType"))
      ((name . "types"))))
    ((name . "__Type")
     (kind . "OBJECT")
     (description . "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.")
     (fields
      ((name . "description"))
      ((name . "enumValues"))
      ((name . "fields"))
      ((name . "inputFields"))
      ((name . "interfaces"))
      ((name . "kind"))
      ((name . "name"))
      ((name . "ofType"))
      ((name . "possibleTypes"))))
    ((name . "__TypeKind")
     (kind . "ENUM")
     (description . "An enum describing what kind of type a given `__Type` is.")
     (fields))))))
#+end_src

