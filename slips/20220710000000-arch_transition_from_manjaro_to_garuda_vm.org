:PROPERTIES:
:ID:       f498c562-17a6-4750-96e2-f5f1302c5751
:END:
#+TITLE: Arch: transition from Manjaro to Garuda VM


As I've learned, not all =/home= directories are created equally

** Manjaro i3

Explicitly installed packages

#+begin_example sh
accountsservice
acpi
acpid
alacritty
alsa-firmware
alsa-plugins
alsa-utils
amd-ucode
amdgpu-pro-libgl
apparmor
arandr
artwork-i3
autoconf
automake
avahi
b43-fwcutter
bash
bind
bison
blender-git
blueman
bluez-utils
bmenu
btrfs-progs
bzip2
cantarell-fonts
clipit
coreutils
cpupower
cronie
cryptsetup
d-feet
deluge
device-mapper
dfc
dhclient
dhcpcd
diffutils
direnv
dmidecode
dmraid
dnsmasq
dosfstools
downgrade
e2fsprogs
ecryptfs-utils
efibootmgr
emacs-nativecomp
epdfview
exfatprogs
f2fs-tools
ffmpeg
ffmpegthumbnailer
file
filesystem
findutils
firefox
flac
flatpak
flex
fpaste
gamemode
gawk
gcc
gcc-libs
gcolor2
gdb
gettext
gimp
git
glibc
glibc-locales
gnome-keyring
gparted
gpu-viewer
grep
grub
grub-theme-manjaro-dev
gst-libav
gst-plugins-bad
gst-plugins-base
gst-plugins-good
gst-plugins-ugly
gstreamer
gtksourceview-pkgbuild
gufw
gvfs
gvfs-afc
gvfs-gphoto2
gvfs-mtp
gvfs-smb
gzip
haveged
helvum
hexchat
htop
inetutils
inxi
iproute2
iputils
jfsutils
jre-openjdk
julia
kvantum-manjaro
less
lib32-flex
lib32-gamemode
lib32-libva-vdpau-driver
lib32-mesa-demos
lib32-mesa-vdpau
lib32-vulkan-intel
lib32-vulkan-radeon
libdvdcss
libgpod
libtool
libva-mesa-driver
libva-vdpau-driver
licenses
lightdm-settings
lightdm-slick-greeter
linux515
linux519
logrotate
lvm2
lxappearance
lxinput
m4
maia-console
make
man-db
man-pages
manjaro-alsa
manjaro-application-utility
manjaro-browser-settings
manjaro-firmware
manjaro-hello
manjaro-hotfixes
manjaro-i3-settings
manjaro-pipewire
manjaro-printer
manjaro-ranger-settings
manjaro-release
manjaro-settings-manager-notifier
manjaro-system
manjaro-zsh-config
markdown_previewer
matcha-gtk-theme
mdadm
memtest86+
mesa-demos
mesa-vdpau
mhwd
mhwd-db
mkinitcpio-openswap
mlocate
mobile-broadband-provider-info
moc
modemmanager
morc_menu
mousepad
nano
nano-syntax-highlighting
ncdu
netctl
network-manager-applet
networkmanager
networkmanager-openconnect
networkmanager-openvpn
networkmanager-pptp
networkmanager-vpnc
nfs-utils
nss-mdns
ntfs-3g
ntp
nyxt
octopi
opencl-amd
opencl-amd-dev
openresolv
openssh
os-prober
p7zip
pacman
palemoon-bin
pamac-gtk
passwordsafe
pastebinit
patch
patchutils
pciutils
pcmanfm
perl
perl-file-mimeinfo
pkgconf
polkit-gnome
poppler-data
powertop
procps-ng
protonup-qt
psmisc
python-pipenv
qpwgraph
qt5ct
quassel-client-qt
radeontool
radeontop
ranger
reiserfsprogs
rofi
rpmextract
rsync
rustypaste
s-nail
sbxkb
screen
screenfetch
sed
shadow
snapd
sof-firmware
spectre-meltdown-checker
speedtest-cli
steamcmd
stow
subversion
sudo
syncthing
syncthing-gtk-python3
sysfsutils
syslog-ng
systemd
systemd-fsck-silent
systemd-sysvcompat
systemdgenie
tar
terminator
terminus-font
texinfo
thunar
tree
ttf-dejavu
ttf-droid
ttf-inconsolata
ttf-indic-otf
ttf-liberation
upower
usbutils
util-linux
vi
vibrancy-icons-teal
viewnior
vim
vlc
volumeicon
vulkan-amdgpu-pro
vulkan-intel
vulkan-radeon
w3m
wallpapers-juhraya
wget
which
wireless-regdb
wireplumber
wmutils
wpa_supplicant
xarchiver
xautolock
xcursor-chameleon-pearl
xcursor-maia
xdg-user-dirs
xdg-utils
xdotool
xf86-input-elographics
xf86-input-evdev
xf86-input-libinput
xf86-input-void
xf86-video-amdgpu
xf86-video-ati
xf86-video-intel
xf86-video-nouveau
xfburn
xfce4-power-manager
xfsprogs
xorg-server
xorg-twm
xorg-xhost
xorg-xinit
xorg-xkill
xorg-xprop
xscreensaver
xterm
xz
yay
zensu
#+end_example



*** Migrating from Manjaro i3 to Garuda i3

#+begin_example
arandr
cantarell-fonts
cpupower
cronie
d-feet
dhclient
diffutils
direnv
epdfview
ffmpeg
vlc
firefox
flatpak
gdb
gpu-viewer
gimp
gstreamer
gst-plugins-bad
gst-plugins-base
gst-plugins-good
gst-plugins-ugly
qpwgraph
jre-openjdk
nyxt
octopi
openssh
passwordsafe
pastebinit
patchutils
pcmanfm
protonup-qt
python-pipenv
radeontool
radeontop
rpmextract
screen
screenfetch
speedtest-cli
steam
steamcmd
stow
syncthing
sysfsutils
tree
systemdgenie
syslog-ng
sysfsutils
terminator
ttf-droid
ttf-dejavu
volumeicon
yay
#+end_example

** Garuda KDE

*** Packages

Half of these are from AUR, so use =yay=

#+begin_example shell
# appearance
papirus-icon-theme
adwaita-icon-theme
cantarell-fonts
xsettingsd
xdg-user-dirs

# fonts
ttf-droid
ttf-dejavu

# apps
ffmpeg
vlc
firefox
passwordsafe
epdfview
nyxt

# system tools
qpwgraph
d-feet
systemdgenie
cpupower
syncthing
syncthing-gtk-python3
cronie
sysfsutils
rpmextract

# logviewer
lnav
syslog-ng

# TUI
diskonaut

# commandline tools
diffutils
patchutils
tree
dhclient
screen

# dotfiles
direnv
stow
screenfetch

# graphics
radeontool
radeontpo
gpu-viewer
clinfo

# devdebug
gdb

# gaming
protonup-qt
steam
steamcmd

# programming
jre-openjdk
python-pipenv
julia
#+end_example

*** Installing OpenCL

Disable Chaotic Aur in =/etc/pacman.conf= then

**** Installing
Then backup package list with =pacman -Q | cut -f1 -d' ' > garuda/pre-opencl.pax=

#+begin_src sh :eval no
yay -Q | cut -f1 -d' ' > garuda/pre-opencl.pax
#+end_src

Install/build the =amdgpu-pro= drivers:

#+begin_src sh :eval no
yay -Syu amdgpu-pro-libgl  lib32-amdgpu-pro-libgl vulkan-amdgpu-pro lib32-vulkan-amdgpu-pro amf-amdgpu-pro
#+end_src

Install/build the =opencl-amd= packages:

#+begin_src sh :eval no
yay -Syu opencl-amd
#+end_src

Generate another package list:

#+begin_src sh :eval no
yay -Q | cut -f1 -d' ' > garuda/post-opencl.pax
#+end_src

**** Preventing package updates

Diffing the packages lists should show:

#+begin_src sh :eval no
18a19,20
> amdgpu-pro-libgl
> amf-amdgpu-pro
590a593
> lib32-amdgpu-pro-libgl
772a776
> lib32-vulkan-amdgpu-pro
1202a1207
> ncurses5-compat-libs
1247a1253
> opencl-amd
1808a1815
> vulkan-amdgpu-pro
#+end_src

To prevent updates from chaotic aur when re-enabled, Mark the packages as "do not upgrade":

#+begin_src sh :eval no
IgnorePkg   = amdgpu-pro-libgl lib32-amdgpu-pro-libgl vulkan-amdgpu-pro lib32-vulkan-amdgpu-pro amf-amdgpu-proopencl-amd
#+end_src

**** Verify that OpenCL is properly Available

Opening =gpu-viewer= at this point should show =Advanced Micro Devices, Inc.= under OpenCL, not =AMD=.

Running =clinfo -l= should show that your device is available for OpenCL

**** Install Blender

Ensure that =makepkg.conf= has the following reasonable =MAKEFLAGS= . I could push this up further. Blender builds in about 5 minutes for me, but I'm not pinning my CPU's

#+begin_src sh
MAKEFLAGS="-j14"
#+end_src

Install =blender-git= review the dependencies and


Add the following to =IgnorePkg= to prevent blender from being wiped:

+ blender-git
+ blender-addons
+ blender-addons-contrib
+ blender-translations
+ blender-dev-tools

IgnorePkg   = amdgpu-pro-libgl lib32-amdgpu-pro-libgl vulkan-amdgpu-pro lib32-vulkan-amdgpu-pro amf-amdgpu-proopencl-amd

**** Install Tensorflow

Run =pacman -Syu python-pipenv=

Navigate to a project where you'd like an isolated python environment.
