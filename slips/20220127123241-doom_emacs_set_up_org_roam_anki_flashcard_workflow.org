:PROPERTIES:
:ID:       3723df42-d372-4c77-a1a0-aacd9a0bef9d
:END:
#+title: Doom Emacs: set up org roam anki flashcard workflow

+ [[Emacs]]

* Resources

+ [[https://sifahen.com/anki-emacs/][Anki Emacs (sifahen)]]
+ [[https://yiufung.net/post/anki-org/][Power Up Anki with Emacs/Org]] (Yiu Fung)
  - this has some great examples of capture templates
+ [[https://clementc.github.io/blog/2018/08/15/anki_setup/][Anki setup for Code and Math Cards]] (Yiu Fang)
+ Irreal
  - [[https://irreal.org/blog/?p=9439][Editing Anki Cards with Org Mode]] 2022-01-25
  - [[https://irreal.org/blog/?p=8720][Org and Anki]] 2020-03-22
+ rgoswami ([[https://rgoswami.me/posts/anki-decks-orgmode/][anki blog]])
  + [[https://dotdoom.rgoswami.me/config.html#org12eeea0][anki-editor config]] (emacs)
+ Anki Editor  (emacs package)
  + see code for ANKI_NODE_ID
  + [[see https://github.com/louietan/anki-editor/examples.org][examples]]
+ Anki [[https://languagetools.anki.study/tutorials/anki-configuring-note-types][Language Cards]]

* Setup

+ Anki is installed in the =desktop= Guix profile.
+ Anki Addons:
  - Anki Connect :: communicate to Anki from emacs
  - Latex Process Editor :: cmd-line options for SVG's
  - Syntax Highlighting
    - The [[https://ankiweb.net/shared/info/1972239816][FORK]] is newer, but I can't install with Guix Anki

** Anki

+ If using Guix packages for emacs, then =emacs-anki-editor= is also needed. Otherwise this is just an emacs package.
+ New cards should be created within emacs =$_DATA/org/roam/anki=.
  - See my doom emacs config for capture templates.
  - See [[https://rgoswami.me/posts/anki-decks-orgmode][this blog on rgoswami.me]] for an overview.

***** TODO see if anki-connect can run as a shepherd user service
***** TODO check LAN access to anki-connect server

*** Anki Styles

Following the rgoswami blog, you will need to add the

*** Anki Card Types
New card types need to be added from within emacs.

** Latex

For latex and the xelatex that rgoswami uses, =texlive-bin= package is needed on Guix.

* Workflow

** Assumptions
+ Decks/cards generated by =anki-editor= will flow _to Anki from Emacs_ only. There may be limited exceptions.
  - As usual per graph/signal theory, keeping loops out simplifies everything. Eliminate loops/cycles.
  - It is assumed that generated decks may be exported to a fileshare, which
    should be considerd a sink. Anything process that draws from that sink
    should (hopefully) update the Anki Application's version of a deck when the
    fileshare is update.
    - i.e. avoid the need to reimport into an Anki app, if possible. if not, then overwrite the imported deck.
    - i.e. if possible, render/list decks directly from the file-backed source.
+ Decks/cards imported into Anki should never be imported into emacs.
  - this may result in copyright violations, but moreover it is silly.

**** TODO enable cached evaluations of =ob-translate= blocks to be supplyed to =anki-editor= functions (without the need to reevaluate)
+ using google translate within org-mode (ob-translate) to translate to multiple
  languages simulataneously.
  - along with perhaps =org-element=, this allows for multi-sided cards, where
    someone is tested on the same statement for french, japanese, italian,
    greek, etc.

** Decks

** Capturing
+ Capture a new deck with =C-c n r n=
+ Capture a new card with =C-c n @ n= to =anki-editor-insert-note=

**** TODO Capture new cards with ... capture templates?

** Adding New Card Types

+ These may require new cardd
