:PROPERTIES:
:ID:       64a7b76d-8bf9-4fd6-96a4-2dd94917a188
:END:
#+TITLE: Repo: Browsing code on Github
#+CATEGORY: slips
#+TAGS:

Recently, a lot of features have been added that greatly expand the github web
features, like updates to search and navigation to definition. But the average
refresh time I'm experiencing is 0.5-2.0 seconds -- even for the back button.

However, I often have 30-80 browser tabs open. While Firefox frees some
resources, I'm seeing an average of 100 MB per github tab and 150-200 MB per
kaggle tab when they're active. These are worse than other sites.

When I'm browsing a repository, I don't intend to spend much time on it. My use
case in the web interface: brief code reference until I've cloned the
repository, after which I will interact with Github using Forge.el.

I set up https://github.com/ectorepo, so that I can clone repositories en masse
using Google's Repo tool. While I don't integrate this into a build pipeline,
the XML makes it so that I can consistently have the code on my machine where
I'm free to ripgrep it at will. I don't make edits in these directory trees
usually (to avoid merge conflicts or stashing).

Github has a lists feature and it partially overlaps with what Google Repo
provides. However, its data structures have no notion of how I want paths set up
once I run `repo sync`. I've experimented with using GraphQL to download
repository metadata. This works to some extent and I can structure the queries
or cleanse the data so the repositories end up where I want them in the Repo
XML.

Basically, I just want the code on my machine using a path structure that's easy
to recall. In my experience, the absolute best docs is the source code itself.

I could easily connect to invent.kde.org and download /every single project/. I
frequently have issues in Linux or KDE that would be trivial if I could just
find/grep the source tree. Case in point: enabling `xkb` or `xmodmap` options
when running a from an ISO. Ripgrep the text in the user interface and BOOM:
problem fucking solved. Getting on Google to find the repository url to clone
just so it ends up in some temp folder is excruciating.

If packages defaulted to being distributed with source or if using the above
workflow were much easier (and didn't require so much tooling) then you would
reduce the network-theoretic constraints that prevent people from getting
involved in Open Source.

* Roam
+ [[id:8d789c98-5e74-4bf8-9226-52fb43c5ca51][Repo]]
