:PROPERTIES:
:ID:       f00eca16-bae9-49a2-99fb-8c06dea35fdf
:END:
#+TITLE: Email: scheme to manage alerts & filters
#+CATEGORY: slips
#+TAGS:

+ [[id:844c1801-23e1-4229-9447-e0e396a576f1][Email]]

* Basic Idea

Patterns and characers in email address enable many-to-one mappings for email
addresses supplied to web apps, platforms, services, characters:

+ characters like =.= and =+= enable patterns like
  =myemail+category1.subcategoryA@provider.com= for emails that equate to
  =myemail@provider.com=
+ there are also patterns which enable things like
  =myemail(CommentWithContext)@provider.com=

* Using Address Patterns for Email Rules

Since this creates many-to-one mappings in string space, then (with some
foresight), you can use it to mesh well with email filters in Gmail or Outlook.

The fields in these filtures assume a one-to-one mapping for things like from/to
addresses, but they can actually be a complementary one-to-many.

** Benefits

+ it is email-template and human-language independent
+ it is [somewhat] future-proof.
  - if the email templates remove keywords or if the marketing department abuses
    keywords, your filters continue to work
  - this honestly doesn't happen much
+ more flexibility in designing email rules.
  - gmails rules are processed in order. this means that, when creating a
    sequence of rules, you otherwise need the most descriptive email filters to
    come first and the most general filters last
  - so it's hard for me to disentangle the azure promotional & customer
    service/interaction emails from the alert emails.
    - the from address can't easily be keyed on since it's
      =azure-noreply@microsoft.com=.
    - this means that i need to rely on ambiguous keywords in the subject/body
    - this works quite often, but the keyword "budget" may also be used in
      marketing emails. I don't care.
    - the to email address can, however, be keyed on.


** Potential Problems

The webapp/service may not allow you to customize the recipient email address in
very many places. So, changing the User record's top-level email address will
cause problems

* Why should you care?

Well like many practical concerns of technology, some critical aspects never get
discussed in mainstream society or in education. Things like:

- how to effectively use social media tools instead of becoming an unconscious
  "deluzian" tool of the social media machine.
  - how to communicate and target messaging /is taught/. many things like bulk
    administration tools or power-user tools for people with social media "jobs"
    are simply not taught
- how to use email is sometimes taught, but is almost always learned through
  experience.
  - when it is taught, this is done so /by piecemeal/ in blogs or in small
    ineffective & self-promotional videos or by

** 3 things are basically an art when they should be sciences:

- creating email filters (in your client, whether webapp Gmail, outlook, etc)
- creating alerts
- writing email templates for web applications
  - for me to have been so enamored in the startup world, but to have basically
    never heard anyone discuss the /why/ behind their email templating strategy
    is like unthinkable.

** There are several main problems that make "signaletics" difficult to manage:

- the unconciousness of people to information/signals-management tools
- the sheer volume of notifications
- the tendency of complex networks to multiply the volume of information
- the complexity of working with "ontologies"
  - in other words, desiging the right email filters requires thinking ahead to
    specify categories when you have no idea how the range of your experience
    will affect how you decide to change these categories

