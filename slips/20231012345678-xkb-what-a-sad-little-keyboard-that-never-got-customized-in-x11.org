:PROPERTIES:
:ID:       cf81fd41-34ae-4d69-8bd0-2d8e650e07e7
:END:
#+TITLE:     XKB: Config
#+AUTHOR:    David Conner
#+EMAIL:     noreply@te.xel.io
#+DESCRIPTION: notes

* Resources

+ [[Have you Hyper for Great Good][Have you Hyper for Great Good]]
+ [[https://wiki.archlinux.org/title/X_keyboard_extension][X Keyboard extension]] (archwiki)
+ [[https://www.charvolant.org/doug/xkb/html/node3.html][Charvolant xkb modifiers]]
+ [[https://askubuntu.com/a/41585][Key to choose 5th level]] a
+ Keyboard format expected by =setxkbmap=

Find X11 keyboard configs with: =find /gnu/store/ -wholename "*xkb/symbols" -type d=. They are in the =xkeyboard-config= package.

* Config

** XKB

*** Symbols

This defines the =underspace= options.

#+begin_src java :tangle .config/xkb/symbols/underspace
// -*- mode: c++; aphelia-mode: -1 -*-
// messes with simple Emacs/OS keybindings
// gives you accessible snake_case
partial xkb_symbols "shift_underscore" {
  // TODO: shit1 emacs demands a sacrifice: fix snakeyay/snakeplus at levels 5-8
  key<SPCE>{[space, underscore, space, underscore]};
};

// best of both worlds: gives you accessible snake_case,
// but (+shift+space) keybinds still work as (+shift+altgr+space)
// albeit right handed
partial xkb_symbols "altgr_underscore" {
  key<SPCE>{[space, space, underscore, underscore]};
};
#+end_src

This defines the =io= keyboard.

The XKB parser was always picky about every single detail. If anything is off,
it won't parse. Autoformatting needs to be disabled.

#+begin_src cpp :tangle .config/xkb/symbols/io
// -*- mode: c++; aphelia-mode: -1 -*-
default partial alphanumeric_keys modifier_keys xkb_symbols "basic" {

  include "us"

    name[Group1] = "IO Keyboard";

  key<TLDE>{[grave, asciitilde, dead_grave, dead_tilde]};

  key<AE01>{[exclam, 1, exclamdown, onesuperior]};
  key<AE02>{[at, 2, twosuperior, dead_doubleacute]};
  key<AE03>{[numbersign, 3, threesuperior, dead_macron]};
  key<AE04>{[dollar, 4, currency, sterling]};
  key<AE05>{[percent, 5, EuroSign, dead_cedilla]};
  key<AE06>{[asciicircum, 6, onequarter, dead_circumflex]};
  key<AE07>{[ampersand, 7, onehalf, dead_horn]};
  key<AE08>{[asterisk, 8, threequarters, dead_ogonek]};
  key<AE09>{[parenleft, 9, leftsinglequotemark, dead_breve]};
  key<AE10>{[parenright, 0, rightsinglequotemark, dead_abovering]};

  key<AE11>{[minus, underscore, yen, dead_belowdot]};
  key<AE12>{[equal, plus, multiply, division]};
};

// TODO: create intl-style Digimon layout based on the us(symbolic) layout
xkb_symbols "intl" {
  // i said no semicolons
  include "us(intl)" // include "io(swapcaps)"
                     // autoformatting is problematic!!!
                     // include "level5(lsgt_switch)"
  name[Group1] = "IO Keyboard (Intl With Dead Keys)";

  // key <TLDE> {[dead_grave,         dead_tilde,      grave,       asciitilde ]
  // };

  key<AE01>{[exclam, 1, exclamdown, onesuperior]};
  key<AE02>{[at, 2, twosuperior, dead_doubleacute]};
  key<AE03>{[numbersign, 3, threesuperior, dead_macron]};
  key<AE04>{[dollar, 4, currency, sterling]};
  key<AE05>{[percent, 5, EuroSign, dead_cedilla]};
  key<AE06>{[dead_circumflex, 6, onequarter, asciicircum]};
  key<AE07>{[ampersand, 7, onehalf, dead_horn]};
  key<AE08>{[asterisk, 8, threequarters, dead_ogonek]};
  key<AE09>{[parenleft, 9, leftsinglequotemark, dead_breve]};
  key<AE10>{[parenright, 0, rightsinglequotemark, dead_abovering]};

  // key <AE11> {[     minus, underscore,           yen,    dead_belowdot ] };
  // key <AE12> {[     equal,       plus,      multiply,         division ] };
};

// TODO: fix keys for altgr-intl
xkb_symbols "altgr-intl" {
  include "us(altgr-intl)"          // include "io(swapcaps)"
      include "level5(lsgt_switch)" //

      name[Group1] = "IO Keyboard (AltGr Intl With Dead Keys)";

  key<AE01>{[exclam, 1, exclamdown, onesuperior]};
  key<AE02>{[at, 2, twosuperior, dead_doubleacute]};
  key<AE03>{[numbersign, 3, threesuperior, dead_macron]};
  key<AE04>{[dollar, 4, currency, sterling]};
  key<AE05>{[percent, 5, EuroSign, dead_cedilla]};
  key<AE06>{[asciicircum, 6, dead_circumflex, onequarter]};
  key<AE07>{[ampersand, 7, dead_horn, onehalf]};
  key<AE08>{[asterisk, 8, dead_ogonek, threequarters]};
  key<AE09>{[parenleft, 9, leftsinglequotemark, dead_breve]};
  key<AE10>{[parenright, 0, rightsinglequotemark, dead_abovering]};

  // key <AE11> {[     minus, underscore,           yen,    dead_belowdot ] };
  // key <AE12> {[     equal,       plus,      multiply,         division ] };
};
#+end_src

This would define more options to swap modifiers, but support for hyper in
window managers isn't great. I'm not sure there enough modifier bits. KDE, i3
and Sway all process Hyper key events as though they're Super.

#+begin_src cpp
// hidden partial modifier_keys xkb_symbols "swaphyper" {
//   key<ESC>{[Hyper_L]};
//   key<CAPS>{[Escape]};
//   modifier_map Mod4{<ESC>};
// };

// hidden partial xkb_symbols "swapcaps" {
//   replace key<ESC>{[MENU]};
//   replace key<MENU>{[LVL3]};
//   replace key<CAPS>{[Escape]};
// };

// hidden partial modifier_keys xkb_symbols "hypermod5" {
//   modifier_map Mod5{Hyper_L};
//   modifier_map Mod5{Hyper_R};

//   replace key<CAPS>{[Escape]};

//   // esc => Hyper_L, print => Hyper_R
//   replace key<ESC>{[Hyper_L]};
//   replace key<PRSC>{[Hyper_R]};
// };
#+end_src

*** Evdev

The xkbregistry will not attempt to parse the XML without
=.config/xkb/rules/evdev=.

+ The reference to =symbols= declares the category from which to find the
  options.
+ The left-hand side must match the end-user facing =RMLVO= key
+ The right-hand side much match the X11-facing =KcCGST= key
+ The =underspace= reference needs to match the XML, but not necessarily the
  file name where the =KcCGST= custom rules are located.

#+begin_src text :tangle .config/xkb/rules/evdev
! option = symbols
  underspace:shift_underscore    = +underspace(shift_underscore)
  underspace:shift_underscore    = +underspace(altgr_underscore)

! include %S/evdev
#+end_src

Clients using xkbcommon that use xkbregistry to provide UI to the
user for keyboard options will parse =.config/xkb/rules/evdev.xml=.

#+begin_src xml :tangle .config/xkb/rules/evdev.xml
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xkbConfigRegistry SYSTEM "xkb.dtd">
<xkbConfigRegistry version="1.1">
  <layoutList>
    <layout>
      <configItem>
        <name>io</name>
        <shortDescription>io</shortDescription>
        <description>IO Keyboard</description>
        <languageList>
          <iso639Id>eng</iso639Id>
        </languageList>
      </configItem>
      <variantList>
        <variant>
          <configItem>
            <name>intl</name>
            <shortDescription>io-intl</shortDescription>
            <description>IO Keyboard (Intl With Dead Keys)</description>
          </configItem>
        </variant>
        <variant>
          <configItem>
            <name>altgr-intl</name>
            <shortDescription>io-altgr-intl</shortDescription>
            <description>IO Keyboard (AltGr Intl With Dead Keys)</description>
          </configItem>
        </variant>
      </variantList>
    </layout>
  </layoutList>
  <optionList>
    <group allowMultipleSelection="false">
      <configItem>
        <name>Underspace</name>
        <description>Type Underscore with the Space Bar</description>
      </configItem>
      <option>
        <configItem>
          <name>underspace:shift_underscore</name>
          <description>Make Shift+[AltGr]+Space An Underscore (problems in emacs)</description>
        </configItem>
      </option>
      <option>
        <configItem>
          <name>underspace:altgr_underscore</name>
          <description>Make AltGr+[Shift]+Space An Underscore (less problems in emacs)</description>
        </configItem>
      </option>
    </group>
  </optionList>
</xkbConfigRegistry>
#+end_src

** KDE Wayland

*** KWin and Plasma

When you apply changes to your keyboard in =systemsettings=, then
=kwin_libinput= will attempt to reload your keyboard. The warnings will show
up in your =journalctl --user -xb=. If it ignores your settings, there is
likely a problem with your =~/.config/xkb= files.

Also, if you check =Use user-defined custom XKB types= in the system settings,
it attempts to load a =types/custom= file in the load paths, including
=~/.config/xkb=. I needed to uncheck this and double check the ID's throughout
my files.

Otherwise, it should just work.

*** FCITX

Use fcitz & moz and see [[https://fcitx-im.org/wiki/Using_Fcitx_5_on_Wayland][Using FCITX5 on Wayland]]. The guide says to set the
FCITX keyboard to your system keyboard and to allow FCITX to manage input. I
enable/disable as needed. You may need to enable FCITX5 as a Virtual Keyboard
in KDE's system settings.

***** TODO document how fcitx is working in kwin/wayland

I've installed fcitx5/moz, but I still need to tweak the environment
variables for it to recognize the custom keyboards.

The japanese keyboard input works pretty much everywhere:

+ Firefox in XWayland for now
+ Also in wayland apps, except emacs

*** XWayland

KDE mostly handles managing this I think.

** Sway

You can compile a keymap file with =xkbcli compile-keyboard= to a file and
pass it using [[xkb_file][xkb_file]]. Or you can use the [[https://wiki.archlinux.org/title/sway#Keymap][input interface]] based on the =RMLVO=
references.

*** XWayland

Dear god.


* Old Docs

** Setup

This directory should be linked from =$HOME/.xkb=

Compile the layout with =xkbcomp -I$HOME/.xkb $HOME/.xkb/io.altgr-intl.xkb=

Then, in =.xsession=, run =$HOME/bin/set_xkbcomp=

Note: =xkb= tools including =xkbcli= _do not_ expand the =~=. This makes it
very confusing when in a shell trying to pin down how it works.

** Customization

Run =~/bin/xkbio= or =~/bin/xkbus= or:

#+begin_src sh
xkbcomp -I$HOME/.xkb $HOME/.xkb/io.altgr-intl.xkb $DISPLAY
#+end_src

Can roll this into a single step with:

#+begin_src sh
setxkbmap -print -layout us \
          -variant altgr-intl \
          -option "ctrl:hyper_capscontrol,lvl3:menu_switch,lvl3:ralt_alt" \
          | xkbcomp $DISPLAY
# setxkbmap -print -layout us -variant altgr-intl | xkbcomp -I$HOME/.xkb/ $DISPLAY
#+end_src

The output from =xkbcomp= cannot be redirected using normal redirection
... hmmmm. But if you are keen to loading this in your =.bashrc= you can tell it
to =shuttf= up with =-w0=.

*** Using with FCITX5

FCITX5 will not like this. When it becomes active (or is restarted), it's main
keyboard overrides yours. It must be aware of the =-I$HOME/.xkb= include and I
believe needs to have =evdev.xml= and such compiled.

*** IO

Ensure the keymap has been loaded into X11 with =setxkbmap -query io=

#  :tangle .config/xkb/keymaps/io.altgr-intl.xkb
#+begin_src java
xkb_keymap {
  xkb_keycodes  { include "evdev+aliases(qwerty)" };
  xkb_types     { include "complete" };
  xkb_compat    { include "complete" };
  xkb_symbols   { include "pc+io(altgr-intl)+inet(evdev)+io(snakeyay)+level3(menu_switch)+ctrl(hyper_capscontrol)+level3(ralt_alt)" };
  //xkb_symbols   { include "pc+io(altgr-intl)+inet(evdev)+level3(menu_switch)+ctrl(hyper_capscontrol)+level3(ralt_alt)" };
  //xkb_symbols   { include "pc+io(altgr-intl)+inet(evdev)+level3(ralt_alt)+level3(menu_switch)+io(hypermod5)" };
  //xkb_geometry  { include "pc(pc105)" };
};
#+end_src

And the config file (may not be necessary). This is an older, alternate method
of loading a keyboard. load it with =setxkbmap -config ~/.xkb/$layout.keyboard=

# :tangle .config/xkb/keymaps/io.altgr-intl.keyboard
#+begin_src conf
Rules    =  "xorg"
Model    =  "pc105"
Layout   =  "io"
Variant  =  "altgr-intl"
#Options  =  "level3:ralt_alt,level3:menu_switch,io:hypermod5"
#+end_src

*** Basic altgr-intl

Example top-level config for =pc+us(altgr-intl)=

#+begin_src java :tangle ./us.altgr-intl.xkb
xkb_keymap {
  xkb_keycodes  { include "evdev+aliases(qwerty)" };
  xkb_types     { include "complete" };
  xkb_compat    { include "complete" };
  xkb_symbols   { include "pc+us(altgr-intl)+inet(evdev)+io(snakeyay)+level3(menu_switch)+ctrl(hyper_capscontrol)+level3(ralt_alt)" };
  //xkb_symbols   { include "pc+us(altgr-intl)+inet(evdev)+level3(menu_switch)+ctrl(hyper_capscontrol)+level3(ralt_alt)" };
  //xkb_symbols   { include "pc+us(altgr-intl)+inet(evdev)+io(snakeplus)+level3(ralt_alt)+level3(menu_switch)+capslock(hyper)" };
  //xkb_geometry  { include "pc(pc105)" };
};
#+end_src


***** select from this evdev.bak.xml



#+begin_src bash
# --xml-dtd \
xq --xml-force-list="layout" \
   --xml-force-list="variant" \
   -y '.xkbConfigRegistry.layoutList.layout | map(select(.name="io"))' $myxml
#+end_src
