:PROPERTIES:
:ID:       84421ca8-c324-4fe2-9ed4-dbfa85c1478e
:END:
#+TITLE: VyOS: On Dell D10U
#+CATEGORY: slips
#+TAGS:

* Roam
+ [[id:5aa36ac8-32b3-421f-afb1-5b6292b06915][VyOS]]

* Docs

* Overview

Once SSH is set up, you can use =tramp= to modify scripts on the router or =babel=
to execute scripts on the server.

** Install

+ Partitions need to be complete before installation
+ Debops is an option: when using ansible/debops post-install, care should be
  taken not to install anything that would be managed

*** SSH

If the system comes up without ssh, put the keys on a disk, then for =$pubkey= do

#+begin_src shell
# after mount /dev/sdXn /mnt/usb
# variables exported before configure or defined within (separate proc)
configure
sshkey=$(sudo cat /mnt/usb/home/dc/.ssh/yk.pub | cut -f2 -d' ')
sshcomment=$(sudo cat /mnt/usb/home/dc/.ssh/yk.pub | cut -f3 -d' ')
sshtype=$(sudo cat /mnt/usb/home/dc/.ssh/yk.pub | cut -f1 -d' ')
set system login user vyos authentication public-keys $sshcomment key $sshkey
set system login user vyos authentication public-keys $sshcomment type $sshtype
set system service ssh port 22
set system service ssh listen-address 198.18.0.1
# maybe: set system service ssh log-level verbose
commit
save
exit

# maybe: restart ssh
#+end_src

For SSH via yubikey, the pkcs11 failures will happen on the host side (vyos
doesn't need to know). Simpler to configure via =$HOME/.ssh/config=.

** Hardware

Comes up with two ethernet interfaces: =eth0= and =eth1=

** Packages

To add:

+ tree
+ yq/xq (jq on system)

** Containers

Containers use =podman=

#+begin_example
.
└── etc
    └── containers
        ├── containers.conf
        ├── networks
        ├── policy.json
        ├── registries.conf
        ├── registries.conf.d
        │   └── shortnames.conf
        └── storage.conf
#+end_example

*** Podman

**** Storage

/etc/containers/storage.conf

#+begin_example conf
### autogenerated by container.py
[storage]
  driver = "overlay"
  graphroot = "/usr/lib/live/mount/persistence/container/storage"
  runroot = "/var/run/containers/storage"
[storage.options]
  mount_program = "/usr/bin/fuse-overlayfs"
#+end_example


*** Postgres

*** Redis

* Config

** Addressing

** System

+ public-keys $comment key $key :: key
+ public-keys $comment type $alg :: algo

** Network

** Protocols

** Service

*** DHCP

*** SSH

+ disable-host-validation :: disables rDNS lookupp384
+ loglevel :: =info= is default
+ vrf :: if needed
+ dynamic-protection :: config block to protect against brute force

*** NTP

+ redefine to US NTP servers
+ delete the config section that subscribes internal networks to NTP on vyos


** Container

*** Registry

*** Network

*** Postgres

*** Redis

* Config

** Problems

+ The boot mounts the config files, then migrates the system to the declared config
+ This ISO build flavor mounts the files, config doesn't survive migration at boot
+ This ends up locking out the =vyos= user

** Flavor

./data/build-flavors/generic.toml

#+begin_src toml
image_format = "iso"
packages = [
  "lvm2",
  "hwinfo",
  "yubico-piv-tool",
  "opensc-pkcs11",
  "opensc",
  "age"
]

default_config="""
system {
  host-name vyos
  login {
    user vyos {
      authentication {
        encrypted-password "*"
        plaintext-password ""
        public-keys {
          cardno:19294239 {
            key AAAAE2VjZHNhLXNoYTItbmlzdHAzODQAAAAIbmlzdHAzODQAAABhBGE6wqFapBOKBA2wCTB22nG+GANmh9JXNG54tBajKNu/Fh61ywzilEI6MYLpvolCuS0YWGAgv4h5MHzk45KnWXKJ1NSNTLJ4koa+NvAAHIVXKA19IZ+s6UyX7eyCWLx58w==
            type ecdsa-sha2-nistp384
          }
          cardno:7699336 {
            key AAAAB3NzaC1yc2EAAAADAQABAAACAQDS6PQ1NqAptAIzcfJLNRxy81yqaF4gc/RAXa6e7lQw2qD4UydYIDgGoD/EYIvVq6qH7g8VXncB7RHLUfnH96Ctod3wd8nb/d8HmFNS7J1PGhvFPjS2/MIT+eZQN1cqQWyohcbJpxT1d0ynsPYrtyEREmutdpJfBg8RDSViWh7gsfXyJlVir7IIIPokJPE0KY0vNyn/sZw6dnTGFyrigCsq9TzAMvnf8ToX1neYQ0ZBS1HNQucVQ7+Xq5ehDClJ5OeeP95uH4DXe22SlZBEGEo2W4ClaXrXVgiUneF46SnfQiEORJnqKWwcr3O1Zdof+oJWIROk9CiYET9yhV58aw2uC5RoxkxE8+2TlpDaVLsi9rHYDnq9Ky2J0vRFXJJCb5PMPKiHbN2elx77rhHckVMpYl4LYA1fLEV6p2oSVoG7Rtqc8MmTf9PZCANNozaO7Y+k/XuzxjJOO4gk33lT8vhopCGvzl7hiYXBkQSolaJmh4jKYJsKngCYBzDgGUx6LSyGUCQSyujBxdlJaoH/wgAhFB/CZYQv7ISA5cmz9jiEQ2/8KuNvkcZzVcUdcfwX2wbItZ5gwnxpQar0Ea2qbE6q7iYY+zxbw7EpLtGIUHjft0I5dFqYv53ADinFyvmN1mRZ34S6+LITall3JHOA0uJ7l1iHDjBnuvPDKej8PJhc0w==
            type ssh-rsa
          }
        }
      }
      level admin
    }
  }
  syslog {
    global {
      facility all {
        level info
      }
      facility protocols {
        level debug
      }
    }
  }
  console {
    device ttyS0 {
      speed 115200
    }
  }
  config-management {
    commit-revisions 100
  }

}

interfaces {
  loopback lo {
  }
  ethernet eth0 {
    address 192.18.0.1/24
    description "WAN Interface"
  }
  ethernet eth1 {
    address 10.12.34.12/24
    description "LAN Interface"
  }
}

protocols {
  static {
    route 0.0.0.0/0 {
      next-hop 192.18.0.10 {
      }
    }
    interface-route 10.12.34.0/0 {
      next-hop-interface eth1 {
        distance 20
      }
    }
  }
}

service {
  ssh {
    port 22
    listen-address 192.18.0.1
    disable-password-authentiation
    disable-host-validation
    loglevel info
  }

  ntp {
    server "3.us.pool.ntp.org" {
    }
    server "2.us.pool.ntp.org" {
    }
    server "1.us.pool.ntp.org" {
    }
    server "0.us.pool.ntp.org" {
    }
  }

}
"""
#+end_src

+ TODO: DHCP on eth1
+ time-zone America/NewYork

dns (needs to be from DHCP)

    name-server 192.0.2.1
    name-server 192.0.2.2
    name-server 2001:db8:200::1
    name-server 2001:db8:200::2

encrypted-password $6$QxPS.uk6mfo$9QBSo8u1FkH16gMyAVhus6fU3LOzvLR9Z9.82m3tiHFAxTtIkhaZSWssSgzt4v4dGAL8rhVQxTg0oAG9/q11h/

# +begin_src text :tangle img/vyos/config.boot.default
  dhcp-server {
    shared-network-name LAN {

    }
  }
# +end_src


* Config Options

** SSH

**** Algorithms

ciphers

|------------+--------------+-------------|
| 3des-cbc   | blowfish-cbc | cast128-cbc |
| aes128-cbc | aes192-cbc   | aes256-cbc  |
| aes128-ctr | aes192-ctr   | aes256-ctr  |
| arcfour128 | arcfour256   | arcfour     |
|------------+--------------+-------------|

mac

|--------------------------------+-------------------------------|
| hmac-md5                       | hmac-md5-96                   |
| hmac-ripemd160                 |                               |
| hmac-sha1                      | hmac-sha1-96                  |
| hmac-sha2-256                  | hmac-sha2-512                 |
| umac-64@openssh.com            | umac-128@openssh.com          |
| hmac-md5-etm@openssh.com       | hmac-md5-96-etm@openssh.com   |
| hmac-ripemd160-etm@openssh.com |                               |
| hmac-sha1-etm@openssh.com      | hmac-sha1-96-etm@openssh.com  |
| hmac-sha2-256-etm@openssh.com  | hmac-sha2-512-etm@openssh.com |
| umac-64-etm@openssh.com        | umac-128-etm@openssh.com      |
|--------------------------------+-------------------------------|

key-exchange

|--------------------------------------+-------------------------------|
| diffie-hellman-group1-sha1           | diffie-hellman-group14-sha1   |
| diffie-hellman-group14-sha256        |                               |
| diffie-hellman-group16-sha512        | diffie-hellman-group18-sha512 |
| diffie-hellman-group-exchange-sha1   |                               |
| diffie-hellman-group-exchange-sha256 |                               |
| ecdh-sha2-nistp256                   | ecdh-sha2-nist                |
| ecdh-sha2-nistp521                   |                               |
| curve25519-sha256                    | curve25519-sha256@libssh.org  |
|--------------------------------------+-------------------------------|

pubkey-accepted-algorithm

|---------------------------------------------+---------------------------------------------|
| ssh-ed25519                                 | ssh-ed25519-cert-v01@openssh.com            |
| sk-ssh-ed25519@openssh.com                  | sk-ssh-ed25519-cert-v01@openssh.com         |
| ecdsa-sha2-nistp256                         | ecdsa-sha2-nistp256-cert-v01@openssh.com    |
| ecdsa-sha2-nistp384                         | ecdsa-sha2-nistp384-cert-v01@openssh.com    |
| ecdsa-sha2-nistp521                         | ecdsa-sha2-nistp521-cert-v01@openssh.com    |
| sk-ecdsa-sha2-nistp256@openssh.com          | sk-ecdsa-sha2-nistp256-cert-v01@openssh.com |
| webauthn-sk-ecdsa-sha2-nistp256@openssh.com |                                             |
| ssh-dss                                     | ssh-dss-cert-v01@openssh.com ssh-rsa        |
| ssh-rsa-cert-v01@openssh.com                |                                             |
| rsa-sha2-256                                | rsa-sha2-512                                |
| rsa-sha2-256-cert-v01@openssh.com           | rsa-sha2-512-cert-v01@openssh.com           |
|---------------------------------------------+---------------------------------------------|

