:PROPERTIES:
:ID:       824d470f-e464-4daf-a9f7-6cddf73bec4a
:END:
#+TITLE: Org LaTeX: Overview for Emacs/Org
#+CATEGORY: slips
#+TAGS:

#+LATEX_HEADER_EXTRA: \usepackage{tabularx}
#+LATEX_HEADER_EXTRA: \usepackage{tabu,longtable}

* Docs

* Resources

+ [[https://emacs.stackexchange.com/questions/29016/export-org-mode-to-latex-without-preamble-and-document-environment][Avoid org-export document preamble]]

** Customization

2022 [[https://www.linuxjournal.com/content/org-mode-latex-exporter-latex-non-texers][The org-mode LaTeX exporter (for non-TeXers)]]:

A thorough explanation of all the org-export stuff you'll want to do with LaTeX,
including LaTeX params, formatting, abstract/bibliography, custom sections,
running python scripts, matplotlib plots, scripts, PDF preview.

+ 2021 Video + [[https://jakebox.github.io/youtube/org_latex_video.html][Org/LaTeX Header & SETUPFILE Explainer]]

** Beamer

*** Presentations

+ [[https://orgmode.org/worg/exporters/beamer/tutorial.html][Writing Beamer Presentations in Org Mode]]
+ [[https://orgmode.org/manual/Beamer-Export.html][Beamer Export]]
+ [[github:fniessen/refcard-org-beamer][fniessen/refcard-org-beamer]] ah the French come through again

*** Themes

#+begin_example latex
% use a [beamer] theme
\usetheme{gemini}

% use a [beamer] color theme

#+end_example

+ [[https://deic.uab.cat/~iblanes/beamer_gallery/index_by_color.html][Beamer Color Theme Gallery]] these are available in the =texlive-beamer= package
+ [[github:anishathalye/auriga][anishathalye/auriga]] dependencies: LuaTeX and raleway/lato/hack fonts

*** Beamerposter

+ [[github:deselaers/latex-beamerposter][deselaers/latex-beamerposter]] the package

**** [[github:dangom/org-beamerposter][dangom/org-beamerposter]]

This is an org template for producing a poster in org-export.

+ [[https://github.com/dangom/org-beamerposter/blob/master/donders-poster.setup?plain=1][donders-poster.setup]] this contains the emacs-lisp needed to glue =ox-latex=
  and =ox-beamer= so that the headlines produce the correct beamer
  columns/frames/blocks

#+begin_quote
NOTE: this project is about 5 years old and I think the underlying packages have
changed structure/api, so it doesn't seem to work well. however, it's still a
good example of how to structure a template/poster when using org-beamer
#+end_quote

**** Themes

+ [[https://github.com/anishathalye/gemini][anishathalye/gemini]] dependencies: LuaTeX and raleway/lato fonts

* TeX-engine

Changing the engine is rather disorienting, since everything else just magically
seems to work.

** Caveats

*** Compatibility

There are incompatible packages between TeX engines.

See these lines from a template in [[https://github.com/HaoZeke/dotdoom/blob/master/snippets/org-mode/eisvogelPdf][HaoZeke/dotdoom]]:

The engine by default is set to =xelatex=

#+begin_example org
#
# LaTeX Stuff (from eisvogel https://raw.githubusercontent.com/Wandmalfarbe/pandoc-latex-template/master/eisvogel.tex)
#
#+LATEX_COMPILER: xelatex
#+LATEX_CLASS: koma-article
#+LATEX_CLASS_OPTIONS: [12pt,a4paper,oneside,headinclude]
#+end_example

These packages are added and used to swap out font configurations depending on
the compiler -- so that other Emacs users out there might also be able to cast
the old magick.

#+begin_example org
#+LATEX_HEADER: \\usepackage{ifxetex,ifluatex}
# ...
#+LATEX_HEADER: \\ifnum 0\\ifxetex 1\\fi\\ifluatex 1\\fi=0 % if pdftex
#+LATEX_HEADER: \\usepackage[T1]{fontenc} [[
AFAIK, it seems that =xelatex= will suffice for =luatex=. I'm not 100% sure on
this, but that's my assumption for now.]]
#+LATEX_HEADER: \\usepackage[utf8]{inputenc}
#+LATEX_HEADER: \\usepackage{textcomp} % provides euro and other symbols
#+LATEX_HEADER: \\else % if luatex or xelatex
#+LATEX_HEADER: \\usepackage{unicode-math}
#+LATEX_HEADER: \\defaultfontfeatures{Ligatures=TeX,Scale=MatchLowercase}
#+LATEX_HEADER: \\fi
#+end_example

Tecosaur's config also has some related notes on [[https://tecosaur.github.io/emacs-config/config.html#compiling][encountering
org files that expect alternate latex compilers]].

**** Remove =org-beamer= references to incompatible packages

The =org-beamer= package is inserting =\usepackage[T1]{fontenc}= which is
apparently incompatible with =xelatex=. So it looks like the problem is mainly
that trying to mix =org-beamer= with =xelatex= is ... not easy for a noob.

So I need to find where this preamble is defined.

***** Fix =org-beamer= preamble

Comparing the preambles/headers inserted into the =*.tex= documents by
=ox-latex= and =ox-beamer=, they're quite different.

#+begin_example diff
1,5c1,3
< % Created 2023-08-09 Wed 20:30
< % Intended LaTeX compiler: pdflatex
< \documentclass[a4paper]{article}
< \usepackage[utf8]{inputenc}
< \usepackage[T1]{fontenc}
---
> % Created 2023-08-09 Wed 21:59
> % Intended LaTeX compiler: xelatex
> \documentclass[final]{beamer}
15,18c13
< \hypersetup{colorlinks=true, linkcolor=blue}
< \setlength{\parskip}{0.1em}
< \setlength{\parindent}{0em}
< \setcounter{secnumdepth}{0}
---
> \usepackage[T1]{fontenc}
20,24c15,18
< \usepackage[margin=in]{geometry}
< \usepackage{units}
< \usepackage{comment}
< \usepackage{tabularx}
< \usepackage{tabu,longtable}
---
> \usepackage[size=custom,width=120,height=72,scale=1.0]{beamerposter}
> \usetheme{gemini}
> \usecolortheme{gemini}
> \usepackage{graphicx}
26,34c20,32
< \usepackage{makeidx}
< \makeindex
< \usepackage{epstopdf}
< \epstopdfDeclareGraphicsRule{.gif}{png}{.png}{convert #1 \OutputFile}
< \AppendGraphicsExtensions{.gif}
< \usepackage[table]{xcolor}
< \definecolor{lightgray}{gray}{0.92}
< \date{}
< \title{Lab 6: The Ballistic Pendulum}
---
> \usepackage{tikz}
> \usepackage{pgfplots}
> \pgfplotsset{compat=1.14}
> \usepackage{anyfontsize}
> \newlength{\sepwidth}
> \newlength{\colwidth}
> \setlength{\sepwidth}{0.025\paperwidth}
> \setlength{\colwidth}{0.3\paperwidth}
> \newcommand{\separatorcolumn}{\begin{column}{\sepwidth}\end{column}}
> \logoright{\includegraphics[height=7cm]{logo1.pdf}}
> \logoleft{\includegraphics[height=7cm]{logo2.pdf}}
> \usetheme{default}
> \author{Overleaf (Andi Zhang)}
36,37c34,35
<  pdfauthor={David Conner},
<  pdftitle={Lab 6: The Ballistic Pendulum},
---
>  pdfauthor={Overleaf (Andi Zhang)},
>  pdftitle={Example Beamer Graphic},
#+end_example

** xelatex

AFAIK, it seems that =xelatex= will suffice for =luatex=. I'm not 100% sure on
this, but that's my assumption for now.

*** By Default, No Log Buffers

When I change the =TeX-engine= I'm just running into some issues getting
feedback from the subprocess emacs spawns.

** LuaTeX

*** Gemini Themes

Can't use =latex= or =pdflatex= for beamerposter's gemini themes.

+ [[https://stackoverflow.com/a/70088405][Add a lualatex entry to your org-preview-latex-process-alist]]
+ [[https://www.reddit.com/r/emacs/comments/ujk5qx/help_using_lualatex_to_preview_latex_in_orgmode/][Help using lualatex to preview latex in org-mode]]

*** Configuring TeX-engine

When changing =TeX-engine= to =luatex=, I get a similar response to the one above
from =xelatex= ... which I guess means I need to append to =TeX-command-list=

#+begin_quote
XeLaTeX: problems after [0] pages
#+end_quote

Unfortunately, I can't find much information on calling =luatex= from emacs,
including the =TeX-command=. However, according to tecosaur's config, these all
have fairly compatible CLI options.

*** Creates a bunch of files under subdirectory ={=

along with a latex process that never ends and a bunch of files under a subdirectory named `{`

if i'm trying to get org-beamer to compile this poster template (where the styling requires LuaTeX) ... like where should I start?

- The beamer poster template: https://www.overleaf.com/project/64d3e5ace8637206b7f5cec1
- The beamer style: https://github.com/andiac/gemini-cam
- An older example of `#+SETUPFILE` for a beamerposter: https://github.com/dangom/org-beamerposter

At this point, I'm mostly trying to get the PDF to build from the TeX buffer. If I can get to that point, I think I can get the `org-beamer` stuff to work. but I'm just now learning what things like `dvipng` and `LuaTeX` mean.

- My emacs config can build simple `org-beamer` presentations, provided that the LaTeX dependencies exist and everything is set up correctly.
- i can normally preview latex fragments and run ox-latex. when i add `#+STARTUP: beamer` or `#+SETUPFILE: setup.org`, it changes how `org-preview-latex-fragments` works. So i just figured that one out (I thought it was the TeX-engine)
- I've started familiarizing myself with the `TeX-` commands, so if i'm having problems with the export, there's usually a \*.tex file that I can build with `C-c C-c`. usually this leads to logs, which are also useful for basic stuff. however, when i use `M-x TeX-engine-set` and change to `xetex`, I no longer get log buffers.
- When I change the engine to `luatex`, I get a similar response,

* TeX-mode

** Building raw =tex= buffers to =pdf=

The keybind =C-c C-c= runs =TeX-command-master=, which gets called with either
=TeX-command-default= or a selection from =TeX-command-list=, for which I've
been selecting:

#+begin_example emacs-lisp
("LaTeX"
  "%`%l%(mode)%' %T"
  TeX-run-TeX
  nil
  (latex-mode doctex-mode)
  :help "Run LaTeX")
#+end_example

This entry then specifies the included =TeX-run-TeX= to be called:

+ invokes =(TeX-run-format name command file)= to set =process= in a let
  block. It first formats the TeX command.
+ There is an opportunity to run an interactive =TeX= process by setting
  =TeX-interactive-mode= if you need to debug, but I haven't walked through
  this.
+ This passes input through =(TeX-run-set-command name command)= which
  temporarily sets =TeX-command-default=.
+ Then =TeX-run-format= continues, setting =(buffer (TeX-process-buffer-name
  file))= and spawning =(process (TeX-run-command name command file))=.

** LaTeX Environment

* Org LaTeX

** Emacs Config

*** Org Export

Some brief notes on how =org-export= mysteriously produces these PDF's, since it just
magically does. My emacs config is here at [[github:dcunited001/.emacs.g][dcunited001/.emacs.g]].

=org-latex-pdf-process= is set to:

#+begin_src sh
latexmk -f -pdf -%latex -interaction=nonstopmode -output-directory=%o %f
#+end_src

=org-latex-compile= will rewrite this to:

#+begin_src sh
latexmk -f -pdf -%L -interaction=nonstopmode -output-directory=%o %f
#+end_src

In a let block, =org-latex-compile= sets =compiler= as =pdflatex= and =process=
as =(shell-quote-argument compiler)=. It then calls:

#+begin_src emacs-lisp
(org-compile-file
 texfile process "pdf"
 (format "See %S for details" log-buf-name)
 log-buf spec)
#+end_src

On guix, I seem to have =latexmk=, which is what the =ox-latex= uses by
default. On arch, I needed to install this dependency, which I just added to the
=academic= profile.

I'll probably set this as a Guix manifest to load with =direnv= from within the
project, once I can set =-L= to more easily add packages from my local channel
without committing them.

** Tecosaur Config

Tecosaur has a huge configuration for latex.

ith a ton of ideas

+ This includes light dependency management and ordering of statements in your
  latex header, the implementation for which is in newer versions of =ox-latex=
  than I have available (in Emacs 29.0.92 via Guix as of Aug 2023). Also, some
  of the enhancements have not been merged upstream.

** Document Setup

*** Org export metadata

See [[https://orgmode.org/manual/Export-Settings.html][Export Settings]] and [[https://orgmode.org/manual/LaTeX-specific-export-settings.html][Latex-Specific Export Settings]].

These values can be referred to later or can be inserted in a cover page.

#+begin_example org
#+TITLE:     Lab 4: Finding Accelerations
# +SUBTITLE:  Subtitle
#+AUTHOR:    David Conner
#+EMAIL:     myemail@email.vccs.edu
#+end_example

These org options affect the default behavior of org-latex exports without
needing to rely on latex. These determine whether items like TODO's are inserted
or the =H:3= headline level to which you want to include as sections.

See [[https://raw.githubusercontent.com/dfeich/org-babel-examples/master/latex/latex-example.org][dfeich/org-babel-examples/master/latex/latex-example.org]]

#+begin_example org
#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline
#+OPTIONS: title:nil author:nil c:nil d:(not "LOGBOOK") date:nil
#+OPTIONS: e:t email:nil f:t inline:t num:t p:nil pri:nil stat:t
#+OPTIONS: tags:t tasks:t tex:t timestamp:t todo:t |:t
#+OPTIONS: toc:nil
#+end_example

*** Document Structure Classes

The variable =org-latex-classes= will affect how the org headlines correspond to
LaTeX document sections/classes.

#+begin_example emacs-lisp
(("article"
  "\\documentclass[11pt]{article}"
  ("\\section{%s}" . "\\section*{%s}")
  ("\\subsection{%s}" . "\\subsection*{%s}")
  ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
  ("\\paragraph{%s}" . "\\paragraph*{%s}")
  ("\\subparagraph{%s}" . "\\subparagraph*{%s}"))
 ("report"
  "\\documentclass[11pt]{report}"
  ("\\part{%s}" . "\\part*{%s}")
  ("\\chapter{%s}" . "\\chapter*{%s}")
  ("\\section{%s}" . "\\section*{%s}")
  ("\\subsection{%s}" . "\\subsection*{%s}")
  ("\\subsubsection{%s}" . "\\subsubsection*{%s}"))
 ("book"
  "\\documentclass[11pt]{book}"
  ("\\part{%s}" . "\\part*{%s}")
  ("\\chapter{%s}" . "\\chapter*{%s}")
  ("\\section{%s}" . "\\section*{%s}")
  ("\\subsection{%s}" . "\\subsection*{%s}")
  ("\\subsubsection{%s}" . "\\subsubsection*{%s}")))
#+end_example

This was for some reason a bit hard to find elsewhere. I haven't tried it, but I
believe you can change these to alter the export behavior.

I'm guessing ... but I believe that every latex document is a =tree= with a
single =\documentclass{...}= root. However they are not necessarily well-behaved
trees. i.e. not all things at =level n= of the tree should have the same
class. So trying to use these on a heavily structured document like a resume is
probably not going to work out.

In this past, when using =org-latex= to export with headlines, I've needed to
rely on shims like =\newpage= to force things to fit ... which is probably an
antipattern.

*** Document Preable

This gets inserted, populated from:

+ org-latex-default-class
+ org-latex-default-packages-alist
+ date/title?
+ org-latex-with-hyperref

#+begin_example latex
% Created 2023-08-03 Thu 06:30
% Intended LaTeX compiler: pdflatex
\documentclass[10pt,A4]{article}
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{graphicx}
\usepackage{longtable}
\usepackage{wrapfig}
\usepackage{rotating}
\usepackage[normalem]{ulem}
\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{capt-of}
\usepackage{hyperref}
\date{}
\title{David Conner Resume}
\hypersetup{
 pdfauthor={David Conner},
 pdftitle={David Conner Resume},
 pdfkeywords={},
 pdfsubject={},
 pdfcreator={Emacs 29.0.92 (Org mode 9.6.7)},
 pdflang={English}}
\begin{document}

#+end_example

**** Avoid Org-Latex's Document Preamble

[[https://emacs.stackexchange.com/questions/29016/export-org-mode-to-latex-without-preamble-and-document-environment][Export org-mode to LaTeX without preamble and document environment]]

When working with other latex templates, this gets a bit confusing. If there are
many references to =texlive= packages and particularly if there are commands run
between =\usepackage{...}= invokations, this is messy.

+ Use =C-c C-e= to open =org-export-dispatch= and then =C-b= to set =body-only=
  which affects the downstream call to =org-export-as=.

* Content

** Tables

#+name: tblcalibrate1
#+CAPTION: Velocities 1:
#+ATTR_LATEX:  :font \footnotesize :placemcent [h!] :align |r|c|c|c|c|c|
|-----------------------+-------+-------+-------+-------+-------|
| Trial                 |     1 |     2 |     3 |     4 |     5 |
|-----------------------+-------+-------+-------+-------+-------|
| Speed \unitfrac{m}{s} | 8.364 | 8.624 | 8.268 | 7.704 | 9.104 |
|-----------------------+-------+-------+-------+-------+-------|
| Trial                 |     6 |     7 |     8 |     9 |    10 |
|-----------------------+-------+-------+-------+-------+-------|
| Speed \unitfrac{m}{s} | 7.704 | 8.364 | 9.104 | 8.268 | 8.624 |
|-----------------------+-------+-------+-------+-------+-------|

*** Tabu

See defines at top (requires =tabu=)

#+name: tblcalibrate2
#+LATEX: \taburowcolors[2]2{lightgray..white}
#+CAPTION: Velocities 2 (tabu):
#+ATTR_LATEX: :environment tabu :font \footnotesize :placemcent [h!] :align |r|c|c|c|c|c|
|-----------------------+-------+-------+-------+-------+-------|
| Trial                 |     1 |     2 |     3 |     4 |     5 |
|-----------------------+-------+-------+-------+-------+-------|
| Speed \unitfrac{m}{s} | 8.364 | 8.624 | 8.268 | 7.704 | 9.104 |
|-----------------------+-------+-------+-------+-------+-------|
| Trial                 |     6 |     7 |     8 |     9 |    10 |
|-----------------------+-------+-------+-------+-------+-------|
| Speed \unitfrac{m}{s} | 7.704 | 8.364 | 9.104 | 8.268 | 8.624 |
|-----------------------+-------+-------+-------+-------+-------|

*** With booktabs

See this post for a [[https://nhigham.com/2019/11/19/better-latex-tables-with-booktabs/][visual explanation]]

This is noted in tecosaur's config, but I can't seem to find an example. Set
=org-latex-tables-booktabs= to use them. The variable docs also say.

#+begin_quote
ignored locally with ":booktabs t" and ":booktabs nil" LaTeX attributes.
#+end_quote

When using booktabs, you'll want to remove the pipes from =|r|c|l|=

Apparently, multicolumn cells can be used [[https://emacs.stackexchange.com/questions/7299/multicolumn-cells-in-org-mode-tables][like this]], but I can't really get it
to export to LaTeX (for now anyways, not a priority). The typical org commands
reformat the table. The booktabs look alot better with multicolumn formatting,
which should work when adding =+= on the junctions of =|= and ===.

#+name: tblcalibrate3
#+CAPTION: Velocities (booktabs):
#+ATTR_LATEX:  :font \footnotesize :placemcent [h!] :align rccccc
+-----------------------+-------+-------+-------+-------+-------+
|                       | Trial                                 |
|                       +---------------------------------------+
|                       |     1 |     2 |     3 |     4 |     5 |
+-----------------------+-------+-------+-------+-------+-------+
| Speed \unitfrac{m}{s} | 8.364 | 8.624 | 8.268 | 7.704 | 9.104 |
|-----------------------+-------+-------+-------+-------+-------|
| Speed \unitfrac{m}{s} | 7.704 | 8.364 | 9.104 | 8.268 | 8.624 |
|-----------------------+-------+-------+-------+-------+-------|



** Loading Data into tables

Some of these features, esp the more esoteric table features are a bit dense to
figure out. e.g. using =!= to provide a shadowed set of column id's for
reference in later blocks ... it wasn't working out to well. I gave up on that.

When things like formulas work, they work fairly well, but you're better off
loading the table data from a CSV that's been generated by python or something.

***** TODO add some examples of difficult table formatting

** GNU Plot

This is referencing tables in later hidden headlines.

#+begin_src gnuplot :file img/latex-thetamax.png :var data1=histangle1 :var data2=histangle2
reset

set title "Frequency of Observed Maximum Pendulum Angle"

set xlabel "Maximum Pendulum Angle (θ)"
set xrange [12:19]
set xtics 10,1,20

set ylabel "Frequency"
set yrange [0:10]
set ytics 0,1,10

plot data1 u 1:2 w p lw 2 title "Medium Range", \
     data2 u 1:2 w p lw 3 title "Long Range"
#+end_src

#+RESULTS:
[[file:img/latex-thetamax.png]]

It's an improvement over [[id:01b22509-b699-45ae-8ba2-265a33efb315][my previous attempt at using tables with gnuplot]],
though the problems there seem to relate more to accessing column names in a
reasonble manner. I'm really impatient when it comes to learning /yet another
programming language./ So, yeh. One day.

** No Export

For GNU Plot, you can either generate these images using tables outside of the
document and include them. This is easier and probably the way it's done
for larger projects.

However, if you do want to include the data for images inline, then you can add
=:noexport:= tag to a Headline like =Hidden= and these won't show up in the
final export, but you need the following =#+EXCLUDE_TAGS: noexport= org setting.

#+begin_example org
#+SELECT_TAGS:
#+EXCLUDE_TAGS: noexport
#+KEYWORDS:
#+LANGUAGE: en
#+end_example

The tag may also prevent these from exporting to HTML.

*** Hidden

#+NAME: histangle1
| Angle | Count |
|-------+-------|
| 13.32 |     1 |
| 13.41 |     6 |
|  13.5 |     1 |
| 13.59 |     2 |

#+NAME: histangle2
| Angle | Count |
|-------+-------|
| 17.46 |     1 |
| 17.64 |     2 |
| 17.73 |     3 |
| 17.82 |     4 |


* Presentations

** Beamer

See the [[https://orgmode.org/worg/exporters/beamer/tutorial.html][worg guide]]

* Roam
+ [[id:0bef6f3e-3007-4685-8679-e5edbcbb082c][Latex]]
+ [[id:33cee19d-b67b-429c-963b-29209d0982bc][Orgmode]]
+ [[id:6f769bd4-6f54-4da7-a329-8cf5226128c9][Emacs]]
