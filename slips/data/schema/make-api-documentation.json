{
  "sections": [
    {
      "name": "Admin",
      "description": "The following sections describe endpoints available to the admins of the Make White Label product. If you are using the Make Cloud service you cannot use these endpoints.",
      "subsections": [
        {
          "name": "Users",
          "description": "The following endpoints retrieve information about the users of your Make White Label instance. You can also manage users, for example adding them to organizations and teams.",
          "endpoints": [
            {
              "key": "admin-users-get",
              "summary": "List users"
            },
            {
              "key": "admin-users-post",
              "summary": "Create a new user"
            },
            {
              "key": "admin-users-userId-patch",
              "summary": "Update user information"
            },
            {
              "key": "admin-users-userId-delete",
              "summary": "Delete a user"
            },
            {
              "key": "admin-users-userId-user-organization-roles-organizationId-post",
              "summary": "Set user organization role"
            },
            {
              "key": "admin-users-userId-user-organization-roles-organizationId-transfer-post",
              "summary": "Transfer organization ownership"
            },
            {
              "key": "admin-users-userId-user-team-roles-teamId-post",
              "summary": "Set user team role"
            }
          ]
        },
        {
          "name": "Teams",
          "description": "The following endpoint allows you to create new teams within organizations in the Make White Label product. You can set the team admin directly in the API call request body.",
          "endpoints": [
            {
              "key": "admin-teams-get",
              "summary": "List teams"
            },
            {
              "key": "admin-teams-post",
              "summary": "Create a team"
            },
            {
              "key": "admin-teams-teamId-patch",
              "summary": "Update team"
            },
            {
              "key": "admin-teams-teamId-delete",
              "summary": "Delete a team"
            }
          ]
        },
        {
          "name": "Organizations",
          "description": "The following endpoints allow you to inspect and manage organizations in the Make White Label product. You can also adjust operations and data transfer allowance and manage individual organizations access to Make White Label features.",
          "endpoints": [
            {
              "key": "admin-organizations-get",
              "summary": "List organizations"
            },
            {
              "key": "admin-organizations-post",
              "summary": "Create an organization"
            },
            {
              "key": "admin-organizations-organizationId-patch",
              "summary": "Update organization"
            },
            {
              "key": "admin-organizations-organizationId-delete",
              "summary": "Delete an organization"
            }
          ]
        },
        {
          "name": "Platform settings",
          "description": "The following endpoints allow you to inspect the settings of your Make platform instance.",
          "endpoints": [
            {
              "key": "admin-system-settings-default-license-get",
              "summary": "Get default license"
            }
          ]
        }
      ]
    },
    {
      "name": "Connections",
      "description": "For most apps included in Make, it is necessary to create a connection, through which Make will communicate with the given third-party service according to the settings of a specific scenario. The following endpoints allow you to create and manage connections.",
      "endpoints": [
        {
          "key": "connections-get",
          "summary": "List connections"
        },
        {
          "key": "connections-post",
          "summary": "Create connection"
        },
        {
          "key": "connections-connectionId-get",
          "summary": "Get connection details"
        },
        {
          "key": "connections-connectionId-patch",
          "summary": "Update connection"
        },
        {
          "key": "connections-connectionId-delete",
          "summary": "Delete connection"
        },
        {
          "key": "connections-connectionId-test-post",
          "summary": "Verify connection"
        },
        {
          "key": "connections-connectionId-scoped-post",
          "summary": "Verify if connection is scoped"
        },
        {
          "key": "connections-connectionId-set-data-post",
          "summary": "Set connection data"
        },
        {
          "key": "connections-connectionId-editable-data-schema-get",
          "summary": "List updatable connection parameters"
        }
      ]
    },
    {
      "name": "Custom properties",
      "description": "The following endpoints allow you to create and list custom property structures.\nTo use custom properties, you have to:\n1. [Create a custom properties structure](https://www.make.com/en/api-documentation/custom-property-structures-post).\n 2. [Create custom properties structure items](https://www.make.com/en/api-documentation/custom-property-structures-customPropertyStructureId-custom-property-structure-items-post).\n 3. [Fill the items with data](https://www.make.com/en/api-documentation/scenarios-scenarioId-custom-properties-post).\n\nRead more about custom properties in the [custom properties feature documentation](https://www.make.com/en/help/scenarios/custom-scenario-properties).",
      "endpoints": [
        {
          "key": "custom-property-structures-get",
          "summary": "List custom property structures"
        },
        {
          "key": "custom-property-structures-post",
          "summary": "Create a custom property structure"
        }
      ],
      "subsections": [
        {
          "name": "Structure items",
          "description": "The following endpoints allow you to manage items in a custom property structure.\nTo use custom properties, you have to:\n1. [Create a custom properties structure](https://www.make.com/en/api-documentation/custom-property-structures-post).\n 2. [Create custom properties structure items](https://www.make.com/en/api-documentation/custom-property-structures-customPropertyStructureId-custom-property-structure-items-post).\n 3. [Fill the items with data](https://www.make.com/en/api-documentation/scenarios-scenarioId-custom-properties-post).\n\nRead more about custom properties in the [custom properties feature documentation](https://www.make.com/en/help/scenarios/custom-scenario-properties).",
          "endpoints": [
            {
              "key": "custom-property-structures-customPropertyStructureId-custom-property-structure-items-get",
              "summary": "List custom property structure items"
            },
            {
              "key": "custom-property-structures-customPropertyStructureId-custom-property-structure-items-post",
              "summary": "Create a custom property structure item"
            },
            {
              "key": "custom-property-structures-custom-property-structure-items-customPropertyStructureItemId-patch",
              "summary": "Update custom property structure item"
            },
            {
              "key": "custom-property-structures-custom-property-structure-items-customPropertyStructureItemId-delete",
              "summary": "Delete custom property structure item"
            }
          ]
        }
      ]
    },
    {
      "name": "Data stores",
      "description": "Data stores are used to store data from scenarios or for transferring data in between individual scenarios or scenario runs. The following endpoints allow you to create and manage data stores.",
      "endpoints": [
        {
          "key": "data-stores-get",
          "summary": "List data stores"
        },
        {
          "key": "data-stores-post",
          "summary": "Create data store"
        },
        {
          "key": "data-stores-delete",
          "summary": "Delete data stores"
        },
        {
          "key": "data-stores-dataStoreId-get",
          "summary": "Get data store details"
        },
        {
          "key": "data-stores-dataStoreId-patch",
          "summary": "Update data store"
        }
      ],
      "subsections": [
        {
          "name": "Data",
          "description": "The following endpoints allow you to create and manage records in data stores.",
          "endpoints": [
            {
              "key": "data-stores-dataStoreId-data-get",
              "summary": "List data store records"
            },
            {
              "key": "data-stores-dataStoreId-data-post",
              "summary": "Create data store record"
            },
            {
              "key": "data-stores-dataStoreId-data-delete",
              "summary": "Delete data store records"
            },
            {
              "key": "data-stores-dataStoreId-data-dataStoreKeyRecord-put",
              "summary": "Update entire data store record"
            },
            {
              "key": "data-stores-dataStoreId-data-dataStoreKeyRecord-patch",
              "summary": "Update data store record details"
            }
          ]
        }
      ]
    },
    {
      "name": "Data structures",
      "description": "Data structures define the format of the data being transferred to the Make platform. For example, they are widely used by the Data stores component. The following endpoints allow you to create and manage data structures.",
      "endpoints": [
        {
          "key": "data-structures-get",
          "summary": "List data structures"
        },
        {
          "key": "data-structures-post",
          "summary": "Create data structure"
        },
        {
          "key": "data-structures-dataStructureId-patch",
          "summary": "Update data structure"
        },
        {
          "key": "data-structures-dataStructureId-delete",
          "summary": "Delete data structure"
        },
        {
          "key": "data-structures-dataStructureId-clone-post",
          "summary": "Clone data structure"
        }
      ]
    },
    {
      "name": "Incomplete executions",
      "description": "If a scenario terminates unexpectedly because of an error, then the scenario run is discarded. You can set the scenario to store the failed scenario run as an incomplete execution. With that, if an error occurs in your scenario, you can resolve it manually and avoid losing data.\n\nRead more about the [incomplete executions](https://www.make.com/en/help/scenarios/incomplete-executions).",
      "endpoints": [
        {
          "key": "dlqs-get",
          "summary": "List scenario incomplete executions"
        },
        {
          "key": "dlqs-delete",
          "summary": "Delete scenario incomplete executions"
        },
        {
          "key": "dlqs-dlqId-get",
          "summary": "Incomplete execution detail"
        },
        {
          "key": "dlqs-dlqId-patch",
          "summary": "Update incomplete execution"
        },
        {
          "key": "dlqs-dlqId-blueprint-get",
          "summary": "Get failed scenario blueprint"
        },
        {
          "key": "dlqs-dlqId-bundle-get",
          "summary": "Get incomplete execution bundles"
        },
        {
          "key": "dlqs-dlqId-logs-get",
          "summary": "List incomplete executions logs"
        },
        {
          "key": "dlqs-dlqId-logs-executionDlqId-get",
          "summary": "Incomplete execution log detail"
        }
      ]
    },
    {
      "name": "Enums",
      "description": "The parameters with a predefined set of values are called \\\"enums.\\\" The enums endpoints list the mappings of a possible parameter values and the IDs of those values. For example, the endpoint `/enums/timezones` lists the timezone `name` and `code`, such as `Europe/Berlin`, and the `timezoneId`.",
      "endpoints": [
        {
          "key": "enums-timezones-get",
          "summary": "List timezones"
        },
        {
          "key": "enums-countries-get",
          "summary": "List countries"
        },
        {
          "key": "enums-locales-get",
          "summary": "List locales"
        },
        {
          "key": "enums-languages-get",
          "summary": "List languages"
        },
        {
          "key": "enums-user-email-notifications-get",
          "summary": "List email notification settings"
        },
        {
          "key": "enums-user-api-token-scopes-get",
          "summary": "List API token scopes"
        },
        {
          "key": "enums-imt-regions-get",
          "summary": "List Make regions"
        },
        {
          "key": "enums-imt-zones-get",
          "summary": "List Make zones"
        },
        {
          "key": "enums-variable-types-get",
          "summary": "List variable types"
        }
      ]
    },
    {
      "name": "Custom functions",
      "description": "Custom functions are functions you or your team members create that you can use in a scenario. The following API endpoints allow you to:\n\n- list\n - evaluate\n - create\n - update\n - delete\n - check version history\n\nof your custom functions.\n\nCheck the custom functions feature [documentation in the Make Help center](https://www.make.com/en/help/functions/custom-functions).",
      "endpoints": [
        {
          "key": "functions-get",
          "summary": "List custom functions"
        },
        {
          "key": "functions-post",
          "summary": "Create a custom function"
        },
        {
          "key": "functions-eval-post",
          "summary": "Check custom function code"
        },
        {
          "key": "functions-functionId-get",
          "summary": "Custom function detail"
        },
        {
          "key": "functions-functionId-patch",
          "summary": "Update a custom function"
        },
        {
          "key": "functions-functionId-delete",
          "summary": "Delete custom function"
        },
        {
          "key": "functions-functionId-history-get",
          "summary": "Custom function updates history"
        }
      ]
    },
    {
      "name": "General",
      "description": "This section contains endpoints that provide general functionality for the Make API.",
      "endpoints": [
        {
          "key": "ping-get",
          "summary": "Ping"
        }
      ]
    },
    {
      "name": "Hooks",
      "description": "Hooks refer to the webhooks and mailhooks available in the various apps in the Make interface. They notify you whenever a certain change occurs in the connected app or service, such as sending an HTTP request or an email. The following endpoints allow you to create and manage hooks.",
      "endpoints": [
        {
          "key": "hooks-get",
          "summary": "List hooks"
        },
        {
          "key": "hooks-post",
          "summary": "Create hook"
        },
        {
          "key": "hooks-hookId-get",
          "summary": "Get hook details"
        },
        {
          "key": "hooks-hookId-delete",
          "summary": "Delete hook"
        },
        {
          "key": "hooks-hookId-patch",
          "summary": "Update hook"
        },
        {
          "key": "hooks-hookId-ping-get",
          "summary": "Ping hook"
        },
        {
          "key": "hooks-hookId-learn-start-post",
          "summary": "Learn start"
        },
        {
          "key": "hooks-hookId-learn-stop-post",
          "summary": "Learn stop"
        },
        {
          "key": "hooks-hookId-enable-post",
          "summary": "Enable hook"
        },
        {
          "key": "hooks-hookId-disable-post",
          "summary": "Disable hook"
        },
        {
          "key": "hooks-hookId-set-data-post",
          "summary": "Set hook details"
        }
      ],
      "subsections": [
        {
          "name": "Incomings",
          "description": "When data arrive to a scheduled webhook, Make places the data in the webhook processing queue. Webhooks process data in the same order as they arrive. The following endpoints allow you to inspect and update the webhook processing queue.",
          "endpoints": [
            {
              "key": "hooks-hookId-incomings-get",
              "summary": "Get webhook queue"
            },
            {
              "key": "hooks-hookId-incomings-delete",
              "summary": "Delete items from webhook queue"
            },
            {
              "key": "hooks-hookId-incomings-incomingId-get",
              "summary": "Get webhook queue item detail"
            },
            {
              "key": "hooks-hookId-incomings-stats-get",
              "summary": "Get webhook queue stats"
            }
          ]
        },
        {
          "name": "Logs",
          "description": "Make stores a log of every webhook execution. Make stores webhook logs for 3 days. The webhook logs for organizations with the Enterprise plan are stored for 30 days.  [Read more about webhook logs](https://www.make.com/en/help/tools/webhooks#webhook-logs).\n\nThe following endpoints allow you to retrieve webhook logs.",
          "endpoints": [
            {
              "key": "hooks-hookId-logs-get",
              "summary": "Get webhook logs"
            },
            {
              "key": "hooks-hookId-logs-logId-get",
              "summary": "Get webhook execution detail"
            }
          ]
        }
      ]
    },
    {
      "name": "Notifications",
      "description": "The **Notifications** feature keeps you informed about problems in your scenarios and keep you up to date when it comes to the new features and improvements in Make. The following endpoints allow you to manage the notifications.",
      "endpoints": [
        {
          "key": "notifications-get",
          "summary": "List notifications"
        },
        {
          "key": "notifications-delete",
          "summary": "Delete notifications"
        },
        {
          "key": "notifications-notificationId-get",
          "summary": "Get notification detail"
        },
        {
          "key": "notifications-mark-as-read-post",
          "summary": "Mark all notifications as read"
        }
      ]
    },
    {
      "name": "Organizations",
      "description": "Organizations are main containers that contain all teams, scenarios, and users. The API endpoints discussed further allow you to manage organizations. [Read more about organizations](https://www.make.com/en/help/access-management/organizations).",
      "endpoints": [
        {
          "key": "organizations-get",
          "summary": "List user organizations"
        },
        {
          "key": "organizations-post",
          "summary": "Create an organization"
        },
        {
          "key": "organizations-organizationId-get",
          "summary": "Get organization details"
        },
        {
          "key": "organizations-organizationId-patch",
          "summary": "Update organization information"
        },
        {
          "key": "organizations-organizationId-delete",
          "summary": "Delete an organization"
        },
        {
          "key": "organizations-organizationId-apps-get",
          "summary": "Get a list of custom apps"
        },
        {
          "key": "organizations-organizationId-invite-post",
          "summary": "Invite a user to the organization"
        },
        {
          "key": "organizations-organizationId-variables-get",
          "summary": "List organization variables"
        },
        {
          "key": "organizations-organizationId-variables-post",
          "summary": "Create organization variable"
        },
        {
          "key": "organizations-organizationId-variables-variableName-patch",
          "summary": "Update organization variable"
        },
        {
          "key": "organizations-organizationId-variables-variableName-delete",
          "summary": "Delete organization variable"
        },
        {
          "key": "organizations-organizationId-variables-variableName-history-get",
          "summary": "History of custom variable updates"
        }
      ],
      "subsections": [
        {
          "name": "User organization roles",
          "description": "User organization roles define user permissions in the organization. The endpoints discussed further retrieve information about user roles in the organization. Use the `/users/{userId}/user-organization-roles/{organizationIdId}` to manage user organization roles. Check out the [overview of user organization roles and the associated user permissions](https://www.make.com/en/help/access-management/organizations#organization-roles).",
          "endpoints": [
            {
              "key": "organizations-organizationId-user-organization-roles-get",
              "summary": "List user roles"
            },
            {
              "key": "organizations-organizationId-user-organization-roles-userId-get",
              "summary": "Get user organization role details"
            },
            {
              "key": "organizations-organizationId-user-organization-roles-transfer-post",
              "summary": "Transfer organization ownership"
            }
          ]
        }
      ]
    },
    {
      "name": "Scenarios",
      "description": "**Scenarios** allow you to create and run automation tasks. A scenario consists of a series of modules that indicate how data should be transferred and transformed between apps or services. The following endpoints allow you to create, manage and execute scenarios and also inspect and manage [scenario inputs](https://www.make.com/en/help/scenarios/scenario-inputs).",
      "endpoints": [
        {
          "key": "scenarios-get",
          "summary": "List scenarios"
        },
        {
          "key": "scenarios-post",
          "summary": "Create scenario"
        },
        {
          "key": "scenarios-scenarioId-get",
          "summary": "Get scenario details"
        },
        {
          "key": "scenarios-scenarioId-patch",
          "summary": "Update scenario"
        },
        {
          "key": "scenarios-scenarioId-delete",
          "summary": "Delete scenario"
        },
        {
          "key": "scenarios-scenarioId-triggers-get",
          "summary": "Get trigger details"
        },
        {
          "key": "scenarios-scenarioId-clone-post",
          "summary": "Clone scenario"
        },
        {
          "key": "scenarios-scenarioId-data-moduleId-get",
          "summary": "Check module data"
        },
        {
          "key": "scenarios-scenarioId-start-post",
          "summary": "Activate scenario"
        },
        {
          "key": "scenarios-scenarioId-stop-post",
          "summary": "Deactivate scenario"
        },
        {
          "key": "scenarios-scenarioId-run-post",
          "summary": "Run a scenario"
        },
        {
          "key": "scenarios-scenarioId-interface-get",
          "summary": "Get scenario interface"
        },
        {
          "key": "scenarios-scenarioId-interface-patch",
          "summary": "Update scenario interface"
        }
      ],
      "subsections": [
        {
          "name": "Logs",
          "description": "The following endpoints allow you to manage scenarios logs.",
          "endpoints": [
            {
              "key": "scenarios-scenarioId-logs-get",
              "summary": "List scenario logs"
            },
            {
              "key": "scenarios-scenarioId-logs-executionId-get",
              "summary": "Get execution log"
            }
          ]
        },
        {
          "name": "Blueprints",
          "description": "The following endpoints allow you to manage scenarios blueprints.",
          "endpoints": [
            {
              "key": "scenarios-scenarioId-blueprint-get",
              "summary": "Get scenario blueprint"
            },
            {
              "key": "scenarios-scenarioId-blueprints-get",
              "summary": "Get blueprint versions"
            }
          ]
        },
        {
          "name": "Consumptions",
          "description": "Scenario consumption is the information about the number of operations and data transfer used by a scenario. The following endpoints retrieve information about your scenarios consumptions in your current restart period. You can view the end of your current restart period in your dashboard in the **Usage reset** field.",
          "endpoints": [
            {
              "key": "scenarios-consumptions-get",
              "summary": "List scenario consumptions"
            }
          ]
        },
        {
          "name": "Custom properties data",
          "description": "The following endpoints allow you to manage custom scenario properties data.\nTo use custom properties, you have to:\n1. [Create a custom properties structure](https://www.make.com/en/api-documentation/custom-property-structures-post).\n 2. [Create custom properties structure items](https://www.make.com/en/api-documentation/custom-property-structures-customPropertyStructureId-custom-property-structure-items-post).\n 3. [Fill the items with data](https://www.make.com/en/api-documentation/scenarios-scenarioId-custom-properties-post).\n\nRead more about custom properties in the [custom properties feature documentation](https://www.make.com/en/help/scenarios/custom-scenario-properties).",
          "endpoints": [
            {
              "key": "scenarios-scenarioId-custom-properties-get",
              "summary": "Get custom properties data"
            },
            {
              "key": "scenarios-scenarioId-custom-properties-post",
              "summary": "Fill in custom properties data"
            },
            {
              "key": "scenarios-scenarioId-custom-properties-patch",
              "summary": "Update custom properties data"
            },
            {
              "key": "scenarios-scenarioId-custom-properties-put",
              "summary": "Set custom properties"
            },
            {
              "key": "scenarios-scenarioId-custom-properties-delete",
              "summary": "Delete custom properties data"
            }
          ]
        }
      ]
    },
    {
      "name": "Scenarios folders",
      "description": "Scenarios can be grouped into folders for better organization. The following endpoints allow you to create and manage scenarios folders.",
      "endpoints": [
        {
          "key": "scenarios-folders-get",
          "summary": "List scenario folders"
        },
        {
          "key": "scenarios-folders-post",
          "summary": "Create scenario folder"
        },
        {
          "key": "scenarios-folders-folderId-patch",
          "summary": "Update scenario folder"
        },
        {
          "key": "scenarios-folders-folderId-delete",
          "summary": "Delete scenario folder"
        }
      ]
    },
    {
      "name": "Teams",
      "description": "Teams are containers that contain scenarios and data accessible only by the members of the team. The API endpoints discussed further allow you to manage teams. [Read more about teams](https://www.make.com/en/help/access-management/teams).",
      "endpoints": [
        {
          "key": "teams-get",
          "summary": "List teams"
        },
        {
          "key": "teams-post",
          "summary": "Create a team"
        },
        {
          "key": "teams-teamId-get",
          "summary": "Get team details"
        },
        {
          "key": "teams-teamId-delete",
          "summary": "Delete a team"
        },
        {
          "key": "teams-teamId-variables-get",
          "summary": "List team variables"
        },
        {
          "key": "teams-teamId-variables-post",
          "summary": "Create team variable"
        },
        {
          "key": "teams-teamId-variables-variableName-patch",
          "summary": "Update team variable"
        },
        {
          "key": "teams-teamId-variables-variableName-delete",
          "summary": "Delete team variable"
        },
        {
          "key": "teams-teamId-variables-variableName-history-get",
          "summary": "History of custom variable updates"
        }
      ],
      "subsections": [
        {
          "name": "User team roles",
          "description": "User team roles define user permissions in the team. The endpoints discussed further retrieve information about user roles in the team. Use the `/users/{userId}/user-team-roles/{userId}` endpoint to manage user team roles. Check out the [overview of user team roles and the associated permissions](https://www.make.com/en/help/access-management/teams#managing-team-members).",
          "endpoints": [
            {
              "key": "teams-teamId-user-team-roles-get",
              "summary": "List user roles in the team"
            },
            {
              "key": "teams-teamId-user-team-roles-userId-get",
              "summary": "Get user team role details"
            }
          ]
        }
      ]
    },
    {
      "name": "Templates",
      "description": "The **Templates** feature allows you to create and use templates as a starting point for your Make scenarios. By default, Make offers hundreds of templates containing the scenarios of most-used apps. The following endpoints allow you to create and manage templates.",
      "endpoints": [
        {
          "key": "templates-get",
          "summary": "List templates"
        },
        {
          "key": "templates-post",
          "summary": "Create template"
        },
        {
          "key": "templates-templateId-get",
          "summary": "Get template details"
        },
        {
          "key": "templates-templateId-patch",
          "summary": "Update template"
        },
        {
          "key": "templates-templateId-delete",
          "summary": "Delete template"
        },
        {
          "key": "templates-templateId-blueprint-get",
          "summary": "Get template blueprint"
        },
        {
          "key": "templates-templateId-publish-post",
          "summary": "Publish template"
        },
        {
          "key": "templates-templateId-request-approval-post",
          "summary": "Request approval"
        }
      ],
      "subsections": [
        {
          "name": "Public",
          "description": "The following endpoints focus on the public (approved) templates that are available to every user regardless of the organization and team.",
          "endpoints": [
            {
              "key": "templates-public-get",
              "summary": "List public (approved) templates"
            },
            {
              "key": "templates-public-templateUrl-get",
              "summary": "Get public (approved) template details"
            },
            {
              "key": "templates-public-templateUrl-blueprint-get",
              "summary": "Get public (approved) template blueprint"
            }
          ]
        }
      ]
    },
    {
      "name": "Users",
      "description": "The following main user endpoints allow you to get a list of existing users and manage their basic details such as password change.",
      "endpoints": [
        {
          "key": "users-get",
          "summary": "List users"
        },
        {
          "key": "users-userId-patch",
          "summary": "Update user"
        },
        {
          "key": "users-userId-attributes-email-put",
          "summary": "Update user email"
        },
        {
          "key": "users-userId-attributes-password-put",
          "summary": "Update user password"
        },
        {
          "key": "users-password-reset-demand-post",
          "summary": "Send password reset demand"
        },
        {
          "key": "users-password-reset-get",
          "summary": "Set session for resetting lost password"
        },
        {
          "key": "users-password-reset-post",
          "summary": "Reset lost password"
        }
      ],
      "subsections": [
        {
          "name": "Me",
          "description": "The following endpoints retrieve data about the currently authenticated user.",
          "endpoints": [
            {
              "key": "users-me-get",
              "summary": "Current user data"
            },
            {
              "key": "users-me-organization-invitations-get",
              "summary": "User Organization invitations"
            }
          ]
        },
        {
          "name": "API Tokens",
          "description": "The following endpoints manage and retrieve data about the API tokens assigned to the currently authenticated user.",
          "endpoints": [
            {
              "key": "users-me-api-tokens-get",
              "summary": "List users API tokens"
            },
            {
              "key": "users-me-api-tokens-timestamp-delete",
              "summary": "Delete API token"
            }
          ]
        },
        {
          "name": "User team roles",
          "description": "The following endpoints update and retrieve data about user team roles of a user in a team. Check out the [overview of user team roles and the associated permissions](https://www.make.com/en/help/access-management/teams#managing-team-members).",
          "endpoints": [
            {
              "key": "users-userId-user-team-roles-get",
              "summary": "List user roles"
            },
            {
              "key": "users-userId-user-team-roles-teamId-get",
              "summary": "Get user team role detail"
            },
            {
              "key": "users-userId-user-team-roles-teamId-post",
              "summary": "Update user role"
            }
          ]
        },
        {
          "name": "User team notifications",
          "description": "The following endpoints update and retrieve data about user team notifications settings of a user in a team. [Read more about user team notifications](https://www.make.com/en/help/access-management/teams#managing-team-notification-options).",
          "endpoints": [
            {
              "key": "users-userId-user-team-notifications-teamId-get",
              "summary": "List user team notification settings"
            },
            {
              "key": "users-userId-user-team-notifications-teamId-notificationId-get",
              "summary": "Check user's notification settings"
            },
            {
              "key": "users-userId-user-team-notifications-teamId-notificationId-put",
              "summary": "Update user's notification settings"
            }
          ]
        },
        {
          "name": "User organization roles",
          "description": "The following endpoints update and retrieve data about user organization roles of a user in an organization. Check out the [overview of user organization roles and the associated permissions](https://www.make.com/en/help/access-management/organizations#organization-roles).",
          "endpoints": [
            {
              "key": "users-userId-user-organization-roles-get",
              "summary": "List user roles in an organization"
            },
            {
              "key": "users-userId-user-organization-roles-organizationId-get",
              "summary": "Get user organization role details"
            },
            {
              "key": "users-userId-user-organization-roles-organizationId-post",
              "summary": "Update user role"
            },
            {
              "key": "users-userId-user-organization-roles-organizationId-transfer-post",
              "summary": "Transfer organization ownership"
            }
          ]
        },
        {
          "name": "Roles",
          "description": "The following endpoint retrieves the mapping of a `userRoleId` parameter and user role name.",
          "endpoints": [
            {
              "key": "users-roles-get",
              "summary": "User role definitions"
            }
          ]
        },
        {
          "name": "Unread notifications",
          "description": "The following endpoint retrieves the number of unread notifications of the currently authenticated user.",
          "endpoints": [
            {
              "key": "users-unread-notifications-get",
              "summary": "Unread notifications"
            }
          ]
        }
      ]
    }
  ],
  "endpoints": {
    "admin-teams-get": {
      "endpointKey": "admin-teams-get",
      "path": "/admin/teams",
      "method": "get",
      "x-published": true,
      "tags": ["Admin > Teams"],
      "summary": "List teams",
      "description": "Gets the list of teams in the organization with the specified `organizationId`.",
      "security": [
        {
          "token": ["admin:read", "teams:read"]
        }
      ],
      "parameters": {
        "path": [],
        "query": [
          {
            "name": "organizationId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "example": 22,
            "description": "The ID of the organization."
          },
          {
            "name": "externalId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Custom team ID from an external system to the Make White Label platform."
          },
          {
            "name": "pg[sortBy]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["name"]
            },
            "description": "The value that will be used to sort returned entities by.",
            "default": "name"
          },
          {
            "name": "pg[offset]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The value of entities you want to skip before getting entities you need.",
            "default": 0
          },
          {
            "name": "pg[sortDir]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "The sorting order. It accepts the ascending and descending direction specifiers."
          },
          {
            "name": "pg[limit]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The maximum entities to return."
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "teams": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "organizationId": {
                          "type": "integer"
                        },
                        "scenarioDrafts": {
                          "type": "boolean"
                        },
                        "deleted": {
                          "type": "boolean"
                        },
                        "externalId": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "pg": {
                    "type": "object",
                    "properties": {
                      "last": {
                        "type": "string"
                      },
                      "showLast": {
                        "type": "boolean"
                      },
                      "sortBy": {
                        "type": "string"
                      },
                      "sortDir": {
                        "type": "string"
                      },
                      "limit": {
                        "type": "integer"
                      },
                      "offset": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "example": {
                "teams": [
                  {
                    "id": 38,
                    "name": "Management",
                    "organizationId": 22,
                    "scenarioDrafts": false,
                    "deleted": false,
                    "externalId": null
                  },
                  {
                    "id": 36,
                    "name": "Removed team",
                    "organizationId": 20,
                    "scenarioDrafts": false,
                    "deleted": true,
                    "externalId": null
                  }
                ],
                "pg": {
                  "sortBy": "name",
                  "limit": 10000,
                  "sortDir": "asc",
                  "offset": 0
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "teams": [
              {
                "id": 38,
                "name": "Management",
                "organizationId": 22,
                "scenarioDrafts": false,
                "deleted": false,
                "externalId": null
              },
              {
                "id": 36,
                "name": "Removed team",
                "organizationId": 20,
                "scenarioDrafts": false,
                "deleted": true,
                "externalId": null
              }
            ],
            "pg": {
              "sortBy": "name",
              "limit": 10000,
              "sortDir": "asc",
              "offset": 0
            }
          },
          "parameters": {
            "organizationId": 22
          },
          "path": "/admin/teams"
        }
      }
    },
    "admin-teams-post": {
      "endpointKey": "admin-teams-post",
      "path": "/admin/teams",
      "method": "post",
      "x-published": true,
      "tags": ["Admin > Teams"],
      "summary": "Create a team",
      "description": "Creates a new team in the specified organization.\n\nYou can set the team admin with the parameter `userTeamAdmin` in the request body. If you don't use the `userTeamAdmin` parameter and you are part of the organization, then Make sets you as the team admin.",
      "security": [
        {
          "token": ["admin:write", "teams:write"]
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the team."
                },
                "organizationId": {
                  "type": "integer",
                  "description": "The ID of the organization."
                },
                "userTeamAdmin": {
                  "type": "integer",
                  "description": "Set the user with the specified `userId` as the admin of the team."
                }
              },
              "required": ["name", "organizationId"]
            },
            "example": {
              "name": "Marketing team",
              "organizationId": 20,
              "userTeamAdmin": 15
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "team": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "organizationId": {
                        "type": "integer"
                      }
                    }
                  },
                  "userTeamRole": {
                    "type": "object",
                    "properties": {
                      "usersRoleId": {
                        "type": "integer"
                      },
                      "userId": {
                        "type": "integer"
                      },
                      "teamId": {
                        "type": "integer"
                      },
                      "changeable": {
                        "type": "boolean"
                      },
                      "ssoPending": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "example": {
                "team": {
                  "id": 26,
                  "name": "Marketing team",
                  "organizationId": 20
                },
                "userTeamRole": {
                  "usersRoleId": 1,
                  "userId": 15,
                  "teamId": 26,
                  "changeable": false,
                  "ssoPending": false
                }
              }
            }
          }
        }
      },
      "parameters": {
        "body": [
          {
            "name": "name",
            "schema": {
              "type": "string",
              "description": "The name of the team."
            },
            "example": "Marketing team",
            "required": true,
            "description": "The name of the team."
          },
          {
            "name": "organizationId",
            "schema": {
              "type": "integer",
              "description": "The ID of the organization."
            },
            "example": 20,
            "required": true,
            "description": "The ID of the organization."
          },
          {
            "name": "userTeamAdmin",
            "schema": {
              "type": "integer",
              "description": "Set the user with the specified `userId` as the admin of the team."
            },
            "example": 15,
            "required": false,
            "description": "Set the user with the specified `userId` as the admin of the team."
          }
        ]
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "team": {
              "id": 26,
              "name": "Marketing team",
              "organizationId": 20
            },
            "userTeamRole": {
              "usersRoleId": 1,
              "userId": 15,
              "teamId": 26,
              "changeable": false,
              "ssoPending": false
            }
          },
          "requestBody": {
            "name": "Marketing team",
            "organizationId": 20,
            "userTeamAdmin": 15
          },
          "path": "/admin/teams"
        }
      }
    },
    "admin-teams-teamId-patch": {
      "endpointKey": "admin-teams-teamId-patch",
      "path": "/admin/teams/{teamId}",
      "method": "patch",
      "x-published": true,
      "tags": ["Admin > Teams"],
      "summary": "Update team",
      "description": "Updates team information. Make updates only the values in the request body.",
      "security": [
        {
          "token": ["admin:write", "teams:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "teamId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the team.",
            "example": 56
          }
        ],
        "query": [],
        "body": [
          {
            "name": "name",
            "schema": {
              "type": "string",
              "description": "The name of the team."
            },
            "example": "Sales people team",
            "required": false,
            "description": "The name of the team."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the team."
                }
              }
            },
            "example": {
              "name": "Sales people team"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "team": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "organizationId": {
                        "type": "integer"
                      },
                      "scenarioDrafts": {
                        "type": "boolean"
                      },
                      "deleted": {
                        "type": "boolean"
                      },
                      "externalId": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "example": {
                "id": 56,
                "name": "Sales people team",
                "organizationId": 22,
                "scenarioDrafts": false,
                "deleted": false,
                "externalId": null
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "id": 56,
            "name": "Sales people team",
            "organizationId": 22,
            "scenarioDrafts": false,
            "deleted": false,
            "externalId": null
          },
          "requestBody": {
            "name": "Sales people team"
          },
          "path": "/admin/teams/56"
        }
      }
    },
    "admin-teams-teamId-delete": {
      "endpointKey": "admin-teams-teamId-delete",
      "path": "/admin/teams/{teamId}",
      "method": "delete",
      "x-published": true,
      "tags": ["Admin > Teams"],
      "summary": "Delete a team",
      "description": "Deletes the team with the specified `teamId`. Make removes all users from the deleted team and deletes all data associated with the team, such as data stores and scenarios.\n\nThe team won't be visible for the users. However, if you run the API call `GET /admin/teams` the response will contain also the deleted team with the `deleted: true` pair. Similarly, the team will remain visible in the Administration UI.",
      "security": [
        {
          "token": ["admin:write", "teams:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "teamId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the team.",
            "example": 22
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "team": {
                    "type": "integer"
                  }
                }
              },
              "example": {
                "team": 22
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "team": 22
          },
          "path": "/admin/teams/22"
        }
      }
    },
    "admin-organizations-get": {
      "endpointKey": "admin-organizations-get",
      "path": "/admin/organizations",
      "method": "get",
      "x-published": true,
      "tags": ["Admin > Organizations"],
      "summary": "List organizations",
      "description": "Gets the list of all organizations in the Make White Label product instance. The response contains all available information about all organizations in the Make White Label product instance.\n\nUse the `id`, `name` or `externalId` query parameters to limit the results to a specific organization or the `cols[]` parameter to get specific columns.",
      "security": [
        {
          "token": ["admin:read", "organizations:read"]
        }
      ],
      "parameters": {
        "path": [],
        "query": [
          {
            "name": "id",
            "in": "query",
            "description": "The ID of the organization.",
            "schema": {
              "type": "integer"
            },
            "examples": {
              "filter-data": {
                "value": 5
              }
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "The name of the organization.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalId",
            "in": "query",
            "description": "Custom organization ID from a different system than Make White Label.",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Specifies columns that are returned in the response. Use the `cols[]` parameter for every column that you want to return in the response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get both `key1` and `key2` columns in the response.\n\n[Check the \"Filtering\" section for a full example.](https://www.make.com/en/api-documentation/filtering)",
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "countryId",
                  "timezoneId",
                  "license",
                  "zone",
                  "serviceName",
                  "teams",
                  "isPaused",
                  "scenarios",
                  "activeScenarios",
                  "deleted",
                  "externalId"
                ]
              }
            },
            "examples": {
              "filter-data": {
                "value": ["id", "name", "license"]
              }
            }
          },
          {
            "name": "pg[sortBy]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The value that will be used to sort returned entities by."
          },
          {
            "name": "pg[offset]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The value of entities you want to skip before getting entities you need.",
            "default": 0
          },
          {
            "name": "pg[sortDir]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "The sorting order. It accepts the ascending and descending direction specifiers."
          },
          {
            "name": "pg[limit]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The maximum entities to return."
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organizations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "timezoneId": {
                          "type": "number"
                        },
                        "countryId": {
                          "type": "number"
                        },
                        "license": {
                          "type": "object",
                          "properties": null
                        },
                        "serviceName": {
                          "type": "string"
                        },
                        "teams": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "externalId": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "isPaused": {
                          "type": "boolean"
                        },
                        "zone": {
                          "type": "string"
                        },
                        "externalId": {
                          "type": "string"
                        },
                        "scenarios": {
                          "type": "integer"
                        },
                        "activeScenarios": {
                          "type": "integer"
                        },
                        "deleted": {
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "pg": {
                    "type": "object",
                    "properties": {
                      "last": {
                        "type": "string"
                      },
                      "showLast": {
                        "type": "boolean"
                      },
                      "sortBy": {
                        "type": "string"
                      },
                      "sortDir": {
                        "type": "string"
                      },
                      "limit": {
                        "type": "integer"
                      },
                      "offset": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "examples": {
                "default-cols": {
                  "summary": "All data",
                  "description": "Get all available data about all organizations in the Make White Label instance.",
                  "value": {
                    "organizations": [
                      {
                        "id": 7,
                        "name": "API example",
                        "timezoneId": 318,
                        "countryId": 202,
                        "license": {
                          "dslimit": 40,
                          "executionTime": 45,
                          "fslimit": 1048576000,
                          "iolimit": 10000,
                          "dsslimit": 524288000,
                          "interval": 1,
                          "transfer": 1099511627776,
                          "operations": 800000000,
                          "gracePeriod": 0,
                          "customVariables": true,
                          "productManagement": "salesforce",
                          "scenarioInputs": true,
                          "restartPeriod": "1 month"
                        },
                        "serviceName": "default",
                        "teams": [
                          {
                            "id": 6,
                            "name": "My Team",
                            "externalId": null
                          }
                        ],
                        "isPaused": false,
                        "zone": "white.label.example.com",
                        "externalId": null,
                        "scenarios": 2,
                        "activeScenarios": 0,
                        "deleted": false
                      },
                      {
                        "id": 5,
                        "name": "new org",
                        "timezoneId": 113,
                        "countryId": 1,
                        "license": {
                          "dslimit": 40,
                          "fslimit": 2147483648,
                          "iolimit": 10000,
                          "apiLimit": 2000,
                          "dsslimit": 524288000,
                          "fulltext": true,
                          "interval": 1,
                          "transfer": 1099511627776,
                          "operations": 800000000,
                          "scenarioIO": true,
                          "executionTime": 45,
                          "restartPeriod": "1 month",
                          "customVariables": true,
                          "creatingTemplates": true,
                          "installPublicApps": true,
                          "gracePeriod": 0,
                          "productManagement": "salesforce"
                        },
                        "serviceName": "default",
                        "teams": [
                          {
                            "id": 4,
                            "name": "My Team",
                            "externalId": null
                          }
                        ],
                        "isPaused": false,
                        "zone": "white.label.example.com",
                        "externalId": null,
                        "scenarios": 0,
                        "activeScenarios": 0,
                        "deleted": true
                      }
                    ],
                    "pg": {
                      "sortBy": "id",
                      "limit": 10000,
                      "sortDir": "desc",
                      "offset": 0
                    }
                  }
                },
                "filter-data": {
                  "summary": "Filter results",
                  "description": "Get the `id`, `name` and `license` of the specified organization.",
                  "value": {
                    "organizations": [
                      {
                        "id": 5,
                        "name": "new org",
                        "license": {
                          "dslimit": 40,
                          "fslimit": 2147483648,
                          "iolimit": 10000,
                          "apiLimit": 2000,
                          "dsslimit": 524288000,
                          "fulltext": true,
                          "interval": 1,
                          "transfer": 1099511627776,
                          "operations": 800000000,
                          "scenarioIO": true,
                          "executionTime": 45,
                          "restartPeriod": "1 month",
                          "customVariables": true,
                          "creatingTemplates": true,
                          "installPublicApps": true,
                          "scenarioInputs": true,
                          "productManagement": "salesforce",
                          "gracePeriod": 0
                        }
                      }
                    ],
                    "pg": {
                      "sortBy": "id",
                      "limit": 10000,
                      "sortDir": "desc",
                      "offset": 0
                    }
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "default-cols": {
          "summary": "All data",
          "response": {
            "organizations": [
              {
                "id": 7,
                "name": "API example",
                "timezoneId": 318,
                "countryId": 202,
                "license": {
                  "dslimit": 40,
                  "executionTime": 45,
                  "fslimit": 1048576000,
                  "iolimit": 10000,
                  "dsslimit": 524288000,
                  "interval": 1,
                  "transfer": 1099511627776,
                  "operations": 800000000,
                  "gracePeriod": 0,
                  "customVariables": true,
                  "productManagement": "salesforce",
                  "scenarioInputs": true,
                  "restartPeriod": "1 month"
                },
                "serviceName": "default",
                "teams": [
                  {
                    "id": 6,
                    "name": "My Team",
                    "externalId": null
                  }
                ],
                "isPaused": false,
                "zone": "white.label.example.com",
                "externalId": null,
                "scenarios": 2,
                "activeScenarios": 0,
                "deleted": false
              },
              {
                "id": 5,
                "name": "new org",
                "timezoneId": 113,
                "countryId": 1,
                "license": {
                  "dslimit": 40,
                  "fslimit": 2147483648,
                  "iolimit": 10000,
                  "apiLimit": 2000,
                  "dsslimit": 524288000,
                  "fulltext": true,
                  "interval": 1,
                  "transfer": 1099511627776,
                  "operations": 800000000,
                  "scenarioIO": true,
                  "executionTime": 45,
                  "restartPeriod": "1 month",
                  "customVariables": true,
                  "creatingTemplates": true,
                  "installPublicApps": true,
                  "gracePeriod": 0,
                  "productManagement": "salesforce"
                },
                "serviceName": "default",
                "teams": [
                  {
                    "id": 4,
                    "name": "My Team",
                    "externalId": null
                  }
                ],
                "isPaused": false,
                "zone": "white.label.example.com",
                "externalId": null,
                "scenarios": 0,
                "activeScenarios": 0,
                "deleted": true
              }
            ],
            "pg": {
              "sortBy": "id",
              "limit": 10000,
              "sortDir": "desc",
              "offset": 0
            }
          },
          "description": "Get all available data about all organizations in the Make White Label instance.",
          "parameters": {},
          "path": "/admin/organizations"
        },
        "filter-data": {
          "summary": "Filter results",
          "response": {
            "organizations": [
              {
                "id": 5,
                "name": "new org",
                "license": {
                  "dslimit": 40,
                  "fslimit": 2147483648,
                  "iolimit": 10000,
                  "apiLimit": 2000,
                  "dsslimit": 524288000,
                  "fulltext": true,
                  "interval": 1,
                  "transfer": 1099511627776,
                  "operations": 800000000,
                  "scenarioIO": true,
                  "executionTime": 45,
                  "restartPeriod": "1 month",
                  "customVariables": true,
                  "creatingTemplates": true,
                  "installPublicApps": true,
                  "scenarioInputs": true,
                  "productManagement": "salesforce",
                  "gracePeriod": 0
                }
              }
            ],
            "pg": {
              "sortBy": "id",
              "limit": 10000,
              "sortDir": "desc",
              "offset": 0
            }
          },
          "description": "Get the `id`, `name` and `license` of the specified organization.",
          "parameters": {
            "id": 5,
            "cols[]": ["id", "name", "license"]
          },
          "path": "/admin/organizations"
        }
      }
    },
    "admin-organizations-post": {
      "endpointKey": "admin-organizations-post",
      "path": "/admin/organizations",
      "method": "post",
      "x-published": true,
      "tags": ["Admin > Organizations"],
      "summary": "Create an organization",
      "description": "Create a new organization in the Make White Label instance. You can set the organization admin, timezone, country and features with the `countryId`, `timezoneId`, `userOrgAdmin` and `license` parameters in the request body.\n\nIf you don't use the `countryId` and `timezoneId` parameters Make uses your account values to set the organization timezone and country.\n\nIf you don't use the `userOrgAdmin` parameter you are set as the organization admin.\n\nThe `license` object sets the features and limits for the users in the organization. The following table lists all license parameters and their maximum, minimum, or available values for enumerated parameters. If you don't use the `license` parameter Make sets the organization's license to the default values for your Make White Label instance. You can check the default license of your Make White Label instance with the [get default license](https://www.make.com/en/api-documentation/admin-system-settings-default-license-get) endpoint.\n <!-- license input anchor begin -->\n<div itemscope itemtype=\"https://schema.org/FAQPage\"> <div class=\"card table\"> <table class=\"table\"> <thead> <tr> <th><strong class=\"text-nowrap\">Parameter</strong></th> <th><strong>Description and values</strong></th> </tr> </thead> <tbody> <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\"> <td> <p itemprop=\"name\"> <code>restartPeriod</code> </p> </td> <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\"> <div itemprop=\"text\"> <p>The period of time after which Make resets organization's operations and data transfer.</p> <p><strong>Type:</strong> enum&lt;string&gt;</p> <p><strong>Values:</strong></p> <ul> <li>1 month</li> <li>1 year</li> </ul> </td> </tr> <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\"> <td> <p itemprop=\"name\"> <code>operations</code> <span class=\"required\">REQUIRED</span> </p> </td> <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\"> <div itemprop=\"text\"> <p>The number of operations that are available to scenarios in the organization. Operations reset after the restart period.</p> <p><strong>Type:</strong> uinteger</p> <p><strong>Values:</strong></p> <ul> <li><strong>min:</strong> 0</li> <li><strong>max:</strong> 800000000</li> </ul> </td> </tr> <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\"> <td> <p itemprop=\"name\"> <code>transfer</code> <span class=\"required\">REQUIRED</span> </p> </td> <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\"> <div itemprop=\"text\"> <p>The maximum amount of data transfer in bytes available to scenarios in the organization. Transfer resets after the restart period.</p> <p><strong>Type:</strong> uinteger</p> <p><strong>Values:</strong></p> <ul> <li><strong>min:</strong> 104857600</li> <li><strong>max:</strong> 1099511627776</li> </ul> </td> </tr> <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\"> <td> <p itemprop=\"name\"> <code>dslimit</code> <span class=\"required\">REQUIRED</span> </p> </td> <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\"> <div itemprop=\"text\"> <p>The maximum number of data stores in the organization.</p> <p><strong>Type:</strong> uinteger</p> <p><strong>Values:</strong></p> <ul> <li><strong>min:</strong> 1</li> <li><strong>max:</strong> 1000</li> </ul> </td> </tr> <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\"> <td> <p itemprop=\"name\"> <code>dsslimit</code> <span class=\"required\">REQUIRED</span> </p> </td> <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\"> <div itemprop=\"text\"> <p>The maximum storage in bytes available across all data stores in the organization.</p> <p><strong>Type:</strong> uinteger</p> <p><strong>Values:</strong></p> <ul> <li><strong>min:</strong> 1</li> <li><strong>max:</strong> 2306867200</li> </ul> </td> </tr> <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\"> <td> <p itemprop=\"name\"> <code>interval</code> <span class=\"required\">REQUIRED</span> </p> </td> <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\"> <div itemprop=\"text\"> <p>The minimum interval between two scheduled scenario executions in minutes. The interval setting is ignored when the scenario scheduling is set to \"immediately\".</p> <p><strong>Type:</strong> uinteger</p> <p><strong>Values:</strong></p> <ul> <li><strong>min:</strong> 1</li> <li><strong>max:</strong> 15</li> </ul> </td> </tr> <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\"> <td> <p itemprop=\"name\"> <code>teams</code> </p> </td> <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\"> <div itemprop=\"text\"> <p>The maximum number of teams in the organization. Unlimited if not specified.</p> <p><strong>Type:</strong> uinteger</p> <p><strong>Values:</strong></p> <ul> <li><strong>min:</strong> 1</li> <li><strong>max:</strong> 1000</li> </ul> </td> </tr> <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\"> <td> <p itemprop=\"name\"> <code>retention</code> </p> </td> <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\"> <div itemprop=\"text\"> <p>The number of days to store internal logs (<code>activity stream</code>, <code>userdata fulltext</code>, <code>userdata</code>, <code>debugdata</code>) for the organization. <br> The <code>retention</code> parameter limits for example the scenario execution detail storage duration. Scenario executions older than the <code>retention</code> period have only information about the scenario execution start and status.</p> <p><strong>Type:</strong> enum&lt;uinteger&gt;</p> <p><strong>Values:</strong></p> <ul> <li>7</li> <li>30</li> <li>60</li> </ul> </td> </tr> <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\"> <td> <p itemprop=\"name\"> <code>premiumApps</code> </p> </td> <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\"> <div itemprop=\"text\"> <p>Users in the organization have access to premium apps that have the same or lower premium tier as the value of the <code>premiumApps</code> parameter. <br> To check the installed apps premium tier: <br> 1. List all installed apps with the API call <code>GET /admin/apps</code> to get the app names in the <code>name</code> field. <br> 2. Run the API call <code>GET /admin/apps/{appName}</code>. Check the field <code>premiumTier</code> for the premium tier of the app.</p> <p><strong>Type:</strong> uinteger</p> <p><strong>Values:</strong></p> <ul> <li><strong>min:</strong> 1</li> <li><strong>max:</strong> 10</li> </ul> </td> </tr> <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\"> <td> <p itemprop=\"name\"> <code>priority</code> </p> </td> <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\"> <div itemprop=\"text\"> <p>Sets the scenario execution priority of the scenarios in the organization. <br> Make executes scenarios from an execution queue. If there are scenarios scheduled to run at the same time, Make orders them for execution according to their priority.</p> <p><strong>Type:</strong> enum&lt;string&gt;</p> <p><strong>Values:</strong></p> <ul> <li>low</li> <li>medium</li> <li>high</li> </ul> </td> </tr> <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\"> <td> <p itemprop=\"name\"> <code>allowOverage</code> </p> </td> <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\"> <div itemprop=\"text\"> <p>Sets the percentage by which scenarios can exceed the number of available operations and data transfer. <br> For example, if the organization has the <code>operations</code> limit 1000 and the <code>allowOverage</code> parameter set to 120, the scenarios in the organization can use up to 1200 operations before Make stops and inactivates them.</p> <p><strong>Type:</strong> uinteger</p> <p><strong>Values:</strong></p> <ul> <li><strong>min:</strong> 100</li> <li><strong>max:</strong> 200</li> </ul> </td> </tr> <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\"> <td> <p itemprop=\"name\"> <code>apiLimit</code> </p> </td> <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\"> <div itemprop=\"text\"> <p>Sets a limit to the number of API calls per minute to work with the data contained in the organization. If a user is part of multiple organizations, Make limits API calls to each organization according to the organization's <code>apiLimit</code>. <br> <br> <div class=\"alert alert-warning\">If you don't specify the <code>apiLimit</code>, Make sets the <code>apiLimit</code> to 0, which disables access to the data in the organization with the API.</div></p> <p><strong>Type:</strong> uinteger</p> <p><strong>Values:</strong></p> <ul> <li><strong>min:</strong> 0</li> <li><strong>max:</strong> 2000</li> </ul> </td> </tr> <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\"> <td> <p itemprop=\"name\"> <code>fulltext</code> </p> </td> <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\"> <div itemprop=\"text\"> <p>Allows full text search in the scenario execution history to the users in the organization.</p> <p><strong>Type:</strong> boolean</p> </td> </tr> <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\"> <td> <p itemprop=\"name\"> <code>dedicatedSso</code> </p> </td> <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\"> <div itemprop=\"text\"> <p>Allows logging in to the White Label platform with a custom single sign-on solution.</p> <p><strong>Type:</strong> boolean</p> </td> </tr> <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\"> <td> <p itemprop=\"name\"> <code>installPublicApps</code> </p> </td> <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\"> <div itemprop=\"text\"> <p>Allows installation of apps that were created by user that is not part of the organization.</p> <p><strong>Type:</strong> boolean</p> </td> </tr> <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\"> <td> <p itemprop=\"name\"> <code>creatingTemplates</code> </p> </td> <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\"> <div itemprop=\"text\"> <p>Allows the users to create scenario templates.</p> <p><strong>Type:</strong> boolean</p> </td> </tr> <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\"> <td> <p itemprop=\"name\"> <code>scenarios</code> </p> </td> <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\"> <div itemprop=\"text\"> <p>Sets the maximum number of active scenarios in the organization. The number is unlimited if not specified.</p> <p><strong>Type:</strong> uinteger</p> <p><strong>Values:</strong></p> <ul> <li><strong>min:</strong> 1</li> <li><strong>max:</strong> 1000000</li> </ul> </td> </tr> <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\"> <td> <p itemprop=\"name\"> <code>dlqStorage</code> </p> </td> <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\"> <div itemprop=\"text\"> <p>Sets the maximum storage in bytes for the scenario incomplete executions.</p> <p><strong>Type:</strong> uinteger</p> <p><strong>Values:</strong></p> <ul> <li><strong>min:</strong> 1</li> <li><strong>max:</strong> 2097152000</li> </ul> </td> </tr> <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\"> <td> <p itemprop=\"name\"> <code>executionTime</code> </p> </td> <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\"> <div itemprop=\"text\"> <p>The maximum duration of a scenario execution in minutes.</p> <p><strong>Type:</strong> uinteger</p> <p><strong>Values:</strong></p> <ul> <li><strong>min:</strong> 5</li> <li><strong>max:</strong> 45</li> </ul> </td> </tr> <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\"> <td> <p itemprop=\"name\"> <code>customVariables</code> </p> </td> <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\"> <div itemprop=\"text\"> <p>Allows using the <a href=\"https://www.make.com/en/help/functions/variables#custom-variables-1529751\">custom variables</a> feature.</p> <p><strong>Type:</strong> boolean</p> </td> </tr> <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\"> <td> <p itemprop=\"name\"> <code>customFunctions</code> </p> </td> <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\"> <div itemprop=\"text\"> <p>Allows using the <a href=\"https://www.make.com/en/help/functions/custom-functions\">custom functions</a> feature.</p> <p><strong>Type:</strong> boolean</p> </td> </tr> <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\"> <td> <p itemprop=\"name\"> <code>fslimit</code> <span class=\"required\">REQUIRED</span> </p> </td> <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\"> <div itemprop=\"text\"> <p>Maximum individual file size in bytes that a scenario in the organization can transfer.</p> <p><strong>Type:</strong> uinteger</p> <p><strong>Values:</strong></p> <ul> <li><strong>min:</strong> 5242880</li> <li><strong>max:</strong> 1048576000</li> </ul> </td> </tr> <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\"> <td> <p itemprop=\"name\"> <code>productManagement</code> </p> </td> <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\"> <div itemprop=\"text\"> <p>Defines the subscription management method. Organizations in the Make White Label platform must have this parameter set to \"salesforce\". You cannot change the value of this parameter.</p> <p><strong>Type:</strong> enum&lt;string&gt;</p> <p><strong>Values:</strong></p> <ul> <li>salesforce</li> </ul> </td> </tr> <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\"> <td> <p itemprop=\"name\"> <code>iolimit</code> <span class=\"required\">REQUIRED</span> </p> </td> <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\"> <div itemprop=\"text\"> <p>Sets the maximum size of input and output webhook queues.</p> <p><strong>Type:</strong> uinteger</p> <p><strong>Values:</strong></p> <ul> <li><strong>min:</strong> 10</li> <li><strong>max:</strong> 10000</li> </ul> </td> </tr> <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\"> <td> <p itemprop=\"name\"> <code>gracePeriod</code> </p> </td> <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\"> <div itemprop=\"text\"> <p>Sets a time limit in days during which the organization has access to all of its features without payment. Organizations in the Make White Label platform must have this parameter set to 0. You cannot change the value of this parameter.</p> <p><strong>Type:</strong> uinteger</p> <p><strong>Values:</strong></p> <ul> <li>0</li> </ul> </td> </tr> <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\"> <td> <p itemprop=\"name\"> <code>appslimit</code> </p> </td> <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\"> <div itemprop=\"text\"> <p>Sets the maximum number of apps used by all active scenarios in the organization. Unlimited if not specified.</p> <p><strong>Type:</strong> uinteger</p> </td> </tr> <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\"> <td> <p itemprop=\"name\"> <code>onDemandScheduling</code> </p> </td> <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\"> <div itemprop=\"text\"> <p>Allows <a href=\"https://www.make.com/en/help/scenarios/scheduling-a-scenario#on-demand-scheduling-935240\">scenario On-Demand scheduling</a>.</p> <p><strong>Type:</strong> boolean</p> </td> </tr> <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\"> <td> <p itemprop=\"name\"> <code>scenarioIO</code> </p> </td> <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\"> <div itemprop=\"text\"> <p>Allows the <a href=\"https://www.make.com/en/help/scenarios/scenario-inputs\">scenario inputs</a> feature for the scenarios in the organization.</p> <p><strong>Type:</strong> boolean</p> </td> </tr> <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\"> <td> <p itemprop=\"name\"> <code>customProperties</code> </p> </td> <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\"> <div itemprop=\"text\"> <p>Enables the <a href=\"https://www.make.com/en/help/scenarios/custom-scenario-properties\">custom properties</a> feature. With custom properties, your users can add custom metadata to scenarios and use them to sort and filter their scenarios. <br/> The specified number sets the maximum number of structure items in a custom property structure.</p> <p><strong>Type:</strong> uinteger</p> <p><strong>Values:</strong></p> <ul> <li><strong>default:</strong> 100</li> </ul> </td> </tr> </tbody> </table> </div>\n<!-- license input anchor end -->\n",
      "security": [
        {
          "token": ["admin:write", "organizations:write"]
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the organization."
                },
                "timezoneId": {
                  "type": "integer",
                  "description": "The ID of the timezone associated with the organization. Get the list of the timezone IDs with the API call `GET /enums/timezones`."
                },
                "countryId": {
                  "type": "integer",
                  "description": "The ID of the country associated with the organization. Get the list of the country IDs with the API call `GET /enums/countries`."
                },
                "userOrgAdmin": {
                  "type": "integer",
                  "description": "The ID of the user who will be the admin of the organization. Get the list of the user IDs with the API call `GET /admin/users`."
                },
                "license": {
                  "type": "object",
                  "description": "The resources and features available to the users in the organization."
                }
              },
              "required": ["name"]
            },
            "examples": {
              "useDefaults": {
                "summary": "Use defaults",
                "description": "Create a new organization. You have to specify only the name of the organization. The rest is set to default values.\n\nOrganizations timezone and country are set the same as your account timezone and country. You are set as the organization admin. The organization license is set from the default license parameters.",
                "value": {
                  "name": "Default organization"
                }
              },
              "specifyManually": {
                "summary": "Set manually",
                "description": "Fill all available parameters with custom values.",
                "value": {
                  "name": "Custom organization",
                  "timezoneId": 76,
                  "countryId": 105,
                  "userOrganizationAdmin": 5,
                  "license": {
                    "dslimit": 40,
                    "fslimit": 1048576000,
                    "iolimit": 1000,
                    "dsslimit": 230686720,
                    "interval": 4,
                    "transfer": 104857600,
                    "scenarios": 4,
                    "operations": 50000000,
                    "customVariables": true
                  }
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organization": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "serviceName": {
                        "type": "string"
                      },
                      "nextReset": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "lastReset": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "isPaused": {
                        "type": "boolean"
                      },
                      "countryId": {
                        "type": "integer"
                      },
                      "timezoneId": {
                        "type": "integer"
                      },
                      "deleted": {
                        "type": "boolean"
                      },
                      "license": {
                        "type": "object",
                        "properties": null
                      },
                      "zone": {
                        "type": "string"
                      },
                      "teams": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "productName": {
                        "type": "string"
                      },
                      "scenarios": {
                        "type": "integer"
                      },
                      "activeScenarios": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "examples": {
                "useDefaults": {
                  "value": {
                    "organization": {
                      "name": "Default organization",
                      "timezoneId": 113,
                      "countryId": 42,
                      "license": {
                        "dslimit": 50,
                        "fslimit": 1048576000,
                        "iolimit": 10000,
                        "dsslimit": 230686720,
                        "interval": 1,
                        "transfer": 104857600,
                        "scenarios": 4,
                        "operations": 800000000,
                        "gracePeriod": 0,
                        "customVariables": false,
                        "productManagement": "salesforce"
                      },
                      "serviceName": "default",
                      "teams": [
                        {
                          "id": null,
                          "name": "My team"
                        }
                      ],
                      "isPaused": false,
                      "zone": "white.label.zone.com",
                      "externalId": null,
                      "scenarios": 0,
                      "activeScenarios": 0,
                      "deleted": false
                    },
                    "userOrganizationRole": {
                      "userId": 4,
                      "organizationId": 22,
                      "userRoleId": 11,
                      "invitation": null,
                      "ssoPending": false
                    }
                  }
                },
                "specifyManually": {
                  "value": {
                    "organization": {
                      "name": "Custom organization",
                      "timezoneId": 76,
                      "countryId": 105,
                      "userOrganizationAdmin": 5,
                      "license": {
                        "dslimit": 40,
                        "fslimit": 1048576000,
                        "iolimit": 1000,
                        "dsslimit": 230686720,
                        "interval": 4,
                        "transfer": 104857600,
                        "scenarios": 4,
                        "operations": 50000000,
                        "gracePeriod": 0,
                        "customVariables": true,
                        "productManagement": "salesforce"
                      },
                      "serviceName": "default",
                      "teams": [
                        {
                          "id": null,
                          "name": "My team"
                        }
                      ],
                      "isPaused": false,
                      "zone": "white.label.zone.com",
                      "externalId": null,
                      "scenarios": 0,
                      "activeScenarios": 0,
                      "deleted": false
                    },
                    "userOrganizationRole": {
                      "userId": 5,
                      "organizationId": 22,
                      "userRoleId": 11,
                      "invitation": null,
                      "ssoPending": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": {
        "body": [
          {
            "name": "name",
            "schema": {
              "type": "string",
              "description": "The name of the organization."
            },
            "example": "Default organization",
            "required": true,
            "description": "The name of the organization."
          },
          {
            "name": "timezoneId",
            "schema": {
              "type": "integer",
              "description": "The ID of the timezone associated with the organization. Get the list of the timezone IDs with the API call `GET /enums/timezones`."
            },
            "required": false,
            "description": "The ID of the timezone associated with the organization. Get the list of the timezone IDs with the API call `GET /enums/timezones`."
          },
          {
            "name": "countryId",
            "schema": {
              "type": "integer",
              "description": "The ID of the country associated with the organization. Get the list of the country IDs with the API call `GET /enums/countries`."
            },
            "required": false,
            "description": "The ID of the country associated with the organization. Get the list of the country IDs with the API call `GET /enums/countries`."
          },
          {
            "name": "userOrgAdmin",
            "schema": {
              "type": "integer",
              "description": "The ID of the user who will be the admin of the organization. Get the list of the user IDs with the API call `GET /admin/users`."
            },
            "required": false,
            "description": "The ID of the user who will be the admin of the organization. Get the list of the user IDs with the API call `GET /admin/users`."
          },
          {
            "name": "license",
            "schema": {
              "type": "object",
              "description": "The resources and features available to the users in the organization."
            },
            "required": false,
            "description": "The resources and features available to the users in the organization."
          }
        ]
      },
      "examples": {
        "useDefaults": {
          "summary": "Use defaults",
          "response": {
            "organization": {
              "name": "Default organization",
              "timezoneId": 113,
              "countryId": 42,
              "license": {
                "dslimit": 50,
                "fslimit": 1048576000,
                "iolimit": 10000,
                "dsslimit": 230686720,
                "interval": 1,
                "transfer": 104857600,
                "scenarios": 4,
                "operations": 800000000,
                "gracePeriod": 0,
                "customVariables": false,
                "productManagement": "salesforce"
              },
              "serviceName": "default",
              "teams": [
                {
                  "id": null,
                  "name": "My team"
                }
              ],
              "isPaused": false,
              "zone": "white.label.zone.com",
              "externalId": null,
              "scenarios": 0,
              "activeScenarios": 0,
              "deleted": false
            },
            "userOrganizationRole": {
              "userId": 4,
              "organizationId": 22,
              "userRoleId": 11,
              "invitation": null,
              "ssoPending": false
            }
          },
          "description": "Create a new organization. You have to specify only the name of the organization. The rest is set to default values.\n\nOrganizations timezone and country are set the same as your account timezone and country. You are set as the organization admin. The organization license is set from the default license parameters.",
          "requestBody": {
            "name": "Default organization"
          },
          "parameters": {},
          "path": "/admin/organizations"
        },
        "specifyManually": {
          "summary": "Set manually",
          "response": {
            "organization": {
              "name": "Custom organization",
              "timezoneId": 76,
              "countryId": 105,
              "userOrganizationAdmin": 5,
              "license": {
                "dslimit": 40,
                "fslimit": 1048576000,
                "iolimit": 1000,
                "dsslimit": 230686720,
                "interval": 4,
                "transfer": 104857600,
                "scenarios": 4,
                "operations": 50000000,
                "gracePeriod": 0,
                "customVariables": true,
                "productManagement": "salesforce"
              },
              "serviceName": "default",
              "teams": [
                {
                  "id": null,
                  "name": "My team"
                }
              ],
              "isPaused": false,
              "zone": "white.label.zone.com",
              "externalId": null,
              "scenarios": 0,
              "activeScenarios": 0,
              "deleted": false
            },
            "userOrganizationRole": {
              "userId": 5,
              "organizationId": 22,
              "userRoleId": 11,
              "invitation": null,
              "ssoPending": false
            }
          },
          "description": "Fill all available parameters with custom values.",
          "requestBody": {
            "name": "Custom organization",
            "timezoneId": 76,
            "countryId": 105,
            "userOrganizationAdmin": 5,
            "license": {
              "dslimit": 40,
              "fslimit": 1048576000,
              "iolimit": 1000,
              "dsslimit": 230686720,
              "interval": 4,
              "transfer": 104857600,
              "scenarios": 4,
              "operations": 50000000,
              "customVariables": true
            }
          },
          "parameters": {},
          "path": "/admin/organizations"
        }
      }
    },
    "admin-organizations-organizationId-patch": {
      "endpointKey": "admin-organizations-organizationId-patch",
      "path": "/admin/organizations/{organizationId}",
      "method": "patch",
      "x-published": true,
      "tags": ["Admin > Organizations"],
      "summary": "Update organization",
      "description": "Updates the specified organization. Updates only parameters specified in the request body. Check the [API call to create organizations](https://www.make.com/en/api-documentation/admin-organizations-post) for a full breakdown of the organization license parameters.\n\n<div class=\"alert alert-warning\">When updating organization's license, Make replaces the old organization's license with the new one. You have to send a valid <code>license</code> object with all the license parameters you want to set for the organization.</div>\n\nYou can set the next reset of the organization's consumption with the `nextReset` parameter. \n\nUse the `performReset` parameter to reset the organization's consumption with the API call. You can set the next reset with the `nextReset` parameter, or Make sets the next reset according to the organization's `resetPeriod`.",
      "security": [
        {
          "token": ["admin:write", "organizations:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "The ID of the organization.",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "example": 10
          }
        ],
        "query": [],
        "body": [
          {
            "name": "name",
            "schema": {
              "type": "string",
              "description": "The name of the organization."
            },
            "example": "Updated organization",
            "required": false,
            "description": "The name of the organization."
          },
          {
            "name": "timezoneId",
            "schema": {
              "type": "integer",
              "description": "The ID of the timezone associated with the organization. Get the list of the timezone IDs with the API call `GET /enums/timezones`."
            },
            "example": 113,
            "required": false,
            "description": "The ID of the timezone associated with the organization. Get the list of the timezone IDs with the API call `GET /enums/timezones`."
          },
          {
            "name": "countryId",
            "schema": {
              "type": "integer",
              "description": "The ID of the country associated with the organization. Get the list of the country IDs with the API call `GET /enums/countries`."
            },
            "example": 1,
            "required": false,
            "description": "The ID of the country associated with the organization. Get the list of the country IDs with the API call `GET /enums/countries`."
          },
          {
            "name": "nextReset",
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "The moment to which you want to schedule the reset of the organization's consumption."
            },
            "required": false,
            "description": "The moment to which you want to schedule the reset of the organization's consumption."
          },
          {
            "name": "performReset",
            "schema": {
              "type": "boolean",
              "description": "Set to `true` if you want to reset the organization's consumption with the API call. Make sets the next reset of the organization's consumption either to the moment from the `nextReset` parameter, or according to the organization's restart period."
            },
            "required": false,
            "description": "Set to `true` if you want to reset the organization's consumption with the API call. Make sets the next reset of the organization's consumption either to the moment from the `nextReset` parameter, or according to the organization's restart period."
          },
          {
            "name": "license",
            "schema": {
              "type": "object",
              "description": "The resources and features available to the users in the organization."
            },
            "example": {
              "dslimit": 20,
              "fslimit": 6242880,
              "iolimit": 10000,
              "apiLimit": 2000,
              "dsslimit": 524288000,
              "fulltext": true,
              "interval": 1,
              "transfer": 105000000,
              "operations": 100000,
              "executionTime": 45,
              "restartPeriod": "1 month",
              "customVariables": true,
              "creatingTemplates": true,
              "installPublicApps": true
            },
            "required": false,
            "description": "The resources and features available to the users in the organization."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the organization."
                },
                "timezoneId": {
                  "type": "integer",
                  "description": "The ID of the timezone associated with the organization. Get the list of the timezone IDs with the API call `GET /enums/timezones`."
                },
                "countryId": {
                  "type": "integer",
                  "description": "The ID of the country associated with the organization. Get the list of the country IDs with the API call `GET /enums/countries`."
                },
                "nextReset": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The moment to which you want to schedule the reset of the organization's consumption."
                },
                "performReset": {
                  "type": "boolean",
                  "description": "Set to `true` if you want to reset the organization's consumption with the API call. Make sets the next reset of the organization's consumption either to the moment from the `nextReset` parameter, or according to the organization's restart period."
                },
                "license": {
                  "type": "object",
                  "description": "The resources and features available to the users in the organization."
                }
              }
            },
            "examples": {
              "update-org": {
                "summary": "Update organization",
                "description": "Updates the organization's `name`, timezone, country and `license`.",
                "value": {
                  "name": "Updated organization",
                  "timezoneId": 113,
                  "countryId": 1,
                  "license": {
                    "dslimit": 20,
                    "fslimit": 6242880,
                    "iolimit": 10000,
                    "apiLimit": 2000,
                    "dsslimit": 524288000,
                    "fulltext": true,
                    "interval": 1,
                    "transfer": 105000000,
                    "operations": 100000,
                    "executionTime": 45,
                    "restartPeriod": "1 month",
                    "customVariables": true,
                    "creatingTemplates": true,
                    "installPublicApps": true
                  }
                }
              },
              "update-reset": {
                "summary": "Reset organization's consumption",
                "description": "Resets the organization's consumption immediately and sets the next reset to 04. 07. 2023 12:00.",
                "value": {
                  "performReset": true,
                  "nextReset": "2024-07-04T12:00:00.000Z"
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organization": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "serviceName": {
                        "type": "string"
                      },
                      "nextReset": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "lastReset": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "isPaused": {
                        "type": "boolean"
                      },
                      "countryId": {
                        "type": "integer"
                      },
                      "timezoneId": {
                        "type": "integer"
                      },
                      "deleted": {
                        "type": "boolean"
                      },
                      "license": {
                        "type": "object",
                        "properties": null
                      },
                      "zone": {
                        "type": "string"
                      },
                      "teams": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "productName": {
                        "type": "string"
                      },
                      "scenarios": {
                        "type": "integer"
                      },
                      "activeScenarios": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "examples": {
                "update-org": {
                  "value": {
                    "organization": {
                      "id": 10,
                      "name": "Updated organization",
                      "timezoneId": 113,
                      "countryId": 1,
                      "lastReset": "2023-06-05T12:00:00.000Z",
                      "nextReset": "2023-07-05T12:00:00.000Z",
                      "license": {
                        "dslimit": 20,
                        "fslimit": 6242880,
                        "iolimit": 10000,
                        "apiLimit": 2000,
                        "dsslimit": 524288000,
                        "fulltext": true,
                        "interval": 1,
                        "transfer": 105000000,
                        "operations": 100000,
                        "executionTime": 45,
                        "restartPeriod": "1 month",
                        "customVariables": true,
                        "creatingTemplates": true,
                        "installPublicApps": true,
                        "gracePeriod": 0,
                        "productManagement": "salesforce"
                      },
                      "serviceName": "default",
                      "teams": [
                        {
                          "id": 155364,
                          "name": "My team"
                        }
                      ],
                      "isPaused": false,
                      "zone": "white.label.example.com",
                      "externalId": null,
                      "scenarios": 0,
                      "activeScenarios": 0,
                      "deleted": false
                    }
                  }
                },
                "update-reset": {
                  "value": {
                    "organization": {
                      "id": 12,
                      "name": "Reset organization",
                      "timezoneId": 113,
                      "countryId": 1,
                      "lastReset": "2023-06-04T12:00:00.000Z",
                      "nextReset": "2023-07-04T12:00:00.000Z",
                      "license": {
                        "dslimit": 20,
                        "fslimit": 6242880,
                        "iolimit": 10000,
                        "apiLimit": 2000,
                        "dsslimit": 524288000,
                        "fulltext": true,
                        "interval": 1,
                        "transfer": 105000000,
                        "operations": 100000,
                        "executionTime": 45,
                        "restartPeriod": "1 month",
                        "customVariables": true,
                        "creatingTemplates": true,
                        "installPublicApps": true,
                        "gracePeriod": 0,
                        "productManagement": "salesforce"
                      },
                      "serviceName": "default",
                      "teams": [
                        {
                          "id": 155468,
                          "name": "My team"
                        }
                      ],
                      "isPaused": false,
                      "zone": "white.label.example.com",
                      "externalId": null,
                      "scenarios": 0,
                      "activeScenarios": 0,
                      "deleted": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "update-org": {
          "summary": "Update organization",
          "response": {
            "organization": {
              "id": 10,
              "name": "Updated organization",
              "timezoneId": 113,
              "countryId": 1,
              "lastReset": "2023-06-05T12:00:00.000Z",
              "nextReset": "2023-07-05T12:00:00.000Z",
              "license": {
                "dslimit": 20,
                "fslimit": 6242880,
                "iolimit": 10000,
                "apiLimit": 2000,
                "dsslimit": 524288000,
                "fulltext": true,
                "interval": 1,
                "transfer": 105000000,
                "operations": 100000,
                "executionTime": 45,
                "restartPeriod": "1 month",
                "customVariables": true,
                "creatingTemplates": true,
                "installPublicApps": true,
                "gracePeriod": 0,
                "productManagement": "salesforce"
              },
              "serviceName": "default",
              "teams": [
                {
                  "id": 155364,
                  "name": "My team"
                }
              ],
              "isPaused": false,
              "zone": "white.label.example.com",
              "externalId": null,
              "scenarios": 0,
              "activeScenarios": 0,
              "deleted": false
            }
          },
          "description": "Updates the organization's `name`, timezone, country and `license`.",
          "requestBody": {
            "name": "Updated organization",
            "timezoneId": 113,
            "countryId": 1,
            "license": {
              "dslimit": 20,
              "fslimit": 6242880,
              "iolimit": 10000,
              "apiLimit": 2000,
              "dsslimit": 524288000,
              "fulltext": true,
              "interval": 1,
              "transfer": 105000000,
              "operations": 100000,
              "executionTime": 45,
              "restartPeriod": "1 month",
              "customVariables": true,
              "creatingTemplates": true,
              "installPublicApps": true
            }
          },
          "parameters": {},
          "path": "/admin/organizations/10"
        },
        "update-reset": {
          "summary": "Reset organization's consumption",
          "response": {
            "organization": {
              "id": 12,
              "name": "Reset organization",
              "timezoneId": 113,
              "countryId": 1,
              "lastReset": "2023-06-04T12:00:00.000Z",
              "nextReset": "2023-07-04T12:00:00.000Z",
              "license": {
                "dslimit": 20,
                "fslimit": 6242880,
                "iolimit": 10000,
                "apiLimit": 2000,
                "dsslimit": 524288000,
                "fulltext": true,
                "interval": 1,
                "transfer": 105000000,
                "operations": 100000,
                "executionTime": 45,
                "restartPeriod": "1 month",
                "customVariables": true,
                "creatingTemplates": true,
                "installPublicApps": true,
                "gracePeriod": 0,
                "productManagement": "salesforce"
              },
              "serviceName": "default",
              "teams": [
                {
                  "id": 155468,
                  "name": "My team"
                }
              ],
              "isPaused": false,
              "zone": "white.label.example.com",
              "externalId": null,
              "scenarios": 0,
              "activeScenarios": 0,
              "deleted": false
            }
          },
          "description": "Resets the organization's consumption immediately and sets the next reset to 04. 07. 2023 12:00.",
          "requestBody": {
            "performReset": true,
            "nextReset": "2024-07-04T12:00:00.000Z"
          },
          "parameters": {},
          "path": "/admin/organizations/10"
        }
      }
    },
    "admin-organizations-organizationId-delete": {
      "endpointKey": "admin-organizations-organizationId-delete",
      "path": "/admin/organizations/{organizationId}",
      "method": "delete",
      "x-published": true,
      "tags": ["Admin > Organizations"],
      "summary": "Delete an organization",
      "description": "Deletes the specified organization. All data associated with the organization and with the teams in the organization, such as data stores and scenarios, are also deleted.",
      "security": [
        {
          "token": ["admin:write", "organizations:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "The ID of the organization.",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "example": 10
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organization": {
                    "type": "number"
                  }
                }
              },
              "example": {
                "organization": 10
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "organization": 10
          },
          "path": "/admin/organizations/10"
        }
      }
    },
    "admin-users-get": {
      "endpointKey": "admin-users-get",
      "path": "/admin/users",
      "method": "get",
      "x-published": true,
      "tags": ["Admin > Users"],
      "summary": "List users",
      "description": "Retrieves a collection of all users in your Make White Label instance. Use the API call query parameters to limit the results to a specific organization, team, user name or user email.",
      "security": [
        {
          "token": ["admin:read", "user:read"]
        }
      ],
      "parameters": {
        "path": [],
        "query": [
          {
            "name": "organizationId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The ID of the organization.",
            "examples": {
              "filtering": {
                "value": 22
              }
            }
          },
          {
            "name": "teamId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The ID of the team.",
            "examples": {
              "filtering": {
                "value": 11
              }
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The name of the user.",
            "examples": {
              "filtering": {
                "value": "John Doe"
              }
            }
          },
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The email of the user.",
            "examples": {
              "filtering": {
                "value": "john@doe.com"
              }
            }
          },
          {
            "description": "Specifies columns that are returned in the response. Use the `cols[]` parameter for every column that you want to return in the response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get both `key1` and `key2` columns in the response.\n\n[Check the \"Filtering\" section for a full example.](https://www.make.com/en/api-documentation/filtering)",
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "email",
                  "language",
                  "timezoneId",
                  "localeId",
                  "countryId",
                  "features",
                  "avatar",
                  "lastLogin",
                  "organizations",
                  "scenarios",
                  "activeScenarios",
                  "deleted",
                  "created",
                  "usersAdminsRoleId",
                  "tfaEnabled"
                ]
              }
            },
            "examples": {
              "filtering": {
                "value": ["id", "name", "email"]
              }
            }
          },
          {
            "name": "pg[sortBy]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["name", "id", "userAdminsRoleId"]
            },
            "description": "Sort the results in the APi call response by the values in the specified column."
          },
          {
            "name": "pg[offset]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The value of entities you want to skip before getting entities you need.",
            "default": 0
          },
          {
            "name": "pg[sortDir]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "The sorting order. It accepts the ascending and descending direction specifiers."
          },
          {
            "name": "pg[limit]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The maximum entities to return."
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "users": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string",
                          "format": "email"
                        },
                        "language": {
                          "type": "string"
                        },
                        "timezoneId": {
                          "type": "integer"
                        },
                        "localeId": {
                          "type": "integer"
                        },
                        "countryId": {
                          "type": "integer"
                        },
                        "features": {
                          "type": "object",
                          "properties": null
                        },
                        "avatar": {
                          "type": "string",
                          "format": "uri"
                        },
                        "usersAdminsRoleId": {
                          "type": "integer"
                        },
                        "tfaEnabled": {
                          "type": "boolean"
                        },
                        "lastlogin": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "organizations": {
                          "type": "integer"
                        },
                        "scenarios": {
                          "type": "integer"
                        },
                        "activeScenarios": {
                          "type": "integer"
                        },
                        "deleted": {
                          "type": "boolean"
                        },
                        "created": {
                          "type": "string",
                          "format": "data-time"
                        }
                      }
                    }
                  },
                  "pg": {
                    "type": "object",
                    "properties": {
                      "last": {
                        "type": "string"
                      },
                      "showLast": {
                        "type": "boolean"
                      },
                      "sortBy": {
                        "type": "string"
                      },
                      "sortDir": {
                        "type": "string"
                      },
                      "limit": {
                        "type": "integer"
                      },
                      "offset": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "examples": {
                "default": {
                  "summary": "List users",
                  "description": "Retrieve all available data about all users in the Make White Label instance.",
                  "value": {
                    "users": [
                      {
                        "id": 15,
                        "name": "Rosario",
                        "email": "dawson@test.net",
                        "language": "en",
                        "timezoneId": 113,
                        "localeId": 19,
                        "countryId": 1,
                        "features": {},
                        "avatar": "https://secure.gravatar.com/avatar/bca593a1166cfebb7453226d5a55f4a5.jpg?d=mm",
                        "lastLogin": "2023-01-03T11:24:25.460Z",
                        "organizations": 1,
                        "scenarios": 0,
                        "activeScenarios": 0,
                        "deleted": false,
                        "created": "2023-01-03T11:12:40.644Z",
                        "usersAdminsRoleId": null,
                        "tfaEnabled": false
                      },
                      {
                        "id": 14,
                        "name": "John Doe",
                        "email": "john@doe.com",
                        "language": "en",
                        "timezoneId": 113,
                        "localeId": 19,
                        "countryId": 202,
                        "features": {},
                        "avatar": "https://secure.gravatar.com/avatar/049bebcb7ed96e1539a5ed479ae7158b.jpg?d=mm",
                        "lastLogin": null,
                        "organizations": 0,
                        "scenarios": 0,
                        "activeScenarios": 0,
                        "deleted": false,
                        "created": "2022-12-12T14:24:26.895Z",
                        "usersAdminsRoleId": null,
                        "tfaEnabled": false
                      }
                    ],
                    "pg": {
                      "sortBy": "id",
                      "limit": 10,
                      "sortDir": "desc",
                      "offset": 0
                    }
                  }
                },
                "filtering": {
                  "summary": "Filter results",
                  "description": "Filter API call response for specific data.",
                  "value": {
                    "users": [
                      {
                        "id": 14,
                        "name": "John Doe",
                        "email": "john@doe.com"
                      }
                    ],
                    "pg": {
                      "sortBy": "id",
                      "limit": 10,
                      "sortDir": "desc",
                      "offset": 0
                    }
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "List users",
          "response": {
            "users": [
              {
                "id": 15,
                "name": "Rosario",
                "email": "dawson@test.net",
                "language": "en",
                "timezoneId": 113,
                "localeId": 19,
                "countryId": 1,
                "features": {},
                "avatar": "https://secure.gravatar.com/avatar/bca593a1166cfebb7453226d5a55f4a5.jpg?d=mm",
                "lastLogin": "2023-01-03T11:24:25.460Z",
                "organizations": 1,
                "scenarios": 0,
                "activeScenarios": 0,
                "deleted": false,
                "created": "2023-01-03T11:12:40.644Z",
                "usersAdminsRoleId": null,
                "tfaEnabled": false
              },
              {
                "id": 14,
                "name": "John Doe",
                "email": "john@doe.com",
                "language": "en",
                "timezoneId": 113,
                "localeId": 19,
                "countryId": 202,
                "features": {},
                "avatar": "https://secure.gravatar.com/avatar/049bebcb7ed96e1539a5ed479ae7158b.jpg?d=mm",
                "lastLogin": null,
                "organizations": 0,
                "scenarios": 0,
                "activeScenarios": 0,
                "deleted": false,
                "created": "2022-12-12T14:24:26.895Z",
                "usersAdminsRoleId": null,
                "tfaEnabled": false
              }
            ],
            "pg": {
              "sortBy": "id",
              "limit": 10,
              "sortDir": "desc",
              "offset": 0
            }
          },
          "description": "Retrieve all available data about all users in the Make White Label instance.",
          "parameters": {},
          "path": "/admin/users"
        },
        "filtering": {
          "summary": "Filter results",
          "response": {
            "users": [
              {
                "id": 14,
                "name": "John Doe",
                "email": "john@doe.com"
              }
            ],
            "pg": {
              "sortBy": "id",
              "limit": 10,
              "sortDir": "desc",
              "offset": 0
            }
          },
          "description": "Filter API call response for specific data.",
          "parameters": {
            "organizationId": 22,
            "teamId": 11,
            "name": "John Doe",
            "email": "john@doe.com",
            "cols[]": ["id", "name", "email"]
          },
          "path": "/admin/users"
        }
      }
    },
    "admin-users-post": {
      "endpointKey": "admin-users-post",
      "path": "/admin/users",
      "method": "post",
      "x-published": true,
      "tags": ["Admin > Users"],
      "summary": "Create a new user",
      "description": "Creates a new user. Specify the user's `name` and `email` in the request body.\n\nYou have to either send an invitation mail to the user with the `sendEmail: true` or you have to specify the user password in the `password` field in the request body. If you send the invitation mail, the mail contains automatically generated password. The user has to change their password right after logging in.\n\nYou can also set the user's country, locale and timezone with the request body parameters. If you don't specify the user's country, locale or timezone Make uses your account's country, locale or timezone.",
      "security": [
        {
          "token": ["admin:write", "user:write"]
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the user."
                },
                "email": {
                  "type": "string",
                  "description": "The user's email."
                },
                "password": {
                  "type": "string",
                  "description": "The password to the user's account. It has to contain at least 10 characters, including one number, one upper case character and one special character."
                },
                "sendEmail": {
                  "type": "boolean",
                  "description": "If set to `true`, Make sends an email to the user with their automatically generated password. The user has to change their password right after logging in."
                },
                "countryId": {
                  "type": "integer",
                  "description": "The ID of user's country. Get the `countryId` values with the API call `GET /enums/countries`."
                },
                "timezoneId": {
                  "type": "integer",
                  "description": "The ID of user's timezone. Get the list of the timezone IDs with the API call `GET /enums/timezones`."
                },
                "localeId": {
                  "type": "integer",
                  "description": "The ID of user's locale. Get the list of locale IDs with the API call `GET /enums/locales`."
                }
              },
              "required": ["name", "email"]
            },
            "examples": {
              "setAll": {
                "summary": "Create user",
                "description": "Creates new user with the specified values, including login password.",
                "value": {
                  "name": "John Doe",
                  "email": "john@doe.com",
                  "sendEmail": false,
                  "timezoneId": 113,
                  "localeId": 18,
                  "countryId": 1,
                  "password": "my-Password1?"
                }
              },
              "sendEmail": {
                "summary": "Send invitation email",
                "description": "Make sends the user an invitation mail with an automatically generated password. Right after logging in the user has to change their password.",
                "value": {
                  "name": "John Doe",
                  "email": "john@doe.com",
                  "sendEmail": true
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string",
                        "format": "email"
                      },
                      "language": {
                        "type": "string"
                      },
                      "timezoneId": {
                        "type": "integer"
                      },
                      "localeId": {
                        "type": "integer"
                      },
                      "countryId": {
                        "type": "integer"
                      },
                      "features": {
                        "type": "object",
                        "properties": {
                          "allow_apps": {
                            "type": "boolean"
                          }
                        }
                      },
                      "avatar": {
                        "type": "string",
                        "format": "uri"
                      },
                      "timezone": {
                        "type": "string"
                      },
                      "locale": {
                        "type": "string"
                      },
                      "emailNotifications": {
                        "type": "null"
                      },
                      "usersAdminsRoleId": {
                        "type": "integer"
                      },
                      "hasPassword": {
                        "type": "boolean"
                      },
                      "tfaEnabled": {
                        "type": "boolean"
                      },
                      "forceSetPassword": {
                        "type": "boolean"
                      },
                      "userOrganizationRoles": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "usersRoleId": {
                              "type": "integer"
                            },
                            "userId": {
                              "type": "integer"
                            },
                            "organizationId": {
                              "type": "integer"
                            },
                            "invitation": {
                              "type": "null"
                            }
                          }
                        }
                      },
                      "userTeamRoles": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "usersRoleId": {
                              "type": "integer"
                            },
                            "userId": {
                              "type": "integer"
                            },
                            "teamId": {
                              "type": "integer"
                            },
                            "changeable": {
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "lastlogin": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              },
              "examples": {
                "setAll": {
                  "value": {
                    "user": {
                      "id": 5,
                      "name": "John Doe",
                      "email": "john@doe.com",
                      "language": "en",
                      "timezoneId": 113,
                      "localeId": 18,
                      "countryId": 1,
                      "features": {},
                      "avatar": "https://secure.gravatar.com/avatar/b38336ad1642bc8effb596db864be1f1.jpg?d=mm",
                      "lastLogin": null,
                      "organizations": 0,
                      "scenarios": 0,
                      "activeScenarios": 0,
                      "deleted": false,
                      "created": "2023-01-17T12:41:10.697Z",
                      "usersAdminsRoleId": null,
                      "tfaEnabled": false
                    }
                  }
                },
                "sendEmail": {
                  "value": {
                    "user": {
                      "id": 5,
                      "name": "John Doe",
                      "email": "john@doe.com",
                      "language": "en",
                      "timezoneId": 53,
                      "localeId": 16,
                      "countryId": 12,
                      "features": {},
                      "avatar": "https://secure.gravatar.com/avatar/b38336ad1642bc8effb596db864be1f1.jpg?d=mm",
                      "lastLogin": null,
                      "organizations": 0,
                      "scenarios": 0,
                      "activeScenarios": 0,
                      "deleted": false,
                      "created": "2023-01-17T12:41:10.697Z",
                      "usersAdminsRoleId": null,
                      "tfaEnabled": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": {
        "body": [
          {
            "name": "name",
            "schema": {
              "type": "string",
              "description": "The name of the user."
            },
            "example": "John Doe",
            "required": true,
            "description": "The name of the user."
          },
          {
            "name": "email",
            "schema": {
              "type": "string",
              "description": "The user's email."
            },
            "example": "john@doe.com",
            "required": true,
            "description": "The user's email."
          },
          {
            "name": "password",
            "schema": {
              "type": "string",
              "description": "The password to the user's account. It has to contain at least 10 characters, including one number, one upper case character and one special character."
            },
            "example": "my-Password1?",
            "required": false,
            "description": "The password to the user's account. It has to contain at least 10 characters, including one number, one upper case character and one special character."
          },
          {
            "name": "sendEmail",
            "schema": {
              "type": "boolean",
              "description": "If set to `true`, Make sends an email to the user with their automatically generated password. The user has to change their password right after logging in."
            },
            "example": false,
            "required": false,
            "description": "If set to `true`, Make sends an email to the user with their automatically generated password. The user has to change their password right after logging in."
          },
          {
            "name": "countryId",
            "schema": {
              "type": "integer",
              "description": "The ID of user's country. Get the `countryId` values with the API call `GET /enums/countries`."
            },
            "example": 1,
            "required": false,
            "description": "The ID of user's country. Get the `countryId` values with the API call `GET /enums/countries`."
          },
          {
            "name": "timezoneId",
            "schema": {
              "type": "integer",
              "description": "The ID of user's timezone. Get the list of the timezone IDs with the API call `GET /enums/timezones`."
            },
            "example": 113,
            "required": false,
            "description": "The ID of user's timezone. Get the list of the timezone IDs with the API call `GET /enums/timezones`."
          },
          {
            "name": "localeId",
            "schema": {
              "type": "integer",
              "description": "The ID of user's locale. Get the list of locale IDs with the API call `GET /enums/locales`."
            },
            "example": 18,
            "required": false,
            "description": "The ID of user's locale. Get the list of locale IDs with the API call `GET /enums/locales`."
          }
        ]
      },
      "examples": {
        "setAll": {
          "summary": "Create user",
          "response": {
            "user": {
              "id": 5,
              "name": "John Doe",
              "email": "john@doe.com",
              "language": "en",
              "timezoneId": 113,
              "localeId": 18,
              "countryId": 1,
              "features": {},
              "avatar": "https://secure.gravatar.com/avatar/b38336ad1642bc8effb596db864be1f1.jpg?d=mm",
              "lastLogin": null,
              "organizations": 0,
              "scenarios": 0,
              "activeScenarios": 0,
              "deleted": false,
              "created": "2023-01-17T12:41:10.697Z",
              "usersAdminsRoleId": null,
              "tfaEnabled": false
            }
          },
          "description": "Creates new user with the specified values, including login password.",
          "requestBody": {
            "name": "John Doe",
            "email": "john@doe.com",
            "sendEmail": false,
            "timezoneId": 113,
            "localeId": 18,
            "countryId": 1,
            "password": "my-Password1?"
          },
          "parameters": {},
          "path": "/admin/users"
        },
        "sendEmail": {
          "summary": "Send invitation email",
          "response": {
            "user": {
              "id": 5,
              "name": "John Doe",
              "email": "john@doe.com",
              "language": "en",
              "timezoneId": 53,
              "localeId": 16,
              "countryId": 12,
              "features": {},
              "avatar": "https://secure.gravatar.com/avatar/b38336ad1642bc8effb596db864be1f1.jpg?d=mm",
              "lastLogin": null,
              "organizations": 0,
              "scenarios": 0,
              "activeScenarios": 0,
              "deleted": false,
              "created": "2023-01-17T12:41:10.697Z",
              "usersAdminsRoleId": null,
              "tfaEnabled": false
            }
          },
          "description": "Make sends the user an invitation mail with an automatically generated password. Right after logging in the user has to change their password.",
          "requestBody": {
            "name": "John Doe",
            "email": "john@doe.com",
            "sendEmail": true
          },
          "parameters": {},
          "path": "/admin/users"
        }
      }
    },
    "admin-users-userId-patch": {
      "endpointKey": "admin-users-userId-patch",
      "path": "/admin/users/{userId}",
      "method": "patch",
      "x-published": true,
      "tags": ["Admin > Users"],
      "summary": "Update user information",
      "description": "Updates user information. Make updates only the specified information. \n \nIn addition, you can set the user admin roles in the `usersAdminsRoleId`. Check the available roles with the API call `GET /admin/users/admins-roles`. Refer to the [user admin roles documentation](https://www.make.com/en/help/white-label/manage-organizations#instance-level-roles-1628394) for the full breakdown of the user admin roles permissions.",
      "security": [
        {
          "token": ["admin:write", "user:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The ID of the user.",
            "example": 22
          }
        ],
        "query": [],
        "body": [
          {
            "name": "name",
            "schema": {
              "type": "string",
              "description": "The name of the user."
            },
            "example": "Jane Porter",
            "required": false,
            "description": "The name of the user."
          },
          {
            "name": "email",
            "schema": {
              "type": "string",
              "description": "The user's email."
            },
            "example": "jane.portern@jungle.com",
            "required": false,
            "description": "The user's email."
          },
          {
            "name": "language",
            "schema": {
              "type": "string",
              "description": "The language of the user's UI. Currently, Make has the full UI in english only (value `en`)."
            },
            "required": false,
            "description": "The language of the user's UI. Currently, Make has the full UI in english only (value `en`)."
          },
          {
            "name": "countryId",
            "schema": {
              "type": "integer",
              "description": "The ID of user's country. Get the `countryId` values with the API call `GET /enums/countries`."
            },
            "required": false,
            "description": "The ID of user's country. Get the `countryId` values with the API call `GET /enums/countries`."
          },
          {
            "name": "timezoneId",
            "schema": {
              "type": "integer",
              "description": "The ID of user's timezone. Get the list of the timezone IDs with the API call `GET /enums/timezones`."
            },
            "required": false,
            "description": "The ID of user's timezone. Get the list of the timezone IDs with the API call `GET /enums/timezones`."
          },
          {
            "name": "localeId",
            "schema": {
              "type": "integer",
              "description": "The ID of user's locale. Get the list of locale IDs with the API call `GET /enums/locales`."
            },
            "required": false,
            "description": "The ID of user's locale. Get the list of locale IDs with the API call `GET /enums/locales`."
          },
          {
            "name": "usersAdminsRoleId",
            "schema": {
              "type": "integer",
              "description": "The ID of the admin user's role. Get the list of available user admin roles and their IDs with the API call `GET /admin/users/admins-roles`.\n\nRefer to the [user admin roles documentation](https://www.make.com/en/help/white-label/manage-organizations#instance-level-roles-1628394) for the full breakdown of the user admin roles permissions."
            },
            "example": 4,
            "required": false,
            "description": "The ID of the admin user's role. Get the list of available user admin roles and their IDs with the API call `GET /admin/users/admins-roles`.\n\nRefer to the [user admin roles documentation](https://www.make.com/en/help/white-label/manage-organizations#instance-level-roles-1628394) for the full breakdown of the user admin roles permissions."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the user."
                },
                "email": {
                  "type": "string",
                  "description": "The user's email."
                },
                "language": {
                  "type": "string",
                  "description": "The language of the user's UI. Currently, Make has the full UI in english only (value `en`)."
                },
                "countryId": {
                  "type": "integer",
                  "description": "The ID of user's country. Get the `countryId` values with the API call `GET /enums/countries`."
                },
                "timezoneId": {
                  "type": "integer",
                  "description": "The ID of user's timezone. Get the list of the timezone IDs with the API call `GET /enums/timezones`."
                },
                "localeId": {
                  "type": "integer",
                  "description": "The ID of user's locale. Get the list of locale IDs with the API call `GET /enums/locales`."
                },
                "usersAdminsRoleId": {
                  "type": "integer",
                  "description": "The ID of the admin user's role. Get the list of available user admin roles and their IDs with the API call `GET /admin/users/admins-roles`.\n\nRefer to the [user admin roles documentation](https://www.make.com/en/help/white-label/manage-organizations#instance-level-roles-1628394) for the full breakdown of the user admin roles permissions."
                }
              }
            },
            "example": {
              "name": "Jane Porter",
              "email": "jane.portern@jungle.com",
              "usersAdminsRoleId": 4
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string",
                        "format": "email"
                      },
                      "language": {
                        "type": "string"
                      },
                      "timezoneId": {
                        "type": "integer"
                      },
                      "localeId": {
                        "type": "integer"
                      },
                      "countryId": {
                        "type": "integer"
                      },
                      "features": {
                        "type": "object",
                        "properties": {
                          "allow_apps": {
                            "type": "boolean"
                          }
                        }
                      },
                      "avatar": {
                        "type": "string",
                        "format": "uri"
                      },
                      "timezone": {
                        "type": "string"
                      },
                      "locale": {
                        "type": "string"
                      },
                      "emailNotifications": {
                        "type": "null"
                      },
                      "usersAdminsRoleId": {
                        "type": "integer"
                      },
                      "hasPassword": {
                        "type": "boolean"
                      },
                      "tfaEnabled": {
                        "type": "boolean"
                      },
                      "forceSetPassword": {
                        "type": "boolean"
                      },
                      "userOrganizationRoles": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "usersRoleId": {
                              "type": "integer"
                            },
                            "userId": {
                              "type": "integer"
                            },
                            "organizationId": {
                              "type": "integer"
                            },
                            "invitation": {
                              "type": "null"
                            }
                          }
                        }
                      },
                      "userTeamRoles": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "usersRoleId": {
                              "type": "integer"
                            },
                            "userId": {
                              "type": "integer"
                            },
                            "teamId": {
                              "type": "integer"
                            },
                            "changeable": {
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "lastlogin": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              },
              "example": {
                "user": {
                  "id": 6,
                  "name": "Jane Porter",
                  "email": "jane.portern@jungle.com",
                  "language": "en",
                  "timezoneId": 113,
                  "localeId": 18,
                  "countryId": 1,
                  "features": {},
                  "avatar": "https://secure.gravatar.com/avatar/b38336ad1642bc8effb596db864be1f1.jpg?d=mm",
                  "lastLogin": null,
                  "organizations": 0,
                  "scenarios": 0,
                  "activeScenarios": 0,
                  "deleted": false,
                  "created": "2023-01-17T12:41:10.697Z",
                  "usersAdminsRoleId": 4,
                  "tfaEnabled": false
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "user": {
              "id": 6,
              "name": "Jane Porter",
              "email": "jane.portern@jungle.com",
              "language": "en",
              "timezoneId": 113,
              "localeId": 18,
              "countryId": 1,
              "features": {},
              "avatar": "https://secure.gravatar.com/avatar/b38336ad1642bc8effb596db864be1f1.jpg?d=mm",
              "lastLogin": null,
              "organizations": 0,
              "scenarios": 0,
              "activeScenarios": 0,
              "deleted": false,
              "created": "2023-01-17T12:41:10.697Z",
              "usersAdminsRoleId": 4,
              "tfaEnabled": false
            }
          },
          "requestBody": {
            "name": "Jane Porter",
            "email": "jane.portern@jungle.com",
            "usersAdminsRoleId": 4
          },
          "path": "/admin/users/22"
        }
      }
    },
    "admin-users-userId-delete": {
      "endpointKey": "admin-users-userId-delete",
      "path": "/admin/users/{userId}",
      "method": "delete",
      "x-published": true,
      "tags": ["Admin > Users"],
      "summary": "Delete a user",
      "description": "Deletes the user with the specified `userId`. Use the `deleteConnections` query parameter to delete the user's connections too.",
      "security": [
        {
          "token": ["admin:write", "users:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The ID of the user.",
            "example": 22
          }
        ],
        "query": [
          {
            "name": "deleteConnections",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Set to `true` to delete also user's connections when removing organizations, in which the user has the role \"Owner\". The default value is `false`.",
            "example": true
          },
          {
            "name": "confirmed",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "example": true,
            "description": "Set to `true` to delete organizations in which the user has the \"Owner\" role. Use the parameter `deleteConnections` to delete the user's connections in the deleted organizations."
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "integer"
                  }
                }
              },
              "example": {
                "user": 22
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "user": 22
          },
          "parameters": {
            "deleteConnections": true,
            "confirmed": true
          },
          "path": "/admin/users/22"
        }
      }
    },
    "admin-users-userId-user-organization-roles-organizationId-post": {
      "endpointKey": "admin-users-userId-user-organization-roles-organizationId-post",
      "path": "/admin/users/{userId}/user-organization-roles/{organizationId}",
      "method": "post",
      "x-published": true,
      "tags": ["Admin > Users"],
      "summary": "Set user organization role",
      "description": "Sets user role in the organization. Specify the user organization role ID in the request body. Get all available user role IDs and the corresponding user role names with the API call `GET /users/roles`.\n\nIf the user is not a member of the organization, the API call adds the user to the organization with the specified role. If you add the user to the organization as \"Admin\" (`usersRoleId = 12`) and the organization has teams, Make assigns the user to the organization as the organization \"Admin\" and to all teams in the organization as \"Team Admin\". Once you add a user as \"Team Admin\" you cannot change their team role. The only option to change the \"Team Admin\" role is to remove the user from the team and re-add them with the specified team role.\n\nIf you add the user to the organization with a role other than \"Admin\" Make doesn't add the user to any organization's teams. In the Administration interface, the user appears with the role \"None\" in all teams in the organization. The users with the role \"None\" in a team or an organization cannot access the team or organization data in any way.\n\nYou cannot change the organization \"Owner\" with this endpoint. Use the API call to [transfer organization ownership](https://www.make.com/en/api-documentation/organizations-organizationId-user-organization-roles-transfer-post) instead.\n\nTo remove a user from an organization, send an empty request body. The API call removes the user with the specified `userId` from the organization, setting the user's organization role to \"None\".",
      "security": [
        {
          "token": ["admin:write", "users:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "userId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the user",
            "example": 5
          },
          {
            "name": "organizationId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the organization.",
            "example": 22
          }
        ],
        "query": [
          {
            "description": "Specifies columns that are returned in the response. Use the `cols[]` parameter for every column that you want to return in the response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get both `key1` and `key2` columns in the response.\n\n[Check the \"Filtering\" section for a full example.](https://www.make.com/en/api-documentation/filtering)",
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "userId",
                  "organizationId",
                  "usersRoleId",
                  "invitation",
                  "organizationTeamsCount",
                  "joinedTeamsCount",
                  "ssoPending"
                ]
              }
            },
            "examples": {
              "all-cols": {
                "value": [
                  "userId",
                  "organizationId",
                  "usersRoleId",
                  "invitation",
                  "organizationTeamsCount",
                  "joinedTeamsCount",
                  "ssoPending"
                ]
              }
            }
          },
          {
            "name": "deleteConnections",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "examples": {
              "remove-user": {
                "value": true
              }
            },
            "description": "When removing the user from the organization, set to `true` to delete also user's connections. The default value is `false`. To confirm deleting the user's connections you have to also set the `confirmed` parameter to `true`."
          },
          {
            "name": "confirmed",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "example": true,
            "description": "Set to `true` to confirm deleting the user's connections in combination with the `deleteConnections` parameter. Otherwise, the API call fails with error requiring confirmation.",
            "examples": {
              "remove-user": {
                "value": true
              }
            }
          }
        ],
        "body": [
          {
            "name": "usersRoleId",
            "schema": {
              "type": "integer",
              "description": "The ID of the user role. Check the `GET /users/roles` API call for the available `usersRoleId` values."
            },
            "example": 13,
            "required": false,
            "description": "The ID of the user role. Check the `GET /users/roles` API call for the available `usersRoleId` values."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "usersRoleId": {
                  "type": "integer",
                  "description": "The ID of the user role. Check the `GET /users/roles` API call for the available `usersRoleId` values."
                }
              }
            },
            "examples": {
              "set-user-role": {
                "summary": "Set user role",
                "description": "Set the user role in the organization. Get all user role IDs with the API call `GET /users/roles`.",
                "value": {
                  "usersRoleId": 13
                }
              },
              "all-cols": {
                "summary": "Set user data all cols",
                "description": "Set user role in the organization. The response returns all available columns for the user role in the organization.",
                "value": {
                  "usersRoleId": 13
                }
              },
              "remove-user": {
                "summary": "Remove user from organization",
                "description": "To remove a user from the organization send an empty request body.",
                "value": ""
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userOrganizationRole": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "integer"
                      },
                      "organizationId": {
                        "type": "integer"
                      },
                      "usersRoleId": {
                        "type": "integer"
                      },
                      "invitation": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "examples": {
                "set-user-role": {
                  "value": {
                    "userOrganizationRole": {
                      "userId": 5,
                      "organizationId": 22,
                      "usersRoleId": 13,
                      "invitation": null,
                      "ssoPending": false
                    }
                  }
                },
                "all-cols": {
                  "value": {
                    "userOrganizationRole": {
                      "userId": 5,
                      "organizationId": 22,
                      "usersRoleId": 13,
                      "invitation": null,
                      "ssoPending": false,
                      "organizationTeamsCount": 2,
                      "joinedTeamsCount": 2
                    }
                  }
                },
                "remove-user": {
                  "value": {
                    "userOrganizationRole": {
                      "userId": 5,
                      "organizationId": 22,
                      "usersRoleId": null,
                      "invitation": null,
                      "ssoPending": null
                    }
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "set-user-role": {
          "summary": "Set user role",
          "response": {
            "userOrganizationRole": {
              "userId": 5,
              "organizationId": 22,
              "usersRoleId": 13,
              "invitation": null,
              "ssoPending": false
            }
          },
          "description": "Set the user role in the organization. Get all user role IDs with the API call `GET /users/roles`.",
          "requestBody": {
            "usersRoleId": 13
          },
          "parameters": {},
          "path": "/admin/users/5/user-organization-roles/22"
        },
        "all-cols": {
          "summary": "Set user data all cols",
          "response": {
            "userOrganizationRole": {
              "userId": 5,
              "organizationId": 22,
              "usersRoleId": 13,
              "invitation": null,
              "ssoPending": false,
              "organizationTeamsCount": 2,
              "joinedTeamsCount": 2
            }
          },
          "description": "Set user role in the organization. The response returns all available columns for the user role in the organization.",
          "requestBody": {
            "usersRoleId": 13
          },
          "parameters": {
            "cols[]": [
              "userId",
              "organizationId",
              "usersRoleId",
              "invitation",
              "organizationTeamsCount",
              "joinedTeamsCount",
              "ssoPending"
            ]
          },
          "path": "/admin/users/5/user-organization-roles/22"
        },
        "remove-user": {
          "summary": "Remove user from organization",
          "response": {
            "userOrganizationRole": {
              "userId": 5,
              "organizationId": 22,
              "usersRoleId": null,
              "invitation": null,
              "ssoPending": null
            }
          },
          "description": "To remove a user from the organization send an empty request body.",
          "parameters": {
            "deleteConnections": true,
            "confirmed": true
          },
          "path": "/admin/users/5/user-organization-roles/22"
        }
      }
    },
    "admin-users-userId-user-organization-roles-organizationId-transfer-post": {
      "endpointKey": "admin-users-userId-user-organization-roles-organizationId-transfer-post",
      "path": "/admin/users/{userId}/user-organization-roles/{organizationId}/transfer",
      "method": "post",
      "x-published": true,
      "tags": ["Admin > Users"],
      "summary": "Transfer organization ownership",
      "description": "Transfer organization ownership to the user with the specified `userId`.",
      "security": [
        {
          "token": ["admin:write", "user:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "userId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the user.",
            "example": 22
          },
          {
            "name": "organizationId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the organization.",
            "example": 11
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userOrganizationRoles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "integer"
                        },
                        "organizationId": {
                          "type": "integer"
                        },
                        "usersRoleId": {
                          "type": "integer"
                        },
                        "invitation": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "userOrganizationRoles": [
                  {
                    "userId": 22,
                    "organizationId": 11,
                    "usersRoleId": 11,
                    "invitation": null
                  },
                  {
                    "userId": 1,
                    "organizationId": 11,
                    "usersRoleId": 12,
                    "invitation": null
                  }
                ]
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "userOrganizationRoles": [
              {
                "userId": 22,
                "organizationId": 11,
                "usersRoleId": 11,
                "invitation": null
              },
              {
                "userId": 1,
                "organizationId": 11,
                "usersRoleId": 12,
                "invitation": null
              }
            ]
          },
          "path": "/admin/users/22/user-organization-roles/11/transfer"
        }
      }
    },
    "admin-users-userId-user-team-roles-teamId-post": {
      "endpointKey": "admin-users-userId-user-team-roles-teamId-post",
      "path": "/admin/users/{userId}/user-team-roles/{teamId}",
      "method": "post",
      "x-published": true,
      "tags": ["Admin > Users"],
      "summary": "Set user team role",
      "description": "Sets the user role in the team. Specify the user team role ID in the request body. The user has to be already a member of the team's organization.\n\nGet all available user role IDs and the corresponding user role names with the API call `GET /users/roles`.\n\nIf the user is not a member of the team, the API call adds the user to the team with the specified role.\nIf you send an empty request body, the API call removes the user with the specified `userId` from the team, setting the user's team role to \"None\".",
      "security": [
        {
          "token": ["admin:write", "users:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "userId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the user.",
            "example": 111
          },
          {
            "name": "teamId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the team.",
            "example": 22
          }
        ],
        "query": [],
        "body": [
          {
            "name": "usersRoleId",
            "schema": {
              "type": "integer",
              "description": "The ID of the user role. Check the `GET /users/roles` API call for the available `usersRoleId` values."
            },
            "example": 3,
            "required": false,
            "description": "The ID of the user role. Check the `GET /users/roles` API call for the available `usersRoleId` values."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "usersRoleId": {
                  "type": "integer",
                  "description": "The ID of the user role. Check the `GET /users/roles` API call for the available `usersRoleId` values."
                }
              }
            },
            "examples": {
              "set-role": {
                "summary": "Set user team role",
                "description": "Sets the team role of the specified user.",
                "value": {
                  "usersRoleId": 3
                }
              },
              "remove-user": {
                "summary": "Remove user",
                "description": "Removes user from the team. In the admin interface, Make still lists the user in the team with the user team role \"None\".",
                "value": ""
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userTeamRole": {
                    "type": "object",
                    "properties": {
                      "usersRoleId": {
                        "type": "integer"
                      },
                      "userId": {
                        "type": "integer"
                      },
                      "teamId": {
                        "type": "integer"
                      },
                      "changeable": {
                        "type": "boolean"
                      },
                      "ssoPending": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "examples": {
                "set-role": {
                  "value": {
                    "userTeamRole": {
                      "usersRoleId": 3,
                      "userId": 111,
                      "teamId": 22,
                      "changeable": true,
                      "ssoPending": false
                    }
                  }
                },
                "remove-user": {
                  "value": {
                    "userTeamRole": {
                      "usersRoleId": null,
                      "userId": 111,
                      "teamId": 22,
                      "changeable": true,
                      "ssoPending": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "set-role": {
          "summary": "Set user team role",
          "response": {
            "userTeamRole": {
              "usersRoleId": 3,
              "userId": 111,
              "teamId": 22,
              "changeable": true,
              "ssoPending": false
            }
          },
          "description": "Sets the team role of the specified user.",
          "requestBody": {
            "usersRoleId": 3
          },
          "parameters": {},
          "path": "/admin/users/111/user-team-roles/22"
        },
        "remove-user": {
          "summary": "Remove user",
          "response": {
            "userTeamRole": {
              "usersRoleId": null,
              "userId": 111,
              "teamId": 22,
              "changeable": true,
              "ssoPending": false
            }
          },
          "description": "Removes user from the team. In the admin interface, Make still lists the user in the team with the user team role \"None\".",
          "parameters": {},
          "path": "/admin/users/111/user-team-roles/22"
        }
      }
    },
    "admin-system-settings-default-license-get": {
      "endpointKey": "admin-system-settings-default-license-get",
      "path": "/admin/system-settings/default-license",
      "method": "get",
      "x-published": true,
      "tags": ["Admin > Platform settings"],
      "summary": "Get default license",
      "description": "Gets the default organization license for your Make White Label instance. Make uses the default organization license when you create a new organization without specifying the organization's license.",
      "security": [
        {
          "token": ["admin:read", "system:read"]
        }
      ],
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "defaultLicense": {
                    "type": "object"
                  }
                }
              },
              "example": {
                "defaultLicense": {
                  "dslimit": 40,
                  "fslimit": 2147483648,
                  "iolimit": 10000,
                  "apiLimit": 2000,
                  "dsslimit": 524288000,
                  "fulltext": true,
                  "interval": 1,
                  "transfer": 1099511627776,
                  "operations": 80000000,
                  "scenarioIO": true,
                  "gracePeriod": 0,
                  "executionTime": 45,
                  "restartPeriod": "1 month",
                  "customVariables": true,
                  "creatingTemplates": true,
                  "installPublicApps": true,
                  "productManagement": "salesforce",
                  "onDemandScheduling": true
                }
              }
            }
          }
        }
      },
      "parameters": {
        "body": []
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "defaultLicense": {
              "dslimit": 40,
              "fslimit": 2147483648,
              "iolimit": 10000,
              "apiLimit": 2000,
              "dsslimit": 524288000,
              "fulltext": true,
              "interval": 1,
              "transfer": 1099511627776,
              "operations": 80000000,
              "scenarioIO": true,
              "gracePeriod": 0,
              "executionTime": 45,
              "restartPeriod": "1 month",
              "customVariables": true,
              "creatingTemplates": true,
              "installPublicApps": true,
              "productManagement": "salesforce",
              "onDemandScheduling": true
            }
          },
          "path": "/admin/system-settings/default-license"
        }
      }
    },
    "connections-get": {
      "endpointKey": "connections-get",
      "path": "/connections",
      "method": "get",
      "x-published": true,
      "tags": ["Connections"],
      "summary": "List connections",
      "description": "Retrieves a collection of all connections for a team with a given ID. Returned connections are sorted by name in ascending order.",
      "security": [
        {
          "token": ["connections:read"]
        }
      ],
      "parameters": {
        "path": [],
        "query": [
          {
            "name": "teamId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The unique ID of the team whose connections will be retrieved.",
            "example": 22
          },
          {
            "name": "type[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "examples": {
              "id-name": {
                "value": "airtable2"
              }
            },
            "description": "Specifies the type of the connections to return details for. The connection type is defined in the `accountName` property and you can get it from the [Get connection details](/connections-connectionId-get) endpoint."
          },
          {
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "accountName",
                  "accountLabel",
                  "packageName",
                  "expire",
                  "metadata",
                  "teamId",
                  "theme",
                  "upgradeable",
                  "scopesCnt",
                  "scoped",
                  "accountType",
                  "editable",
                  "uid",
                  "connectedSystemId",
                  "organizationId"
                ]
              }
            },
            "description": "Specifies the group of values to return. For example, you may want to check which returned connections can be upgraded.",
            "examples": {
              "all-columns": {
                "summary": "Return all details",
                "value": [
                  "id",
                  "name",
                  "accountName",
                  "accountLabel",
                  "packageName",
                  "expire",
                  "metadata",
                  "teamId",
                  "theme",
                  "upgradeable",
                  "scopesCnt",
                  "scoped",
                  "accountType",
                  "editable",
                  "uid",
                  "connectedSystemId",
                  "organizationId"
                ]
              },
              "id-name": {
                "summary": "Return connection ID and name",
                "value": ["id", "name", "accountName"]
              }
            }
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "connections": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "accountName": {
                          "type": "string"
                        },
                        "accountLabel": {
                          "type": "string"
                        },
                        "packageName": {
                          "type": "string"
                        },
                        "expire": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": ["string", "email"]
                            }
                          }
                        },
                        "teamId": {
                          "type": "integer"
                        },
                        "theme": {
                          "type": "string",
                          "format": "color"
                        },
                        "upgradeable": {
                          "type": "boolean"
                        },
                        "scopesCnt": {
                          "type": "integer"
                        },
                        "scoped": {
                          "type": "boolean"
                        },
                        "accountType": {
                          "type": "string"
                        },
                        "editable": {
                          "type": "boolean"
                        },
                        "uid": {
                          "type": "string"
                        },
                        "connectedSystemId": {
                          "type": "string"
                        },
                        "organizationId": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "all-columns": {
                  "summary": "Return all details",
                  "description": "Return all available information about user connections.",
                  "value": {
                    "connections": [
                      {
                        "id": 2,
                        "name": "My Airtable connection",
                        "accountName": "airtable2",
                        "accountLabel": "Airtable",
                        "packageName": null,
                        "expire": null,
                        "metadata": null,
                        "teamId": 22,
                        "theme": "#18bfff",
                        "upgradeable": false,
                        "scopesCnt": 0,
                        "scoped": true,
                        "accountType": "basic",
                        "editable": false,
                        "uid": null,
                        "connectedSystemId": "c5d8e134-d2f8-480d-9838-119a54f65d3e",
                        "organizationId": 3
                      },
                      {
                        "id": 15,
                        "name": "My Google connection",
                        "accountName": "google",
                        "accountLabel": "Google",
                        "packageName": null,
                        "expire": null,
                        "metadata": {
                          "type": "email",
                          "value": "test@mydomain.com"
                        },
                        "teamId": 22,
                        "theme": "#fecd5f",
                        "upgradeable": false,
                        "scopesCnt": 4,
                        "scoped": true,
                        "accountType": "oauth",
                        "editable": false,
                        "uid": 225874569526501080000,
                        "connectedSystemId": "4244156b-88cc-43cf-a5e9-e94bd0304745",
                        "organizationId": 2343
                      }
                    ]
                  }
                },
                "id-name": {
                  "summary": "Return ID, name, connection type",
                  "description": "Return ID and name of the user connections with the `airtable2` connection type.",
                  "value": {
                    "connections": [
                      {
                        "id": 2,
                        "name": "My Airtable connection",
                        "accountName": "airtable2"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "all-columns": {
          "summary": "Return all details",
          "response": {
            "connections": [
              {
                "id": 2,
                "name": "My Airtable connection",
                "accountName": "airtable2",
                "accountLabel": "Airtable",
                "packageName": null,
                "expire": null,
                "metadata": null,
                "teamId": 22,
                "theme": "#18bfff",
                "upgradeable": false,
                "scopesCnt": 0,
                "scoped": true,
                "accountType": "basic",
                "editable": false,
                "uid": null,
                "connectedSystemId": "c5d8e134-d2f8-480d-9838-119a54f65d3e",
                "organizationId": 3
              },
              {
                "id": 15,
                "name": "My Google connection",
                "accountName": "google",
                "accountLabel": "Google",
                "packageName": null,
                "expire": null,
                "metadata": {
                  "type": "email",
                  "value": "test@mydomain.com"
                },
                "teamId": 22,
                "theme": "#fecd5f",
                "upgradeable": false,
                "scopesCnt": 4,
                "scoped": true,
                "accountType": "oauth",
                "editable": false,
                "uid": 225874569526501080000,
                "connectedSystemId": "4244156b-88cc-43cf-a5e9-e94bd0304745",
                "organizationId": 2343
              }
            ]
          },
          "description": "Return all available information about user connections.",
          "parameters": {
            "teamId": 22,
            "cols[]": [
              "id",
              "name",
              "accountName",
              "accountLabel",
              "packageName",
              "expire",
              "metadata",
              "teamId",
              "theme",
              "upgradeable",
              "scopesCnt",
              "scoped",
              "accountType",
              "editable",
              "uid",
              "connectedSystemId",
              "organizationId"
            ]
          },
          "path": "/connections"
        },
        "id-name": {
          "summary": "Return ID, name, connection type",
          "response": {
            "connections": [
              {
                "id": 2,
                "name": "My Airtable connection",
                "accountName": "airtable2"
              }
            ]
          },
          "description": "Return ID and name of the user connections with the `airtable2` connection type.",
          "parameters": {
            "teamId": 22,
            "type[]": "airtable2",
            "cols[]": ["id", "name", "accountName"]
          },
          "path": "/connections"
        }
      }
    },
    "connections-post": {
      "endpointKey": "connections-post",
      "path": "/connections",
      "method": "post",
      "x-published": true,
      "tags": ["Connections"],
      "summary": "Create connection",
      "description": "Creates a new connection with data passed in the request body. In the response, it returns all details of the created connection.",
      "security": [
        {
          "token": ["connections:write"]
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "accountName": {
                  "type": "string",
                  "description": "The connection name. The name must be at most 128 characters long and does not need to be unique."
                },
                "accountType": {
                  "type": "string",
                  "description": "The connection type corresponding to the connected app. For some connection types, this property may require providing additional properties in the request body,  such as `clientId` and `clientSecret`, in order to authorize the connection and make it functional."
                },
                "scopes": {
                  "type": "array",
                  "description": "The connection scope determining the module use. The format and number of available scopes vary depending on the `accountType` parameter.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": {
                "type": ["number", "string", "object", "array"]
              }
            },
            "example": {
              "accountName": "Slack Test",
              "accountType": "slack",
              "clientId": 123456,
              "clientSecret": "secret",
              "scopes": ["chat:write"]
            }
          }
        }
      },
      "parameters": {
        "path": [],
        "query": [
          {
            "name": "teamId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The unique ID of the team whose connections will be retrieved.",
            "example": 1
          }
        ],
        "body": [
          {
            "name": "accountName",
            "schema": {
              "type": "string",
              "description": "The connection name. The name must be at most 128 characters long and does not need to be unique."
            },
            "example": "Slack Test",
            "required": false,
            "description": "The connection name. The name must be at most 128 characters long and does not need to be unique."
          },
          {
            "name": "accountType",
            "schema": {
              "type": "string",
              "description": "The connection type corresponding to the connected app. For some connection types, this property may require providing additional properties in the request body,  such as `clientId` and `clientSecret`, in order to authorize the connection and make it functional."
            },
            "example": "slack",
            "required": false,
            "description": "The connection type corresponding to the connected app. For some connection types, this property may require providing additional properties in the request body,  such as `clientId` and `clientSecret`, in order to authorize the connection and make it functional."
          },
          {
            "name": "scopes",
            "schema": {
              "type": "array",
              "description": "The connection scope determining the module use. The format and number of available scopes vary depending on the `accountType` parameter.",
              "items": {
                "type": "string"
              }
            },
            "example": ["chat:write"],
            "required": false,
            "description": "The connection scope determining the module use. The format and number of available scopes vary depending on the `accountType` parameter."
          }
        ]
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "connection": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "accountName": {
                        "type": "string"
                      },
                      "accountLabel": {
                        "type": "string"
                      },
                      "packageName": {
                        "type": "string"
                      },
                      "expire": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": ["string", "email"]
                          }
                        }
                      },
                      "teamId": {
                        "type": "integer"
                      },
                      "theme": {
                        "type": "string",
                        "format": "color"
                      },
                      "upgradeable": {
                        "type": "boolean"
                      },
                      "scopesCnt": {
                        "type": "integer"
                      },
                      "scoped": {
                        "type": "boolean"
                      },
                      "accountType": {
                        "type": "string"
                      },
                      "editable": {
                        "type": "boolean"
                      },
                      "uid": {
                        "type": "string"
                      },
                      "connectedSystemId": {
                        "type": "string"
                      },
                      "organizationId": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "example": {
                "connection": {
                  "id": 90,
                  "name": "Slack test",
                  "accountName": "slack",
                  "accountLabel": "Slack",
                  "packageName": null,
                  "expire": null,
                  "metadata": {
                    "value": "Make User",
                    "type": "string"
                  },
                  "teamId": 2,
                  "theme": "#4a154b",
                  "upgradeable": false,
                  "scopes": 0,
                  "scoped": true,
                  "accountType": "oauth",
                  "editable": false,
                  "uid": 3243125312
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "connection": {
              "id": 90,
              "name": "Slack test",
              "accountName": "slack",
              "accountLabel": "Slack",
              "packageName": null,
              "expire": null,
              "metadata": {
                "value": "Make User",
                "type": "string"
              },
              "teamId": 2,
              "theme": "#4a154b",
              "upgradeable": false,
              "scopes": 0,
              "scoped": true,
              "accountType": "oauth",
              "editable": false,
              "uid": 3243125312
            }
          },
          "requestBody": {
            "accountName": "Slack Test",
            "accountType": "slack",
            "clientId": 123456,
            "clientSecret": "secret",
            "scopes": ["chat:write"]
          },
          "parameters": {
            "teamId": 1
          },
          "path": "/connections"
        }
      }
    },
    "connections-connectionId-get": {
      "endpointKey": "connections-connectionId-get",
      "path": "/connections/{connectionId}",
      "method": "get",
      "x-published": true,
      "tags": ["Connections"],
      "summary": "Get connection details",
      "description": "Retrieves details of a connection with a given ID.",
      "security": [
        {
          "token": ["connections:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "connectionId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The unique ID of the connection. It can be retrieved from the [List connections](/connections-get) endpoint.",
            "example": 1
          }
        ],
        "query": [
          {
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "accountName",
                  "accountLabel",
                  "packageName",
                  "expire",
                  "metadata",
                  "teamId",
                  "theme",
                  "upgradeable",
                  "scopesCnt",
                  "scoped",
                  "accountType",
                  "editable",
                  "uid",
                  "scopes",
                  "connectedSystemId",
                  "organizationId"
                ]
              }
            },
            "description": "Specifies the group of values to return. For example, you may want to retrieve only the name and scope for a given connection."
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "connection": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "accountName": {
                            "type": "string"
                          },
                          "accountLabel": {
                            "type": "string"
                          },
                          "packageName": {
                            "type": "string"
                          },
                          "expire": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "metadata": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": ["string", "email"]
                              }
                            }
                          },
                          "teamId": {
                            "type": "integer"
                          },
                          "theme": {
                            "type": "string",
                            "format": "color"
                          },
                          "upgradeable": {
                            "type": "boolean"
                          },
                          "scopesCnt": {
                            "type": "integer"
                          },
                          "scoped": {
                            "type": "boolean"
                          },
                          "accountType": {
                            "type": "string"
                          },
                          "editable": {
                            "type": "boolean"
                          },
                          "uid": {
                            "type": "string"
                          },
                          "connectedSystemId": {
                            "type": "string"
                          },
                          "organizationId": {
                            "type": "integer"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "scopes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "account": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              },
              "example": {
                "connection": {
                  "id": 93,
                  "name": "Google",
                  "accountName": "google",
                  "accountLabel": "Google",
                  "packageName": null,
                  "expire": null,
                  "metadata": {
                    "value": "tom@example.com",
                    "type": "email"
                  },
                  "teamId": 4,
                  "theme": "#fecd5f",
                  "upgradeable": false,
                  "scopesCnt": 5,
                  "scoped": true,
                  "accountType": "oauth",
                  "editable": false,
                  "uid": 123456,
                  "scopes": [
                    {
                      "id": "https://www.googleapis.com/auth/userinfo.email",
                      "name": "View user's email address",
                      "account": "google"
                    },
                    {
                      "id": "https://mail.google.com/",
                      "name": "Access to Gmail.",
                      "account": "google"
                    },
                    {
                      "id": "openid",
                      "account": "google"
                    },
                    {
                      "id": "https://www.googleapis.com/auth/spreadsheets",
                      "account": "google"
                    },
                    {
                      "id": "https://www.googleapis.com/auth/drive",
                      "name": "Access to Google Drive.",
                      "account": "google"
                    }
                  ],
                  "connectedSystemId": "4244156b-88cc-43cf-a5e9-e94bd0304745",
                  "organizationId": 3
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "connection": {
              "id": 93,
              "name": "Google",
              "accountName": "google",
              "accountLabel": "Google",
              "packageName": null,
              "expire": null,
              "metadata": {
                "value": "tom@example.com",
                "type": "email"
              },
              "teamId": 4,
              "theme": "#fecd5f",
              "upgradeable": false,
              "scopesCnt": 5,
              "scoped": true,
              "accountType": "oauth",
              "editable": false,
              "uid": 123456,
              "scopes": [
                {
                  "id": "https://www.googleapis.com/auth/userinfo.email",
                  "name": "View user's email address",
                  "account": "google"
                },
                {
                  "id": "https://mail.google.com/",
                  "name": "Access to Gmail.",
                  "account": "google"
                },
                {
                  "id": "openid",
                  "account": "google"
                },
                {
                  "id": "https://www.googleapis.com/auth/spreadsheets",
                  "account": "google"
                },
                {
                  "id": "https://www.googleapis.com/auth/drive",
                  "name": "Access to Google Drive.",
                  "account": "google"
                }
              ],
              "connectedSystemId": "4244156b-88cc-43cf-a5e9-e94bd0304745",
              "organizationId": 3
            }
          },
          "path": "/connections/1"
        }
      }
    },
    "connections-connectionId-patch": {
      "endpointKey": "connections-connectionId-patch",
      "path": "/connections/{connectionId}",
      "method": "patch",
      "x-published": true,
      "tags": ["Connections"],
      "summary": "Update connection",
      "description": "Updates a connection with a given ID by passing new data in the request body. Any property that is not provided will be left unchanged. As the response, it returns all details of the updated connection including properties that were not changed.",
      "security": [
        {
          "token": ["connections:write"]
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The updated connection name. The name must be at most 128 characters long and does not need to be unique."
                }
              },
              "additionalProperties": false
            },
            "example": {
              "name": "New name"
            }
          }
        }
      },
      "parameters": {
        "path": [
          {
            "name": "connectionId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The unique ID of the connection. It can be retrieved from the [List connections](/connections-get) endpoint.",
            "example": 1
          }
        ],
        "query": [
          {
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "accountName",
                  "accountLabel",
                  "packageName",
                  "expire",
                  "metadata",
                  "teamId",
                  "theme",
                  "upgradeable",
                  "scopesCnt",
                  "scoped",
                  "accountType",
                  "editable",
                  "uid"
                ]
              }
            },
            "description": "Specifies the group of values to return. For example, you may want to retrieve only the expiration of the updated connection."
          }
        ],
        "body": [
          {
            "name": "name",
            "schema": {
              "type": "string",
              "description": "The updated connection name. The name must be at most 128 characters long and does not need to be unique."
            },
            "example": "New name",
            "required": false,
            "description": "The updated connection name. The name must be at most 128 characters long and does not need to be unique."
          }
        ]
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "connection": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "accountName": {
                        "type": "string"
                      },
                      "accountLabel": {
                        "type": "string"
                      },
                      "packageName": {
                        "type": "string"
                      },
                      "expire": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": ["string", "email"]
                          }
                        }
                      },
                      "teamId": {
                        "type": "integer"
                      },
                      "theme": {
                        "type": "string",
                        "format": "color"
                      },
                      "upgradeable": {
                        "type": "boolean"
                      },
                      "scopesCnt": {
                        "type": "integer"
                      },
                      "scoped": {
                        "type": "boolean"
                      },
                      "accountType": {
                        "type": "string"
                      },
                      "editable": {
                        "type": "boolean"
                      },
                      "uid": {
                        "type": "string"
                      },
                      "connectedSystemId": {
                        "type": "string"
                      },
                      "organizationId": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "example": {
                "connection": {
                  "id": 93,
                  "name": "New Name",
                  "accountName": "imap",
                  "accountLabel": "Others (IMAP)",
                  "packageName": null,
                  "expire": null,
                  "metadata": {
                    "value": "tom@example.com",
                    "type": "email"
                  },
                  "teamId": 4,
                  "theme": "#eb5768",
                  "upgradeable": false,
                  "scopesCnt": 0,
                  "scoped": true,
                  "accountType": "basic",
                  "editable": true,
                  "uid": 123456
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "connection": {
              "id": 93,
              "name": "New Name",
              "accountName": "imap",
              "accountLabel": "Others (IMAP)",
              "packageName": null,
              "expire": null,
              "metadata": {
                "value": "tom@example.com",
                "type": "email"
              },
              "teamId": 4,
              "theme": "#eb5768",
              "upgradeable": false,
              "scopesCnt": 0,
              "scoped": true,
              "accountType": "basic",
              "editable": true,
              "uid": 123456
            }
          },
          "requestBody": {
            "name": "New name"
          },
          "path": "/connections/1"
        }
      }
    },
    "connections-connectionId-delete": {
      "endpointKey": "connections-connectionId-delete",
      "path": "/connections/{connectionId}",
      "method": "delete",
      "x-published": true,
      "tags": ["Connections"],
      "summary": "Delete connection",
      "description": "Deletes a connection with a given ID and returns the ID in the response.",
      "security": [
        {
          "token": ["connections:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "connectionId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The unique ID of the connection. It can be retrieved from the [List connections](/connections-get) endpoint.",
            "example": 1
          }
        ],
        "query": [
          {
            "name": "confirmed",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Confirms the deletion if the connection is included in at least one scenario. Confirmation is required because the scenario will stop working without the connection. If the parameter is missing or it is set to `false` an error code is returned and the resource is not deleted.",
            "example": true
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "connection": {
                    "type": "integer"
                  }
                }
              },
              "example": {
                "connection": 1
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "connection": 1
          },
          "parameters": {
            "confirmed": true
          },
          "path": "/connections/1"
        }
      }
    },
    "connections-connectionId-test-post": {
      "endpointKey": "connections-connectionId-test-post",
      "path": "/connections/{connectionId}/test",
      "method": "post",
      "x-published": true,
      "tags": ["Connections"],
      "summary": "Verify connection",
      "description": "Verifies the connection status. This endpoint usually communicates with the API of the app that includes the given connection and verifies if credentials saved in Make are still valid. It returns the confirmation if the connection is verified (`true`) or not (`false`).",
      "security": [
        {
          "token": ["connections:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "connectionId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The unique ID of the connection. It can be retrieved from the [List connections](/connections-get) endpoint.",
            "example": 1
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "verified": {
                    "type": "boolean"
                  }
                }
              },
              "example": {
                "verified": true
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "verified": true
          },
          "path": "/connections/1/test"
        }
      }
    },
    "connections-connectionId-scoped-post": {
      "endpointKey": "connections-connectionId-scoped-post",
      "path": "/connections/{connectionId}/scoped",
      "method": "post",
      "x-published": true,
      "tags": ["Connections"],
      "summary": "Verify if connection is scoped",
      "description": "Verifies if a scope for a given connection is set. This endpoint returns the information if the connection is scoped (`true`) or not (`false`).",
      "security": [
        {
          "token": ["connections:write"]
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "scope": {
                  "type": "array",
                  "description": "The array with IDs of the scopes for a given connection. The scope ID of a specific connection can be retrieved from the [Get connection details](/connections-connectionId-get) endpoint.",
                  "items": {
                    "type": "string"
                  },
                  "required": true
                }
              }
            },
            "example": {
              "scope": [
                "https://www.googleapis.com/auth/userinfo.email",
                "https://www.googleapis.com/auth/drive"
              ]
            }
          }
        }
      },
      "parameters": {
        "path": [
          {
            "name": "connectionId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The unique ID of the connection. It can be retrieved from the [List connections](/connections-get) endpoint.",
            "example": 1
          }
        ],
        "query": [],
        "body": [
          {
            "name": "scope",
            "schema": {
              "type": "array",
              "description": "The array with IDs of the scopes for a given connection. The scope ID of a specific connection can be retrieved from the [Get connection details](/connections-connectionId-get) endpoint.",
              "items": {
                "type": "string"
              },
              "required": true
            },
            "example": [
              "https://www.googleapis.com/auth/userinfo.email",
              "https://www.googleapis.com/auth/drive"
            ],
            "required": false,
            "description": "The array with IDs of the scopes for a given connection. The scope ID of a specific connection can be retrieved from the [Get connection details](/connections-connectionId-get) endpoint."
          }
        ]
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "connection": {
                    "type": "object",
                    "properties": {
                      "scoped": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "example": {
                "connection": {
                  "scoped": false
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "connection": {
              "scoped": false
            }
          },
          "requestBody": {
            "scope": [
              "https://www.googleapis.com/auth/userinfo.email",
              "https://www.googleapis.com/auth/drive"
            ]
          },
          "path": "/connections/1/scoped"
        }
      }
    },
    "connections-connectionId-set-data-post": {
      "endpointKey": "connections-connectionId-set-data-post",
      "path": "/connections/{connectionId}/set-data",
      "method": "post",
      "x-published": true,
      "tags": ["Connections"],
      "summary": "Set connection data",
      "description": "Sets data for the specified connection. The required data are different for each connection type. Check which connection data can be updated with the API call `GET /connections/{connectionId}/editable-data-schema`.\n\nIf the connection cannot be updated then the API call returns the error message \"Cannot edit this connection.\". Create a new connection instead. Most of the connections to Apps cannot be updated.",
      "security": [
        {
          "token": ["connections:write"]
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "The set of data is different for each connection type so there are no predefined body properties to use. Please see the request examples for more details.",
              "additionalProperties": {
                "type": ["number", "string", "object", "array"]
              }
            },
            "examples": {
              "oauth": {
                "summary": "OAuth connection",
                "description": "Set data for an OAuth connection",
                "value": {
                  "accessToken": "asdf98FDF9HasdfFDsdafasHBB",
                  "refreshToken": "8h9dHDJojnldkndDFJIVND"
                }
              },
              "email": {
                "summary": "Email connection",
                "description": "Set data for an email connection",
                "value": {
                  "provider": "other",
                  "imapHost": "imap.gmail.com",
                  "imapPort": 993,
                  "imapSecureConnection": true,
                  "imapUsername": "test@test.cz",
                  "imapPassword": "test",
                  "imapRejectUnauthorized": true,
                  "imapCa": "",
                  "imapExplicitTLS": false
                }
              }
            }
          }
        }
      },
      "parameters": {
        "path": [
          {
            "name": "connectionId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The unique ID of the connection. It can be retrieved from the [List connections](/connections-get) endpoint.",
            "example": 1
          }
        ],
        "query": [
          {
            "name": "reauthorize",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "The reauthorization status. If set to `false`, it will show the **Reauthorize** button next to the connection in the Make interface. Scenarios containing connections that need reauthorization may not be fully functional.",
            "example": true
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "changed": {
                    "type": "boolean"
                  }
                }
              },
              "example": {
                "changed": true
              }
            }
          }
        }
      },
      "examples": {
        "oauth": {
          "summary": "OAuth connection",
          "description": "Set data for an OAuth connection",
          "requestBody": {
            "accessToken": "asdf98FDF9HasdfFDsdafasHBB",
            "refreshToken": "8h9dHDJojnldkndDFJIVND"
          },
          "response": {
            "changed": true
          },
          "parameters": {
            "reauthorize": true
          },
          "path": "/connections/1/set-data"
        },
        "email": {
          "summary": "Email connection",
          "description": "Set data for an email connection",
          "requestBody": {
            "provider": "other",
            "imapHost": "imap.gmail.com",
            "imapPort": 993,
            "imapSecureConnection": true,
            "imapUsername": "test@test.cz",
            "imapPassword": "test",
            "imapRejectUnauthorized": true,
            "imapCa": "",
            "imapExplicitTLS": false
          },
          "response": {
            "changed": true
          },
          "parameters": {
            "reauthorize": true
          },
          "path": "/connections/1/set-data"
        }
      }
    },
    "connections-connectionId-editable-data-schema-get": {
      "endpointKey": "connections-connectionId-editable-data-schema-get",
      "path": "/connections/{connectionId}/editable-data-schema",
      "method": "get",
      "x-published": true,
      "tags": ["Connections"],
      "summary": "List updatable connection parameters",
      "description": "Retrieves a list of connection parameters that can be updated. You can update a connection with the API call `POST /connections/{connectionId}/set-data`.\n\nIf the connection cannot be updated then the API call returns the error message \"Cannot edit this connection.\". Create a new connection instead. Most of the connections to Apps cannot be updated.",
      "security": [
        {
          "token": ["connections:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "connectionId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The unique ID of the connection. It can be retrieved from the [List connections](/connections-get) endpoint.",
            "example": 1
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "editableParameters": {
                    "type": "array"
                  }
                }
              },
              "example": {
                "editableParameters": [
                  "provider",
                  "imapHost",
                  "imapPort",
                  "imapSecureConnection",
                  "imapExplicitTLS",
                  "imapUsername",
                  "imapPassword",
                  "imapRejectUnauthorized",
                  "imapCa"
                ]
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "editableParameters": [
              "provider",
              "imapHost",
              "imapPort",
              "imapSecureConnection",
              "imapExplicitTLS",
              "imapUsername",
              "imapPassword",
              "imapRejectUnauthorized",
              "imapCa"
            ]
          },
          "path": "/connections/1/editable-data-schema"
        }
      }
    },
    "custom-property-structures-get": {
      "endpointKey": "custom-property-structures-get",
      "path": "/custom-property-structures",
      "method": "get",
      "x-published": true,
      "tags": ["Custom properties"],
      "summary": "List custom property structures",
      "description": "Gets a list of custom properties structures in the organization.",
      "security": [
        {
          "token": ["custom-property-structures:read"]
        }
      ],
      "parameters": {
        "path": [],
        "query": [
          {
            "name": "organizationId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the organization.",
            "example": 57
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customPropertyStructures": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "created": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "belongers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "belongerId": {
                                "type": "integer"
                              },
                              "belongerType": {
                                "type": "string"
                              },
                              "associatedTypes": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "customPropertyStructures": [
                  {
                    "id": 2,
                    "created": "2023-06-27T22:00:00.000Z",
                    "belongers": [
                      {
                        "belongerId": 57,
                        "belongerType": "organization",
                        "associatedTypes": ["scenario"]
                      }
                    ]
                  }
                ]
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "customPropertyStructures": [
              {
                "id": 2,
                "created": "2023-06-27T22:00:00.000Z",
                "belongers": [
                  {
                    "belongerId": 57,
                    "belongerType": "organization",
                    "associatedTypes": ["scenario"]
                  }
                ]
              }
            ]
          },
          "parameters": {
            "organizationId": 57
          },
          "path": "/custom-property-structures"
        }
      }
    },
    "custom-property-structures-post": {
      "endpointKey": "custom-property-structures-post",
      "path": "/custom-property-structures",
      "method": "post",
      "x-published": true,
      "tags": ["Custom properties"],
      "summary": "Create a custom property structure",
      "description": "Creates a custom properties structure. You can have only one custom properties structure for each combination of `associatedType`, `belongerType`and `belongerId` values.\nFor example, you can create only one custom properties structure for scenarios in a specific organization.\nTo create a structure for custom scenario properties, fill in the request body:\n- `associatedType`: `scenario`\n - `belongerType`: `organization`\n\nCheck out the example API call.\nTo define the custom properties structure items, use the API call [to create custom properties structure item](https://www.make.com/en/api-documentation/custom-property-structures-customPropertyStructureId-custom-property-structure-items-post).  ",
      "security": [
        {
          "token": ["custom-property-structures:write"]
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "associatedType": {
                  "description": "The type of the entity which uses the custom properties structure. Fill in `scenario` to create custom scenario properties structure.",
                  "type": "string"
                },
                "belongerType": {
                  "description": "The type of the entity that owns the custom properties structure. Fill in `organization` to create custom scenario properties structure.",
                  "type": "string"
                },
                "belongerId": {
                  "description": "The ID of the entity that owns the custom properties structure.",
                  "type": "integer"
                }
              },
              "required": ["associatedType", "belongerType", "belongerId"]
            },
            "example": {
              "associatedType": "scenario",
              "belongerType": "organization",
              "belongerId": 57
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "belongers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "belongerId": {
                          "type": "integer"
                        },
                        "belongerType": {
                          "type": "string"
                        },
                        "associatedTypes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "customPropertyStructure": {
                  "id": 2,
                  "belongers": [
                    {
                      "belongerId": 57,
                      "belongerType": "organization",
                      "associatedTypes": ["scenario"]
                    }
                  ],
                  "created": "2023-06-27T22:00:00.000Z"
                }
              }
            }
          }
        }
      },
      "parameters": {
        "body": [
          {
            "name": "associatedType",
            "schema": {
              "description": "The type of the entity which uses the custom properties structure. Fill in `scenario` to create custom scenario properties structure.",
              "type": "string"
            },
            "example": "scenario",
            "required": true,
            "description": "The type of the entity which uses the custom properties structure. Fill in `scenario` to create custom scenario properties structure."
          },
          {
            "name": "belongerType",
            "schema": {
              "description": "The type of the entity that owns the custom properties structure. Fill in `organization` to create custom scenario properties structure.",
              "type": "string"
            },
            "example": "organization",
            "required": true,
            "description": "The type of the entity that owns the custom properties structure. Fill in `organization` to create custom scenario properties structure."
          },
          {
            "name": "belongerId",
            "schema": {
              "description": "The ID of the entity that owns the custom properties structure.",
              "type": "integer"
            },
            "example": 57,
            "required": true,
            "description": "The ID of the entity that owns the custom properties structure."
          }
        ]
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "customPropertyStructure": {
              "id": 2,
              "belongers": [
                {
                  "belongerId": 57,
                  "belongerType": "organization",
                  "associatedTypes": ["scenario"]
                }
              ],
              "created": "2023-06-27T22:00:00.000Z"
            }
          },
          "requestBody": {
            "associatedType": "scenario",
            "belongerType": "organization",
            "belongerId": 57
          },
          "path": "/custom-property-structures"
        }
      }
    },
    "custom-property-structures-customPropertyStructureId-custom-property-structure-items-get": {
      "endpointKey": "custom-property-structures-customPropertyStructureId-custom-property-structure-items-get",
      "path": "/custom-property-structures/{customPropertyStructureId}/custom-property-structure-items",
      "method": "get",
      "x-published": true,
      "tags": ["Custom properties > Structure items"],
      "summary": "List custom property structure items",
      "description": "Gets the list of structure items in the specified custom properties structure. \nUse the API call `GET /custom-property-structures?{organizationId}` to get the ID of the custom property structure.",
      "security": [
        {
          "token": ["custom-property-structures:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "customPropertyStructureId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the custom property structure.\nUse the API call `GET /custom-property-structures?{organizationId}` to get the ID of a custom property structure.",
            "example": 2
          }
        ],
        "query": [
          {
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "label",
                  "description",
                  "type",
                  "options",
                  "required"
                ]
              }
            },
            "description": "Specifies columns that are returned in the response. Use the `cols[]` parameter for every column that you want to return in the response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get both `key1` and `key2` columns in the response.\n\n[Check the \"Filtering\" section for a full example.](https://www.make.com/en/api-documentation/filtering)"
          },
          {
            "name": "pg[sortBy]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["id", "name", "label", "description", "type", "required"]
            },
            "description": "Specify the custom property item attribute. The custom property items in the response are sorted by the value of the attribute.",
            "default": "name"
          },
          {
            "name": "pg[offset]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The value of entities you want to skip before getting entities you need.",
            "default": 0
          },
          {
            "name": "pg[sortDir]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "The sorting order. It accepts the ascending and descending direction specifiers.",
            "default": "asc"
          },
          {
            "name": "pg[limit]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The maximum entities to return.",
            "default": 10000,
            "maximum": 10000
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customPropertyStructureItems": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string",
                          "required": true
                        },
                        "label": {
                          "type": "string",
                          "required": true
                        },
                        "description": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "boolean",
                            "number",
                            "shortText",
                            "longText",
                            "date",
                            "dropdown",
                            "multiselect"
                          ],
                          "required": true
                        },
                        "options": {
                          "type": "array",
                          "nullable": true,
                          "items": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "required": {
                          "type": "boolean"
                        },
                        "structureId": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "pg": {
                    "type": "object",
                    "properties": {
                      "last": {
                        "type": "string"
                      },
                      "showLast": {
                        "type": "boolean"
                      },
                      "sortBy": {
                        "type": "string"
                      },
                      "sortDir": {
                        "type": "string"
                      },
                      "limit": {
                        "type": "integer"
                      },
                      "offset": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "example": {
                "customPropertyStructureItems": [
                  {
                    "id": 54,
                    "name": "highPriority",
                    "label": "High Priority",
                    "description": "Specify whether the scenario is high priority or not.",
                    "type": "boolean",
                    "options": null,
                    "required": false
                  },
                  {
                    "id": 55,
                    "name": "location",
                    "label": "Location",
                    "description": "Location of the team managing the scenario.",
                    "type": "shortText",
                    "options": null,
                    "required": false
                  },
                  {
                    "id": 56,
                    "name": "description",
                    "label": "Description",
                    "description": "Custom description of the scenario.",
                    "type": "longText",
                    "options": null,
                    "required": false
                  },
                  {
                    "id": 57,
                    "name": "customId",
                    "label": "Company ID",
                    "description": "ID managed by our company",
                    "type": "number",
                    "options": null,
                    "required": true
                  },
                  {
                    "id": 134,
                    "name": "performanceCheck",
                    "label": "Performance check due date",
                    "description": "The date when we should check whether the scenario remains valid and can be improved.",
                    "type": "date",
                    "options": null,
                    "required": true
                  },
                  {
                    "id": 43,
                    "name": "companyTeam",
                    "label": "Company Team",
                    "description": "The team that manages the scenario",
                    "type": "dropdown",
                    "options": [
                      {
                        "value": "Marketing"
                      },
                      {
                        "value": "Product"
                      },
                      {
                        "label": "Engineering"
                      }
                    ],
                    "required": true
                  },
                  {
                    "id": 53,
                    "name": "category",
                    "label": "Category",
                    "description": "The category tags of the scenarios",
                    "type": "multiselect",
                    "options": [
                      {
                        "value": "Eshop"
                      },
                      {
                        "value": "Notifications"
                      },
                      {
                        "value": "Routing"
                      },
                      {
                        "value": "Products"
                      }
                    ],
                    "required": false
                  }
                ],
                "pg": {
                  "sortBy": "id",
                  "limit": 10000,
                  "sortDir": "asc",
                  "offset": 0
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "customPropertyStructureItems": [
              {
                "id": 54,
                "name": "highPriority",
                "label": "High Priority",
                "description": "Specify whether the scenario is high priority or not.",
                "type": "boolean",
                "options": null,
                "required": false
              },
              {
                "id": 55,
                "name": "location",
                "label": "Location",
                "description": "Location of the team managing the scenario.",
                "type": "shortText",
                "options": null,
                "required": false
              },
              {
                "id": 56,
                "name": "description",
                "label": "Description",
                "description": "Custom description of the scenario.",
                "type": "longText",
                "options": null,
                "required": false
              },
              {
                "id": 57,
                "name": "customId",
                "label": "Company ID",
                "description": "ID managed by our company",
                "type": "number",
                "options": null,
                "required": true
              },
              {
                "id": 134,
                "name": "performanceCheck",
                "label": "Performance check due date",
                "description": "The date when we should check whether the scenario remains valid and can be improved.",
                "type": "date",
                "options": null,
                "required": true
              },
              {
                "id": 43,
                "name": "companyTeam",
                "label": "Company Team",
                "description": "The team that manages the scenario",
                "type": "dropdown",
                "options": [
                  {
                    "value": "Marketing"
                  },
                  {
                    "value": "Product"
                  },
                  {
                    "label": "Engineering"
                  }
                ],
                "required": true
              },
              {
                "id": 53,
                "name": "category",
                "label": "Category",
                "description": "The category tags of the scenarios",
                "type": "multiselect",
                "options": [
                  {
                    "value": "Eshop"
                  },
                  {
                    "value": "Notifications"
                  },
                  {
                    "value": "Routing"
                  },
                  {
                    "value": "Products"
                  }
                ],
                "required": false
              }
            ],
            "pg": {
              "sortBy": "id",
              "limit": 10000,
              "sortDir": "asc",
              "offset": 0
            }
          },
          "path": "/custom-property-structures/2/custom-property-structure-items"
        }
      }
    },
    "custom-property-structures-customPropertyStructureId-custom-property-structure-items-post": {
      "endpointKey": "custom-property-structures-customPropertyStructureId-custom-property-structure-items-post",
      "path": "/custom-property-structures/{customPropertyStructureId}/custom-property-structure-items",
      "method": "post",
      "x-published": true,
      "tags": ["Custom properties > Structure items"],
      "summary": "Create a custom property structure item",
      "description": "Creates custom properties structure items.\nAfter creating a structure item, you cannot change its `name` and `type`.\nTo add data to the custom properties, use the API call to [fill in custom properties data](https://www.make.com/en/api-documentation/scenarios-scenarioId-custom-properties-post).",
      "security": [
        {
          "token": ["custom-property-structures:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "customPropertyStructureId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the custom property structure.\nUse the API call `GET /custom-property-structures?{organizationId}` to get the ID of a custom property structure.",
            "example": 2
          }
        ],
        "query": [],
        "body": [
          {
            "name": "name",
            "schema": {
              "description": "The ID of the structure item. The `name` has to be unique in the custom properties structure.",
              "type": "string"
            },
            "example": "teamLocation",
            "required": true,
            "description": "The ID of the structure item. The `name` has to be unique in the custom properties structure."
          },
          {
            "name": "label",
            "schema": {
              "description": "Make displays the item label to users in the scenario table header.",
              "type": "string"
            },
            "example": "Team location",
            "required": true,
            "description": "Make displays the item label to users in the scenario table header."
          },
          {
            "name": "description",
            "schema": {
              "description": "The description of the custom property structure item. You can review the item description in the **Scenario properties** tab in the Organization dashboard.",
              "type": "string"
            },
            "example": "Location of the team managing the scenario.",
            "required": false,
            "description": "The description of the custom property structure item. You can review the item description in the **Scenario properties** tab in the Organization dashboard."
          },
          {
            "name": "type",
            "schema": {
              "description": "The data type of the custom property structure item. The data types `dropdown` and `multiselect` allow you to specify available options for the item data.",
              "type": "string",
              "enum": [
                "boolean",
                "number",
                "shortText",
                "longText",
                "date",
                "dropdown",
                "multiselect"
              ]
            },
            "example": "shortText",
            "required": true,
            "description": "The data type of the custom property structure item. The data types `dropdown` and `multiselect` allow you to specify available options for the item data."
          },
          {
            "name": "options",
            "schema": {
              "description": "The options available to users when filling in the item data. For the data types `dropdown` and `multiselect`, fill in an object like `{\"options\":[{\"value\": \"Marketing\"}, {\"value\": \"Sales\"}]}`.\nYou can omit the `options` parameter for the rest of the data types. "
            },
            "required": false,
            "description": "The options available to users when filling in the item data. For the data types `dropdown` and `multiselect`, fill in an object like `{\"options\":[{\"value\": \"Marketing\"}, {\"value\": \"Sales\"}]}`.\nYou can omit the `options` parameter for the rest of the data types. "
          },
          {
            "name": "required",
            "schema": {
              "description": "Set to `true` in order to make a structure item required when adding custom property data. Default value is `false`.",
              "type": "boolean"
            },
            "example": true,
            "required": false,
            "description": "Set to `true` in order to make a structure item required when adding custom property data. Default value is `false`."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The ID of the structure item. The `name` has to be unique in the custom properties structure.",
                  "type": "string"
                },
                "label": {
                  "description": "Make displays the item label to users in the scenario table header.",
                  "type": "string"
                },
                "description": {
                  "description": "The description of the custom property structure item. You can review the item description in the **Scenario properties** tab in the Organization dashboard.",
                  "type": "string"
                },
                "type": {
                  "description": "The data type of the custom property structure item. The data types `dropdown` and `multiselect` allow you to specify available options for the item data.",
                  "type": "string",
                  "enum": [
                    "boolean",
                    "number",
                    "shortText",
                    "longText",
                    "date",
                    "dropdown",
                    "multiselect"
                  ]
                },
                "options": {
                  "description": "The options available to users when filling in the item data. For the data types `dropdown` and `multiselect`, fill in an object like `{\"options\":[{\"value\": \"Marketing\"}, {\"value\": \"Sales\"}]}`.\nYou can omit the `options` parameter for the rest of the data types. "
                },
                "required": {
                  "description": "Set to `true` in order to make a structure item required when adding custom property data. Default value is `false`.",
                  "type": "boolean"
                }
              },
              "required": ["name", "label", "type"]
            },
            "examples": {
              "basic-example": {
                "summary": "Text item",
                "description": "Add a custom properties structure item with the data type `shortText`.",
                "value": {
                  "name": "teamLocation",
                  "label": "Team location",
                  "description": "Location of the team managing the scenario.",
                  "type": "shortText",
                  "required": true
                }
              },
              "options-example": {
                "summary": "Item with options",
                "description": "Add a custom properties structure item with a set of available options. The data `type` has to be `dropdown` or `multiselect`. Use the `options` attribute to specify available options.",
                "value": {
                  "name": "category",
                  "label": "Category",
                  "description": "The scenario category",
                  "type": "multiselect",
                  "options": [
                    {
                      "value": "Eshop"
                    },
                    {
                      "value": "Notifications"
                    },
                    {
                      "value": "Routing"
                    },
                    {
                      "value": "Products"
                    }
                  ],
                  "required": false
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customPropertyStructureItem": {
                    "type": "object",
                    "properties": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string",
                          "required": true
                        },
                        "label": {
                          "type": "string",
                          "required": true
                        },
                        "description": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "boolean",
                            "number",
                            "shortText",
                            "longText",
                            "date",
                            "dropdown",
                            "multiselect"
                          ],
                          "required": true
                        },
                        "options": {
                          "type": "array",
                          "nullable": true,
                          "items": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "required": {
                          "type": "boolean"
                        },
                        "structureId": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "basic-example": {
                  "value": {
                    "customPropertyStructureItem": {
                      "id": 183,
                      "structureId": 6,
                      "name": "teamLocation",
                      "label": "Team location",
                      "description": "Location of the team managing the scenario.",
                      "type": "shortText",
                      "options": null,
                      "required": false
                    }
                  }
                },
                "options-example": {
                  "value": {
                    "customPropertyStructureItem": {
                      "id": 185,
                      "structureId": 6,
                      "name": "category",
                      "label": "Category",
                      "description": "The scenario category",
                      "type": "multiselect",
                      "options": [
                        {
                          "value": "Eshop"
                        },
                        {
                          "value": "Notifications"
                        },
                        {
                          "value": "Routing"
                        },
                        {
                          "value": "Products"
                        }
                      ],
                      "required": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "basic-example": {
          "summary": "Text item",
          "response": {
            "customPropertyStructureItem": {
              "id": 183,
              "structureId": 6,
              "name": "teamLocation",
              "label": "Team location",
              "description": "Location of the team managing the scenario.",
              "type": "shortText",
              "options": null,
              "required": false
            }
          },
          "description": "Add a custom properties structure item with the data type `shortText`.",
          "requestBody": {
            "name": "teamLocation",
            "label": "Team location",
            "description": "Location of the team managing the scenario.",
            "type": "shortText",
            "required": true
          },
          "parameters": {},
          "path": "/custom-property-structures/2/custom-property-structure-items"
        },
        "options-example": {
          "summary": "Item with options",
          "response": {
            "customPropertyStructureItem": {
              "id": 185,
              "structureId": 6,
              "name": "category",
              "label": "Category",
              "description": "The scenario category",
              "type": "multiselect",
              "options": [
                {
                  "value": "Eshop"
                },
                {
                  "value": "Notifications"
                },
                {
                  "value": "Routing"
                },
                {
                  "value": "Products"
                }
              ],
              "required": false
            }
          },
          "description": "Add a custom properties structure item with a set of available options. The data `type` has to be `dropdown` or `multiselect`. Use the `options` attribute to specify available options.",
          "requestBody": {
            "name": "category",
            "label": "Category",
            "description": "The scenario category",
            "type": "multiselect",
            "options": [
              {
                "value": "Eshop"
              },
              {
                "value": "Notifications"
              },
              {
                "value": "Routing"
              },
              {
                "value": "Products"
              }
            ],
            "required": false
          },
          "parameters": {},
          "path": "/custom-property-structures/2/custom-property-structure-items"
        }
      }
    },
    "custom-property-structures-custom-property-structure-items-customPropertyStructureItemId-patch": {
      "endpointKey": "custom-property-structures-custom-property-structure-items-customPropertyStructureItemId-patch",
      "path": "/custom-property-structures/custom-property-structure-items/{customPropertyStructureItemId}",
      "method": "patch",
      "x-published": true,
      "tags": ["Custom properties > Structure items"],
      "summary": "Update custom property structure item",
      "description": "Updates the specified item of a custom property structure. Specify the attributes you want to update in the request body.\nYou cannot update the item `name` and `type`.\nYou can get the item ID with an API call to [list custom property structure items](https://www.make.com/en/api-documentation/custom-property-structures-customPropertyStructureId-custom-property-structure-items-get).\nWhen you want to update the `options` of a `multiselect` or `dropdown` item, specify all the options for the property. The new set of options replaces the current options.",
      "security": [
        {
          "token": ["custom-property-structures:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "customPropertyStructureItemId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the custom property structure item. Get the item ID with the API call to [list custom property structure items](https://www.make.com/en/api-documentation/custom-property-structures-customPropertyStructureId-custom-property-structure-items-get).",
            "example": 2
          }
        ],
        "query": [],
        "body": [
          {
            "name": "label",
            "schema": {
              "description": "Make displays the item label to users in the scenario table header.",
              "type": "string"
            },
            "example": "Updated categories",
            "required": false,
            "description": "Make displays the item label to users in the scenario table header."
          },
          {
            "name": "description",
            "schema": {
              "description": "The description of the custom property structure item. You can review the item description in the **Scenario properties** tab in the Organization dashboard.",
              "type": "string"
            },
            "required": false,
            "description": "The description of the custom property structure item. You can review the item description in the **Scenario properties** tab in the Organization dashboard."
          },
          {
            "name": "options",
            "schema": {
              "description": "The options available to users when filling in the item data. For the data types `dropdown` and `multiselect`, fill in an object like `{\"options\":[{\"value\": \"Marketing\"}, {\"value\": \"Sales\"}]}`.\nYou can omit the `options` parameter for the rest of the data types. "
            },
            "required": false,
            "description": "The options available to users when filling in the item data. For the data types `dropdown` and `multiselect`, fill in an object like `{\"options\":[{\"value\": \"Marketing\"}, {\"value\": \"Sales\"}]}`.\nYou can omit the `options` parameter for the rest of the data types. "
          },
          {
            "name": "required",
            "schema": {
              "description": "Set to `true` if you require to fill in data to the structure item when adding custom property data. Default value is `false`.",
              "type": "boolean"
            },
            "required": false,
            "description": "Set to `true` if you require to fill in data to the structure item when adding custom property data. Default value is `false`."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "label": {
                  "description": "Make displays the item label to users in the scenario table header.",
                  "type": "string"
                },
                "description": {
                  "description": "The description of the custom property structure item. You can review the item description in the **Scenario properties** tab in the Organization dashboard.",
                  "type": "string"
                },
                "options": {
                  "description": "The options available to users when filling in the item data. For the data types `dropdown` and `multiselect`, fill in an object like `{\"options\":[{\"value\": \"Marketing\"}, {\"value\": \"Sales\"}]}`.\nYou can omit the `options` parameter for the rest of the data types. "
                },
                "required": {
                  "description": "Set to `true` if you require to fill in data to the structure item when adding custom property data. Default value is `false`.",
                  "type": "boolean"
                }
              }
            },
            "examples": {
              "update-label": {
                "summary": "Update custom property",
                "description": "Updates the label of the custom property.",
                "value": {
                  "label": "Updated categories"
                }
              },
              "update-options": {
                "summary": "Update item options",
                "description": "To update the custom property item options, specify the new set of available options. The new set of options replaces the previous options.",
                "value": {
                  "options": [
                    {
                      "value": "Logistics"
                    },
                    {
                      "value": "People team"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customPropertyStructureItem": {
                    "type": "object",
                    "properties": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string",
                          "required": true
                        },
                        "label": {
                          "type": "string",
                          "required": true
                        },
                        "description": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "boolean",
                            "number",
                            "shortText",
                            "longText",
                            "date",
                            "dropdown",
                            "multiselect"
                          ],
                          "required": true
                        },
                        "options": {
                          "type": "array",
                          "nullable": true,
                          "items": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "required": {
                          "type": "boolean"
                        },
                        "structureId": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "update-label": {
                  "value": {
                    "customPropertyStructureItem": {
                      "id": 2,
                      "structureId": 11,
                      "name": "categories",
                      "label": "Updated categories",
                      "description": "Update label of the categories.",
                      "type": "multiselect",
                      "options": [
                        {
                          "value": "Accounting"
                        },
                        {
                          "value": "Development"
                        }
                      ],
                      "required": true
                    }
                  }
                },
                "update-options": {
                  "value": {
                    "customPropertyStructureItem": {
                      "id": 2,
                      "structureId": 11,
                      "name": "categories",
                      "label": "Categories",
                      "description": "Update label of the categories.",
                      "type": "multiselect",
                      "options": [
                        {
                          "value": "Logistics"
                        },
                        {
                          "value": "People team"
                        }
                      ],
                      "required": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "update-label": {
          "summary": "Update custom property",
          "response": {
            "customPropertyStructureItem": {
              "id": 2,
              "structureId": 11,
              "name": "categories",
              "label": "Updated categories",
              "description": "Update label of the categories.",
              "type": "multiselect",
              "options": [
                {
                  "value": "Accounting"
                },
                {
                  "value": "Development"
                }
              ],
              "required": true
            }
          },
          "description": "Updates the label of the custom property.",
          "requestBody": {
            "label": "Updated categories"
          },
          "parameters": {},
          "path": "/custom-property-structures/custom-property-structure-items/2"
        },
        "update-options": {
          "summary": "Update item options",
          "response": {
            "customPropertyStructureItem": {
              "id": 2,
              "structureId": 11,
              "name": "categories",
              "label": "Categories",
              "description": "Update label of the categories.",
              "type": "multiselect",
              "options": [
                {
                  "value": "Logistics"
                },
                {
                  "value": "People team"
                }
              ],
              "required": true
            }
          },
          "description": "To update the custom property item options, specify the new set of available options. The new set of options replaces the previous options.",
          "requestBody": {
            "options": [
              {
                "value": "Logistics"
              },
              {
                "value": "People team"
              }
            ]
          },
          "parameters": {},
          "path": "/custom-property-structures/custom-property-structure-items/2"
        }
      }
    },
    "custom-property-structures-custom-property-structure-items-customPropertyStructureItemId-delete": {
      "endpointKey": "custom-property-structures-custom-property-structure-items-customPropertyStructureItemId-delete",
      "path": "/custom-property-structures/custom-property-structure-items/{customPropertyStructureItemId}",
      "method": "delete",
      "x-published": true,
      "tags": ["Custom properties > Structure items"],
      "summary": "Delete custom property structure item",
      "description": "Deletes the specified custom property structure item. Use the `confirmed` parameter to confirm deleting the structure item.\nWhen you delete a custom property item, Make deletes the data filled in the item as well. Deleting custom property item data is irreversible.",
      "security": [
        {
          "token": ["custom-property-structures:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "customPropertyStructureItemId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the custom property structure item. Get the item ID with the API call to [list custom property structure items](https://www.make.com/en/api-documentation/custom-property-structures-customPropertyStructureId-custom-property-structure-items-get).",
            "example": 2
          }
        ],
        "query": [
          {
            "name": "confirmed",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customPropertyStructureItem": {
                    "type": "number"
                  }
                }
              },
              "example": {
                "customPropertyStructureItem": 2
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "customPropertyStructureItem": 2
          },
          "parameters": {
            "confirmed": true
          },
          "path": "/custom-property-structures/custom-property-structure-items/2"
        }
      }
    },
    "data-stores-get": {
      "endpointKey": "data-stores-get",
      "path": "/data-stores",
      "method": "get",
      "x-published": true,
      "tags": ["Data stores"],
      "summary": "List data stores",
      "description": "Retrieves a collection of all data stores for a team with a given ID. Returned data stores are sorted by name in ascending order.",
      "security": [
        {
          "token": ["datastores:read"]
        }
      ],
      "parameters": {
        "path": [],
        "query": [
          {
            "required": true,
            "description": "The unique ID of the team whose data stores will be retrieved.",
            "name": "teamId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "examples": {
              "all-columns": {
                "summary": "Return all details",
                "value": [
                  "id",
                  "name",
                  "teamId",
                  "records",
                  "size",
                  "maxSize",
                  "datastructureId"
                ]
              },
              "id-name": {
                "summary": "Return ID and name",
                "value": ["id", "name"]
              }
            },
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "teamId",
                  "records",
                  "size",
                  "maxSize",
                  "datastructureId"
                ]
              }
            },
            "description": "Specifies the group of values to return. For example, you can retrieve only names and IDs of data stores for a team with a given ID."
          },
          {
            "name": "pg[sortBy]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["name"]
            },
            "description": "The value that will be used to sort returned entities by.",
            "default": "name"
          },
          {
            "name": "pg[offset]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The value of entities you want to skip before getting entities you need.",
            "default": 0
          },
          {
            "default": "asc",
            "name": "pg[sortDir]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "The sorting order. It accepts the ascending and descending direction specifiers."
          },
          {
            "default": 10000,
            "maximum": 10000,
            "name": "pg[limit]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The value of maximum entities to return."
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dataStores": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "records": {
                          "type": "integer"
                        },
                        "size": {
                          "type": "string"
                        },
                        "maxSize": {
                          "type": "string"
                        },
                        "teamId": {
                          "type": "integer"
                        },
                        "datastructureId": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "pg": {
                    "type": "object",
                    "properties": {
                      "last": {
                        "type": "string",
                        "description": "Shown only when using the `last` based pagination."
                      },
                      "showLast": {
                        "type": "boolean",
                        "description": "Shown only when using the `last` based pagination."
                      },
                      "sortBy": {
                        "type": "string"
                      },
                      "sortDir": {
                        "type": "string"
                      },
                      "limit": {
                        "type": "integer"
                      },
                      "offset": {
                        "type": "integer",
                        "description": "Shown only when using the `offset` based pagination."
                      }
                    }
                  }
                }
              },
              "examples": {
                "all-columns": {
                  "summary": "Return all details",
                  "description": "Returns all data stores details",
                  "value": {
                    "dataStores": [
                      {
                        "id": 137,
                        "name": "Customers",
                        "records": "0",
                        "size": "0",
                        "maxSize": "1048576",
                        "teamId": 212,
                        "datastructureId": 123
                      }
                    ],
                    "pg": {
                      "sortBy": "name",
                      "sortDir": "asc",
                      "offset": 0,
                      "limit": 10
                    }
                  }
                },
                "id-name": {
                  "summary": "Return ID and name",
                  "description": "Returns IDs and names of data stores",
                  "value": {
                    "dataStores": [
                      {
                        "id": 137,
                        "name": "Customers"
                      },
                      {
                        "id": 256,
                        "name": "Products"
                      }
                    ],
                    "pg": {
                      "sortBy": "name",
                      "sortDir": "asc",
                      "offset": 0,
                      "limit": 10
                    }
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "all-columns": {
          "summary": "Return all details",
          "response": {
            "dataStores": [
              {
                "id": 137,
                "name": "Customers",
                "records": "0",
                "size": "0",
                "maxSize": "1048576",
                "teamId": 212,
                "datastructureId": 123
              }
            ],
            "pg": {
              "sortBy": "name",
              "sortDir": "asc",
              "offset": 0,
              "limit": 10
            }
          },
          "description": "Returns all data stores details",
          "parameters": {
            "teamId": 1,
            "cols[]": [
              "id",
              "name",
              "teamId",
              "records",
              "size",
              "maxSize",
              "datastructureId"
            ]
          },
          "path": "/data-stores"
        },
        "id-name": {
          "summary": "Return ID and name",
          "response": {
            "dataStores": [
              {
                "id": 137,
                "name": "Customers"
              },
              {
                "id": 256,
                "name": "Products"
              }
            ],
            "pg": {
              "sortBy": "name",
              "sortDir": "asc",
              "offset": 0,
              "limit": 10
            }
          },
          "description": "Returns IDs and names of data stores",
          "parameters": {
            "teamId": 1,
            "cols[]": ["id", "name"]
          },
          "path": "/data-stores"
        }
      }
    },
    "data-stores-post": {
      "endpointKey": "data-stores-post",
      "path": "/data-stores",
      "method": "post",
      "x-published": true,
      "tags": ["Data stores"],
      "summary": "Create data store",
      "description": "Creates a new data store with data passed in the request body. In the response, it returns all details of the created data store.",
      "security": [
        {
          "token": ["datastores:write"]
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The data store name. The name must be at most 128 characters long and does not need to be unique."
                },
                "teamId": {
                  "type": "integer",
                  "description": "The unique ID of the team in which the data store will be created."
                },
                "datastructureId": {
                  "type": "integer",
                  "description": "The unique ID of the data structure that will be included in the data store. All data structures IDs for a given team can be retrieved from the [List data structures](/data-structures-get) endpoint."
                },
                "maxSizeMB": {
                  "type": "integer",
                  "description": "The maximum size of the data store (defined in MB)."
                }
              },
              "required": ["name", "teamId", "datastructureId", "maxSizeMB"]
            },
            "example": {
              "name": "Customers",
              "teamId": 212,
              "datastructureId": 178,
              "maxSizeMB": 1
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dataStore": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "records": {
                        "type": "integer"
                      },
                      "size": {
                        "type": "string"
                      },
                      "maxSize": {
                        "type": "string"
                      },
                      "teamId": {
                        "type": "integer"
                      },
                      "datastructureId": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "example": {
                "dataStore": {
                  "id": 137,
                  "name": "Customers",
                  "records": "0",
                  "size": "0",
                  "maxSize": "1048576",
                  "teamId": 212
                }
              }
            }
          }
        }
      },
      "parameters": {
        "body": [
          {
            "name": "name",
            "schema": {
              "type": "string",
              "description": "The data store name. The name must be at most 128 characters long and does not need to be unique."
            },
            "example": "Customers",
            "required": true,
            "description": "The data store name. The name must be at most 128 characters long and does not need to be unique."
          },
          {
            "name": "teamId",
            "schema": {
              "type": "integer",
              "description": "The unique ID of the team in which the data store will be created."
            },
            "example": 212,
            "required": true,
            "description": "The unique ID of the team in which the data store will be created."
          },
          {
            "name": "datastructureId",
            "schema": {
              "type": "integer",
              "description": "The unique ID of the data structure that will be included in the data store. All data structures IDs for a given team can be retrieved from the [List data structures](/data-structures-get) endpoint."
            },
            "example": 178,
            "required": true,
            "description": "The unique ID of the data structure that will be included in the data store. All data structures IDs for a given team can be retrieved from the [List data structures](/data-structures-get) endpoint."
          },
          {
            "name": "maxSizeMB",
            "schema": {
              "type": "integer",
              "description": "The maximum size of the data store (defined in MB)."
            },
            "example": 1,
            "required": true,
            "description": "The maximum size of the data store (defined in MB)."
          }
        ]
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "dataStore": {
              "id": 137,
              "name": "Customers",
              "records": "0",
              "size": "0",
              "maxSize": "1048576",
              "teamId": 212
            }
          },
          "requestBody": {
            "name": "Customers",
            "teamId": 212,
            "datastructureId": 178,
            "maxSizeMB": 1
          },
          "path": "/data-stores"
        }
      }
    },
    "data-stores-delete": {
      "endpointKey": "data-stores-delete",
      "path": "/data-stores",
      "method": "delete",
      "x-published": true,
      "tags": ["Data stores"],
      "summary": "Delete data stores",
      "description": "Deletes data stores with given IDs and returns their IDs in the response. This endpoint allows deleting one or more data stores at once.",
      "security": [
        {
          "token": ["datastores:write"]
        }
      ],
      "parameters": {
        "path": [],
        "query": [
          {
            "description": "Confirms the deletion if a data store is included in at least one scenario. Confirmation is required because the scenario will stop working without the data store. If the parameter is missing or it is set to `false` an error code is returned and the resource is not deleted.",
            "name": "confirmed",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "description": "The unique ID of the team from which the data store will be deleted.",
            "name": "teamId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "body": [
          {
            "name": "keys",
            "schema": {
              "type": "array",
              "description": "The IDs of data stores to delete. You can either use only this parameter alone or use the `all` parameter, or the `all` parameter together with the `exceptIds` parameter.",
              "items": {
                "type": "integer"
              }
            },
            "required": false,
            "description": "The IDs of data stores to delete. You can either use only this parameter alone or use the `all` parameter, or the `all` parameter together with the `exceptIds` parameter."
          },
          {
            "name": "exceptIds",
            "schema": {
              "type": "array",
              "description": "The IDs of data stores to be excluded from deleting. It can be only used together with the `all` parameter set to `true`.",
              "items": {
                "type": "integer"
              }
            },
            "required": false,
            "description": "The IDs of data stores to be excluded from deleting. It can be only used together with the `all` parameter set to `true`."
          },
          {
            "name": "all",
            "schema": {
              "type": "boolean",
              "description": "If set to `true`, all data stores will be deleted. It can be used alone or together with the `exceptIds` parameter."
            },
            "required": false,
            "description": "If set to `true`, all data stores will be deleted. It can be used alone or together with the `exceptIds` parameter."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "keys": {
                      "type": "array",
                      "description": "The IDs of data stores to delete. You can either use only this parameter alone or use the `all` parameter, or the `all` parameter together with the `exceptIds` parameter.",
                      "items": {
                        "type": "integer"
                      }
                    }
                  },
                  "required": ["ids"]
                },
                {
                  "type": "object",
                  "properties": {
                    "exceptIds": {
                      "type": "array",
                      "description": "The IDs of data stores to be excluded from deleting. It can be only used together with the `all` parameter set to `true`.",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "all": {
                      "type": "boolean",
                      "description": "If set to `true`, all data stores will be deleted. It can be used alone or together with the `exceptIds` parameter."
                    }
                  },
                  "required": ["all"]
                }
              ]
            },
            "example": {
              "ids": [137, 1399]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dataStores": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              },
              "example": {
                "dataStores": [137, 1399]
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "dataStores": [137, 1399]
          },
          "requestBody": {
            "ids": [137, 1399]
          },
          "parameters": {
            "confirmed": true,
            "teamId": 1
          },
          "path": "/data-stores"
        }
      }
    },
    "data-stores-dataStoreId-get": {
      "endpointKey": "data-stores-dataStoreId-get",
      "path": "/data-stores/{dataStoreId}",
      "method": "get",
      "x-published": true,
      "tags": ["Data stores"],
      "summary": "Get data store details",
      "description": "Retrieves details of a data store with a given ID.",
      "parameters": {
        "path": [
          {
            "name": "dataStoreId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the data store. Get the `dataStoreId` from the [List data stores](/data-stores-get) endpoint.",
            "example": 137
          }
        ],
        "query": [
          {
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "teamId",
                  "records",
                  "size",
                  "maxSize",
                  "datastructureId"
                ]
              }
            },
            "description": "Specifies the group of values to return. For example, you can retrieve only names and IDs of data stores for a team with a given ID."
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dataStore": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "records": {
                        "type": "integer"
                      },
                      "size": {
                        "type": "string"
                      },
                      "maxSize": {
                        "type": "string"
                      },
                      "teamId": {
                        "type": "integer"
                      },
                      "datastructureId": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "example": {
                "dataStore": {
                  "id": 137,
                  "name": "Customers",
                  "records": "0",
                  "size": "0",
                  "maxSize": "1048576",
                  "teamId": 212
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "dataStore": {
              "id": 137,
              "name": "Customers",
              "records": "0",
              "size": "0",
              "maxSize": "1048576",
              "teamId": 212
            }
          },
          "path": "/data-stores/137"
        }
      }
    },
    "data-stores-dataStoreId-patch": {
      "endpointKey": "data-stores-dataStoreId-patch",
      "path": "/data-stores/{dataStoreId}",
      "method": "patch",
      "x-published": true,
      "tags": ["Data stores"],
      "summary": "Update data store",
      "description": "Updates properties of a data store with a given ID in a team with a given ID by passing new values in the request body. In the response, it returns all details of the updated data store including properties that were not changed. Any property that is not provided will be left unchanged. This endpoint cannot be used to update data included in the data store - for this use the [endpoints for managing data stores data](/data-stores-dataStoreId-data-get).",
      "security": [
        {
          "token": ["datastores:write"]
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The data store name. The name must be at most 128 characters long and does not need to be unique."
                },
                "datastructureId": {
                  "type": "integer",
                  "description": "The unique ID of the data structure included in the data store. All data structures IDs for a given team can be retrieved from the [List data structures](/data-structures-get) endpoint."
                },
                "maxSizeMB": {
                  "type": "integer",
                  "description": "The maximum size of the data store (defined in MB)."
                }
              }
            },
            "example": {
              "name": "Data store 2",
              "datastructureId": 9,
              "maxSizeMB": 3
            }
          }
        }
      },
      "parameters": {
        "path": [
          {
            "name": "dataStoreId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the data store. Get the `dataStoreId` from the [List data stores](/data-stores-get) endpoint.",
            "example": 137
          }
        ],
        "query": [
          {
            "required": true,
            "description": "The unique ID of the team whose data stores will be retrieved.",
            "name": "teamId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "body": [
          {
            "name": "name",
            "schema": {
              "type": "string",
              "description": "The data store name. The name must be at most 128 characters long and does not need to be unique."
            },
            "example": "Data store 2",
            "required": false,
            "description": "The data store name. The name must be at most 128 characters long and does not need to be unique."
          },
          {
            "name": "datastructureId",
            "schema": {
              "type": "integer",
              "description": "The unique ID of the data structure included in the data store. All data structures IDs for a given team can be retrieved from the [List data structures](/data-structures-get) endpoint."
            },
            "example": 9,
            "required": false,
            "description": "The unique ID of the data structure included in the data store. All data structures IDs for a given team can be retrieved from the [List data structures](/data-structures-get) endpoint."
          },
          {
            "name": "maxSizeMB",
            "schema": {
              "type": "integer",
              "description": "The maximum size of the data store (defined in MB)."
            },
            "example": 3,
            "required": false,
            "description": "The maximum size of the data store (defined in MB)."
          }
        ]
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dataStore": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "records": {
                        "type": "integer"
                      },
                      "size": {
                        "type": "string"
                      },
                      "maxSize": {
                        "type": "string"
                      },
                      "teamId": {
                        "type": "integer"
                      },
                      "datastructureId": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "example": {
                "dataStore": {
                  "id": 137,
                  "name": "Customers",
                  "records": "0",
                  "size": "0",
                  "maxSize": "1048576",
                  "teamId": 212
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "dataStore": {
              "id": 137,
              "name": "Customers",
              "records": "0",
              "size": "0",
              "maxSize": "1048576",
              "teamId": 212
            }
          },
          "requestBody": {
            "name": "Data store 2",
            "datastructureId": 9,
            "maxSizeMB": 3
          },
          "parameters": {
            "teamId": 1
          },
          "path": "/data-stores/137"
        }
      }
    },
    "data-stores-dataStoreId-data-get": {
      "endpointKey": "data-stores-dataStoreId-data-get",
      "path": "/data-stores/{dataStoreId}/data",
      "method": "get",
      "x-published": true,
      "tags": ["Data stores > Data"],
      "summary": "List data store records",
      "description": "Retrieves a collection of all records from a data store with a given ID. Each returned record consists of the `key` (custom or automatically generated) and `data`.",
      "security": [
        {
          "token": ["datastores:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "dataStoreId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the data store. Get the `dataStoreId` from the [List data stores](/data-stores-get) endpoint.",
            "example": 137
          }
        ],
        "query": [
          {
            "default": 5,
            "maximum": 100,
            "name": "pg[limit]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The value of maximum entities to return."
          },
          {
            "name": "pg[offset]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The value of entities you want to skip before getting entities you need.",
            "default": 0
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "records": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "The unique key of the data store record. If no key is provided, it will be automatically generated."
                        },
                        "data": {
                          "type": "object",
                          "description": "The data of the data store record. The structure strictly depends on the included data structure. If no data is provided, in response the values will be set to null."
                        }
                      }
                    }
                  },
                  "spec": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "strict": {
                    "type": "boolean"
                  },
                  "count": {
                    "type": "integer"
                  },
                  "pg": {
                    "type": "object",
                    "properties": {
                      "last": {
                        "type": "string",
                        "description": "Shown only when using the `last` based pagination."
                      },
                      "showLast": {
                        "type": "boolean",
                        "description": "Shown only when using the `last` based pagination."
                      },
                      "sortBy": {
                        "type": "string"
                      },
                      "sortDir": {
                        "type": "string"
                      },
                      "limit": {
                        "type": "integer"
                      },
                      "offset": {
                        "type": "integer",
                        "description": "Shown only when using the `offset` based pagination."
                      }
                    }
                  }
                }
              },
              "example": {
                "records": [
                  {
                    "key": "8f7162828bc0",
                    "data": {
                      "price": 600
                    }
                  }
                ],
                "spec": [
                  {
                    "name": "price",
                    "label": "Price",
                    "type": "number",
                    "default": null,
                    "required": true
                  }
                ],
                "strict": false,
                "count": 2,
                "pg": {
                  "limit": 10,
                  "offset": 0
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "records": [
              {
                "key": "8f7162828bc0",
                "data": {
                  "price": 600
                }
              }
            ],
            "spec": [
              {
                "name": "price",
                "label": "Price",
                "type": "number",
                "default": null,
                "required": true
              }
            ],
            "strict": false,
            "count": 2,
            "pg": {
              "limit": 10,
              "offset": 0
            }
          },
          "path": "/data-stores/137/data"
        }
      }
    },
    "data-stores-dataStoreId-data-post": {
      "endpointKey": "data-stores-dataStoreId-data-post",
      "path": "/data-stores/{dataStoreId}/data",
      "method": "post",
      "x-published": true,
      "tags": ["Data stores > Data"],
      "summary": "Create data store record",
      "description": "Creates a new record in a data store with a given ID and returns all record details.",
      "security": [
        {
          "token": ["datastores:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "dataStoreId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the data store. Get the `dataStoreId` from the [List data stores](/data-stores-get) endpoint.",
            "example": 137
          }
        ],
        "query": [],
        "body": [
          {
            "name": "key",
            "schema": {
              "type": "string",
              "description": "The unique key of the data store record. If no key is provided, it will be automatically generated."
            },
            "example": "8f7162828bc0",
            "required": false,
            "description": "The unique key of the data store record. If no key is provided, it will be automatically generated."
          },
          {
            "name": "data",
            "schema": {
              "type": "object",
              "description": "The data of the data store record. The structure strictly depends on the included data structure. If no data is provided, in response the values will be set to null."
            },
            "example": {
              "price": 600
            },
            "required": false,
            "description": "The data of the data store record. The structure strictly depends on the included data structure. If no data is provided, in response the values will be set to null."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "The unique key of the data store record. If no key is provided, it will be automatically generated."
                },
                "data": {
                  "type": "object",
                  "description": "The data of the data store record. The structure strictly depends on the included data structure. If no data is provided, in response the values will be set to null."
                }
              }
            },
            "example": {
              "key": "8f7162828bc0",
              "data": {
                "price": 600
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The unique key of the data store record. If no key is provided, it will be automatically generated."
                  },
                  "data": {
                    "type": "object",
                    "description": "The data of the data store record. The structure strictly depends on the included data structure. If no data is provided, in response the values will be set to null."
                  }
                }
              },
              "example": {
                "key": "8f7162828bc0",
                "data": {
                  "price": 600
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "key": "8f7162828bc0",
            "data": {
              "price": 600
            }
          },
          "requestBody": {
            "key": "8f7162828bc0",
            "data": {
              "price": 600
            }
          },
          "path": "/data-stores/137/data"
        }
      }
    },
    "data-stores-dataStoreId-data-delete": {
      "endpointKey": "data-stores-dataStoreId-data-delete",
      "path": "/data-stores/{dataStoreId}/data",
      "method": "delete",
      "x-published": true,
      "tags": ["Data stores > Data"],
      "summary": "Delete data store records",
      "description": "Deletes records from the specified data store.\n\nSpecify the `keys` of the records you want to delete in the `keys` array in the request body.\n\nUse the `all` parameter in the request body to delete all records from the data store. You have to add the `confirmed` parameter in the API call query to confirm deleting the data, otherwise you get an error.\n\nWhen you are deleting all records, you can use the `exceptKeys` parameter to specify keys of the records which you want to keep.\n\nThe response contains keys of the deleted records.",
      "security": [
        {
          "token": ["datastores:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "dataStoreId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the data store. Get the `dataStoreId` from the [List data stores](/data-stores-get) endpoint.",
            "example": 137
          }
        ],
        "query": [
          {
            "name": "confirmed",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "example": true,
            "description": "Set to `true` to confirm deleting of the data store records. Otherwise, you get an error and Make won't delete the data store records.",
            "examples": {
              "delete-all": {
                "value": true
              }
            }
          }
        ],
        "body": [
          {
            "name": "keys",
            "schema": {
              "type": "array",
              "description": "The keys of data store records you want to delete. Use the `all` and `confirmed` parameters if you want to delete all records in the data store.",
              "items": {
                "type": "string"
              }
            },
            "example": ["1abd2defk", "568tyuj45"],
            "required": false,
            "description": "The keys of data store records you want to delete. Use the `all` and `confirmed` parameters if you want to delete all records in the data store."
          },
          {
            "name": "all",
            "schema": {
              "type": "boolean",
              "description": "Set to `true` to delete all records in the data store. Use the `confirmed` parameter to confirm the deletion. You can also use the `exceptKeys` parameter to specify keys of the records that you want to keep in the data store."
            },
            "required": false,
            "description": "Set to `true` to delete all records in the data store. Use the `confirmed` parameter to confirm the deletion. You can also use the `exceptKeys` parameter to specify keys of the records that you want to keep in the data store."
          },
          {
            "name": "exceptKeys",
            "schema": {
              "type": "array",
              "description": "Specify the keys of the data store records you want to keep when deleting all records from the data store.",
              "items": {
                "type": "string"
              }
            },
            "required": false,
            "description": "Specify the keys of the data store records you want to keep when deleting all records from the data store."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "keys": {
                  "type": "array",
                  "description": "The keys of data store records you want to delete. Use the `all` and `confirmed` parameters if you want to delete all records in the data store.",
                  "items": {
                    "type": "string"
                  }
                },
                "all": {
                  "type": "boolean",
                  "description": "Set to `true` to delete all records in the data store. Use the `confirmed` parameter to confirm the deletion. You can also use the `exceptKeys` parameter to specify keys of the records that you want to keep in the data store."
                },
                "exceptKeys": {
                  "type": "array",
                  "description": "Specify the keys of the data store records you want to keep when deleting all records from the data store.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "examples": {
              "delete-selected": {
                "summary": "Delete records",
                "description": "Delete records in the data store. Specify the record keys in the `keys` array in the request body.",
                "value": {
                  "keys": ["1abd2defk", "568tyuj45"]
                }
              },
              "delete-all": {
                "summary": "Delete all records",
                "description": "Deletes all records in the data store. You have to confirm the deletion with the `confirmed` parameter. You can use the `exceptKeys` parameter to specify keys of the records you want to keep.",
                "value": {
                  "all": true,
                  "exceptKeys": ["568tyuj45"]
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "keys": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "examples": {
                "delete-selected": {
                  "value": {
                    "keys": ["1abd2defk", "568tyuj45"]
                  }
                },
                "delete-all": {
                  "value": {
                    "keys": ["1abd2defk"]
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "delete-selected": {
          "summary": "Delete records",
          "response": {
            "keys": ["1abd2defk", "568tyuj45"]
          },
          "description": "Delete records in the data store. Specify the record keys in the `keys` array in the request body.",
          "requestBody": {
            "keys": ["1abd2defk", "568tyuj45"]
          },
          "parameters": {},
          "path": "/data-stores/137/data"
        },
        "delete-all": {
          "summary": "Delete all records",
          "response": {
            "keys": ["1abd2defk"]
          },
          "description": "Deletes all records in the data store. You have to confirm the deletion with the `confirmed` parameter. You can use the `exceptKeys` parameter to specify keys of the records you want to keep.",
          "requestBody": {
            "all": true,
            "exceptKeys": ["568tyuj45"]
          },
          "parameters": {
            "confirmed": true
          },
          "path": "/data-stores/137/data"
        }
      }
    },
    "data-stores-dataStoreId-data-dataStoreKeyRecord-put": {
      "endpointKey": "data-stores-dataStoreId-data-dataStoreKeyRecord-put",
      "path": "/data-stores/{dataStoreId}/data/{dataStoreKeyRecord}",
      "method": "put",
      "x-published": true,
      "tags": ["Data stores > Data"],
      "summary": "Update entire data store record",
      "description": "Updates a data store record with a given key by passing new data in the request body. It replaces the entire resource with the new values. In the response, this endpoint returns all details of the updated data.",
      "security": [
        {
          "token": ["datastores:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "dataStoreId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the data store. Get the `dataStoreId` from the [List data stores](/data-stores-get) endpoint.",
            "example": 137
          },
          {
            "name": "dataStoreRecordKey",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The key of the data store record. It can be retrieved from the [List data store records](/data-stores-dataStoreId-data-get) endpoint.",
            "example": "ecc4819b2260"
          }
        ],
        "query": [],
        "body": []
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "The data is different for each data store so there are no predefined body properties to use. Please see the request example for more details."
            },
            "example": {
              "price": 600
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The unique key of the data store record. If no key is provided, it will be automatically generated."
                  },
                  "data": {
                    "type": "object",
                    "description": "The data of the data store record. The structure strictly depends on the included data structure. If no data is provided, in response the values will be set to null."
                  }
                }
              },
              "example": {
                "key": "8f7162828bc0",
                "data": {
                  "price": 600
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "key": "8f7162828bc0",
            "data": {
              "price": 600
            }
          },
          "requestBody": {
            "price": 600
          },
          "path": "/data-stores/137/data/undefined"
        }
      }
    },
    "data-stores-dataStoreId-data-dataStoreKeyRecord-patch": {
      "endpointKey": "data-stores-dataStoreId-data-dataStoreKeyRecord-patch",
      "path": "/data-stores/{dataStoreId}/data/{dataStoreKeyRecord}",
      "method": "patch",
      "x-published": true,
      "tags": ["Data stores > Data"],
      "summary": "Update data store record details",
      "description": "Updates a data store record with a given key by passing new data in the request body. Any property that is not provided will be left unchanged. In the response, it returns all details of the updated data including properties that were not changed.",
      "security": [
        {
          "token": ["datastores:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "dataStoreId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the data store. Get the `dataStoreId` from the [List data stores](/data-stores-get) endpoint.",
            "example": 137
          },
          {
            "name": "dataStoreRecordKey",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The key of the data store record. It can be retrieved from the [List data store records](/data-stores-dataStoreId-data-get) endpoint.",
            "example": "ecc4819b2260"
          }
        ],
        "query": [],
        "body": []
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "The data is different for each data store so there are no predefined body properties to use. Please see the request example for more details."
            },
            "example": {
              "price": 600
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The unique key of the data store record. If no key is provided, it will be automatically generated."
                  },
                  "data": {
                    "type": "object",
                    "description": "The data of the data store record. The structure strictly depends on the included data structure. If no data is provided, in response the values will be set to null."
                  }
                }
              },
              "example": {
                "key": "8f7162828bc0",
                "data": {
                  "price": 600
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "key": "8f7162828bc0",
            "data": {
              "price": 600
            }
          },
          "requestBody": {
            "price": 600
          },
          "path": "/data-stores/137/data/undefined"
        }
      }
    },
    "data-structures-get": {
      "endpointKey": "data-structures-get",
      "path": "/data-structures",
      "method": "get",
      "x-published": true,
      "tags": ["Data structures"],
      "summary": "List data structures",
      "description": "Retrieves a collection of all data structures for a team with a given ID. Returned data structures are sorted by name in ascending order.",
      "security": [
        {
          "token": ["udts:read"]
        }
      ],
      "parameters": {
        "path": [],
        "query": [
          {
            "name": "teamId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The unique ID of the team whose data structures will be retrieved.",
            "example": 123
          },
          {
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["id", "name", "teamId", "spec", "strict"]
              }
            },
            "description": "Specifies the group of values to return. For example, you can retrieve only names of data structures for a team with a given ID."
          },
          {
            "name": "pg[sortBy]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["name"]
            },
            "description": "The value that will be used to sort returned entities by.",
            "default": "name"
          },
          {
            "name": "pg[offset]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The value of entities you want to skip before getting entities you need.",
            "default": 0
          },
          {
            "name": "pg[sortDir]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "The sorting order. It accepts the ascending and descending direction specifiers.",
            "default": "asc"
          },
          {
            "name": "pg[limit]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The maximum entities to return.",
            "default": 10000,
            "maximum": 10000
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dataStructures": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "teamId": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 128
                        },
                        "strict": {
                          "type": "boolean"
                        },
                        "spec": {
                          "type": "array",
                          "items": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": ["boolean"]
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "label": {
                                    "type": "string"
                                  },
                                  "required": {
                                    "type": "boolean"
                                  },
                                  "default": {
                                    "type": "boolean"
                                  }
                                },
                                "required": ["name", "type"]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": ["text"]
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "label": {
                                    "type": "string"
                                  },
                                  "required": {
                                    "type": "boolean"
                                  },
                                  "default": {
                                    "type": "string"
                                  },
                                  "multiline": {
                                    "type": "boolean"
                                  }
                                },
                                "required": ["name", "type"]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": ["number"]
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "label": {
                                    "type": "string"
                                  },
                                  "required": {
                                    "type": "boolean"
                                  },
                                  "default": {
                                    "type": "number"
                                  }
                                },
                                "required": ["name", "type"]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": ["date"]
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "label": {
                                    "type": "string"
                                  }
                                },
                                "required": ["name", "type"]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": ["buffer"]
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "label": {
                                    "type": "string"
                                  },
                                  "required": {
                                    "type": "boolean"
                                  },
                                  "codepage": {
                                    "type": "string",
                                    "enum": ["binary", "utf8"]
                                  }
                                },
                                "required": ["name", "type"]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": ["collection"]
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "label": {
                                    "type": "string"
                                  },
                                  "spec": {
                                    "type": "array",
                                    "items": {
                                      "type": "object"
                                    }
                                  },
                                  "sequence": {
                                    "type": "boolean"
                                  }
                                },
                                "required": ["name", "type"]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": ["array"]
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "label": {
                                    "type": "string"
                                  },
                                  "spec": {
                                    "type": "object"
                                  },
                                  "sequence": {
                                    "type": "boolean"
                                  }
                                },
                                "required": ["name", "type"]
                              }
                            ]
                          }
                        }
                      },
                      "required": ["id", "teamId", "name", "strict", "spec"]
                    }
                  },
                  "pg": {
                    "type": "object",
                    "properties": {
                      "last": {
                        "type": "string"
                      },
                      "showLast": {
                        "type": "boolean"
                      },
                      "sortBy": {
                        "type": "string"
                      },
                      "sortDir": {
                        "type": "string"
                      },
                      "limit": {
                        "type": "integer"
                      },
                      "offset": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "examples": {
                "default": {
                  "summary": "Empty data structure",
                  "description": "Returns data structures with empty specification",
                  "value": {
                    "dataStructures": [
                      {
                        "id": 9,
                        "name": "Data structure 1",
                        "teamId": 1
                      },
                      {
                        "id": 1,
                        "name": "Data structure 2",
                        "teamId": 1
                      }
                    ],
                    "pg": {
                      "sortBy": "name",
                      "sortDir": "asc",
                      "limit": 10000,
                      "offset": 0
                    }
                  }
                },
                "all": {
                  "summary": "Data structure with spec",
                  "description": "Returns data structure with full specification",
                  "value": {
                    "dataStructures": [
                      {
                        "id": 9,
                        "name": "Data structure 1",
                        "teamId": 1,
                        "spec": [
                          {
                            "type": "text",
                            "name": "txt",
                            "label": "Text field",
                            "default": "default string",
                            "required": true
                          },
                          {
                            "type": "number",
                            "name": "num",
                            "label": "Number field",
                            "default": "1,",
                            "required": false
                          }
                        ],
                        "strict": true
                      },
                      {
                        "id": 1,
                        "name": "Data structure 2",
                        "teamId": 1,
                        "spec": [
                          {
                            "type": "date",
                            "name": "dt",
                            "label": "Date field"
                          }
                        ],
                        "strict": false
                      }
                    ],
                    "pg": {
                      "sortBy": "name",
                      "sortDir": "asc",
                      "limit": 10000,
                      "offset": 0
                    }
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Empty data structure",
          "response": {
            "dataStructures": [
              {
                "id": 9,
                "name": "Data structure 1",
                "teamId": 1
              },
              {
                "id": 1,
                "name": "Data structure 2",
                "teamId": 1
              }
            ],
            "pg": {
              "sortBy": "name",
              "sortDir": "asc",
              "limit": 10000,
              "offset": 0
            }
          },
          "description": "Returns data structures with empty specification",
          "parameters": {
            "teamId": 123
          },
          "path": "/data-structures"
        },
        "all": {
          "summary": "Data structure with spec",
          "response": {
            "dataStructures": [
              {
                "id": 9,
                "name": "Data structure 1",
                "teamId": 1,
                "spec": [
                  {
                    "type": "text",
                    "name": "txt",
                    "label": "Text field",
                    "default": "default string",
                    "required": true
                  },
                  {
                    "type": "number",
                    "name": "num",
                    "label": "Number field",
                    "default": "1,",
                    "required": false
                  }
                ],
                "strict": true
              },
              {
                "id": 1,
                "name": "Data structure 2",
                "teamId": 1,
                "spec": [
                  {
                    "type": "date",
                    "name": "dt",
                    "label": "Date field"
                  }
                ],
                "strict": false
              }
            ],
            "pg": {
              "sortBy": "name",
              "sortDir": "asc",
              "limit": 10000,
              "offset": 0
            }
          },
          "description": "Returns data structure with full specification",
          "parameters": {
            "teamId": 123
          },
          "path": "/data-structures"
        }
      }
    },
    "data-structures-post": {
      "endpointKey": "data-structures-post",
      "path": "/data-structures",
      "method": "post",
      "x-published": true,
      "tags": ["Data structures"],
      "summary": "Create data structure",
      "description": "Creates a new data structure with data passed in the request body. In the response, it returns all details of the created data structure including its full specification.",
      "security": [
        {
          "token": ["udts:write"]
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "teamId": {
                  "type": "integer",
                  "description": "The unique ID of the team in which the data structure will be created."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the data structure. The name must be at most 128 characters long and does not need to be unique.",
                  "minLength": 1,
                  "maxLength": 128
                },
                "strict": {
                  "type": "boolean",
                  "description": "If this parameter is set to `true`, the data structure will be compared to the structure of the payload and if the payload contains extra items not specified in the data structure, the payload will be rejected.",
                  "example": true
                },
                "spec": {
                  "type": "array",
                  "description": "Defines the data structure columns.",
                  "items": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["boolean"]
                          },
                          "name": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          },
                          "required": {
                            "type": "boolean"
                          },
                          "default": {
                            "type": "boolean"
                          }
                        },
                        "required": ["name", "type"]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["text"]
                          },
                          "name": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          },
                          "required": {
                            "type": "boolean"
                          },
                          "default": {
                            "type": "string"
                          },
                          "multiline": {
                            "type": "boolean"
                          }
                        },
                        "required": ["name", "type"]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["number"]
                          },
                          "name": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          },
                          "required": {
                            "type": "boolean"
                          },
                          "default": {
                            "type": "number"
                          }
                        },
                        "required": ["name", "type"]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["date"]
                          },
                          "name": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          }
                        },
                        "required": ["name", "type"]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["buffer"]
                          },
                          "name": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          },
                          "required": {
                            "type": "boolean"
                          },
                          "codepage": {
                            "type": "string",
                            "enum": ["binary", "utf8"]
                          }
                        },
                        "required": ["name", "type"]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["collection"]
                          },
                          "name": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          },
                          "spec": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "sequence": {
                            "type": "boolean"
                          }
                        },
                        "required": ["name", "type"]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["array"]
                          },
                          "name": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          },
                          "spec": {
                            "type": "object"
                          },
                          "sequence": {
                            "type": "boolean"
                          }
                        },
                        "required": ["name", "type"]
                      }
                    ]
                  }
                }
              },
              "required": ["teamId", "name", "strict", "spec"]
            },
            "example": {
              "teamId": 1,
              "name": "Data structure 1",
              "strict": true,
              "spec": [
                {
                  "type": "text",
                  "name": "txt",
                  "label": "Text field",
                  "default": "default string",
                  "required": true
                },
                {
                  "type": "number",
                  "name": "num",
                  "label": "Number field",
                  "default": "1,",
                  "required": false
                }
              ]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dataStructure": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "teamId": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 128
                      },
                      "strict": {
                        "type": "boolean"
                      },
                      "spec": {
                        "type": "array",
                        "items": {
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["boolean"]
                                },
                                "name": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                },
                                "required": {
                                  "type": "boolean"
                                },
                                "default": {
                                  "type": "boolean"
                                }
                              },
                              "required": ["name", "type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["text"]
                                },
                                "name": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                },
                                "required": {
                                  "type": "boolean"
                                },
                                "default": {
                                  "type": "string"
                                },
                                "multiline": {
                                  "type": "boolean"
                                }
                              },
                              "required": ["name", "type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["number"]
                                },
                                "name": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                },
                                "required": {
                                  "type": "boolean"
                                },
                                "default": {
                                  "type": "number"
                                }
                              },
                              "required": ["name", "type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["date"]
                                },
                                "name": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                }
                              },
                              "required": ["name", "type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["buffer"]
                                },
                                "name": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                },
                                "required": {
                                  "type": "boolean"
                                },
                                "codepage": {
                                  "type": "string",
                                  "enum": ["binary", "utf8"]
                                }
                              },
                              "required": ["name", "type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["collection"]
                                },
                                "name": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                },
                                "spec": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "sequence": {
                                  "type": "boolean"
                                }
                              },
                              "required": ["name", "type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["array"]
                                },
                                "name": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                },
                                "spec": {
                                  "type": "object"
                                },
                                "sequence": {
                                  "type": "boolean"
                                }
                              },
                              "required": ["name", "type"]
                            }
                          ]
                        }
                      }
                    },
                    "required": ["id", "teamId", "name", "strict", "spec"]
                  }
                }
              },
              "example": {
                "dataStructure": {
                  "id": 9,
                  "name": "Data structure 1",
                  "teamId": 1,
                  "spec": [
                    {
                      "type": "text",
                      "name": "txt",
                      "label": "Text field",
                      "default": "default string",
                      "required": true
                    },
                    {
                      "type": "number",
                      "name": "num",
                      "label": "Number field",
                      "default": "1,",
                      "required": false
                    }
                  ],
                  "strict": true
                }
              }
            }
          }
        }
      },
      "parameters": {
        "body": [
          {
            "name": "teamId",
            "schema": {
              "type": "integer",
              "description": "The unique ID of the team in which the data structure will be created."
            },
            "example": 1,
            "required": true,
            "description": "The unique ID of the team in which the data structure will be created."
          },
          {
            "name": "name",
            "schema": {
              "type": "string",
              "description": "The name of the data structure. The name must be at most 128 characters long and does not need to be unique.",
              "minLength": 1,
              "maxLength": 128
            },
            "example": "Data structure 1",
            "required": true,
            "description": "The name of the data structure. The name must be at most 128 characters long and does not need to be unique."
          },
          {
            "name": "strict",
            "schema": {
              "type": "boolean",
              "description": "If this parameter is set to `true`, the data structure will be compared to the structure of the payload and if the payload contains extra items not specified in the data structure, the payload will be rejected.",
              "example": true
            },
            "example": true,
            "required": true,
            "description": "If this parameter is set to `true`, the data structure will be compared to the structure of the payload and if the payload contains extra items not specified in the data structure, the payload will be rejected."
          },
          {
            "name": "spec",
            "schema": {
              "type": "array",
              "description": "Defines the data structure columns.",
              "items": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["boolean"]
                      },
                      "name": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      },
                      "required": {
                        "type": "boolean"
                      },
                      "default": {
                        "type": "boolean"
                      }
                    },
                    "required": ["name", "type"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["text"]
                      },
                      "name": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      },
                      "required": {
                        "type": "boolean"
                      },
                      "default": {
                        "type": "string"
                      },
                      "multiline": {
                        "type": "boolean"
                      }
                    },
                    "required": ["name", "type"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["number"]
                      },
                      "name": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      },
                      "required": {
                        "type": "boolean"
                      },
                      "default": {
                        "type": "number"
                      }
                    },
                    "required": ["name", "type"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["date"]
                      },
                      "name": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      }
                    },
                    "required": ["name", "type"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["buffer"]
                      },
                      "name": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      },
                      "required": {
                        "type": "boolean"
                      },
                      "codepage": {
                        "type": "string",
                        "enum": ["binary", "utf8"]
                      }
                    },
                    "required": ["name", "type"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["collection"]
                      },
                      "name": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      },
                      "spec": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "sequence": {
                        "type": "boolean"
                      }
                    },
                    "required": ["name", "type"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["array"]
                      },
                      "name": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      },
                      "spec": {
                        "type": "object"
                      },
                      "sequence": {
                        "type": "boolean"
                      }
                    },
                    "required": ["name", "type"]
                  }
                ]
              }
            },
            "example": [
              {
                "type": "text",
                "name": "txt",
                "label": "Text field",
                "default": "default string",
                "required": true
              },
              {
                "type": "number",
                "name": "num",
                "label": "Number field",
                "default": "1,",
                "required": false
              }
            ],
            "required": true,
            "description": "Defines the data structure columns."
          }
        ]
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "dataStructure": {
              "id": 9,
              "name": "Data structure 1",
              "teamId": 1,
              "spec": [
                {
                  "type": "text",
                  "name": "txt",
                  "label": "Text field",
                  "default": "default string",
                  "required": true
                },
                {
                  "type": "number",
                  "name": "num",
                  "label": "Number field",
                  "default": "1,",
                  "required": false
                }
              ],
              "strict": true
            }
          },
          "requestBody": {
            "teamId": 1,
            "name": "Data structure 1",
            "strict": true,
            "spec": [
              {
                "type": "text",
                "name": "txt",
                "label": "Text field",
                "default": "default string",
                "required": true
              },
              {
                "type": "number",
                "name": "num",
                "label": "Number field",
                "default": "1,",
                "required": false
              }
            ]
          },
          "path": "/data-structures"
        }
      }
    },
    "data-structures-dataStructureId-patch": {
      "endpointKey": "data-structures-dataStructureId-patch",
      "path": "/data-structures/{dataStructureId}",
      "method": "patch",
      "x-published": true,
      "tags": ["Data structures"],
      "summary": "Update data structure",
      "description": "Updates a data structure with a given ID by passing new values in the request body. Any property that is not provided will be left unchanged. In the response, it returns all details of the updated data structure including properties that were not changed.",
      "security": [
        {
          "token": ["udts:write"]
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the data structure. The name must be at most 128 characters long and does not need to be unique.",
                  "minLength": 1,
                  "maxLength": 128
                },
                "strict": {
                  "type": "boolean",
                  "description": "If this parameter is set to `true`, the data structure will be compared to the structure of the payload and if the payload contains extra items not specified in the data structure, the payload will be rejected.",
                  "example": false
                },
                "spec": {
                  "type": "array",
                  "description": "Defines the data structure columns.",
                  "items": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["boolean"]
                          },
                          "name": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          },
                          "required": {
                            "type": "boolean"
                          },
                          "default": {
                            "type": "boolean"
                          }
                        },
                        "required": ["name", "type"]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["text"]
                          },
                          "name": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          },
                          "required": {
                            "type": "boolean"
                          },
                          "default": {
                            "type": "string"
                          },
                          "multiline": {
                            "type": "boolean"
                          }
                        },
                        "required": ["name", "type"]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["number"]
                          },
                          "name": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          },
                          "required": {
                            "type": "boolean"
                          },
                          "default": {
                            "type": "number"
                          }
                        },
                        "required": ["name", "type"]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["date"]
                          },
                          "name": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          }
                        },
                        "required": ["name", "type"]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["buffer"]
                          },
                          "name": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          },
                          "required": {
                            "type": "boolean"
                          },
                          "codepage": {
                            "type": "string",
                            "enum": ["binary", "utf8"]
                          }
                        },
                        "required": ["name", "type"]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["collection"]
                          },
                          "name": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          },
                          "spec": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "sequence": {
                            "type": "boolean"
                          }
                        },
                        "required": ["name", "type"]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["array"]
                          },
                          "name": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          },
                          "spec": {
                            "type": "object"
                          },
                          "sequence": {
                            "type": "boolean"
                          }
                        },
                        "required": ["name", "type"]
                      }
                    ]
                  }
                }
              }
            },
            "example": {
              "name": "Data structure 1",
              "spec": [
                {
                  "type": "text",
                  "name": "txt",
                  "label": "Text field",
                  "default": "default string",
                  "required": true
                },
                {
                  "type": "number",
                  "name": "num",
                  "label": "Number field",
                  "default": "2,",
                  "required": false
                }
              ]
            }
          }
        }
      },
      "parameters": {
        "path": [
          {
            "name": "dataStructureId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The data structure ID. Get the `dataStructureId` with the [list data structures](/data-structures-get) endpoint.",
            "example": 1459
          }
        ],
        "query": [],
        "body": [
          {
            "name": "name",
            "schema": {
              "type": "string",
              "description": "The name of the data structure. The name must be at most 128 characters long and does not need to be unique.",
              "minLength": 1,
              "maxLength": 128
            },
            "example": "Data structure 1",
            "required": false,
            "description": "The name of the data structure. The name must be at most 128 characters long and does not need to be unique."
          },
          {
            "name": "strict",
            "schema": {
              "type": "boolean",
              "description": "If this parameter is set to `true`, the data structure will be compared to the structure of the payload and if the payload contains extra items not specified in the data structure, the payload will be rejected.",
              "example": false
            },
            "required": false,
            "description": "If this parameter is set to `true`, the data structure will be compared to the structure of the payload and if the payload contains extra items not specified in the data structure, the payload will be rejected."
          },
          {
            "name": "spec",
            "schema": {
              "type": "array",
              "description": "Defines the data structure columns.",
              "items": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["boolean"]
                      },
                      "name": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      },
                      "required": {
                        "type": "boolean"
                      },
                      "default": {
                        "type": "boolean"
                      }
                    },
                    "required": ["name", "type"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["text"]
                      },
                      "name": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      },
                      "required": {
                        "type": "boolean"
                      },
                      "default": {
                        "type": "string"
                      },
                      "multiline": {
                        "type": "boolean"
                      }
                    },
                    "required": ["name", "type"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["number"]
                      },
                      "name": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      },
                      "required": {
                        "type": "boolean"
                      },
                      "default": {
                        "type": "number"
                      }
                    },
                    "required": ["name", "type"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["date"]
                      },
                      "name": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      }
                    },
                    "required": ["name", "type"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["buffer"]
                      },
                      "name": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      },
                      "required": {
                        "type": "boolean"
                      },
                      "codepage": {
                        "type": "string",
                        "enum": ["binary", "utf8"]
                      }
                    },
                    "required": ["name", "type"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["collection"]
                      },
                      "name": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      },
                      "spec": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "sequence": {
                        "type": "boolean"
                      }
                    },
                    "required": ["name", "type"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["array"]
                      },
                      "name": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      },
                      "spec": {
                        "type": "object"
                      },
                      "sequence": {
                        "type": "boolean"
                      }
                    },
                    "required": ["name", "type"]
                  }
                ]
              }
            },
            "example": [
              {
                "type": "text",
                "name": "txt",
                "label": "Text field",
                "default": "default string",
                "required": true
              },
              {
                "type": "number",
                "name": "num",
                "label": "Number field",
                "default": "2,",
                "required": false
              }
            ],
            "required": false,
            "description": "Defines the data structure columns."
          }
        ]
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dataStructure": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "teamId": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 128
                      },
                      "strict": {
                        "type": "boolean"
                      },
                      "spec": {
                        "type": "array",
                        "items": {
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["boolean"]
                                },
                                "name": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                },
                                "required": {
                                  "type": "boolean"
                                },
                                "default": {
                                  "type": "boolean"
                                }
                              },
                              "required": ["name", "type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["text"]
                                },
                                "name": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                },
                                "required": {
                                  "type": "boolean"
                                },
                                "default": {
                                  "type": "string"
                                },
                                "multiline": {
                                  "type": "boolean"
                                }
                              },
                              "required": ["name", "type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["number"]
                                },
                                "name": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                },
                                "required": {
                                  "type": "boolean"
                                },
                                "default": {
                                  "type": "number"
                                }
                              },
                              "required": ["name", "type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["date"]
                                },
                                "name": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                }
                              },
                              "required": ["name", "type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["buffer"]
                                },
                                "name": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                },
                                "required": {
                                  "type": "boolean"
                                },
                                "codepage": {
                                  "type": "string",
                                  "enum": ["binary", "utf8"]
                                }
                              },
                              "required": ["name", "type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["collection"]
                                },
                                "name": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                },
                                "spec": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "sequence": {
                                  "type": "boolean"
                                }
                              },
                              "required": ["name", "type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["array"]
                                },
                                "name": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                },
                                "spec": {
                                  "type": "object"
                                },
                                "sequence": {
                                  "type": "boolean"
                                }
                              },
                              "required": ["name", "type"]
                            }
                          ]
                        }
                      }
                    },
                    "required": ["id", "teamId", "name", "strict", "spec"]
                  }
                }
              },
              "example": {
                "dataStructure": {
                  "id": 9,
                  "name": "Data structure 1",
                  "teamId": 1,
                  "spec": [
                    {
                      "type": "text",
                      "name": "txt",
                      "label": "Text field",
                      "default": "default string",
                      "required": true
                    },
                    {
                      "type": "number",
                      "name": "num",
                      "label": "Number field",
                      "default": "2,",
                      "required": false
                    }
                  ],
                  "strict": true
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "dataStructure": {
              "id": 9,
              "name": "Data structure 1",
              "teamId": 1,
              "spec": [
                {
                  "type": "text",
                  "name": "txt",
                  "label": "Text field",
                  "default": "default string",
                  "required": true
                },
                {
                  "type": "number",
                  "name": "num",
                  "label": "Number field",
                  "default": "2,",
                  "required": false
                }
              ],
              "strict": true
            }
          },
          "requestBody": {
            "name": "Data structure 1",
            "spec": [
              {
                "type": "text",
                "name": "txt",
                "label": "Text field",
                "default": "default string",
                "required": true
              },
              {
                "type": "number",
                "name": "num",
                "label": "Number field",
                "default": "2,",
                "required": false
              }
            ]
          },
          "path": "/data-structures/1459"
        }
      }
    },
    "data-structures-dataStructureId-delete": {
      "endpointKey": "data-structures-dataStructureId-delete",
      "path": "/data-structures/{dataStructureId}",
      "method": "delete",
      "x-published": true,
      "tags": ["Data structures"],
      "summary": "Delete data structure",
      "description": "Deletes a data structure with a given ID and returns the ID in the response.",
      "security": [
        {
          "token": ["udts:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "dataStructureId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The data structure ID. Get the `dataStructureId` with the [list data structures](/data-structures-get) endpoint.",
            "example": 1459
          }
        ],
        "query": [
          {
            "name": "confirmed",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Confirms the deletion if a data structure is included in at least one scenario. Confirmation is required because the scenario will stop working without the data structure. If the parameter is missing or it is set to `false` an error code is returned and the resource is not deleted.",
            "example": true
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dataStructure": {
                    "type": "integer"
                  }
                }
              },
              "example": {
                "dataStructure": 1
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "dataStructure": 1
          },
          "parameters": {
            "confirmed": true
          },
          "path": "/data-structures/1459"
        }
      }
    },
    "data-structures-dataStructureId-clone-post": {
      "endpointKey": "data-structures-dataStructureId-clone-post",
      "path": "/data-structures/{dataStructureId}/clone",
      "method": "post",
      "x-published": true,
      "tags": ["Data structures"],
      "summary": "Clone data structure",
      "description": "Clones the specified data structure. Use the `targetTeamId` to clone the data structure to the specified team.\n\nThe response contains all details of the data structure clone with data structure full specification.",
      "security": [
        {
          "token": ["udts:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "dataStructureId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The data structure ID. Get the `dataStructureId` with the [list data structures](/data-structures-get) endpoint.",
            "example": 1459
          }
        ],
        "query": [],
        "body": [
          {
            "name": "name",
            "schema": {
              "type": "string",
              "description": "The name of the data structure clone. The maximum length of the name is 128 characters.",
              "minLength": 1,
              "maxLength": 128
            },
            "example": "Cloned data structure",
            "required": true,
            "description": "The name of the data structure clone. The maximum length of the name is 128 characters."
          },
          {
            "name": "targetTeamId",
            "schema": {
              "type": "integer",
              "description": "The ID of the team that should use the data structure clone. If you don't specify the `targetTeamId` Make clones the data structure in the original team."
            },
            "example": 22,
            "required": false,
            "description": "The ID of the team that should use the data structure clone. If you don't specify the `targetTeamId` Make clones the data structure in the original team."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the data structure clone. The maximum length of the name is 128 characters.",
                  "minLength": 1,
                  "maxLength": 128
                },
                "targetTeamId": {
                  "type": "integer",
                  "description": "The ID of the team that should use the data structure clone. If you don't specify the `targetTeamId` Make clones the data structure in the original team."
                }
              },
              "required": ["name"]
            },
            "example": {
              "name": "Cloned data structure",
              "targetTeamId": 22
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dataStructure": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "teamId": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 128
                      },
                      "strict": {
                        "type": "boolean"
                      },
                      "spec": {
                        "type": "array",
                        "items": {
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["boolean"]
                                },
                                "name": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                },
                                "required": {
                                  "type": "boolean"
                                },
                                "default": {
                                  "type": "boolean"
                                }
                              },
                              "required": ["name", "type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["text"]
                                },
                                "name": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                },
                                "required": {
                                  "type": "boolean"
                                },
                                "default": {
                                  "type": "string"
                                },
                                "multiline": {
                                  "type": "boolean"
                                }
                              },
                              "required": ["name", "type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["number"]
                                },
                                "name": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                },
                                "required": {
                                  "type": "boolean"
                                },
                                "default": {
                                  "type": "number"
                                }
                              },
                              "required": ["name", "type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["date"]
                                },
                                "name": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                }
                              },
                              "required": ["name", "type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["buffer"]
                                },
                                "name": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                },
                                "required": {
                                  "type": "boolean"
                                },
                                "codepage": {
                                  "type": "string",
                                  "enum": ["binary", "utf8"]
                                }
                              },
                              "required": ["name", "type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["collection"]
                                },
                                "name": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                },
                                "spec": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "sequence": {
                                  "type": "boolean"
                                }
                              },
                              "required": ["name", "type"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["array"]
                                },
                                "name": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                },
                                "spec": {
                                  "type": "object"
                                },
                                "sequence": {
                                  "type": "boolean"
                                }
                              },
                              "required": ["name", "type"]
                            }
                          ]
                        }
                      }
                    },
                    "required": ["id", "teamId", "name", "strict", "spec"]
                  },
                  "differentTeam": {
                    "type": "boolean"
                  }
                }
              },
              "example": {
                "dataStructure": {
                  "id": 2547,
                  "name": "Cloned data structure",
                  "teamId": 22,
                  "spec": [
                    {
                      "type": "text",
                      "name": "txt",
                      "label": "Text field",
                      "default": "default string",
                      "required": true
                    },
                    {
                      "type": "number",
                      "name": "num",
                      "label": "Number field",
                      "default": "1,",
                      "required": false
                    }
                  ],
                  "strict": true
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "dataStructure": {
              "id": 2547,
              "name": "Cloned data structure",
              "teamId": 22,
              "spec": [
                {
                  "type": "text",
                  "name": "txt",
                  "label": "Text field",
                  "default": "default string",
                  "required": true
                },
                {
                  "type": "number",
                  "name": "num",
                  "label": "Number field",
                  "default": "1,",
                  "required": false
                }
              ],
              "strict": true
            }
          },
          "requestBody": {
            "name": "Cloned data structure",
            "targetTeamId": 22
          },
          "path": "/data-structures/1459/clone"
        }
      }
    },
    "dlqs-get": {
      "endpointKey": "dlqs-get",
      "path": "/dlqs",
      "method": "get",
      "x-published": true,
      "tags": ["Incomplete executions"],
      "summary": "List scenario incomplete executions",
      "description": "Retrieves the list of incomplete executions of the specified scenario.",
      "security": [
        {
          "token": ["dlqs:read"]
        }
      ],
      "parameters": {
        "path": [],
        "query": [
          {
            "name": "scenarioId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "example": 4,
            "description": "The ID value of the scenario. Use the API call `GET /scenarios` to get the ID of the scenario. If your scenario is placed in a folder, use the API call `GET /scenarios-folders?teamId={teamId}` first."
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dlqs": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        },
                        "created": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "size": {
                          "type": "integer"
                        },
                        "resolved": {
                          "type": "boolean"
                        },
                        "retry": {
                          "type": "boolean"
                        },
                        "attempts": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "dlqs": [
                  {
                    "id": "ada87173334b44d1907270064edbd7dd",
                    "reason": "IP address is not valid.",
                    "created": "2019-11-04T10:52:57.260Z",
                    "size": 5,
                    "resolved": false,
                    "retry": true,
                    "attempts": 1
                  },
                  {
                    "id": "c29c4bf027c74bfc848e1803bf764447",
                    "reason": "IP address is not valid.",
                    "created": "2019-11-04T10:52:12.276Z",
                    "size": 5,
                    "resolved": false,
                    "retry": true,
                    "attempts": 0
                  }
                ]
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "dlqs": [
              {
                "id": "ada87173334b44d1907270064edbd7dd",
                "reason": "IP address is not valid.",
                "created": "2019-11-04T10:52:57.260Z",
                "size": 5,
                "resolved": false,
                "retry": true,
                "attempts": 1
              },
              {
                "id": "c29c4bf027c74bfc848e1803bf764447",
                "reason": "IP address is not valid.",
                "created": "2019-11-04T10:52:12.276Z",
                "size": 5,
                "resolved": false,
                "retry": true,
                "attempts": 0
              }
            ]
          },
          "parameters": {
            "scenarioId": 4
          },
          "path": "/dlqs"
        }
      }
    },
    "dlqs-delete": {
      "endpointKey": "dlqs-delete",
      "path": "/dlqs",
      "method": "delete",
      "x-published": true,
      "tags": ["Incomplete executions"],
      "summary": "Delete scenario incomplete executions",
      "description": "Deletes incomplete executions of the specified scenario. Specify the incomplete execution ID values in the `ids` array in the request body to delete the specified incomplete executions.\n\nYou can set the `\"all\": true` pair to delete all incomplete executions of the specified scenario. If you use the `\"all\": true` parameter, you have to specify the `confirmed=true` query parameter to confirm the deletion. Otherwise, the API call returns the error IM004 (406).\n \nAdd the `exceptIds` array to the request body to specify items you don't want to delete.\n\nYou get an error if you try to delete incomplete executions which are being processed. The rest of the specified items is still deleted.",
      "security": [
        {
          "token": ["dlqs:write"]
        }
      ],
      "parameters": {
        "path": [],
        "query": [
          {
            "name": "scenarioId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": 4,
            "required": true,
            "description": "The ID value of the scenario. Use the API call `GET /scenarios` to get the ID of the scenario. If your scenario is placed in a folder, use the API call `GET /scenarios-folders?teamId={teamId}` first."
          },
          {
            "name": "confirmed",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "example": "true",
            "description": "Set to `true` to confirm deleting the incomplete executions. Otherwise the API call fails with the error IM004 (406)."
          }
        ],
        "body": [
          {
            "name": "ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The ID values of the scenario incomplete executions that you want to delete. Use the API call `GET /dlqs/?scenarioId={scenarioId}` to get the ID values of the webhook processing queue items."
            },
            "example": [
              "85354fed3c804ec3a137b9ceb9dc9256",
              "3b8badf2afd7447eb4340c24d1706b83"
            ],
            "required": false,
            "description": "The ID values of the scenario incomplete executions that you want to delete. Use the API call `GET /dlqs/?scenarioId={scenarioId}` to get the ID values of the webhook processing queue items."
          },
          {
            "name": "exceptIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "If you are deleting all of the incomplete executions with the `all:true` parameter, you can specify the ID values of the incomplete executions that you want to keep. Use the API call `GET /dlqs/?scenarioId={scenarioId}` to get the ID values of the incomplete executions."
            },
            "example": [],
            "required": false,
            "description": "If you are deleting all of the incomplete executions with the `all:true` parameter, you can specify the ID values of the incomplete executions that you want to keep. Use the API call `GET /dlqs/?scenarioId={scenarioId}` to get the ID values of the incomplete executions."
          },
          {
            "name": "all",
            "schema": {
              "type": "boolean",
              "description": "Set to `true` to delete all incomplete executions of the specified scenario."
            },
            "example": false,
            "required": false,
            "description": "Set to `true` to delete all incomplete executions of the specified scenario."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The ID values of the scenario incomplete executions that you want to delete. Use the API call `GET /dlqs/?scenarioId={scenarioId}` to get the ID values of the webhook processing queue items."
                },
                "exceptIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "If you are deleting all of the incomplete executions with the `all:true` parameter, you can specify the ID values of the incomplete executions that you want to keep. Use the API call `GET /dlqs/?scenarioId={scenarioId}` to get the ID values of the incomplete executions."
                },
                "all": {
                  "type": "boolean",
                  "description": "Set to `true` to delete all incomplete executions of the specified scenario."
                }
              }
            },
            "examples": {
              "delete": {
                "summary": "Delete incomplete executions",
                "description": "Delete incomplete executions of the specified scenario.",
                "value": {
                  "ids": [
                    "85354fed3c804ec3a137b9ceb9dc9256",
                    "3b8badf2afd7447eb4340c24d1706b83"
                  ],
                  "exceptIds": [],
                  "all": false
                }
              },
              "delete-with-error": {
                "summary": "Delete error",
                "description": "You get the API error if you try to delete incomplete executions that are being processed at the moment. The items that are not being processed will be deleted.",
                "value": {
                  "ids": ["2f2eb8de489a4e059518b212f5388bf3"]
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dlqs": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "examples": {
                "delete": {
                  "value": {
                    "dlqs": [
                      "f140d39b5c9c4c72b3bc4f3b7aa467de",
                      "74232267212a431ebab728158575ef65"
                    ]
                  }
                },
                "delete-with-error": {
                  "value": {
                    "dlqs": ["2f2eb8de489a4e059518b212f5388bf3"],
                    "error": {
                      "name": "APIError",
                      "message": "Some of the executions could not be deleted because they are being processed right now.",
                      "stack": "APIError: Some of the executions could not be deleted because they are being processed right now.\n  at deleteDlqMulti (C:\\make-repo\\imt-web-api\\lib\\controllers\\dlqs.js:162:16)\n  at processTicksAndRejections (internal/process/task_queues.js:93:5)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "delete": {
          "summary": "Delete incomplete executions",
          "response": {
            "dlqs": [
              "f140d39b5c9c4c72b3bc4f3b7aa467de",
              "74232267212a431ebab728158575ef65"
            ]
          },
          "description": "Delete incomplete executions of the specified scenario.",
          "requestBody": {
            "ids": [
              "85354fed3c804ec3a137b9ceb9dc9256",
              "3b8badf2afd7447eb4340c24d1706b83"
            ],
            "exceptIds": [],
            "all": false
          },
          "parameters": {
            "scenarioId": 4,
            "confirmed": "true"
          },
          "path": "/dlqs"
        },
        "delete-with-error": {
          "summary": "Delete error",
          "response": {
            "dlqs": ["2f2eb8de489a4e059518b212f5388bf3"],
            "error": {
              "name": "APIError",
              "message": "Some of the executions could not be deleted because they are being processed right now.",
              "stack": "APIError: Some of the executions could not be deleted because they are being processed right now.\n  at deleteDlqMulti (C:\\make-repo\\imt-web-api\\lib\\controllers\\dlqs.js:162:16)\n  at processTicksAndRejections (internal/process/task_queues.js:93:5)"
            }
          },
          "description": "You get the API error if you try to delete incomplete executions that are being processed at the moment. The items that are not being processed will be deleted.",
          "requestBody": {
            "ids": ["2f2eb8de489a4e059518b212f5388bf3"]
          },
          "parameters": {
            "scenarioId": 4,
            "confirmed": "true"
          },
          "path": "/dlqs"
        }
      }
    },
    "dlqs-dlqId-get": {
      "endpointKey": "dlqs-dlqId-get",
      "path": "/dlqs/{dlqId}",
      "method": "get",
      "x-published": true,
      "tags": ["Incomplete executions"],
      "summary": "Incomplete execution detail",
      "description": "Gets detail of the specified incomplete execution.",
      "security": [
        {
          "token": ["dlqs:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "dlqId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "a07e16f2ad134bf49cf83a00aa95c0a5",
            "description": "The ID of the incomplete execution. Get the ID values of the incomplete executions of a scenario with the API call `GET /dlqs?scenarioId={scenarioId}`."
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dlq": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "scenarioId": {
                        "type": "integer"
                      },
                      "scenarioName": {
                        "type": "string"
                      },
                      "companyId": {
                        "type": "integer"
                      },
                      "companyName": {
                        "type": "string"
                      },
                      "resolved": {
                        "type": "boolean"
                      },
                      "deleted": {
                        "type": "boolean"
                      },
                      "index": {
                        "type": "integer"
                      },
                      "created": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "executionId": {
                        "type": "string"
                      },
                      "retry": {
                        "type": "boolean"
                      },
                      "attempts": {
                        "type": "integer"
                      },
                      "size": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "example": {
                "dlq": {
                  "id": "a07e16f2ad134bf49cf83a00aa95c0a5",
                  "scenarioId": 3,
                  "scenarioName": "DLQS test",
                  "companyId": 1,
                  "companyName": "My Lab",
                  "resolved": false,
                  "deleted": false,
                  "index": 49,
                  "created": "2019-11-26T09:57:10.039Z",
                  "executionId": "55602700-e840-45bf-b18c-0aef214dd967",
                  "retry": false,
                  "attempts": 2,
                  "size": 21
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "dlq": {
              "id": "a07e16f2ad134bf49cf83a00aa95c0a5",
              "scenarioId": 3,
              "scenarioName": "DLQS test",
              "companyId": 1,
              "companyName": "My Lab",
              "resolved": false,
              "deleted": false,
              "index": 49,
              "created": "2019-11-26T09:57:10.039Z",
              "executionId": "55602700-e840-45bf-b18c-0aef214dd967",
              "retry": false,
              "attempts": 2,
              "size": 21
            }
          },
          "path": "/dlqs/a07e16f2ad134bf49cf83a00aa95c0a5"
        }
      }
    },
    "dlqs-dlqId-patch": {
      "endpointKey": "dlqs-dlqId-patch",
      "path": "/dlqs/{dlqId}",
      "method": "patch",
      "x-published": true,
      "tags": ["Incomplete executions"],
      "summary": "Update incomplete execution",
      "description": "Updates the specified incomplete execution.",
      "security": [
        {
          "token": ["dlqs:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "dlqId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the incomplete execution. Get the ID values of the incomplete executions of a scenario with the API call `GET /dlqs?scenarioId={scenarioId}`.",
            "example": "a07e16f2ad134bf49cf83a00aa95c0a5"
          }
        ],
        "query": [],
        "body": [
          {
            "name": "blueprint",
            "schema": {
              "type": "string",
              "description": "The blueprint you want to use to resolve the incomplete execution. If you download the blueprint from a Make scenario as a JSON object, you have to escape the blueprint contents to be able to send it as a string."
            },
            "example": "{\"name\":\"Integration of failing scenario\",\"flow\":[{\"id\":1,\"module\":\"http:ActionSendData\",\"version\":3,\"parameters\":{\"handleErrors\":false},\"mapper\":{\"ca\":\"\",\"qs\":[],\"url\":\"https://local.make.cloud/api/not-existing-page\",\"gzip\":true,\"method\":\"get\",\"headers\":[],\"timeout\":\"\",\"authPass\":\"\",\"authUser\":\"\",\"bodyType\":\"\",\"shareCookies\":false,\"parseResponse\":false,\"followRedirect\":true,\"useQuerystring\":false,\"rejectUnauthorized\":true},\"metadata\":{\"designer\":{\"x\":0,\"y\":0},\"restore\":{\"qs\":{\"mode\":\"chose\",\"items\":[]},\"method\":{\"mode\":\"chose\",\"label\":\"GET\"},\"headers\":{\"mode\":\"chose\",\"items\":[]},\"bodyType\":{\"label\":\"\"}},\"parameters\":[{\"name\":\"handleErrors\",\"type\":\"boolean\",\"label\":\"Evaluate all states as errors (except for 2xx and 3xx )\",\"required\":true}],\"expect\":[{\"name\":\"url\",\"type\":\"url\",\"label\":\"URL\",\"required\":true},{\"name\":\"method\",\"type\":\"select\",\"label\":\"Method\",\"required\":true,\"validate\":{\"enum\":[\"get\",\"head\",\"post\",\"put\",\"patch\",\"delete\"]}},{\"name\":\"headers\",\"spec\":[{\"name\":\"name\",\"type\":\"text\",\"label\":\"Name\",\"required\":true},{\"name\":\"value\",\"type\":\"text\",\"label\":\"Value\"}],\"type\":\"array\",\"label\":\"Headers\",\"labels\":{\"add\":\"Add a header\",\"edit\":\"Edit a header\"}},{\"name\":\"qs\",\"spec\":[{\"name\":\"name\",\"type\":\"text\",\"label\":\"Name\",\"required\":true},{\"name\":\"value\",\"type\":\"text\",\"label\":\"Value\"}],\"type\":\"array\",\"label\":\"Query String\",\"labels\":{\"add\":\"Add parameter\",\"edit\":\"Edit parameter\"}},{\"name\":\"bodyType\",\"type\":\"select\",\"label\":\"Body type\",\"validate\":{\"enum\":[\"raw\",\"x_www_form_urlencoded\",\"multipart_form_data\"]}},{\"name\":\"parseResponse\",\"type\":\"boolean\",\"label\":\"Parse response\",\"required\":true},{\"name\":\"authUser\",\"type\":\"text\",\"label\":\"User name\"},{\"name\":\"authPass\",\"type\":\"password\",\"label\":\"Password\"},{\"name\":\"timeout\",\"type\":\"uinteger\",\"label\":\"Timeout\",\"validate\":{\"max\":300,\"min\":1}},{\"name\":\"shareCookies\",\"type\":\"boolean\",\"label\":\"Share cookies with other HTTP modules\",\"required\":true},{\"name\":\"ca\",\"type\":\"cert\",\"label\":\"Self-signed certificate\",\"multiline\":true},{\"name\":\"rejectUnauthorized\",\"type\":\"boolean\",\"label\":\"Reject connections that are using unverified (self-signed) certificates\",\"required\":true},{\"name\":\"followRedirect\",\"type\":\"boolean\",\"label\":\"Follow redirect\",\"required\":true},{\"name\":\"useQuerystring\",\"type\":\"boolean\",\"label\":\"Disable serialization of multiple same query string keys as arrays\",\"required\":true},{\"name\":\"gzip\",\"type\":\"boolean\",\"label\":\"Request compressed content\",\"required\":true}]},\"onerror\":[{\"id\":2,\"module\":\"builtin:Break\",\"version\":1,\"parameters\":{},\"mapper\":{\"count\":\"3\",\"retry\":true,\"interval\":\"1\"},\"metadata\":{\"designer\":{\"x\":300,\"y\":0},\"restore\":{\"retry\":{\"mode\":\"chose\"}},\"expect\":[{\"name\":\"retry\",\"type\":\"boolean\",\"label\":\"Automatically complete execution\",\"required\":true},{\"name\":\"count\",\"type\":\"uinteger\",\"label\":\"Number of attempts\",\"required\":true},{\"name\":\"interval\",\"type\":\"uinteger\",\"label\":\"Interval between attempts\",\"required\":true}]}}]}],\"metadata\":{\"version\":1,\"scenario\":{\"autoCommit\":true,\"autoCommitTriggerLast\":true,\"roundtrips\":1,\"maxErrors\":3}}}",
            "required": false,
            "description": "The blueprint you want to use to resolve the incomplete execution. If you download the blueprint from a Make scenario as a JSON object, you have to escape the blueprint contents to be able to send it as a string."
          },
          {
            "name": "failer",
            "schema": {
              "type": "integer",
              "description": "The module ID which caused the incomplete execution of the scenario."
            },
            "example": 1,
            "required": false,
            "description": "The module ID which caused the incomplete execution of the scenario."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "blueprint": {
                  "type": "string",
                  "description": "The blueprint you want to use to resolve the incomplete execution. If you download the blueprint from a Make scenario as a JSON object, you have to escape the blueprint contents to be able to send it as a string."
                },
                "failer": {
                  "type": "integer",
                  "description": "The module ID which caused the incomplete execution of the scenario."
                }
              }
            },
            "example": {
              "blueprint": "{\"name\":\"Integration of failing scenario\",\"flow\":[{\"id\":1,\"module\":\"http:ActionSendData\",\"version\":3,\"parameters\":{\"handleErrors\":false},\"mapper\":{\"ca\":\"\",\"qs\":[],\"url\":\"https://local.make.cloud/api/not-existing-page\",\"gzip\":true,\"method\":\"get\",\"headers\":[],\"timeout\":\"\",\"authPass\":\"\",\"authUser\":\"\",\"bodyType\":\"\",\"shareCookies\":false,\"parseResponse\":false,\"followRedirect\":true,\"useQuerystring\":false,\"rejectUnauthorized\":true},\"metadata\":{\"designer\":{\"x\":0,\"y\":0},\"restore\":{\"qs\":{\"mode\":\"chose\",\"items\":[]},\"method\":{\"mode\":\"chose\",\"label\":\"GET\"},\"headers\":{\"mode\":\"chose\",\"items\":[]},\"bodyType\":{\"label\":\"\"}},\"parameters\":[{\"name\":\"handleErrors\",\"type\":\"boolean\",\"label\":\"Evaluate all states as errors (except for 2xx and 3xx )\",\"required\":true}],\"expect\":[{\"name\":\"url\",\"type\":\"url\",\"label\":\"URL\",\"required\":true},{\"name\":\"method\",\"type\":\"select\",\"label\":\"Method\",\"required\":true,\"validate\":{\"enum\":[\"get\",\"head\",\"post\",\"put\",\"patch\",\"delete\"]}},{\"name\":\"headers\",\"spec\":[{\"name\":\"name\",\"type\":\"text\",\"label\":\"Name\",\"required\":true},{\"name\":\"value\",\"type\":\"text\",\"label\":\"Value\"}],\"type\":\"array\",\"label\":\"Headers\",\"labels\":{\"add\":\"Add a header\",\"edit\":\"Edit a header\"}},{\"name\":\"qs\",\"spec\":[{\"name\":\"name\",\"type\":\"text\",\"label\":\"Name\",\"required\":true},{\"name\":\"value\",\"type\":\"text\",\"label\":\"Value\"}],\"type\":\"array\",\"label\":\"Query String\",\"labels\":{\"add\":\"Add parameter\",\"edit\":\"Edit parameter\"}},{\"name\":\"bodyType\",\"type\":\"select\",\"label\":\"Body type\",\"validate\":{\"enum\":[\"raw\",\"x_www_form_urlencoded\",\"multipart_form_data\"]}},{\"name\":\"parseResponse\",\"type\":\"boolean\",\"label\":\"Parse response\",\"required\":true},{\"name\":\"authUser\",\"type\":\"text\",\"label\":\"User name\"},{\"name\":\"authPass\",\"type\":\"password\",\"label\":\"Password\"},{\"name\":\"timeout\",\"type\":\"uinteger\",\"label\":\"Timeout\",\"validate\":{\"max\":300,\"min\":1}},{\"name\":\"shareCookies\",\"type\":\"boolean\",\"label\":\"Share cookies with other HTTP modules\",\"required\":true},{\"name\":\"ca\",\"type\":\"cert\",\"label\":\"Self-signed certificate\",\"multiline\":true},{\"name\":\"rejectUnauthorized\",\"type\":\"boolean\",\"label\":\"Reject connections that are using unverified (self-signed) certificates\",\"required\":true},{\"name\":\"followRedirect\",\"type\":\"boolean\",\"label\":\"Follow redirect\",\"required\":true},{\"name\":\"useQuerystring\",\"type\":\"boolean\",\"label\":\"Disable serialization of multiple same query string keys as arrays\",\"required\":true},{\"name\":\"gzip\",\"type\":\"boolean\",\"label\":\"Request compressed content\",\"required\":true}]},\"onerror\":[{\"id\":2,\"module\":\"builtin:Break\",\"version\":1,\"parameters\":{},\"mapper\":{\"count\":\"3\",\"retry\":true,\"interval\":\"1\"},\"metadata\":{\"designer\":{\"x\":300,\"y\":0},\"restore\":{\"retry\":{\"mode\":\"chose\"}},\"expect\":[{\"name\":\"retry\",\"type\":\"boolean\",\"label\":\"Automatically complete execution\",\"required\":true},{\"name\":\"count\",\"type\":\"uinteger\",\"label\":\"Number of attempts\",\"required\":true},{\"name\":\"interval\",\"type\":\"uinteger\",\"label\":\"Interval between attempts\",\"required\":true}]}}]}],\"metadata\":{\"version\":1,\"scenario\":{\"autoCommit\":true,\"autoCommitTriggerLast\":true,\"roundtrips\":1,\"maxErrors\":3}}}",
              "failer": 1
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dlq": {
                    "type": "object",
                    "properties": {
                      "failer": {
                        "type": "integer"
                      },
                      "blueprint": {
                        "type": "object",
                        "properties": {
                          "flow": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "mapper": {
                                  "type": "object",
                                  "properties": {
                                    "ca": {
                                      "type": "string"
                                    },
                                    "qs": {
                                      "type": "array"
                                    },
                                    "url": {
                                      "type": "string",
                                      "format": "uri"
                                    },
                                    "gzip": {
                                      "type": "boolean"
                                    },
                                    "method": {
                                      "type": "string"
                                    },
                                    "headers": {
                                      "type": "array"
                                    },
                                    "timeout": {
                                      "type": "string"
                                    },
                                    "authPass": {
                                      "type": "string"
                                    },
                                    "authUser": {
                                      "type": "string"
                                    },
                                    "bodyType": {
                                      "type": "string"
                                    },
                                    "shareCookies": {
                                      "type": "boolean"
                                    },
                                    "parseResponse": {
                                      "type": "boolean"
                                    },
                                    "followRedirect": {
                                      "type": "boolean"
                                    },
                                    "useQuerystring": {
                                      "type": "boolean"
                                    },
                                    "rejectUnauthorized": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "module": {
                                  "type": "string",
                                  "format": "uri"
                                },
                                "onerror": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer"
                                      },
                                      "mapper": {
                                        "type": "object",
                                        "properties": {
                                          "count": {
                                            "type": "string",
                                            "format": "utc-millisec"
                                          },
                                          "retry": {
                                            "type": "boolean"
                                          },
                                          "interval": {
                                            "type": "string",
                                            "format": "utc-millisec"
                                          }
                                        }
                                      },
                                      "module": {
                                        "type": "string",
                                        "format": "uri"
                                      },
                                      "version": {
                                        "type": "integer"
                                      },
                                      "metadata": {
                                        "type": "object",
                                        "properties": {
                                          "expect": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "type": "string"
                                                },
                                                "label": {
                                                  "type": "string"
                                                },
                                                "required": {
                                                  "type": "boolean"
                                                }
                                              }
                                            }
                                          },
                                          "restore": {
                                            "type": "object",
                                            "properties": {
                                              "retry": {
                                                "type": "object",
                                                "properties": {
                                                  "mode": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "designer": {
                                            "type": "object",
                                            "properties": {
                                              "x": {
                                                "type": "integer"
                                              },
                                              "y": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "parameters": {
                                        "type": "object"
                                      }
                                    }
                                  }
                                },
                                "version": {
                                  "type": "integer"
                                },
                                "metadata": {
                                  "type": "object",
                                  "properties": {
                                    "expect": {
                                      "type": "array",
                                      "items": {
                                        "type": "object"
                                      }
                                    },
                                    "restore": {
                                      "type": "object",
                                      "properties": {
                                        "qs": {
                                          "type": "object",
                                          "properties": {
                                            "mode": {
                                              "type": "string"
                                            },
                                            "items": {
                                              "type": "array"
                                            }
                                          }
                                        },
                                        "method": {
                                          "type": "object",
                                          "properties": {
                                            "mode": {
                                              "type": "string"
                                            },
                                            "label": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "headers": {
                                          "type": "object",
                                          "properties": {
                                            "mode": {
                                              "type": "string"
                                            },
                                            "items": {
                                              "type": "array"
                                            }
                                          }
                                        },
                                        "bodyType": {
                                          "type": "object",
                                          "properties": {
                                            "label": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "designer": {
                                      "type": "object",
                                      "properties": {
                                        "x": {
                                          "type": "integer"
                                        },
                                        "y": {
                                          "type": "integer"
                                        }
                                      }
                                    },
                                    "parameters": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string"
                                          },
                                          "label": {
                                            "type": "string"
                                          },
                                          "required": {
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "parameters": {
                                  "type": "object",
                                  "properties": {
                                    "handleErrors": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "metadata": {
                            "type": "object",
                            "properties": {
                              "version": {
                                "type": "integer"
                              },
                              "scenario": {
                                "type": "object",
                                "properties": {
                                  "maxErrors": {
                                    "type": "integer"
                                  },
                                  "autoCommit": {
                                    "type": "boolean"
                                  },
                                  "roundtrips": {
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "dlq": {
                  "failer": 1,
                  "blueprint": {
                    "flow": [
                      {
                        "id": 1,
                        "mapper": {
                          "ca": "",
                          "qs": [],
                          "url": "https://local.make.cloud/api/not-existing-page",
                          "gzip": true,
                          "method": "get",
                          "headers": [],
                          "timeout": "",
                          "authPass": "",
                          "authUser": "",
                          "bodyType": "",
                          "shareCookies": false,
                          "parseResponse": false,
                          "followRedirect": true,
                          "useQuerystring": false,
                          "rejectUnauthorized": true
                        },
                        "module": "http:ActionSendData",
                        "onerror": [
                          {
                            "id": 2,
                            "mapper": {
                              "count": "3",
                              "retry": true,
                              "interval": "1"
                            },
                            "module": "builtin:Break",
                            "version": 1,
                            "metadata": {
                              "expect": [
                                {
                                  "name": "retry",
                                  "type": "boolean",
                                  "label": "Automatically complete execution",
                                  "required": true
                                },
                                {
                                  "name": "count",
                                  "type": "uinteger",
                                  "label": "Number of attempts",
                                  "required": true
                                },
                                {
                                  "name": "interval",
                                  "type": "uinteger",
                                  "label": "Interval between attempts",
                                  "required": true
                                }
                              ],
                              "restore": {
                                "retry": {
                                  "mode": "chose"
                                }
                              },
                              "designer": {
                                "x": 300,
                                "y": 0
                              }
                            },
                            "parameters": {}
                          }
                        ],
                        "version": 3,
                        "metadata": {
                          "expect": [
                            {
                              "name": "url",
                              "type": "url",
                              "label": "URL",
                              "required": true
                            },
                            {
                              "name": "method",
                              "type": "select",
                              "label": "Method",
                              "required": true,
                              "validate": {
                                "enum": [
                                  "get",
                                  "head",
                                  "post",
                                  "put",
                                  "patch",
                                  "delete"
                                ]
                              }
                            },
                            {
                              "name": "headers",
                              "spec": [
                                {
                                  "name": "name",
                                  "type": "text",
                                  "label": "Name",
                                  "required": true
                                },
                                {
                                  "name": "value",
                                  "type": "text",
                                  "label": "Value"
                                }
                              ],
                              "type": "array",
                              "label": "Headers",
                              "labels": {
                                "add": "Add a header",
                                "edit": "Edit a header"
                              }
                            },
                            {
                              "name": "qs",
                              "spec": [
                                {
                                  "name": "name",
                                  "type": "text",
                                  "label": "Name",
                                  "required": true
                                },
                                {
                                  "name": "value",
                                  "type": "text",
                                  "label": "Value"
                                }
                              ],
                              "type": "array",
                              "label": "Query String",
                              "labels": {
                                "add": "Add parameter",
                                "edit": "Edit parameter"
                              }
                            },
                            {
                              "name": "bodyType",
                              "type": "select",
                              "label": "Body type",
                              "validate": {
                                "enum": [
                                  "raw",
                                  "x_www_form_urlencoded",
                                  "multipart_form_data"
                                ]
                              }
                            },
                            {
                              "name": "parseResponse",
                              "type": "boolean",
                              "label": "Parse response",
                              "required": true
                            },
                            {
                              "name": "authUser",
                              "type": "text",
                              "label": "User name"
                            },
                            {
                              "name": "authPass",
                              "type": "password",
                              "label": "Password"
                            },
                            {
                              "name": "timeout",
                              "type": "uinteger",
                              "label": "Timeout",
                              "validate": {
                                "max": 300,
                                "min": 1
                              }
                            },
                            {
                              "name": "shareCookies",
                              "type": "boolean",
                              "label": "Share cookies with other HTTP modules",
                              "required": true
                            },
                            {
                              "name": "ca",
                              "type": "cert",
                              "label": "Self-signed certificate",
                              "multiline": true
                            },
                            {
                              "name": "rejectUnauthorized",
                              "type": "boolean",
                              "label": "Reject connections that are using unverified (self-signed) certificates",
                              "required": true
                            },
                            {
                              "name": "followRedirect",
                              "type": "boolean",
                              "label": "Follow redirect",
                              "required": true
                            },
                            {
                              "name": "useQuerystring",
                              "type": "boolean",
                              "label": "Disable serialization of multiple same query string keys as arrays",
                              "required": true
                            },
                            {
                              "name": "gzip",
                              "type": "boolean",
                              "label": "Request compressed content",
                              "required": true
                            }
                          ],
                          "restore": {
                            "qs": {
                              "mode": "chose",
                              "items": []
                            },
                            "method": {
                              "mode": "chose",
                              "label": "GET"
                            },
                            "headers": {
                              "mode": "chose",
                              "items": []
                            },
                            "bodyType": {
                              "label": ""
                            }
                          },
                          "designer": {
                            "x": 0,
                            "y": 0
                          },
                          "parameters": [
                            {
                              "name": "handleErrors",
                              "type": "boolean",
                              "label": "Evaluate all states as errors (except for 2xx and 3xx )",
                              "required": true
                            }
                          ]
                        },
                        "parameters": {
                          "handleErrors": false
                        }
                      }
                    ],
                    "name": "Integration of failing scenario",
                    "metadata": {
                      "version": 1,
                      "scenario": {
                        "maxErrors": 3,
                        "autoCommit": true,
                        "roundtrips": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "dlq": {
              "failer": 1,
              "blueprint": {
                "flow": [
                  {
                    "id": 1,
                    "mapper": {
                      "ca": "",
                      "qs": [],
                      "url": "https://local.make.cloud/api/not-existing-page",
                      "gzip": true,
                      "method": "get",
                      "headers": [],
                      "timeout": "",
                      "authPass": "",
                      "authUser": "",
                      "bodyType": "",
                      "shareCookies": false,
                      "parseResponse": false,
                      "followRedirect": true,
                      "useQuerystring": false,
                      "rejectUnauthorized": true
                    },
                    "module": "http:ActionSendData",
                    "onerror": [
                      {
                        "id": 2,
                        "mapper": {
                          "count": "3",
                          "retry": true,
                          "interval": "1"
                        },
                        "module": "builtin:Break",
                        "version": 1,
                        "metadata": {
                          "expect": [
                            {
                              "name": "retry",
                              "type": "boolean",
                              "label": "Automatically complete execution",
                              "required": true
                            },
                            {
                              "name": "count",
                              "type": "uinteger",
                              "label": "Number of attempts",
                              "required": true
                            },
                            {
                              "name": "interval",
                              "type": "uinteger",
                              "label": "Interval between attempts",
                              "required": true
                            }
                          ],
                          "restore": {
                            "retry": {
                              "mode": "chose"
                            }
                          },
                          "designer": {
                            "x": 300,
                            "y": 0
                          }
                        },
                        "parameters": {}
                      }
                    ],
                    "version": 3,
                    "metadata": {
                      "expect": [
                        {
                          "name": "url",
                          "type": "url",
                          "label": "URL",
                          "required": true
                        },
                        {
                          "name": "method",
                          "type": "select",
                          "label": "Method",
                          "required": true,
                          "validate": {
                            "enum": [
                              "get",
                              "head",
                              "post",
                              "put",
                              "patch",
                              "delete"
                            ]
                          }
                        },
                        {
                          "name": "headers",
                          "spec": [
                            {
                              "name": "name",
                              "type": "text",
                              "label": "Name",
                              "required": true
                            },
                            {
                              "name": "value",
                              "type": "text",
                              "label": "Value"
                            }
                          ],
                          "type": "array",
                          "label": "Headers",
                          "labels": {
                            "add": "Add a header",
                            "edit": "Edit a header"
                          }
                        },
                        {
                          "name": "qs",
                          "spec": [
                            {
                              "name": "name",
                              "type": "text",
                              "label": "Name",
                              "required": true
                            },
                            {
                              "name": "value",
                              "type": "text",
                              "label": "Value"
                            }
                          ],
                          "type": "array",
                          "label": "Query String",
                          "labels": {
                            "add": "Add parameter",
                            "edit": "Edit parameter"
                          }
                        },
                        {
                          "name": "bodyType",
                          "type": "select",
                          "label": "Body type",
                          "validate": {
                            "enum": [
                              "raw",
                              "x_www_form_urlencoded",
                              "multipart_form_data"
                            ]
                          }
                        },
                        {
                          "name": "parseResponse",
                          "type": "boolean",
                          "label": "Parse response",
                          "required": true
                        },
                        {
                          "name": "authUser",
                          "type": "text",
                          "label": "User name"
                        },
                        {
                          "name": "authPass",
                          "type": "password",
                          "label": "Password"
                        },
                        {
                          "name": "timeout",
                          "type": "uinteger",
                          "label": "Timeout",
                          "validate": {
                            "max": 300,
                            "min": 1
                          }
                        },
                        {
                          "name": "shareCookies",
                          "type": "boolean",
                          "label": "Share cookies with other HTTP modules",
                          "required": true
                        },
                        {
                          "name": "ca",
                          "type": "cert",
                          "label": "Self-signed certificate",
                          "multiline": true
                        },
                        {
                          "name": "rejectUnauthorized",
                          "type": "boolean",
                          "label": "Reject connections that are using unverified (self-signed) certificates",
                          "required": true
                        },
                        {
                          "name": "followRedirect",
                          "type": "boolean",
                          "label": "Follow redirect",
                          "required": true
                        },
                        {
                          "name": "useQuerystring",
                          "type": "boolean",
                          "label": "Disable serialization of multiple same query string keys as arrays",
                          "required": true
                        },
                        {
                          "name": "gzip",
                          "type": "boolean",
                          "label": "Request compressed content",
                          "required": true
                        }
                      ],
                      "restore": {
                        "qs": {
                          "mode": "chose",
                          "items": []
                        },
                        "method": {
                          "mode": "chose",
                          "label": "GET"
                        },
                        "headers": {
                          "mode": "chose",
                          "items": []
                        },
                        "bodyType": {
                          "label": ""
                        }
                      },
                      "designer": {
                        "x": 0,
                        "y": 0
                      },
                      "parameters": [
                        {
                          "name": "handleErrors",
                          "type": "boolean",
                          "label": "Evaluate all states as errors (except for 2xx and 3xx )",
                          "required": true
                        }
                      ]
                    },
                    "parameters": {
                      "handleErrors": false
                    }
                  }
                ],
                "name": "Integration of failing scenario",
                "metadata": {
                  "version": 1,
                  "scenario": {
                    "maxErrors": 3,
                    "autoCommit": true,
                    "roundtrips": 1
                  }
                }
              }
            }
          },
          "requestBody": {
            "blueprint": "{\"name\":\"Integration of failing scenario\",\"flow\":[{\"id\":1,\"module\":\"http:ActionSendData\",\"version\":3,\"parameters\":{\"handleErrors\":false},\"mapper\":{\"ca\":\"\",\"qs\":[],\"url\":\"https://local.make.cloud/api/not-existing-page\",\"gzip\":true,\"method\":\"get\",\"headers\":[],\"timeout\":\"\",\"authPass\":\"\",\"authUser\":\"\",\"bodyType\":\"\",\"shareCookies\":false,\"parseResponse\":false,\"followRedirect\":true,\"useQuerystring\":false,\"rejectUnauthorized\":true},\"metadata\":{\"designer\":{\"x\":0,\"y\":0},\"restore\":{\"qs\":{\"mode\":\"chose\",\"items\":[]},\"method\":{\"mode\":\"chose\",\"label\":\"GET\"},\"headers\":{\"mode\":\"chose\",\"items\":[]},\"bodyType\":{\"label\":\"\"}},\"parameters\":[{\"name\":\"handleErrors\",\"type\":\"boolean\",\"label\":\"Evaluate all states as errors (except for 2xx and 3xx )\",\"required\":true}],\"expect\":[{\"name\":\"url\",\"type\":\"url\",\"label\":\"URL\",\"required\":true},{\"name\":\"method\",\"type\":\"select\",\"label\":\"Method\",\"required\":true,\"validate\":{\"enum\":[\"get\",\"head\",\"post\",\"put\",\"patch\",\"delete\"]}},{\"name\":\"headers\",\"spec\":[{\"name\":\"name\",\"type\":\"text\",\"label\":\"Name\",\"required\":true},{\"name\":\"value\",\"type\":\"text\",\"label\":\"Value\"}],\"type\":\"array\",\"label\":\"Headers\",\"labels\":{\"add\":\"Add a header\",\"edit\":\"Edit a header\"}},{\"name\":\"qs\",\"spec\":[{\"name\":\"name\",\"type\":\"text\",\"label\":\"Name\",\"required\":true},{\"name\":\"value\",\"type\":\"text\",\"label\":\"Value\"}],\"type\":\"array\",\"label\":\"Query String\",\"labels\":{\"add\":\"Add parameter\",\"edit\":\"Edit parameter\"}},{\"name\":\"bodyType\",\"type\":\"select\",\"label\":\"Body type\",\"validate\":{\"enum\":[\"raw\",\"x_www_form_urlencoded\",\"multipart_form_data\"]}},{\"name\":\"parseResponse\",\"type\":\"boolean\",\"label\":\"Parse response\",\"required\":true},{\"name\":\"authUser\",\"type\":\"text\",\"label\":\"User name\"},{\"name\":\"authPass\",\"type\":\"password\",\"label\":\"Password\"},{\"name\":\"timeout\",\"type\":\"uinteger\",\"label\":\"Timeout\",\"validate\":{\"max\":300,\"min\":1}},{\"name\":\"shareCookies\",\"type\":\"boolean\",\"label\":\"Share cookies with other HTTP modules\",\"required\":true},{\"name\":\"ca\",\"type\":\"cert\",\"label\":\"Self-signed certificate\",\"multiline\":true},{\"name\":\"rejectUnauthorized\",\"type\":\"boolean\",\"label\":\"Reject connections that are using unverified (self-signed) certificates\",\"required\":true},{\"name\":\"followRedirect\",\"type\":\"boolean\",\"label\":\"Follow redirect\",\"required\":true},{\"name\":\"useQuerystring\",\"type\":\"boolean\",\"label\":\"Disable serialization of multiple same query string keys as arrays\",\"required\":true},{\"name\":\"gzip\",\"type\":\"boolean\",\"label\":\"Request compressed content\",\"required\":true}]},\"onerror\":[{\"id\":2,\"module\":\"builtin:Break\",\"version\":1,\"parameters\":{},\"mapper\":{\"count\":\"3\",\"retry\":true,\"interval\":\"1\"},\"metadata\":{\"designer\":{\"x\":300,\"y\":0},\"restore\":{\"retry\":{\"mode\":\"chose\"}},\"expect\":[{\"name\":\"retry\",\"type\":\"boolean\",\"label\":\"Automatically complete execution\",\"required\":true},{\"name\":\"count\",\"type\":\"uinteger\",\"label\":\"Number of attempts\",\"required\":true},{\"name\":\"interval\",\"type\":\"uinteger\",\"label\":\"Interval between attempts\",\"required\":true}]}}]}],\"metadata\":{\"version\":1,\"scenario\":{\"autoCommit\":true,\"autoCommitTriggerLast\":true,\"roundtrips\":1,\"maxErrors\":3}}}",
            "failer": 1
          },
          "path": "/dlqs/a07e16f2ad134bf49cf83a00aa95c0a5"
        }
      }
    },
    "dlqs-dlqId-blueprint-get": {
      "endpointKey": "dlqs-dlqId-blueprint-get",
      "path": "/dlqs/{dlqId}/blueprint",
      "method": "get",
      "x-published": true,
      "tags": ["Incomplete executions"],
      "summary": "Get failed scenario blueprint",
      "description": "Gets the blueprint of the scenario that caused the incomplete execution.",
      "security": [
        {
          "token": ["dlqs:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "dlqId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "a07e16f2ad134bf49cf83a00aa95c0a5",
            "description": "The ID of the incomplete execution. Get the ID values of the incomplete executions of a scenario with the API call `GET /dlqs?scenarioId={scenarioId}`."
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "response": {
                    "type": "object",
                    "properties": {
                      "blueprint": {
                        "type": "object",
                        "properties": {
                          "flow": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "mapper": {
                                  "type": "object",
                                  "properties": {
                                    "ca": {
                                      "type": "string"
                                    },
                                    "qs": {
                                      "type": "array"
                                    },
                                    "url": {
                                      "type": "string",
                                      "format": "uri"
                                    },
                                    "gzip": {
                                      "type": "boolean"
                                    },
                                    "method": {
                                      "type": "string"
                                    },
                                    "headers": {
                                      "type": "array"
                                    },
                                    "timeout": {
                                      "type": "string"
                                    },
                                    "authPass": {
                                      "type": "string"
                                    },
                                    "authUser": {
                                      "type": "string"
                                    },
                                    "bodyType": {
                                      "type": "string"
                                    },
                                    "shareCookies": {
                                      "type": "boolean"
                                    },
                                    "parseResponse": {
                                      "type": "boolean"
                                    },
                                    "followRedirect": {
                                      "type": "boolean"
                                    },
                                    "useQuerystring": {
                                      "type": "boolean"
                                    },
                                    "rejectUnauthorized": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "module": {
                                  "type": "string",
                                  "format": "uri"
                                },
                                "onerror": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer"
                                      },
                                      "mapper": {
                                        "type": "object",
                                        "properties": {
                                          "count": {
                                            "type": "string",
                                            "format": "utc-millisec"
                                          },
                                          "retry": {
                                            "type": "boolean"
                                          },
                                          "interval": {
                                            "type": "string",
                                            "format": "utc-millisec"
                                          }
                                        }
                                      },
                                      "module": {
                                        "type": "string",
                                        "format": "uri"
                                      },
                                      "version": {
                                        "type": "integer"
                                      },
                                      "metadata": {
                                        "type": "object",
                                        "properties": {
                                          "expect": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "type": "string"
                                                },
                                                "label": {
                                                  "type": "string"
                                                },
                                                "required": {
                                                  "type": "boolean"
                                                }
                                              }
                                            }
                                          },
                                          "restore": {
                                            "type": "object",
                                            "properties": {
                                              "retry": {
                                                "type": "object",
                                                "properties": {
                                                  "mode": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "designer": {
                                            "type": "object",
                                            "properties": {
                                              "x": {
                                                "type": "integer"
                                              },
                                              "y": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "parameters": {
                                        "type": "object"
                                      }
                                    }
                                  }
                                },
                                "version": {
                                  "type": "integer"
                                },
                                "metadata": {
                                  "type": "object",
                                  "properties": {
                                    "expect": {
                                      "type": "array",
                                      "items": {
                                        "type": "object"
                                      }
                                    },
                                    "restore": {
                                      "type": "object",
                                      "properties": {
                                        "qs": {
                                          "type": "object",
                                          "properties": {
                                            "mode": {
                                              "type": "string"
                                            },
                                            "items": {
                                              "type": "array"
                                            }
                                          }
                                        },
                                        "method": {
                                          "type": "object",
                                          "properties": {
                                            "mode": {
                                              "type": "string"
                                            },
                                            "label": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "headers": {
                                          "type": "object",
                                          "properties": {
                                            "mode": {
                                              "type": "string"
                                            },
                                            "items": {
                                              "type": "array"
                                            }
                                          }
                                        },
                                        "bodyType": {
                                          "type": "object",
                                          "properties": {
                                            "label": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "designer": {
                                      "type": "object",
                                      "properties": {
                                        "x": {
                                          "type": "integer"
                                        },
                                        "y": {
                                          "type": "integer"
                                        }
                                      }
                                    },
                                    "parameters": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string"
                                          },
                                          "label": {
                                            "type": "string"
                                          },
                                          "required": {
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "parameters": {
                                  "type": "object",
                                  "properties": {
                                    "handleErrors": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "metadata": {
                            "type": "object",
                            "properties": {
                              "version": {
                                "type": "integer"
                              },
                              "scenario": {
                                "type": "object",
                                "properties": {
                                  "maxErrors": {
                                    "type": "integer"
                                  },
                                  "autoCommit": {
                                    "type": "boolean"
                                  },
                                  "roundtrips": {
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "company": {
                        "type": "integer"
                      },
                      "idSequence": {
                        "type": "integer"
                      },
                      "reason": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "example": {
                "code": "OK",
                "response": {
                  "blueprint": {
                    "flow": [
                      {
                        "id": 1,
                        "mapper": {
                          "ca": "",
                          "qs": [],
                          "url": "https://local.make.cloud/api/not-existing-page",
                          "gzip": true,
                          "method": "get",
                          "headers": [],
                          "timeout": "",
                          "authPass": "",
                          "authUser": "",
                          "bodyType": "",
                          "shareCookies": false,
                          "parseResponse": false,
                          "followRedirect": true,
                          "useQuerystring": false,
                          "rejectUnauthorized": true
                        },
                        "module": "http:ActionSendData",
                        "onerror": [
                          {
                            "id": 2,
                            "mapper": {
                              "count": "3",
                              "retry": true,
                              "interval": "1"
                            },
                            "module": "builtin:Break",
                            "version": 1,
                            "metadata": {
                              "expect": [
                                {
                                  "name": "retry",
                                  "type": "boolean",
                                  "label": "Automatically complete execution",
                                  "required": true
                                },
                                {
                                  "name": "count",
                                  "type": "uinteger",
                                  "label": "Number of attempts",
                                  "required": true
                                },
                                {
                                  "name": "interval",
                                  "type": "uinteger",
                                  "label": "Interval between attempts",
                                  "required": true
                                }
                              ],
                              "restore": {
                                "retry": {
                                  "mode": "chose"
                                }
                              },
                              "designer": {
                                "x": 300,
                                "y": 0
                              }
                            },
                            "parameters": {}
                          }
                        ],
                        "version": 3,
                        "metadata": {
                          "expect": [
                            {
                              "name": "url",
                              "type": "url",
                              "label": "URL",
                              "required": true
                            },
                            {
                              "name": "method",
                              "type": "select",
                              "label": "Method",
                              "required": true,
                              "validate": {
                                "enum": [
                                  "get",
                                  "head",
                                  "post",
                                  "put",
                                  "patch",
                                  "delete"
                                ]
                              }
                            },
                            {
                              "name": "headers",
                              "spec": [
                                {
                                  "name": "name",
                                  "type": "text",
                                  "label": "Name",
                                  "required": true
                                },
                                {
                                  "name": "value",
                                  "type": "text",
                                  "label": "Value"
                                }
                              ],
                              "type": "array",
                              "label": "Headers",
                              "labels": {
                                "add": "Add a header",
                                "edit": "Edit a header"
                              }
                            },
                            {
                              "name": "qs",
                              "spec": [
                                {
                                  "name": "name",
                                  "type": "text",
                                  "label": "Name",
                                  "required": true
                                },
                                {
                                  "name": "value",
                                  "type": "text",
                                  "label": "Value"
                                }
                              ],
                              "type": "array",
                              "label": "Query String",
                              "labels": {
                                "add": "Add parameter",
                                "edit": "Edit parameter"
                              }
                            },
                            {
                              "name": "bodyType",
                              "type": "select",
                              "label": "Body type",
                              "validate": {
                                "enum": [
                                  "raw",
                                  "x_www_form_urlencoded",
                                  "multipart_form_data"
                                ]
                              }
                            },
                            {
                              "name": "parseResponse",
                              "type": "boolean",
                              "label": "Parse response",
                              "required": true
                            },
                            {
                              "name": "authUser",
                              "type": "text",
                              "label": "User name"
                            },
                            {
                              "name": "authPass",
                              "type": "password",
                              "label": "Password"
                            },
                            {
                              "name": "timeout",
                              "type": "uinteger",
                              "label": "Timeout",
                              "validate": {
                                "max": 300,
                                "min": 1
                              }
                            },
                            {
                              "name": "shareCookies",
                              "type": "boolean",
                              "label": "Share cookies with other HTTP modules",
                              "required": true
                            },
                            {
                              "name": "ca",
                              "type": "cert",
                              "label": "Self-signed certificate",
                              "multiline": true
                            },
                            {
                              "name": "rejectUnauthorized",
                              "type": "boolean",
                              "label": "Reject connections that are using unverified (self-signed) certificates",
                              "required": true
                            },
                            {
                              "name": "followRedirect",
                              "type": "boolean",
                              "label": "Follow redirect",
                              "required": true
                            },
                            {
                              "name": "useQuerystring",
                              "type": "boolean",
                              "label": "Disable serialization of multiple same query string keys as arrays",
                              "required": true
                            },
                            {
                              "name": "gzip",
                              "type": "boolean",
                              "label": "Request compressed content",
                              "required": true
                            }
                          ],
                          "restore": {
                            "qs": {
                              "mode": "chose",
                              "items": []
                            },
                            "method": {
                              "mode": "chose",
                              "label": "GET"
                            },
                            "headers": {
                              "mode": "chose",
                              "items": []
                            },
                            "bodyType": {
                              "label": ""
                            }
                          },
                          "designer": {
                            "x": 0,
                            "y": 0
                          },
                          "parameters": [
                            {
                              "name": "handleErrors",
                              "type": "boolean",
                              "label": "Evaluate all states as errors (except for 2xx and 3xx )",
                              "required": true
                            }
                          ]
                        },
                        "parameters": {
                          "handleErrors": false
                        }
                      }
                    ],
                    "name": "Integration of failing scenario",
                    "metadata": {
                      "user": {
                        "id": 1
                      },
                      "version": 1,
                      "scenario": {
                        "maxErrors": 3,
                        "autoCommit": true,
                        "roundtrips": 1
                      }
                    }
                  },
                  "company": 1,
                  "idSequence": 3,
                  "reason": "IP address is not valid."
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "code": "OK",
            "response": {
              "blueprint": {
                "flow": [
                  {
                    "id": 1,
                    "mapper": {
                      "ca": "",
                      "qs": [],
                      "url": "https://local.make.cloud/api/not-existing-page",
                      "gzip": true,
                      "method": "get",
                      "headers": [],
                      "timeout": "",
                      "authPass": "",
                      "authUser": "",
                      "bodyType": "",
                      "shareCookies": false,
                      "parseResponse": false,
                      "followRedirect": true,
                      "useQuerystring": false,
                      "rejectUnauthorized": true
                    },
                    "module": "http:ActionSendData",
                    "onerror": [
                      {
                        "id": 2,
                        "mapper": {
                          "count": "3",
                          "retry": true,
                          "interval": "1"
                        },
                        "module": "builtin:Break",
                        "version": 1,
                        "metadata": {
                          "expect": [
                            {
                              "name": "retry",
                              "type": "boolean",
                              "label": "Automatically complete execution",
                              "required": true
                            },
                            {
                              "name": "count",
                              "type": "uinteger",
                              "label": "Number of attempts",
                              "required": true
                            },
                            {
                              "name": "interval",
                              "type": "uinteger",
                              "label": "Interval between attempts",
                              "required": true
                            }
                          ],
                          "restore": {
                            "retry": {
                              "mode": "chose"
                            }
                          },
                          "designer": {
                            "x": 300,
                            "y": 0
                          }
                        },
                        "parameters": {}
                      }
                    ],
                    "version": 3,
                    "metadata": {
                      "expect": [
                        {
                          "name": "url",
                          "type": "url",
                          "label": "URL",
                          "required": true
                        },
                        {
                          "name": "method",
                          "type": "select",
                          "label": "Method",
                          "required": true,
                          "validate": {
                            "enum": [
                              "get",
                              "head",
                              "post",
                              "put",
                              "patch",
                              "delete"
                            ]
                          }
                        },
                        {
                          "name": "headers",
                          "spec": [
                            {
                              "name": "name",
                              "type": "text",
                              "label": "Name",
                              "required": true
                            },
                            {
                              "name": "value",
                              "type": "text",
                              "label": "Value"
                            }
                          ],
                          "type": "array",
                          "label": "Headers",
                          "labels": {
                            "add": "Add a header",
                            "edit": "Edit a header"
                          }
                        },
                        {
                          "name": "qs",
                          "spec": [
                            {
                              "name": "name",
                              "type": "text",
                              "label": "Name",
                              "required": true
                            },
                            {
                              "name": "value",
                              "type": "text",
                              "label": "Value"
                            }
                          ],
                          "type": "array",
                          "label": "Query String",
                          "labels": {
                            "add": "Add parameter",
                            "edit": "Edit parameter"
                          }
                        },
                        {
                          "name": "bodyType",
                          "type": "select",
                          "label": "Body type",
                          "validate": {
                            "enum": [
                              "raw",
                              "x_www_form_urlencoded",
                              "multipart_form_data"
                            ]
                          }
                        },
                        {
                          "name": "parseResponse",
                          "type": "boolean",
                          "label": "Parse response",
                          "required": true
                        },
                        {
                          "name": "authUser",
                          "type": "text",
                          "label": "User name"
                        },
                        {
                          "name": "authPass",
                          "type": "password",
                          "label": "Password"
                        },
                        {
                          "name": "timeout",
                          "type": "uinteger",
                          "label": "Timeout",
                          "validate": {
                            "max": 300,
                            "min": 1
                          }
                        },
                        {
                          "name": "shareCookies",
                          "type": "boolean",
                          "label": "Share cookies with other HTTP modules",
                          "required": true
                        },
                        {
                          "name": "ca",
                          "type": "cert",
                          "label": "Self-signed certificate",
                          "multiline": true
                        },
                        {
                          "name": "rejectUnauthorized",
                          "type": "boolean",
                          "label": "Reject connections that are using unverified (self-signed) certificates",
                          "required": true
                        },
                        {
                          "name": "followRedirect",
                          "type": "boolean",
                          "label": "Follow redirect",
                          "required": true
                        },
                        {
                          "name": "useQuerystring",
                          "type": "boolean",
                          "label": "Disable serialization of multiple same query string keys as arrays",
                          "required": true
                        },
                        {
                          "name": "gzip",
                          "type": "boolean",
                          "label": "Request compressed content",
                          "required": true
                        }
                      ],
                      "restore": {
                        "qs": {
                          "mode": "chose",
                          "items": []
                        },
                        "method": {
                          "mode": "chose",
                          "label": "GET"
                        },
                        "headers": {
                          "mode": "chose",
                          "items": []
                        },
                        "bodyType": {
                          "label": ""
                        }
                      },
                      "designer": {
                        "x": 0,
                        "y": 0
                      },
                      "parameters": [
                        {
                          "name": "handleErrors",
                          "type": "boolean",
                          "label": "Evaluate all states as errors (except for 2xx and 3xx )",
                          "required": true
                        }
                      ]
                    },
                    "parameters": {
                      "handleErrors": false
                    }
                  }
                ],
                "name": "Integration of failing scenario",
                "metadata": {
                  "user": {
                    "id": 1
                  },
                  "version": 1,
                  "scenario": {
                    "maxErrors": 3,
                    "autoCommit": true,
                    "roundtrips": 1
                  }
                }
              },
              "company": 1,
              "idSequence": 3,
              "reason": "IP address is not valid."
            }
          },
          "path": "/dlqs/a07e16f2ad134bf49cf83a00aa95c0a5/blueprint"
        }
      }
    },
    "dlqs-dlqId-bundle-get": {
      "endpointKey": "dlqs-dlqId-bundle-get",
      "path": "/dlqs/{dlqId}/bundle",
      "method": "get",
      "x-published": true,
      "tags": ["Incomplete executions"],
      "summary": "Get incomplete execution bundles",
      "description": "Gets bundles that caused the incomplete execution.",
      "security": [
        {
          "token": ["dlqs:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "dlqId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "a07e16f2ad134bf49cf83a00aa95c0a5",
            "description": "The ID of the incomplete execution. Get the ID values of the incomplete executions of a scenario with the API call `GET /dlqs?scenarioId={scenarioId}`."
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "response": {
                    "type": "object"
                  }
                }
              },
              "example": {
                "code": "OK",
                "response": {
                  "1": {
                    "error": {
                      "type": "InvalidConfigurationError",
                      "message": "IP address is not valid."
                    }
                  },
                  "3": {
                    "value": "Example error text."
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "code": "OK",
            "response": {
              "1": {
                "error": {
                  "type": "InvalidConfigurationError",
                  "message": "IP address is not valid."
                }
              },
              "3": {
                "value": "Example error text."
              }
            }
          },
          "path": "/dlqs/a07e16f2ad134bf49cf83a00aa95c0a5/bundle"
        }
      }
    },
    "dlqs-dlqId-logs-get": {
      "endpointKey": "dlqs-dlqId-logs-get",
      "path": "/dlqs/{dlqId}/logs",
      "method": "get",
      "x-published": true,
      "tags": ["Incomplete executions"],
      "summary": "List incomplete executions logs",
      "description": "Gets data about attempts to resolve an incomplete execution.",
      "security": [
        {
          "token": ["dlqs:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "dlqId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "a07e16f2ad134bf49cf83a00aa95c0a5",
            "description": "The ID of the incomplete execution. Get the ID values of the incomplete executions of a scenario with the API call `GET /dlqs?scenarioId={scenarioId}`."
          }
        ],
        "query": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "integer",
              "enum": [1, 2, 3]
            },
            "description": "The status number of the incomplete execution. The status numbers correspond to the following statuses:\n \n- 1: success,\n - 2: warning,\n - 3: error.",
            "example": 3
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "timestamp"
            },
            "example": "1548975600000",
            "description": "The moment from which you want to list the incomplete execution logs. The timestamp is in the [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format."
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "timestamp"
            },
            "example": "1574782119387",
            "description": "Limits the returned incomplete execution logs to those that were created before the specified moment. The timestamp is in the [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format."
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dlqLogs": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "imtId": {
                          "type": "string"
                        },
                        "duration": {
                          "type": "integer"
                        },
                        "transfer": {
                          "type": "integer"
                        },
                        "operations": {
                          "type": "integer"
                        },
                        "teamId": {
                          "type": "integer"
                        },
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "authorId": {
                          "type": "string"
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "status": {
                          "type": "integer"
                        },
                        "instant": {
                          "type": "boolean"
                        },
                        "organizationId": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "pg": {
                    "type": "object",
                    "properties": {
                      "last": {
                        "type": "string"
                      },
                      "showLast": {
                        "type": "boolean"
                      },
                      "sortBy": {
                        "type": "string"
                      },
                      "sortDir": {
                        "type": "string"
                      },
                      "limit": {
                        "type": "integer"
                      },
                      "offset": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "example": {
                "dlqLogs": [
                  {
                    "imtId": "1574777797796_dlq.a07e16f2ad134bf49cf83a00aa95c0a5.manual.f241ee9b0d344964a5ce54356b9ed98e",
                    "duration": 728,
                    "transfer": 0,
                    "operations": 1,
                    "teamId": 1,
                    "id": "f241ee9b0d344964a5ce54356b9ed98e",
                    "type": "manual",
                    "authorId": null,
                    "timestamp": "2019-11-26T14:16:37.796Z",
                    "status": 3
                  },
                  {
                    "imtId": "1574777795371_dlq.a07e16f2ad134bf49cf83a00aa95c0a5.manual.7f65bad83eb74c899a70c76794d8afc3",
                    "duration": 795,
                    "transfer": 0,
                    "operations": 1,
                    "teamId": 1,
                    "id": "7f65bad83eb74c899a70c76794d8afc3",
                    "type": "manual",
                    "authorId": null,
                    "timestamp": "2019-11-26T14:16:35.371Z",
                    "status": 3
                  }
                ],
                "pg": {
                  "sortBy": "imtId",
                  "sortDir": "desc",
                  "limit": 50,
                  "offset": 0
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "dlqLogs": [
              {
                "imtId": "1574777797796_dlq.a07e16f2ad134bf49cf83a00aa95c0a5.manual.f241ee9b0d344964a5ce54356b9ed98e",
                "duration": 728,
                "transfer": 0,
                "operations": 1,
                "teamId": 1,
                "id": "f241ee9b0d344964a5ce54356b9ed98e",
                "type": "manual",
                "authorId": null,
                "timestamp": "2019-11-26T14:16:37.796Z",
                "status": 3
              },
              {
                "imtId": "1574777795371_dlq.a07e16f2ad134bf49cf83a00aa95c0a5.manual.7f65bad83eb74c899a70c76794d8afc3",
                "duration": 795,
                "transfer": 0,
                "operations": 1,
                "teamId": 1,
                "id": "7f65bad83eb74c899a70c76794d8afc3",
                "type": "manual",
                "authorId": null,
                "timestamp": "2019-11-26T14:16:35.371Z",
                "status": 3
              }
            ],
            "pg": {
              "sortBy": "imtId",
              "sortDir": "desc",
              "limit": 50,
              "offset": 0
            }
          },
          "parameters": {
            "status": 3,
            "from": "1548975600000",
            "to": "1574782119387"
          },
          "path": "/dlqs/a07e16f2ad134bf49cf83a00aa95c0a5/logs"
        }
      }
    },
    "dlqs-dlqId-logs-executionDlqId-get": {
      "endpointKey": "dlqs-dlqId-logs-executionDlqId-get",
      "path": "/dlqs/{dlqId}/logs/{executionDlqId}",
      "method": "get",
      "x-published": true,
      "tags": ["Incomplete executions"],
      "summary": "Incomplete execution log detail",
      "description": "Gets detail of the specified incomplete execution log.",
      "security": [
        {
          "token": ["dlqs:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "dlqId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "a07e16f2ad134bf49cf83a00aa95c0a5",
            "description": "The ID of the incomplete execution. Get the ID values of the incomplete executions of a scenario with the API call `GET /dlqs?scenarioId={scenarioId}`."
          },
          {
            "name": "executionDlqId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the incomplete execution log. Get the ID values of the incomplete execution logs with the API call `GET /dlqs/{dlqId}/logs`.",
            "example": "1356b72d781649a18692a0d4d09cd977"
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dlqLog": {
                    "type": "object",
                    "properties": {
                      "imtId": {
                        "type": "string"
                      },
                      "duration": {
                        "type": "integer"
                      },
                      "transfer": {
                        "type": "integer"
                      },
                      "operations": {
                        "type": "integer"
                      },
                      "teamId": {
                        "type": "integer"
                      },
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "authorId": {
                        "type": "string"
                      },
                      "timestamp": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "status": {
                        "type": "integer"
                      },
                      "instant": {
                        "type": "boolean"
                      },
                      "organizationId": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "example": {
                "dlqLog": {
                  "imtId": "1594117724361_dlq.00946714d6dd4a4cb091fe5435a8d197.manual.28a4794e85894c80a483777d6958160f",
                  "duration": 1353,
                  "operations": 1,
                  "transfer": 87,
                  "organizationId": 1,
                  "teamId": 1,
                  "id": "28a4794e85894c80a483777d6958160f",
                  "type": "manual",
                  "authorId": null,
                  "instant": false,
                  "timestamp": "2020-07-07T10:28:44.361Z",
                  "status": 3
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "dlqLog": {
              "imtId": "1594117724361_dlq.00946714d6dd4a4cb091fe5435a8d197.manual.28a4794e85894c80a483777d6958160f",
              "duration": 1353,
              "operations": 1,
              "transfer": 87,
              "organizationId": 1,
              "teamId": 1,
              "id": "28a4794e85894c80a483777d6958160f",
              "type": "manual",
              "authorId": null,
              "instant": false,
              "timestamp": "2020-07-07T10:28:44.361Z",
              "status": 3
            }
          },
          "path": "/dlqs/a07e16f2ad134bf49cf83a00aa95c0a5/logs/1356b72d781649a18692a0d4d09cd977"
        }
      }
    },
    "enums-timezones-get": {
      "endpointKey": "enums-timezones-get",
      "path": "/enums/timezones",
      "method": "get",
      "x-published": true,
      "tags": ["Enums"],
      "summary": "List timezones",
      "description": "Gets the list of timezones and their `timezoneId` values.",
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "timezones": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "code": {
                          "type": "string"
                        },
                        "offset": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "timezones": [
                  {
                    "id": 226,
                    "name": "(GMT-11:00) Pacific/Niue",
                    "code": "Pacific/Niue",
                    "offset": "-1100"
                  },
                  {
                    "id": 27,
                    "name": "(GMT-11:00) Pacific/Pago_Pago",
                    "code": "Pacific/Pago_Pago",
                    "offset": "-1100"
                  },
                  {
                    "id": 328,
                    "name": "(GMT-10:00) America/Adak",
                    "code": "America/Adak",
                    "offset": "-1000"
                  },
                  {
                    "id": 329,
                    "name": "(GMT-10:00) Pacific/Honolulu",
                    "code": "Pacific/Honolulu",
                    "offset": "-1000"
                  },
                  {
                    "id": 101,
                    "name": "(GMT-10:00) Pacific/Rarotonga",
                    "code": "Pacific/Rarotonga",
                    "offset": "-1000"
                  },
                  {
                    "id": 231,
                    "name": "(GMT-10:00) Pacific/Tahiti",
                    "code": "Pacific/Tahiti",
                    "offset": "-1000"
                  },
                  {
                    "id": 232,
                    "name": "(GMT-09:30) Pacific/Marquesas",
                    "code": "Pacific/Marquesas",
                    "offset": "-0930"
                  },
                  {
                    "id": 323,
                    "name": "(GMT-09:00) America/Anchorage",
                    "code": "America/Anchorage",
                    "offset": "-0900"
                  },
                  {
                    "id": 324,
                    "name": "(GMT-09:00) America/Juneau",
                    "code": "America/Juneau",
                    "offset": "-0900"
                  },
                  {
                    "id": 327,
                    "name": "(GMT-09:00) America/Nome",
                    "code": "America/Nome",
                    "offset": "-0900"
                  },
                  {
                    "id": 325,
                    "name": "(GMT-09:00) America/Sitka",
                    "code": "America/Sitka",
                    "offset": "-0900"
                  },
                  {
                    "id": 326,
                    "name": "(GMT-09:00) America/Yakutat",
                    "code": "America/Yakutat",
                    "offset": "-0900"
                  },
                  {
                    "id": 233,
                    "name": "(GMT-09:00) Pacific/Gambier",
                    "code": "Pacific/Gambier",
                    "offset": "-0900"
                  },
                  {
                    "id": 97,
                    "name": "(GMT-08:00) America/Dawson",
                    "code": "America/Dawson",
                    "offset": "-0800"
                  },
                  {
                    "id": 321,
                    "name": "(GMT-08:00) America/Los_Angeles",
                    "code": "America/Los_Angeles",
                    "offset": "-0800"
                  },
                  {
                    "id": 322,
                    "name": "(GMT-08:00) America/Metlakatla",
                    "code": "America/Metlakatla",
                    "offset": "-0800"
                  },
                  {
                    "id": 212,
                    "name": "(GMT-08:00) America/Santa_Isabel",
                    "code": "America/Santa_Isabel",
                    "offset": "-0800"
                  },
                  {
                    "id": 211,
                    "name": "(GMT-08:00) America/Tijuana",
                    "code": "America/Tijuana",
                    "offset": "-0800"
                  },
                  {
                    "id": 95,
                    "name": "(GMT-08:00) America/Vancouver",
                    "code": "America/Vancouver",
                    "offset": "-0800"
                  },
                  {
                    "id": 96,
                    "name": "(GMT-08:00) America/Whitehorse",
                    "code": "America/Whitehorse",
                    "offset": "-0800"
                  },
                  {
                    "id": 240,
                    "name": "(GMT-08:00) Pacific/Pitcairn",
                    "code": "Pacific/Pitcairn",
                    "offset": "-0800"
                  },
                  {
                    "id": 319,
                    "name": "(GMT-07:00) America/Boise",
                    "code": "America/Boise",
                    "offset": "-0700"
                  },
                  {
                    "id": 89,
                    "name": "(GMT-07:00) America/Cambridge_Bay",
                    "code": "America/Cambridge_Bay",
                    "offset": "-0700"
                  },
                  {
                    "id": 208,
                    "name": "(GMT-07:00) America/Chihuahua",
                    "code": "America/Chihuahua",
                    "offset": "-0700"
                  },
                  {
                    "id": 92,
                    "name": "(GMT-07:00) America/Creston",
                    "code": "America/Creston",
                    "offset": "-0700"
                  },
                  {
                    "id": 93,
                    "name": "(GMT-07:00) America/Dawson_Creek",
                    "code": "America/Dawson_Creek",
                    "offset": "-0700"
                  },
                  {
                    "id": 318,
                    "name": "(GMT-07:00) America/Denver",
                    "code": "America/Denver",
                    "offset": "-0700"
                  },
                  {
                    "id": 88,
                    "name": "(GMT-07:00) America/Edmonton",
                    "code": "America/Edmonton",
                    "offset": "-0700"
                  },
                  {
                    "id": 94,
                    "name": "(GMT-07:00) America/Fort_Nelson",
                    "code": "America/Fort_Nelson",
                    "offset": "-0700"
                  },
                  {
                    "id": 210,
                    "name": "(GMT-07:00) America/Hermosillo",
                    "code": "America/Hermosillo",
                    "offset": "-0700"
                  },
                  {
                    "id": 91,
                    "name": "(GMT-07:00) America/Inuvik",
                    "code": "America/Inuvik",
                    "offset": "-0700"
                  },
                  {
                    "id": 207,
                    "name": "(GMT-07:00) America/Mazatlan",
                    "code": "America/Mazatlan",
                    "offset": "-0700"
                  },
                  {
                    "id": 209,
                    "name": "(GMT-07:00) America/Ojinaga",
                    "code": "America/Ojinaga",
                    "offset": "-0700"
                  },
                  {
                    "id": 320,
                    "name": "(GMT-07:00) America/Phoenix",
                    "code": "America/Phoenix",
                    "offset": "-0700"
                  },
                  {
                    "id": 90,
                    "name": "(GMT-07:00) America/Yellowknife",
                    "code": "America/Yellowknife",
                    "offset": "-0700"
                  },
                  {
                    "id": 213,
                    "name": "(GMT-06:00) America/Bahia_Banderas",
                    "code": "America/Bahia_Banderas",
                    "offset": "-0600"
                  },
                  {
                    "id": 69,
                    "name": "(GMT-06:00) America/Belize",
                    "code": "America/Belize",
                    "offset": "-0600"
                  },
                  {
                    "id": 203,
                    "name": "(GMT-06:00) America/Cancun",
                    "code": "America/Cancun",
                    "offset": "-0600"
                  },
                  {
                    "id": 311,
                    "name": "(GMT-06:00) America/Chicago",
                    "code": "America/Chicago",
                    "offset": "-0600"
                  },
                  {
                    "id": 107,
                    "name": "(GMT-06:00) America/Costa_Rica",
                    "code": "America/Costa_Rica",
                    "offset": "-0600"
                  },
                  {
                    "id": 281,
                    "name": "(GMT-06:00) America/El_Salvador",
                    "code": "America/El_Salvador",
                    "offset": "-0600"
                  },
                  {
                    "id": 145,
                    "name": "(GMT-06:00) America/Guatemala",
                    "code": "America/Guatemala",
                    "offset": "-0600"
                  },
                  {
                    "id": 313,
                    "name": "(GMT-06:00) America/Indiana/Knox",
                    "code": "America/Indiana/Knox",
                    "offset": "-0600"
                  },
                  {
                    "id": 312,
                    "name": "(GMT-06:00) America/Indiana/Tell_City",
                    "code": "America/Indiana/Tell_City",
                    "offset": "-0600"
                  },
                  {
                    "id": 221,
                    "name": "(GMT-06:00) America/Managua",
                    "code": "America/Managua",
                    "offset": "-0600"
                  },
                  {
                    "id": 206,
                    "name": "(GMT-06:00) America/Matamoros",
                    "code": "America/Matamoros",
                    "offset": "-0600"
                  },
                  {
                    "id": 314,
                    "name": "(GMT-06:00) America/Menominee",
                    "code": "America/Menominee",
                    "offset": "-0600"
                  },
                  {
                    "id": 204,
                    "name": "(GMT-06:00) America/Merida",
                    "code": "America/Merida",
                    "offset": "-0600"
                  },
                  {
                    "id": 202,
                    "name": "(GMT-06:00) America/Mexico_City",
                    "code": "America/Mexico_City",
                    "offset": "-0600"
                  },
                  {
                    "id": 205,
                    "name": "(GMT-06:00) America/Monterrey",
                    "code": "America/Monterrey",
                    "offset": "-0600"
                  },
                  {
                    "id": 317,
                    "name": "(GMT-06:00) America/North_Dakota/Beulah",
                    "code": "America/North_Dakota/Beulah",
                    "offset": "-0600"
                  },
                  {
                    "id": 315,
                    "name": "(GMT-06:00) America/North_Dakota/Center",
                    "code": "America/North_Dakota/Center",
                    "offset": "-0600"
                  },
                  {
                    "id": 316,
                    "name": "(GMT-06:00) America/North_Dakota/New_Salem",
                    "code": "America/North_Dakota/New_Salem",
                    "offset": "-0600"
                  },
                  {
                    "id": 85,
                    "name": "(GMT-06:00) America/Rainy_River",
                    "code": "America/Rainy_River",
                    "offset": "-0600"
                  },
                  {
                    "id": 83,
                    "name": "(GMT-06:00) America/Rankin_Inlet",
                    "code": "America/Rankin_Inlet",
                    "offset": "-0600"
                  },
                  {
                    "id": 86,
                    "name": "(GMT-06:00) America/Regina",
                    "code": "America/Regina",
                    "offset": "-0600"
                  },
                  {
                    "id": 81,
                    "name": "(GMT-06:00) America/Resolute",
                    "code": "America/Resolute",
                    "offset": "-0600"
                  },
                  {
                    "id": 87,
                    "name": "(GMT-06:00) America/Swift_Current",
                    "code": "America/Swift_Current",
                    "offset": "-0600"
                  },
                  {
                    "id": 150,
                    "name": "(GMT-06:00) America/Tegucigalpa",
                    "code": "America/Tegucigalpa",
                    "offset": "-0600"
                  },
                  {
                    "id": 84,
                    "name": "(GMT-06:00) America/Winnipeg",
                    "code": "America/Winnipeg",
                    "offset": "-0600"
                  },
                  {
                    "id": 103,
                    "name": "(GMT-06:00) Pacific/Easter",
                    "code": "Pacific/Easter",
                    "offset": "-0600"
                  },
                  {
                    "id": 119,
                    "name": "(GMT-06:00) Pacific/Galapagos",
                    "code": "Pacific/Galapagos",
                    "offset": "-0600"
                  },
                  {
                    "id": 82,
                    "name": "(GMT-05:00) America/Atikokan",
                    "code": "America/Atikokan",
                    "offset": "-0500"
                  },
                  {
                    "id": 106,
                    "name": "(GMT-05:00) America/Bogota",
                    "code": "America/Bogota",
                    "offset": "-0500"
                  },
                  {
                    "id": 175,
                    "name": "(GMT-05:00) America/Cayman",
                    "code": "America/Cayman",
                    "offset": "-0500"
                  },
                  {
                    "id": 302,
                    "name": "(GMT-05:00) America/Detroit",
                    "code": "America/Detroit",
                    "offset": "-0500"
                  },
                  {
                    "id": 64,
                    "name": "(GMT-05:00) America/Eirunepe",
                    "code": "America/Eirunepe",
                    "offset": "-0500"
                  },
                  {
                    "id": 283,
                    "name": "(GMT-05:00) America/Grand_Turk",
                    "code": "America/Grand_Turk",
                    "offset": "-0500"
                  },
                  {
                    "id": 118,
                    "name": "(GMT-05:00) America/Guayaquil",
                    "code": "America/Guayaquil",
                    "offset": "-0500"
                  },
                  {
                    "id": 108,
                    "name": "(GMT-05:00) America/Havana",
                    "code": "America/Havana",
                    "offset": "-0500"
                  },
                  {
                    "id": 305,
                    "name": "(GMT-05:00) America/Indiana/Indianapolis",
                    "code": "America/Indiana/Indianapolis",
                    "offset": "-0500"
                  },
                  {
                    "id": 308,
                    "name": "(GMT-05:00) America/Indiana/Marengo",
                    "code": "America/Indiana/Marengo",
                    "offset": "-0500"
                  },
                  {
                    "id": 309,
                    "name": "(GMT-05:00) America/Indiana/Petersburg",
                    "code": "America/Indiana/Petersburg",
                    "offset": "-0500"
                  },
                  {
                    "id": 310,
                    "name": "(GMT-05:00) America/Indiana/Vevay",
                    "code": "America/Indiana/Vevay",
                    "offset": "-0500"
                  },
                  {
                    "id": 306,
                    "name": "(GMT-05:00) America/Indiana/Vincennes",
                    "code": "America/Indiana/Vincennes",
                    "offset": "-0500"
                  },
                  {
                    "id": 307,
                    "name": "(GMT-05:00) America/Indiana/Winamac",
                    "code": "America/Indiana/Winamac",
                    "offset": "-0500"
                  },
                  {
                    "id": 79,
                    "name": "(GMT-05:00) America/Iqaluit",
                    "code": "America/Iqaluit",
                    "offset": "-0500"
                  },
                  {
                    "id": 165,
                    "name": "(GMT-05:00) America/Jamaica",
                    "code": "America/Jamaica",
                    "offset": "-0500"
                  },
                  {
                    "id": 303,
                    "name": "(GMT-05:00) America/Kentucky/Louisville",
                    "code": "America/Kentucky/Louisville",
                    "offset": "-0500"
                  },
                  {
                    "id": 304,
                    "name": "(GMT-05:00) America/Kentucky/Monticello",
                    "code": "America/Kentucky/Monticello",
                    "offset": "-0500"
                  },
                  {
                    "id": 230,
                    "name": "(GMT-05:00) America/Lima",
                    "code": "America/Lima",
                    "offset": "-0500"
                  },
                  {
                    "id": 66,
                    "name": "(GMT-05:00) America/Nassau",
                    "code": "America/Nassau",
                    "offset": "-0500"
                  },
                  {
                    "id": 301,
                    "name": "(GMT-05:00) America/New_York",
                    "code": "America/New_York",
                    "offset": "-0500"
                  },
                  {
                    "id": 77,
                    "name": "(GMT-05:00) America/Nipigon",
                    "code": "America/Nipigon",
                    "offset": "-0500"
                  },
                  {
                    "id": 229,
                    "name": "(GMT-05:00) America/Panama",
                    "code": "America/Panama",
                    "offset": "-0500"
                  },
                  {
                    "id": 80,
                    "name": "(GMT-05:00) America/Pangnirtung",
                    "code": "America/Pangnirtung",
                    "offset": "-0500"
                  },
                  {
                    "id": 151,
                    "name": "(GMT-05:00) America/Port-au-Prince",
                    "code": "America/Port-au-Prince",
                    "offset": "-0500"
                  },
                  {
                    "id": 65,
                    "name": "(GMT-05:00) America/Rio_Branco",
                    "code": "America/Rio_Branco",
                    "offset": "-0500"
                  },
                  {
                    "id": 78,
                    "name": "(GMT-05:00) America/Thunder_Bay",
                    "code": "America/Thunder_Bay",
                    "offset": "-0500"
                  },
                  {
                    "id": 76,
                    "name": "(GMT-05:00) America/Toronto",
                    "code": "America/Toronto",
                    "offset": "-0500"
                  },
                  {
                    "id": 333,
                    "name": "(GMT-04:30) America/Caracas",
                    "code": "America/Caracas",
                    "offset": "-0430"
                  },
                  {
                    "id": 248,
                    "name": "(GMT-04:00) America/Asuncion",
                    "code": "America/Asuncion",
                    "offset": "-0400"
                  },
                  {
                    "id": 43,
                    "name": "(GMT-04:00) America/Barbados",
                    "code": "America/Barbados",
                    "offset": "-0400"
                  },
                  {
                    "id": 75,
                    "name": "(GMT-04:00) America/Blanc-Sablon",
                    "code": "America/Blanc-Sablon",
                    "offset": "-0400"
                  },
                  {
                    "id": 62,
                    "name": "(GMT-04:00) America/Boa_Vista",
                    "code": "America/Boa_Vista",
                    "offset": "-0400"
                  },
                  {
                    "id": 58,
                    "name": "(GMT-04:00) America/Campo_Grande",
                    "code": "America/Campo_Grande",
                    "offset": "-0400"
                  },
                  {
                    "id": 59,
                    "name": "(GMT-04:00) America/Cuiaba",
                    "code": "America/Cuiaba",
                    "offset": "-0400"
                  },
                  {
                    "id": 110,
                    "name": "(GMT-04:00) America/Curacao",
                    "code": "America/Curacao",
                    "offset": "-0400"
                  },
                  {
                    "id": 72,
                    "name": "(GMT-04:00) America/Glace_Bay",
                    "code": "America/Glace_Bay",
                    "offset": "-0400"
                  },
                  {
                    "id": 74,
                    "name": "(GMT-04:00) America/Goose_Bay",
                    "code": "America/Goose_Bay",
                    "offset": "-0400"
                  },
                  {
                    "id": 148,
                    "name": "(GMT-04:00) America/Guyana",
                    "code": "America/Guyana",
                    "offset": "-0400"
                  },
                  {
                    "id": 71,
                    "name": "(GMT-04:00) America/Halifax",
                    "code": "America/Halifax",
                    "offset": "-0400"
                  },
                  {
                    "id": 49,
                    "name": "(GMT-04:00) America/La_Paz",
                    "code": "America/La_Paz",
                    "offset": "-0400"
                  },
                  {
                    "id": 63,
                    "name": "(GMT-04:00) America/Manaus",
                    "code": "America/Manaus",
                    "offset": "-0400"
                  },
                  {
                    "id": 198,
                    "name": "(GMT-04:00) America/Martinique",
                    "code": "America/Martinique",
                    "offset": "-0400"
                  },
                  {
                    "id": 73,
                    "name": "(GMT-04:00) America/Moncton",
                    "code": "America/Moncton",
                    "offset": "-0400"
                  },
                  {
                    "id": 294,
                    "name": "(GMT-04:00) America/Port_of_Spain",
                    "code": "America/Port_of_Spain",
                    "offset": "-0400"
                  },
                  {
                    "id": 61,
                    "name": "(GMT-04:00) America/Porto_Velho",
                    "code": "America/Porto_Velho",
                    "offset": "-0400"
                  },
                  {
                    "id": 241,
                    "name": "(GMT-04:00) America/Puerto_Rico",
                    "code": "America/Puerto_Rico",
                    "offset": "-0400"
                  },
                  {
                    "id": 116,
                    "name": "(GMT-04:00) America/Santo_Domingo",
                    "code": "America/Santo_Domingo",
                    "offset": "-0400"
                  },
                  {
                    "id": 142,
                    "name": "(GMT-04:00) America/Thule",
                    "code": "America/Thule",
                    "offset": "-0400"
                  },
                  {
                    "id": 7,
                    "name": "(GMT-04:00) Antarctica/Palmer",
                    "code": "Antarctica/Palmer",
                    "offset": "-0400"
                  },
                  {
                    "id": 47,
                    "name": "(GMT-04:00) Atlantic/Bermuda",
                    "code": "Atlantic/Bermuda",
                    "offset": "-0400"
                  },
                  {
                    "id": 70,
                    "name": "(GMT-03:30) America/St_Johns",
                    "code": "America/St_Johns",
                    "offset": "-0330"
                  },
                  {
                    "id": 54,
                    "name": "(GMT-03:00) America/Araguaina",
                    "code": "America/Araguaina",
                    "offset": "-0300"
                  },
                  {
                    "id": 15,
                    "name": "(GMT-03:00) America/Argentina/Buenos_Aires",
                    "code": "America/Argentina/Buenos_Aires",
                    "offset": "-0300"
                  },
                  {
                    "id": 20,
                    "name": "(GMT-03:00) America/Argentina/Catamarca",
                    "code": "America/Argentina/Catamarca",
                    "offset": "-0300"
                  },
                  {
                    "id": 16,
                    "name": "(GMT-03:00) America/Argentina/Cordoba",
                    "code": "America/Argentina/Cordoba",
                    "offset": "-0300"
                  },
                  {
                    "id": 18,
                    "name": "(GMT-03:00) America/Argentina/Jujuy",
                    "code": "America/Argentina/Jujuy",
                    "offset": "-0300"
                  },
                  {
                    "id": 21,
                    "name": "(GMT-03:00) America/Argentina/La_Rioja",
                    "code": "America/Argentina/La_Rioja",
                    "offset": "-0300"
                  },
                  {
                    "id": 23,
                    "name": "(GMT-03:00) America/Argentina/Mendoza",
                    "code": "America/Argentina/Mendoza",
                    "offset": "-0300"
                  },
                  {
                    "id": 25,
                    "name": "(GMT-03:00) America/Argentina/Rio_Gallegos",
                    "code": "America/Argentina/Rio_Gallegos",
                    "offset": "-0300"
                  },
                  {
                    "id": 17,
                    "name": "(GMT-03:00) America/Argentina/Salta",
                    "code": "America/Argentina/Salta",
                    "offset": "-0300"
                  },
                  {
                    "id": 22,
                    "name": "(GMT-03:00) America/Argentina/San_Juan",
                    "code": "America/Argentina/San_Juan",
                    "offset": "-0300"
                  },
                  {
                    "id": 24,
                    "name": "(GMT-03:00) America/Argentina/San_Luis",
                    "code": "America/Argentina/San_Luis",
                    "offset": "-0300"
                  },
                  {
                    "id": 19,
                    "name": "(GMT-03:00) America/Argentina/Tucuman",
                    "code": "America/Argentina/Tucuman",
                    "offset": "-0300"
                  },
                  {
                    "id": 26,
                    "name": "(GMT-03:00) America/Argentina/Ushuaia",
                    "code": "America/Argentina/Ushuaia",
                    "offset": "-0300"
                  },
                  {
                    "id": 56,
                    "name": "(GMT-03:00) America/Bahia",
                    "code": "America/Bahia",
                    "offset": "-0300"
                  },
                  {
                    "id": 51,
                    "name": "(GMT-03:00) America/Belem",
                    "code": "America/Belem",
                    "offset": "-0300"
                  },
                  {
                    "id": 136,
                    "name": "(GMT-03:00) America/Cayenne",
                    "code": "America/Cayenne",
                    "offset": "-0300"
                  },
                  {
                    "id": 52,
                    "name": "(GMT-03:00) America/Fortaleza",
                    "code": "America/Fortaleza",
                    "offset": "-0300"
                  },
                  {
                    "id": 139,
                    "name": "(GMT-03:00) America/Godthab",
                    "code": "America/Godthab",
                    "offset": "-0300"
                  },
                  {
                    "id": 55,
                    "name": "(GMT-03:00) America/Maceio",
                    "code": "America/Maceio",
                    "offset": "-0300"
                  },
                  {
                    "id": 239,
                    "name": "(GMT-03:00) America/Miquelon",
                    "code": "America/Miquelon",
                    "offset": "-0300"
                  },
                  {
                    "id": 330,
                    "name": "(GMT-03:00) America/Montevideo",
                    "code": "America/Montevideo",
                    "offset": "-0300"
                  },
                  {
                    "id": 280,
                    "name": "(GMT-03:00) America/Paramaribo",
                    "code": "America/Paramaribo",
                    "offset": "-0300"
                  },
                  {
                    "id": 53,
                    "name": "(GMT-03:00) America/Recife",
                    "code": "America/Recife",
                    "offset": "-0300"
                  },
                  {
                    "id": 60,
                    "name": "(GMT-03:00) America/Santarem",
                    "code": "America/Santarem",
                    "offset": "-0300"
                  },
                  {
                    "id": 102,
                    "name": "(GMT-03:00) America/Santiago",
                    "code": "America/Santiago",
                    "offset": "-0300"
                  },
                  {
                    "id": 57,
                    "name": "(GMT-03:00) America/Sao_Paulo",
                    "code": "America/Sao_Paulo",
                    "offset": "-0300"
                  },
                  {
                    "id": 6,
                    "name": "(GMT-03:00) Antarctica/Rothera",
                    "code": "Antarctica/Rothera",
                    "offset": "-0300"
                  },
                  {
                    "id": 128,
                    "name": "(GMT-03:00) Atlantic/Stanley",
                    "code": "Atlantic/Stanley",
                    "offset": "-0300"
                  },
                  {
                    "id": 50,
                    "name": "(GMT-02:00) America/Noronha",
                    "code": "America/Noronha",
                    "offset": "-0200"
                  },
                  {
                    "id": 144,
                    "name": "(GMT-02:00) Atlantic/South_Georgia",
                    "code": "Atlantic/South_Georgia",
                    "offset": "-0200"
                  },
                  {
                    "id": 141,
                    "name": "(GMT-01:00) America/Scoresbysund",
                    "code": "America/Scoresbysund",
                    "offset": "-0100"
                  },
                  {
                    "id": 246,
                    "name": "(GMT-01:00) Atlantic/Azores",
                    "code": "Atlantic/Azores",
                    "offset": "-0100"
                  },
                  {
                    "id": 109,
                    "name": "(GMT-01:00) Atlantic/Cape_Verde",
                    "code": "Atlantic/Cape_Verde",
                    "offset": "-0100"
                  },
                  {
                    "id": 100,
                    "name": "(GMT+00:00) Africa/Abidjan",
                    "code": "Africa/Abidjan",
                    "offset": "+0000"
                  },
                  {
                    "id": 137,
                    "name": "(GMT+00:00) Africa/Accra",
                    "code": "Africa/Accra",
                    "offset": "+0000"
                  },
                  {
                    "id": 147,
                    "name": "(GMT+00:00) Africa/Bissau",
                    "code": "Africa/Bissau",
                    "offset": "+0000"
                  },
                  {
                    "id": 188,
                    "name": "(GMT+00:00) Africa/Casablanca",
                    "code": "Africa/Casablanca",
                    "offset": "+0000"
                  },
                  {
                    "id": 122,
                    "name": "(GMT+00:00) Africa/El_Aaiun",
                    "code": "Africa/El_Aaiun",
                    "offset": "+0000"
                  },
                  {
                    "id": 183,
                    "name": "(GMT+00:00) Africa/Monrovia",
                    "code": "Africa/Monrovia",
                    "offset": "+0000"
                  },
                  {
                    "id": 140,
                    "name": "(GMT+00:00) America/Danmarkshavn",
                    "code": "America/Danmarkshavn",
                    "offset": "+0000"
                  },
                  {
                    "id": 14,
                    "name": "(GMT+00:00) Antarctica/Troll",
                    "code": "Antarctica/Troll",
                    "offset": "+0000"
                  },
                  {
                    "id": 125,
                    "name": "(GMT+00:00) Atlantic/Canary",
                    "code": "Atlantic/Canary",
                    "offset": "+0000"
                  },
                  {
                    "id": 132,
                    "name": "(GMT+00:00) Atlantic/Faroe",
                    "code": "Atlantic/Faroe",
                    "offset": "+0000"
                  },
                  {
                    "id": 245,
                    "name": "(GMT+00:00) Atlantic/Madeira",
                    "code": "Atlantic/Madeira",
                    "offset": "+0000"
                  },
                  {
                    "id": 163,
                    "name": "(GMT+00:00) Atlantic/Reykjavik",
                    "code": "Atlantic/Reykjavik",
                    "offset": "+0000"
                  },
                  {
                    "id": 157,
                    "name": "(GMT+00:00) Europe/Dublin",
                    "code": "Europe/Dublin",
                    "offset": "+0000"
                  },
                  {
                    "id": 244,
                    "name": "(GMT+00:00) Europe/Lisbon",
                    "code": "Europe/Lisbon",
                    "offset": "+0000"
                  },
                  {
                    "id": 134,
                    "name": "(GMT+00:00) Europe/London",
                    "code": "Europe/London",
                    "offset": "+0000"
                  },
                  {
                    "id": 117,
                    "name": "(GMT+01:00) Africa/Algiers",
                    "code": "Africa/Algiers",
                    "offset": "+0100"
                  },
                  {
                    "id": 124,
                    "name": "(GMT+01:00) Africa/Ceuta",
                    "code": "Africa/Ceuta",
                    "offset": "+0100"
                  },
                  {
                    "id": 220,
                    "name": "(GMT+01:00) Africa/Lagos",
                    "code": "Africa/Lagos",
                    "offset": "+0100"
                  },
                  {
                    "id": 284,
                    "name": "(GMT+01:00) Africa/Ndjamena",
                    "code": "Africa/Ndjamena",
                    "offset": "+0100"
                  },
                  {
                    "id": 291,
                    "name": "(GMT+01:00) Africa/Tunis",
                    "code": "Africa/Tunis",
                    "offset": "+0100"
                  },
                  {
                    "id": 217,
                    "name": "(GMT+01:00) Africa/Windhoek",
                    "code": "Africa/Windhoek",
                    "offset": "+0100"
                  },
                  {
                    "id": 222,
                    "name": "(GMT+01:00) Europe/Amsterdam",
                    "code": "Europe/Amsterdam",
                    "offset": "+0100"
                  },
                  {
                    "id": 1,
                    "name": "(GMT+01:00) Europe/Andorra",
                    "code": "Europe/Andorra",
                    "offset": "+0100"
                  },
                  {
                    "id": 252,
                    "name": "(GMT+01:00) Europe/Belgrade",
                    "code": "Europe/Belgrade",
                    "offset": "+0100"
                  },
                  {
                    "id": 114,
                    "name": "(GMT+01:00) Europe/Berlin",
                    "code": "Europe/Berlin",
                    "offset": "+0100"
                  },
                  {
                    "id": 45,
                    "name": "(GMT+01:00) Europe/Brussels",
                    "code": "Europe/Brussels",
                    "offset": "+0100"
                  },
                  {
                    "id": 152,
                    "name": "(GMT+01:00) Europe/Budapest",
                    "code": "Europe/Budapest",
                    "offset": "+0100"
                  },
                  {
                    "id": 115,
                    "name": "(GMT+01:00) Europe/Copenhagen",
                    "code": "Europe/Copenhagen",
                    "offset": "+0100"
                  },
                  {
                    "id": 138,
                    "name": "(GMT+01:00) Europe/Gibraltar",
                    "code": "Europe/Gibraltar",
                    "offset": "+0100"
                  },
                  {
                    "id": 185,
                    "name": "(GMT+01:00) Europe/Luxembourg",
                    "code": "Europe/Luxembourg",
                    "offset": "+0100"
                  },
                  {
                    "id": 123,
                    "name": "(GMT+01:00) Europe/Madrid",
                    "code": "Europe/Madrid",
                    "offset": "+0100"
                  },
                  {
                    "id": 199,
                    "name": "(GMT+01:00) Europe/Malta",
                    "code": "Europe/Malta",
                    "offset": "+0100"
                  },
                  {
                    "id": 189,
                    "name": "(GMT+01:00) Europe/Monaco",
                    "code": "Europe/Monaco",
                    "offset": "+0100"
                  },
                  {
                    "id": 223,
                    "name": "(GMT+01:00) Europe/Oslo",
                    "code": "Europe/Oslo",
                    "offset": "+0100"
                  },
                  {
                    "id": 133,
                    "name": "(GMT+01:00) Europe/Paris",
                    "code": "Europe/Paris",
                    "offset": "+0100"
                  },
                  {
                    "id": 113,
                    "name": "(GMT+01:00) Europe/Prague",
                    "code": "Europe/Prague",
                    "offset": "+0100"
                  },
                  {
                    "id": 164,
                    "name": "(GMT+01:00) Europe/Rome",
                    "code": "Europe/Rome",
                    "offset": "+0100"
                  },
                  {
                    "id": 278,
                    "name": "(GMT+01:00) Europe/Stockholm",
                    "code": "Europe/Stockholm",
                    "offset": "+0100"
                  },
                  {
                    "id": 4,
                    "name": "(GMT+01:00) Europe/Tirane",
                    "code": "Europe/Tirane",
                    "offset": "+0100"
                  },
                  {
                    "id": 28,
                    "name": "(GMT+01:00) Europe/Vienna",
                    "code": "Europe/Vienna",
                    "offset": "+0100"
                  },
                  {
                    "id": 238,
                    "name": "(GMT+01:00) Europe/Warsaw",
                    "code": "Europe/Warsaw",
                    "offset": "+0100"
                  },
                  {
                    "id": 99,
                    "name": "(GMT+01:00) Europe/Zurich",
                    "code": "Europe/Zurich",
                    "offset": "+0100"
                  },
                  {
                    "id": 121,
                    "name": "(GMT+02:00) Africa/Cairo",
                    "code": "Africa/Cairo",
                    "offset": "+0200"
                  },
                  {
                    "id": 338,
                    "name": "(GMT+02:00) Africa/Johannesburg",
                    "code": "Africa/Johannesburg",
                    "offset": "+0200"
                  },
                  {
                    "id": 216,
                    "name": "(GMT+02:00) Africa/Maputo",
                    "code": "Africa/Maputo",
                    "offset": "+0200"
                  },
                  {
                    "id": 187,
                    "name": "(GMT+02:00) Africa/Tripoli",
                    "code": "Africa/Tripoli",
                    "offset": "+0200"
                  },
                  {
                    "id": 166,
                    "name": "(GMT+02:00) Asia/Amman",
                    "code": "Asia/Amman",
                    "offset": "+0200"
                  },
                  {
                    "id": 181,
                    "name": "(GMT+02:00) Asia/Beirut",
                    "code": "Asia/Beirut",
                    "offset": "+0200"
                  },
                  {
                    "id": 282,
                    "name": "(GMT+02:00) Asia/Damascus",
                    "code": "Asia/Damascus",
                    "offset": "+0200"
                  },
                  {
                    "id": 242,
                    "name": "(GMT+02:00) Asia/Gaza",
                    "code": "Asia/Gaza",
                    "offset": "+0200"
                  },
                  {
                    "id": 243,
                    "name": "(GMT+02:00) Asia/Hebron",
                    "code": "Asia/Hebron",
                    "offset": "+0200"
                  },
                  {
                    "id": 158,
                    "name": "(GMT+02:00) Asia/Jerusalem",
                    "code": "Asia/Jerusalem",
                    "offset": "+0200"
                  },
                  {
                    "id": 112,
                    "name": "(GMT+02:00) Asia/Nicosia",
                    "code": "Asia/Nicosia",
                    "offset": "+0200"
                  },
                  {
                    "id": 143,
                    "name": "(GMT+02:00) Europe/Athens",
                    "code": "Europe/Athens",
                    "offset": "+0200"
                  },
                  {
                    "id": 251,
                    "name": "(GMT+02:00) Europe/Bucharest",
                    "code": "Europe/Bucharest",
                    "offset": "+0200"
                  },
                  {
                    "id": 190,
                    "name": "(GMT+02:00) Europe/Chisinau",
                    "code": "Europe/Chisinau",
                    "offset": "+0200"
                  },
                  {
                    "id": 126,
                    "name": "(GMT+02:00) Europe/Helsinki",
                    "code": "Europe/Helsinki",
                    "offset": "+0200"
                  },
                  {
                    "id": 293,
                    "name": "(GMT+02:00) Europe/Istanbul",
                    "code": "Europe/Istanbul",
                    "offset": "+0200"
                  },
                  {
                    "id": 253,
                    "name": "(GMT+02:00) Europe/Kaliningrad",
                    "code": "Europe/Kaliningrad",
                    "offset": "+0200"
                  },
                  {
                    "id": 297,
                    "name": "(GMT+02:00) Europe/Kiev",
                    "code": "Europe/Kiev",
                    "offset": "+0200"
                  },
                  {
                    "id": 186,
                    "name": "(GMT+02:00) Europe/Riga",
                    "code": "Europe/Riga",
                    "offset": "+0200"
                  },
                  {
                    "id": 46,
                    "name": "(GMT+02:00) Europe/Sofia",
                    "code": "Europe/Sofia",
                    "offset": "+0200"
                  },
                  {
                    "id": 120,
                    "name": "(GMT+02:00) Europe/Tallinn",
                    "code": "Europe/Tallinn",
                    "offset": "+0200"
                  },
                  {
                    "id": 298,
                    "name": "(GMT+02:00) Europe/Uzhgorod",
                    "code": "Europe/Uzhgorod",
                    "offset": "+0200"
                  },
                  {
                    "id": 184,
                    "name": "(GMT+02:00) Europe/Vilnius",
                    "code": "Europe/Vilnius",
                    "offset": "+0200"
                  },
                  {
                    "id": 299,
                    "name": "(GMT+02:00) Europe/Zaporozhye",
                    "code": "Europe/Zaporozhye",
                    "offset": "+0200"
                  },
                  {
                    "id": 277,
                    "name": "(GMT+03:00) Africa/Khartoum",
                    "code": "Africa/Khartoum",
                    "offset": "+0300"
                  },
                  {
                    "id": 168,
                    "name": "(GMT+03:00) Africa/Nairobi",
                    "code": "Africa/Nairobi",
                    "offset": "+0300"
                  },
                  {
                    "id": 13,
                    "name": "(GMT+03:00) Antarctica/Syowa",
                    "code": "Antarctica/Syowa",
                    "offset": "+0300"
                  },
                  {
                    "id": 161,
                    "name": "(GMT+03:00) Asia/Baghdad",
                    "code": "Asia/Baghdad",
                    "offset": "+0300"
                  },
                  {
                    "id": 249,
                    "name": "(GMT+03:00) Asia/Qatar",
                    "code": "Asia/Qatar",
                    "offset": "+0300"
                  },
                  {
                    "id": 274,
                    "name": "(GMT+03:00) Asia/Riyadh",
                    "code": "Asia/Riyadh",
                    "offset": "+0300"
                  },
                  {
                    "id": 68,
                    "name": "(GMT+03:00) Europe/Minsk",
                    "code": "Europe/Minsk",
                    "offset": "+0300"
                  },
                  {
                    "id": 254,
                    "name": "(GMT+03:00) Europe/Moscow",
                    "code": "Europe/Moscow",
                    "offset": "+0300"
                  },
                  {
                    "id": 255,
                    "name": "(GMT+03:00) Europe/Simferopol",
                    "code": "Europe/Simferopol",
                    "offset": "+0300"
                  },
                  {
                    "id": 256,
                    "name": "(GMT+03:00) Europe/Volgograd",
                    "code": "Europe/Volgograd",
                    "offset": "+0300"
                  },
                  {
                    "id": 162,
                    "name": "(GMT+03:30) Asia/Tehran",
                    "code": "Asia/Tehran",
                    "offset": "+0330"
                  },
                  {
                    "id": 42,
                    "name": "(GMT+04:00) Asia/Baku",
                    "code": "Asia/Baku",
                    "offset": "+0400"
                  },
                  {
                    "id": 2,
                    "name": "(GMT+04:00) Asia/Dubai",
                    "code": "Asia/Dubai",
                    "offset": "+0400"
                  },
                  {
                    "id": 135,
                    "name": "(GMT+04:00) Asia/Tbilisi",
                    "code": "Asia/Tbilisi",
                    "offset": "+0400"
                  },
                  {
                    "id": 5,
                    "name": "(GMT+04:00) Asia/Yerevan",
                    "code": "Asia/Yerevan",
                    "offset": "+0400"
                  },
                  {
                    "id": 257,
                    "name": "(GMT+04:00) Europe/Samara",
                    "code": "Europe/Samara",
                    "offset": "+0400"
                  },
                  {
                    "id": 276,
                    "name": "(GMT+04:00) Indian/Mahe",
                    "code": "Indian/Mahe",
                    "offset": "+0400"
                  },
                  {
                    "id": 200,
                    "name": "(GMT+04:00) Indian/Mauritius",
                    "code": "Indian/Mauritius",
                    "offset": "+0400"
                  },
                  {
                    "id": 250,
                    "name": "(GMT+04:00) Indian/Reunion",
                    "code": "Indian/Reunion",
                    "offset": "+0400"
                  },
                  {
                    "id": 3,
                    "name": "(GMT+04:30) Asia/Kabul",
                    "code": "Asia/Kabul",
                    "offset": "+0430"
                  },
                  {
                    "id": 9,
                    "name": "(GMT+05:00) Antarctica/Davis",
                    "code": "Antarctica/Davis",
                    "offset": "+0500"
                  },
                  {
                    "id": 8,
                    "name": "(GMT+05:00) Antarctica/Mawson",
                    "code": "Antarctica/Mawson",
                    "offset": "+0500"
                  },
                  {
                    "id": 179,
                    "name": "(GMT+05:00) Asia/Aqtau",
                    "code": "Asia/Aqtau",
                    "offset": "+0500"
                  },
                  {
                    "id": 178,
                    "name": "(GMT+05:00) Asia/Aqtobe",
                    "code": "Asia/Aqtobe",
                    "offset": "+0500"
                  },
                  {
                    "id": 290,
                    "name": "(GMT+05:00) Asia/Ashgabat",
                    "code": "Asia/Ashgabat",
                    "offset": "+0500"
                  },
                  {
                    "id": 287,
                    "name": "(GMT+05:00) Asia/Dushanbe",
                    "code": "Asia/Dushanbe",
                    "offset": "+0500"
                  },
                  {
                    "id": 237,
                    "name": "(GMT+05:00) Asia/Karachi",
                    "code": "Asia/Karachi",
                    "offset": "+0500"
                  },
                  {
                    "id": 180,
                    "name": "(GMT+05:00) Asia/Oral",
                    "code": "Asia/Oral",
                    "offset": "+0500"
                  },
                  {
                    "id": 331,
                    "name": "(GMT+05:00) Asia/Samarkand",
                    "code": "Asia/Samarkand",
                    "offset": "+0500"
                  },
                  {
                    "id": 332,
                    "name": "(GMT+05:00) Asia/Tashkent",
                    "code": "Asia/Tashkent",
                    "offset": "+0500"
                  },
                  {
                    "id": 258,
                    "name": "(GMT+05:00) Asia/Yekaterinburg",
                    "code": "Asia/Yekaterinburg",
                    "offset": "+0500"
                  },
                  {
                    "id": 285,
                    "name": "(GMT+05:00) Indian/Kerguelen",
                    "code": "Indian/Kerguelen",
                    "offset": "+0500"
                  },
                  {
                    "id": 201,
                    "name": "(GMT+05:00) Indian/Maldives",
                    "code": "Indian/Maldives",
                    "offset": "+0500"
                  },
                  {
                    "id": 182,
                    "name": "(GMT+05:30) Asia/Colombo",
                    "code": "Asia/Colombo",
                    "offset": "+0530"
                  },
                  {
                    "id": 159,
                    "name": "(GMT+05:30) Asia/Kolkata",
                    "code": "Asia/Kolkata",
                    "offset": "+0530"
                  },
                  {
                    "id": 224,
                    "name": "(GMT+05:45) Asia/Kathmandu",
                    "code": "Asia/Kathmandu",
                    "offset": "+0545"
                  },
                  {
                    "id": 11,
                    "name": "(GMT+06:00) Antarctica/Vostok",
                    "code": "Antarctica/Vostok",
                    "offset": "+0600"
                  },
                  {
                    "id": 176,
                    "name": "(GMT+06:00) Asia/Almaty",
                    "code": "Asia/Almaty",
                    "offset": "+0600"
                  },
                  {
                    "id": 169,
                    "name": "(GMT+06:00) Asia/Bishkek",
                    "code": "Asia/Bishkek",
                    "offset": "+0600"
                  },
                  {
                    "id": 44,
                    "name": "(GMT+06:00) Asia/Dhaka",
                    "code": "Asia/Dhaka",
                    "offset": "+0600"
                  },
                  {
                    "id": 260,
                    "name": "(GMT+06:00) Asia/Novosibirsk",
                    "code": "Asia/Novosibirsk",
                    "offset": "+0600"
                  },
                  {
                    "id": 259,
                    "name": "(GMT+06:00) Asia/Omsk",
                    "code": "Asia/Omsk",
                    "offset": "+0600"
                  },
                  {
                    "id": 177,
                    "name": "(GMT+06:00) Asia/Qyzylorda",
                    "code": "Asia/Qyzylorda",
                    "offset": "+0600"
                  },
                  {
                    "id": 67,
                    "name": "(GMT+06:00) Asia/Thimphu",
                    "code": "Asia/Thimphu",
                    "offset": "+0600"
                  },
                  {
                    "id": 160,
                    "name": "(GMT+06:00) Indian/Chagos",
                    "code": "Indian/Chagos",
                    "offset": "+0600"
                  },
                  {
                    "id": 193,
                    "name": "(GMT+06:30) Asia/Rangoon",
                    "code": "Asia/Rangoon",
                    "offset": "+0630"
                  },
                  {
                    "id": 98,
                    "name": "(GMT+06:30) Indian/Cocos",
                    "code": "Indian/Cocos",
                    "offset": "+0630"
                  },
                  {
                    "id": 286,
                    "name": "(GMT+07:00) Asia/Bangkok",
                    "code": "Asia/Bangkok",
                    "offset": "+0700"
                  },
                  {
                    "id": 334,
                    "name": "(GMT+07:00) Asia/Ho_Chi_Minh",
                    "code": "Asia/Ho_Chi_Minh",
                    "offset": "+0700"
                  },
                  {
                    "id": 195,
                    "name": "(GMT+07:00) Asia/Hovd",
                    "code": "Asia/Hovd",
                    "offset": "+0700"
                  },
                  {
                    "id": 153,
                    "name": "(GMT+07:00) Asia/Jakarta",
                    "code": "Asia/Jakarta",
                    "offset": "+0700"
                  },
                  {
                    "id": 262,
                    "name": "(GMT+07:00) Asia/Krasnoyarsk",
                    "code": "Asia/Krasnoyarsk",
                    "offset": "+0700"
                  },
                  {
                    "id": 261,
                    "name": "(GMT+07:00) Asia/Novokuznetsk",
                    "code": "Asia/Novokuznetsk",
                    "offset": "+0700"
                  },
                  {
                    "id": 154,
                    "name": "(GMT+07:00) Asia/Pontianak",
                    "code": "Asia/Pontianak",
                    "offset": "+0700"
                  },
                  {
                    "id": 111,
                    "name": "(GMT+07:00) Indian/Christmas",
                    "code": "Indian/Christmas",
                    "offset": "+0700"
                  },
                  {
                    "id": 48,
                    "name": "(GMT+08:00) Asia/Brunei",
                    "code": "Asia/Brunei",
                    "offset": 800
                  },
                  {
                    "id": 264,
                    "name": "(GMT+08:00) Asia/Chita",
                    "code": "Asia/Chita",
                    "offset": 800
                  },
                  {
                    "id": 196,
                    "name": "(GMT+08:00) Asia/Choibalsan",
                    "code": "Asia/Choibalsan",
                    "offset": 800
                  },
                  {
                    "id": 149,
                    "name": "(GMT+08:00) Asia/Hong_Kong",
                    "code": "Asia/Hong_Kong",
                    "offset": 800
                  },
                  {
                    "id": 263,
                    "name": "(GMT+08:00) Asia/Irkutsk",
                    "code": "Asia/Irkutsk",
                    "offset": 800
                  },
                  {
                    "id": 214,
                    "name": "(GMT+08:00) Asia/Kuala_Lumpur",
                    "code": "Asia/Kuala_Lumpur",
                    "offset": 800
                  },
                  {
                    "id": 215,
                    "name": "(GMT+08:00) Asia/Kuching",
                    "code": "Asia/Kuching",
                    "offset": 800
                  },
                  {
                    "id": 197,
                    "name": "(GMT+08:00) Asia/Macau",
                    "code": "Asia/Macau",
                    "offset": 800
                  },
                  {
                    "id": 155,
                    "name": "(GMT+08:00) Asia/Makassar",
                    "code": "Asia/Makassar",
                    "offset": 800
                  },
                  {
                    "id": 236,
                    "name": "(GMT+08:00) Asia/Manila",
                    "code": "Asia/Manila",
                    "offset": 800
                  },
                  {
                    "id": 104,
                    "name": "(GMT+08:00) Asia/Shanghai",
                    "code": "Asia/Shanghai",
                    "offset": 800
                  },
                  {
                    "id": 279,
                    "name": "(GMT+08:00) Asia/Singapore",
                    "code": "Asia/Singapore",
                    "offset": 800
                  },
                  {
                    "id": 296,
                    "name": "(GMT+08:00) Asia/Taipei",
                    "code": "Asia/Taipei",
                    "offset": 800
                  },
                  {
                    "id": 194,
                    "name": "(GMT+08:00) Asia/Ulaanbaatar",
                    "code": "Asia/Ulaanbaatar",
                    "offset": 800
                  },
                  {
                    "id": 105,
                    "name": "(GMT+08:00) Asia/Urumqi",
                    "code": "Asia/Urumqi",
                    "offset": 800
                  },
                  {
                    "id": 40,
                    "name": "(GMT+08:00) Australia/Perth",
                    "code": "Australia/Perth",
                    "offset": 800
                  },
                  {
                    "id": 173,
                    "name": "(GMT+08:30) Asia/Pyongyang",
                    "code": "Asia/Pyongyang",
                    "offset": 830
                  },
                  {
                    "id": 41,
                    "name": "(GMT+08:45) Australia/Eucla",
                    "code": "Australia/Eucla",
                    "offset": 845
                  },
                  {
                    "id": 289,
                    "name": "(GMT+09:00) Asia/Dili",
                    "code": "Asia/Dili",
                    "offset": 900
                  },
                  {
                    "id": 156,
                    "name": "(GMT+09:00) Asia/Jayapura",
                    "code": "Asia/Jayapura",
                    "offset": 900
                  },
                  {
                    "id": 266,
                    "name": "(GMT+09:00) Asia/Khandyga",
                    "code": "Asia/Khandyga",
                    "offset": 900
                  },
                  {
                    "id": 174,
                    "name": "(GMT+09:00) Asia/Seoul",
                    "code": "Asia/Seoul",
                    "offset": 900
                  },
                  {
                    "id": 167,
                    "name": "(GMT+09:00) Asia/Tokyo",
                    "code": "Asia/Tokyo",
                    "offset": 900
                  },
                  {
                    "id": 265,
                    "name": "(GMT+09:00) Asia/Yakutsk",
                    "code": "Asia/Yakutsk",
                    "offset": 900
                  },
                  {
                    "id": 247,
                    "name": "(GMT+09:00) Pacific/Palau",
                    "code": "Pacific/Palau",
                    "offset": 900
                  },
                  {
                    "id": 38,
                    "name": "(GMT+09:30) Australia/Adelaide",
                    "code": "Australia/Adelaide",
                    "offset": 930
                  },
                  {
                    "id": 35,
                    "name": "(GMT+09:30) Australia/Broken_Hill",
                    "code": "Australia/Broken_Hill",
                    "offset": 930
                  },
                  {
                    "id": 39,
                    "name": "(GMT+09:30) Australia/Darwin",
                    "code": "Australia/Darwin",
                    "offset": 930
                  },
                  {
                    "id": 12,
                    "name": "(GMT+10:00) Antarctica/DumontDUrville",
                    "code": "Antarctica/DumontDUrville",
                    "offset": "+1000"
                  },
                  {
                    "id": 270,
                    "name": "(GMT+10:00) Asia/Magadan",
                    "code": "Asia/Magadan",
                    "offset": "+1000"
                  },
                  {
                    "id": 269,
                    "name": "(GMT+10:00) Asia/Ust-Nera",
                    "code": "Asia/Ust-Nera",
                    "offset": "+1000"
                  },
                  {
                    "id": 267,
                    "name": "(GMT+10:00) Asia/Vladivostok",
                    "code": "Asia/Vladivostok",
                    "offset": "+1000"
                  },
                  {
                    "id": 36,
                    "name": "(GMT+10:00) Australia/Brisbane",
                    "code": "Australia/Brisbane",
                    "offset": "+1000"
                  },
                  {
                    "id": 32,
                    "name": "(GMT+10:00) Australia/Currie",
                    "code": "Australia/Currie",
                    "offset": "+1000"
                  },
                  {
                    "id": 31,
                    "name": "(GMT+10:00) Australia/Hobart",
                    "code": "Australia/Hobart",
                    "offset": "+1000"
                  },
                  {
                    "id": 37,
                    "name": "(GMT+10:00) Australia/Lindeman",
                    "code": "Australia/Lindeman",
                    "offset": "+1000"
                  },
                  {
                    "id": 33,
                    "name": "(GMT+10:00) Australia/Melbourne",
                    "code": "Australia/Melbourne",
                    "offset": "+1000"
                  },
                  {
                    "id": 34,
                    "name": "(GMT+10:00) Australia/Sydney",
                    "code": "Australia/Sydney",
                    "offset": "+1000"
                  },
                  {
                    "id": 129,
                    "name": "(GMT+10:00) Pacific/Chuuk",
                    "code": "Pacific/Chuuk",
                    "offset": "+1000"
                  },
                  {
                    "id": 146,
                    "name": "(GMT+10:00) Pacific/Guam",
                    "code": "Pacific/Guam",
                    "offset": "+1000"
                  },
                  {
                    "id": 234,
                    "name": "(GMT+10:00) Pacific/Port_Moresby",
                    "code": "Pacific/Port_Moresby",
                    "offset": "+1000"
                  },
                  {
                    "id": 29,
                    "name": "(GMT+10:30) Australia/Lord_Howe",
                    "code": "Australia/Lord_Howe",
                    "offset": "+1030"
                  },
                  {
                    "id": 10,
                    "name": "(GMT+11:00) Antarctica/Casey",
                    "code": "Antarctica/Casey",
                    "offset": "+1100"
                  },
                  {
                    "id": 30,
                    "name": "(GMT+11:00) Antarctica/Macquarie",
                    "code": "Antarctica/Macquarie",
                    "offset": "+1100"
                  },
                  {
                    "id": 268,
                    "name": "(GMT+11:00) Asia/Sakhalin",
                    "code": "Asia/Sakhalin",
                    "offset": "+1100"
                  },
                  {
                    "id": 271,
                    "name": "(GMT+11:00) Asia/Srednekolymsk",
                    "code": "Asia/Srednekolymsk",
                    "offset": "+1100"
                  },
                  {
                    "id": 235,
                    "name": "(GMT+11:00) Pacific/Bougainville",
                    "code": "Pacific/Bougainville",
                    "offset": "+1100"
                  },
                  {
                    "id": 335,
                    "name": "(GMT+11:00) Pacific/Efate",
                    "code": "Pacific/Efate",
                    "offset": "+1100"
                  },
                  {
                    "id": 275,
                    "name": "(GMT+11:00) Pacific/Guadalcanal",
                    "code": "Pacific/Guadalcanal",
                    "offset": "+1100"
                  },
                  {
                    "id": 131,
                    "name": "(GMT+11:00) Pacific/Kosrae",
                    "code": "Pacific/Kosrae",
                    "offset": "+1100"
                  },
                  {
                    "id": 218,
                    "name": "(GMT+11:00) Pacific/Noumea",
                    "code": "Pacific/Noumea",
                    "offset": "+1100"
                  },
                  {
                    "id": 130,
                    "name": "(GMT+11:00) Pacific/Pohnpei",
                    "code": "Pacific/Pohnpei",
                    "offset": "+1100"
                  },
                  {
                    "id": 219,
                    "name": "(GMT+11:30) Pacific/Norfolk",
                    "code": "Pacific/Norfolk",
                    "offset": "+1130"
                  },
                  {
                    "id": 273,
                    "name": "(GMT+12:00) Asia/Anadyr",
                    "code": "Asia/Anadyr",
                    "offset": "+1200"
                  },
                  {
                    "id": 272,
                    "name": "(GMT+12:00) Asia/Kamchatka",
                    "code": "Asia/Kamchatka",
                    "offset": "+1200"
                  },
                  {
                    "id": 227,
                    "name": "(GMT+12:00) Pacific/Auckland",
                    "code": "Pacific/Auckland",
                    "offset": "+1200"
                  },
                  {
                    "id": 127,
                    "name": "(GMT+12:00) Pacific/Fiji",
                    "code": "Pacific/Fiji",
                    "offset": "+1200"
                  },
                  {
                    "id": 295,
                    "name": "(GMT+12:00) Pacific/Funafuti",
                    "code": "Pacific/Funafuti",
                    "offset": "+1200"
                  },
                  {
                    "id": 192,
                    "name": "(GMT+12:00) Pacific/Kwajalein",
                    "code": "Pacific/Kwajalein",
                    "offset": "+1200"
                  },
                  {
                    "id": 191,
                    "name": "(GMT+12:00) Pacific/Majuro",
                    "code": "Pacific/Majuro",
                    "offset": "+1200"
                  },
                  {
                    "id": 225,
                    "name": "(GMT+12:00) Pacific/Nauru",
                    "code": "Pacific/Nauru",
                    "offset": "+1200"
                  },
                  {
                    "id": 170,
                    "name": "(GMT+12:00) Pacific/Tarawa",
                    "code": "Pacific/Tarawa",
                    "offset": "+1200"
                  },
                  {
                    "id": 300,
                    "name": "(GMT+12:00) Pacific/Wake",
                    "code": "Pacific/Wake",
                    "offset": "+1200"
                  },
                  {
                    "id": 336,
                    "name": "(GMT+12:00) Pacific/Wallis",
                    "code": "Pacific/Wallis",
                    "offset": "+1200"
                  },
                  {
                    "id": 228,
                    "name": "(GMT+12:45) Pacific/Chatham",
                    "code": "Pacific/Chatham",
                    "offset": "+1245"
                  },
                  {
                    "id": 337,
                    "name": "(GMT+13:00) Pacific/Apia",
                    "code": "Pacific/Apia",
                    "offset": "+1300"
                  },
                  {
                    "id": 171,
                    "name": "(GMT+13:00) Pacific/Enderbury",
                    "code": "Pacific/Enderbury",
                    "offset": "+1300"
                  },
                  {
                    "id": 288,
                    "name": "(GMT+13:00) Pacific/Fakaofo",
                    "code": "Pacific/Fakaofo",
                    "offset": "+1300"
                  },
                  {
                    "id": 292,
                    "name": "(GMT+13:00) Pacific/Tongatapu",
                    "code": "Pacific/Tongatapu",
                    "offset": "+1300"
                  },
                  {
                    "id": 172,
                    "name": "(GMT+14:00) Pacific/Kiritimati",
                    "code": "Pacific/Kiritimati",
                    "offset": "+1400"
                  }
                ]
              }
            }
          }
        }
      },
      "parameters": {
        "body": []
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "timezones": [
              {
                "id": 226,
                "name": "(GMT-11:00) Pacific/Niue",
                "code": "Pacific/Niue",
                "offset": "-1100"
              },
              {
                "id": 27,
                "name": "(GMT-11:00) Pacific/Pago_Pago",
                "code": "Pacific/Pago_Pago",
                "offset": "-1100"
              },
              {
                "id": 328,
                "name": "(GMT-10:00) America/Adak",
                "code": "America/Adak",
                "offset": "-1000"
              },
              {
                "id": 329,
                "name": "(GMT-10:00) Pacific/Honolulu",
                "code": "Pacific/Honolulu",
                "offset": "-1000"
              },
              {
                "id": 101,
                "name": "(GMT-10:00) Pacific/Rarotonga",
                "code": "Pacific/Rarotonga",
                "offset": "-1000"
              },
              {
                "id": 231,
                "name": "(GMT-10:00) Pacific/Tahiti",
                "code": "Pacific/Tahiti",
                "offset": "-1000"
              },
              {
                "id": 232,
                "name": "(GMT-09:30) Pacific/Marquesas",
                "code": "Pacific/Marquesas",
                "offset": "-0930"
              },
              {
                "id": 323,
                "name": "(GMT-09:00) America/Anchorage",
                "code": "America/Anchorage",
                "offset": "-0900"
              },
              {
                "id": 324,
                "name": "(GMT-09:00) America/Juneau",
                "code": "America/Juneau",
                "offset": "-0900"
              },
              {
                "id": 327,
                "name": "(GMT-09:00) America/Nome",
                "code": "America/Nome",
                "offset": "-0900"
              },
              {
                "id": 325,
                "name": "(GMT-09:00) America/Sitka",
                "code": "America/Sitka",
                "offset": "-0900"
              },
              {
                "id": 326,
                "name": "(GMT-09:00) America/Yakutat",
                "code": "America/Yakutat",
                "offset": "-0900"
              },
              {
                "id": 233,
                "name": "(GMT-09:00) Pacific/Gambier",
                "code": "Pacific/Gambier",
                "offset": "-0900"
              },
              {
                "id": 97,
                "name": "(GMT-08:00) America/Dawson",
                "code": "America/Dawson",
                "offset": "-0800"
              },
              {
                "id": 321,
                "name": "(GMT-08:00) America/Los_Angeles",
                "code": "America/Los_Angeles",
                "offset": "-0800"
              },
              {
                "id": 322,
                "name": "(GMT-08:00) America/Metlakatla",
                "code": "America/Metlakatla",
                "offset": "-0800"
              },
              {
                "id": 212,
                "name": "(GMT-08:00) America/Santa_Isabel",
                "code": "America/Santa_Isabel",
                "offset": "-0800"
              },
              {
                "id": 211,
                "name": "(GMT-08:00) America/Tijuana",
                "code": "America/Tijuana",
                "offset": "-0800"
              },
              {
                "id": 95,
                "name": "(GMT-08:00) America/Vancouver",
                "code": "America/Vancouver",
                "offset": "-0800"
              },
              {
                "id": 96,
                "name": "(GMT-08:00) America/Whitehorse",
                "code": "America/Whitehorse",
                "offset": "-0800"
              },
              {
                "id": 240,
                "name": "(GMT-08:00) Pacific/Pitcairn",
                "code": "Pacific/Pitcairn",
                "offset": "-0800"
              },
              {
                "id": 319,
                "name": "(GMT-07:00) America/Boise",
                "code": "America/Boise",
                "offset": "-0700"
              },
              {
                "id": 89,
                "name": "(GMT-07:00) America/Cambridge_Bay",
                "code": "America/Cambridge_Bay",
                "offset": "-0700"
              },
              {
                "id": 208,
                "name": "(GMT-07:00) America/Chihuahua",
                "code": "America/Chihuahua",
                "offset": "-0700"
              },
              {
                "id": 92,
                "name": "(GMT-07:00) America/Creston",
                "code": "America/Creston",
                "offset": "-0700"
              },
              {
                "id": 93,
                "name": "(GMT-07:00) America/Dawson_Creek",
                "code": "America/Dawson_Creek",
                "offset": "-0700"
              },
              {
                "id": 318,
                "name": "(GMT-07:00) America/Denver",
                "code": "America/Denver",
                "offset": "-0700"
              },
              {
                "id": 88,
                "name": "(GMT-07:00) America/Edmonton",
                "code": "America/Edmonton",
                "offset": "-0700"
              },
              {
                "id": 94,
                "name": "(GMT-07:00) America/Fort_Nelson",
                "code": "America/Fort_Nelson",
                "offset": "-0700"
              },
              {
                "id": 210,
                "name": "(GMT-07:00) America/Hermosillo",
                "code": "America/Hermosillo",
                "offset": "-0700"
              },
              {
                "id": 91,
                "name": "(GMT-07:00) America/Inuvik",
                "code": "America/Inuvik",
                "offset": "-0700"
              },
              {
                "id": 207,
                "name": "(GMT-07:00) America/Mazatlan",
                "code": "America/Mazatlan",
                "offset": "-0700"
              },
              {
                "id": 209,
                "name": "(GMT-07:00) America/Ojinaga",
                "code": "America/Ojinaga",
                "offset": "-0700"
              },
              {
                "id": 320,
                "name": "(GMT-07:00) America/Phoenix",
                "code": "America/Phoenix",
                "offset": "-0700"
              },
              {
                "id": 90,
                "name": "(GMT-07:00) America/Yellowknife",
                "code": "America/Yellowknife",
                "offset": "-0700"
              },
              {
                "id": 213,
                "name": "(GMT-06:00) America/Bahia_Banderas",
                "code": "America/Bahia_Banderas",
                "offset": "-0600"
              },
              {
                "id": 69,
                "name": "(GMT-06:00) America/Belize",
                "code": "America/Belize",
                "offset": "-0600"
              },
              {
                "id": 203,
                "name": "(GMT-06:00) America/Cancun",
                "code": "America/Cancun",
                "offset": "-0600"
              },
              {
                "id": 311,
                "name": "(GMT-06:00) America/Chicago",
                "code": "America/Chicago",
                "offset": "-0600"
              },
              {
                "id": 107,
                "name": "(GMT-06:00) America/Costa_Rica",
                "code": "America/Costa_Rica",
                "offset": "-0600"
              },
              {
                "id": 281,
                "name": "(GMT-06:00) America/El_Salvador",
                "code": "America/El_Salvador",
                "offset": "-0600"
              },
              {
                "id": 145,
                "name": "(GMT-06:00) America/Guatemala",
                "code": "America/Guatemala",
                "offset": "-0600"
              },
              {
                "id": 313,
                "name": "(GMT-06:00) America/Indiana/Knox",
                "code": "America/Indiana/Knox",
                "offset": "-0600"
              },
              {
                "id": 312,
                "name": "(GMT-06:00) America/Indiana/Tell_City",
                "code": "America/Indiana/Tell_City",
                "offset": "-0600"
              },
              {
                "id": 221,
                "name": "(GMT-06:00) America/Managua",
                "code": "America/Managua",
                "offset": "-0600"
              },
              {
                "id": 206,
                "name": "(GMT-06:00) America/Matamoros",
                "code": "America/Matamoros",
                "offset": "-0600"
              },
              {
                "id": 314,
                "name": "(GMT-06:00) America/Menominee",
                "code": "America/Menominee",
                "offset": "-0600"
              },
              {
                "id": 204,
                "name": "(GMT-06:00) America/Merida",
                "code": "America/Merida",
                "offset": "-0600"
              },
              {
                "id": 202,
                "name": "(GMT-06:00) America/Mexico_City",
                "code": "America/Mexico_City",
                "offset": "-0600"
              },
              {
                "id": 205,
                "name": "(GMT-06:00) America/Monterrey",
                "code": "America/Monterrey",
                "offset": "-0600"
              },
              {
                "id": 317,
                "name": "(GMT-06:00) America/North_Dakota/Beulah",
                "code": "America/North_Dakota/Beulah",
                "offset": "-0600"
              },
              {
                "id": 315,
                "name": "(GMT-06:00) America/North_Dakota/Center",
                "code": "America/North_Dakota/Center",
                "offset": "-0600"
              },
              {
                "id": 316,
                "name": "(GMT-06:00) America/North_Dakota/New_Salem",
                "code": "America/North_Dakota/New_Salem",
                "offset": "-0600"
              },
              {
                "id": 85,
                "name": "(GMT-06:00) America/Rainy_River",
                "code": "America/Rainy_River",
                "offset": "-0600"
              },
              {
                "id": 83,
                "name": "(GMT-06:00) America/Rankin_Inlet",
                "code": "America/Rankin_Inlet",
                "offset": "-0600"
              },
              {
                "id": 86,
                "name": "(GMT-06:00) America/Regina",
                "code": "America/Regina",
                "offset": "-0600"
              },
              {
                "id": 81,
                "name": "(GMT-06:00) America/Resolute",
                "code": "America/Resolute",
                "offset": "-0600"
              },
              {
                "id": 87,
                "name": "(GMT-06:00) America/Swift_Current",
                "code": "America/Swift_Current",
                "offset": "-0600"
              },
              {
                "id": 150,
                "name": "(GMT-06:00) America/Tegucigalpa",
                "code": "America/Tegucigalpa",
                "offset": "-0600"
              },
              {
                "id": 84,
                "name": "(GMT-06:00) America/Winnipeg",
                "code": "America/Winnipeg",
                "offset": "-0600"
              },
              {
                "id": 103,
                "name": "(GMT-06:00) Pacific/Easter",
                "code": "Pacific/Easter",
                "offset": "-0600"
              },
              {
                "id": 119,
                "name": "(GMT-06:00) Pacific/Galapagos",
                "code": "Pacific/Galapagos",
                "offset": "-0600"
              },
              {
                "id": 82,
                "name": "(GMT-05:00) America/Atikokan",
                "code": "America/Atikokan",
                "offset": "-0500"
              },
              {
                "id": 106,
                "name": "(GMT-05:00) America/Bogota",
                "code": "America/Bogota",
                "offset": "-0500"
              },
              {
                "id": 175,
                "name": "(GMT-05:00) America/Cayman",
                "code": "America/Cayman",
                "offset": "-0500"
              },
              {
                "id": 302,
                "name": "(GMT-05:00) America/Detroit",
                "code": "America/Detroit",
                "offset": "-0500"
              },
              {
                "id": 64,
                "name": "(GMT-05:00) America/Eirunepe",
                "code": "America/Eirunepe",
                "offset": "-0500"
              },
              {
                "id": 283,
                "name": "(GMT-05:00) America/Grand_Turk",
                "code": "America/Grand_Turk",
                "offset": "-0500"
              },
              {
                "id": 118,
                "name": "(GMT-05:00) America/Guayaquil",
                "code": "America/Guayaquil",
                "offset": "-0500"
              },
              {
                "id": 108,
                "name": "(GMT-05:00) America/Havana",
                "code": "America/Havana",
                "offset": "-0500"
              },
              {
                "id": 305,
                "name": "(GMT-05:00) America/Indiana/Indianapolis",
                "code": "America/Indiana/Indianapolis",
                "offset": "-0500"
              },
              {
                "id": 308,
                "name": "(GMT-05:00) America/Indiana/Marengo",
                "code": "America/Indiana/Marengo",
                "offset": "-0500"
              },
              {
                "id": 309,
                "name": "(GMT-05:00) America/Indiana/Petersburg",
                "code": "America/Indiana/Petersburg",
                "offset": "-0500"
              },
              {
                "id": 310,
                "name": "(GMT-05:00) America/Indiana/Vevay",
                "code": "America/Indiana/Vevay",
                "offset": "-0500"
              },
              {
                "id": 306,
                "name": "(GMT-05:00) America/Indiana/Vincennes",
                "code": "America/Indiana/Vincennes",
                "offset": "-0500"
              },
              {
                "id": 307,
                "name": "(GMT-05:00) America/Indiana/Winamac",
                "code": "America/Indiana/Winamac",
                "offset": "-0500"
              },
              {
                "id": 79,
                "name": "(GMT-05:00) America/Iqaluit",
                "code": "America/Iqaluit",
                "offset": "-0500"
              },
              {
                "id": 165,
                "name": "(GMT-05:00) America/Jamaica",
                "code": "America/Jamaica",
                "offset": "-0500"
              },
              {
                "id": 303,
                "name": "(GMT-05:00) America/Kentucky/Louisville",
                "code": "America/Kentucky/Louisville",
                "offset": "-0500"
              },
              {
                "id": 304,
                "name": "(GMT-05:00) America/Kentucky/Monticello",
                "code": "America/Kentucky/Monticello",
                "offset": "-0500"
              },
              {
                "id": 230,
                "name": "(GMT-05:00) America/Lima",
                "code": "America/Lima",
                "offset": "-0500"
              },
              {
                "id": 66,
                "name": "(GMT-05:00) America/Nassau",
                "code": "America/Nassau",
                "offset": "-0500"
              },
              {
                "id": 301,
                "name": "(GMT-05:00) America/New_York",
                "code": "America/New_York",
                "offset": "-0500"
              },
              {
                "id": 77,
                "name": "(GMT-05:00) America/Nipigon",
                "code": "America/Nipigon",
                "offset": "-0500"
              },
              {
                "id": 229,
                "name": "(GMT-05:00) America/Panama",
                "code": "America/Panama",
                "offset": "-0500"
              },
              {
                "id": 80,
                "name": "(GMT-05:00) America/Pangnirtung",
                "code": "America/Pangnirtung",
                "offset": "-0500"
              },
              {
                "id": 151,
                "name": "(GMT-05:00) America/Port-au-Prince",
                "code": "America/Port-au-Prince",
                "offset": "-0500"
              },
              {
                "id": 65,
                "name": "(GMT-05:00) America/Rio_Branco",
                "code": "America/Rio_Branco",
                "offset": "-0500"
              },
              {
                "id": 78,
                "name": "(GMT-05:00) America/Thunder_Bay",
                "code": "America/Thunder_Bay",
                "offset": "-0500"
              },
              {
                "id": 76,
                "name": "(GMT-05:00) America/Toronto",
                "code": "America/Toronto",
                "offset": "-0500"
              },
              {
                "id": 333,
                "name": "(GMT-04:30) America/Caracas",
                "code": "America/Caracas",
                "offset": "-0430"
              },
              {
                "id": 248,
                "name": "(GMT-04:00) America/Asuncion",
                "code": "America/Asuncion",
                "offset": "-0400"
              },
              {
                "id": 43,
                "name": "(GMT-04:00) America/Barbados",
                "code": "America/Barbados",
                "offset": "-0400"
              },
              {
                "id": 75,
                "name": "(GMT-04:00) America/Blanc-Sablon",
                "code": "America/Blanc-Sablon",
                "offset": "-0400"
              },
              {
                "id": 62,
                "name": "(GMT-04:00) America/Boa_Vista",
                "code": "America/Boa_Vista",
                "offset": "-0400"
              },
              {
                "id": 58,
                "name": "(GMT-04:00) America/Campo_Grande",
                "code": "America/Campo_Grande",
                "offset": "-0400"
              },
              {
                "id": 59,
                "name": "(GMT-04:00) America/Cuiaba",
                "code": "America/Cuiaba",
                "offset": "-0400"
              },
              {
                "id": 110,
                "name": "(GMT-04:00) America/Curacao",
                "code": "America/Curacao",
                "offset": "-0400"
              },
              {
                "id": 72,
                "name": "(GMT-04:00) America/Glace_Bay",
                "code": "America/Glace_Bay",
                "offset": "-0400"
              },
              {
                "id": 74,
                "name": "(GMT-04:00) America/Goose_Bay",
                "code": "America/Goose_Bay",
                "offset": "-0400"
              },
              {
                "id": 148,
                "name": "(GMT-04:00) America/Guyana",
                "code": "America/Guyana",
                "offset": "-0400"
              },
              {
                "id": 71,
                "name": "(GMT-04:00) America/Halifax",
                "code": "America/Halifax",
                "offset": "-0400"
              },
              {
                "id": 49,
                "name": "(GMT-04:00) America/La_Paz",
                "code": "America/La_Paz",
                "offset": "-0400"
              },
              {
                "id": 63,
                "name": "(GMT-04:00) America/Manaus",
                "code": "America/Manaus",
                "offset": "-0400"
              },
              {
                "id": 198,
                "name": "(GMT-04:00) America/Martinique",
                "code": "America/Martinique",
                "offset": "-0400"
              },
              {
                "id": 73,
                "name": "(GMT-04:00) America/Moncton",
                "code": "America/Moncton",
                "offset": "-0400"
              },
              {
                "id": 294,
                "name": "(GMT-04:00) America/Port_of_Spain",
                "code": "America/Port_of_Spain",
                "offset": "-0400"
              },
              {
                "id": 61,
                "name": "(GMT-04:00) America/Porto_Velho",
                "code": "America/Porto_Velho",
                "offset": "-0400"
              },
              {
                "id": 241,
                "name": "(GMT-04:00) America/Puerto_Rico",
                "code": "America/Puerto_Rico",
                "offset": "-0400"
              },
              {
                "id": 116,
                "name": "(GMT-04:00) America/Santo_Domingo",
                "code": "America/Santo_Domingo",
                "offset": "-0400"
              },
              {
                "id": 142,
                "name": "(GMT-04:00) America/Thule",
                "code": "America/Thule",
                "offset": "-0400"
              },
              {
                "id": 7,
                "name": "(GMT-04:00) Antarctica/Palmer",
                "code": "Antarctica/Palmer",
                "offset": "-0400"
              },
              {
                "id": 47,
                "name": "(GMT-04:00) Atlantic/Bermuda",
                "code": "Atlantic/Bermuda",
                "offset": "-0400"
              },
              {
                "id": 70,
                "name": "(GMT-03:30) America/St_Johns",
                "code": "America/St_Johns",
                "offset": "-0330"
              },
              {
                "id": 54,
                "name": "(GMT-03:00) America/Araguaina",
                "code": "America/Araguaina",
                "offset": "-0300"
              },
              {
                "id": 15,
                "name": "(GMT-03:00) America/Argentina/Buenos_Aires",
                "code": "America/Argentina/Buenos_Aires",
                "offset": "-0300"
              },
              {
                "id": 20,
                "name": "(GMT-03:00) America/Argentina/Catamarca",
                "code": "America/Argentina/Catamarca",
                "offset": "-0300"
              },
              {
                "id": 16,
                "name": "(GMT-03:00) America/Argentina/Cordoba",
                "code": "America/Argentina/Cordoba",
                "offset": "-0300"
              },
              {
                "id": 18,
                "name": "(GMT-03:00) America/Argentina/Jujuy",
                "code": "America/Argentina/Jujuy",
                "offset": "-0300"
              },
              {
                "id": 21,
                "name": "(GMT-03:00) America/Argentina/La_Rioja",
                "code": "America/Argentina/La_Rioja",
                "offset": "-0300"
              },
              {
                "id": 23,
                "name": "(GMT-03:00) America/Argentina/Mendoza",
                "code": "America/Argentina/Mendoza",
                "offset": "-0300"
              },
              {
                "id": 25,
                "name": "(GMT-03:00) America/Argentina/Rio_Gallegos",
                "code": "America/Argentina/Rio_Gallegos",
                "offset": "-0300"
              },
              {
                "id": 17,
                "name": "(GMT-03:00) America/Argentina/Salta",
                "code": "America/Argentina/Salta",
                "offset": "-0300"
              },
              {
                "id": 22,
                "name": "(GMT-03:00) America/Argentina/San_Juan",
                "code": "America/Argentina/San_Juan",
                "offset": "-0300"
              },
              {
                "id": 24,
                "name": "(GMT-03:00) America/Argentina/San_Luis",
                "code": "America/Argentina/San_Luis",
                "offset": "-0300"
              },
              {
                "id": 19,
                "name": "(GMT-03:00) America/Argentina/Tucuman",
                "code": "America/Argentina/Tucuman",
                "offset": "-0300"
              },
              {
                "id": 26,
                "name": "(GMT-03:00) America/Argentina/Ushuaia",
                "code": "America/Argentina/Ushuaia",
                "offset": "-0300"
              },
              {
                "id": 56,
                "name": "(GMT-03:00) America/Bahia",
                "code": "America/Bahia",
                "offset": "-0300"
              },
              {
                "id": 51,
                "name": "(GMT-03:00) America/Belem",
                "code": "America/Belem",
                "offset": "-0300"
              },
              {
                "id": 136,
                "name": "(GMT-03:00) America/Cayenne",
                "code": "America/Cayenne",
                "offset": "-0300"
              },
              {
                "id": 52,
                "name": "(GMT-03:00) America/Fortaleza",
                "code": "America/Fortaleza",
                "offset": "-0300"
              },
              {
                "id": 139,
                "name": "(GMT-03:00) America/Godthab",
                "code": "America/Godthab",
                "offset": "-0300"
              },
              {
                "id": 55,
                "name": "(GMT-03:00) America/Maceio",
                "code": "America/Maceio",
                "offset": "-0300"
              },
              {
                "id": 239,
                "name": "(GMT-03:00) America/Miquelon",
                "code": "America/Miquelon",
                "offset": "-0300"
              },
              {
                "id": 330,
                "name": "(GMT-03:00) America/Montevideo",
                "code": "America/Montevideo",
                "offset": "-0300"
              },
              {
                "id": 280,
                "name": "(GMT-03:00) America/Paramaribo",
                "code": "America/Paramaribo",
                "offset": "-0300"
              },
              {
                "id": 53,
                "name": "(GMT-03:00) America/Recife",
                "code": "America/Recife",
                "offset": "-0300"
              },
              {
                "id": 60,
                "name": "(GMT-03:00) America/Santarem",
                "code": "America/Santarem",
                "offset": "-0300"
              },
              {
                "id": 102,
                "name": "(GMT-03:00) America/Santiago",
                "code": "America/Santiago",
                "offset": "-0300"
              },
              {
                "id": 57,
                "name": "(GMT-03:00) America/Sao_Paulo",
                "code": "America/Sao_Paulo",
                "offset": "-0300"
              },
              {
                "id": 6,
                "name": "(GMT-03:00) Antarctica/Rothera",
                "code": "Antarctica/Rothera",
                "offset": "-0300"
              },
              {
                "id": 128,
                "name": "(GMT-03:00) Atlantic/Stanley",
                "code": "Atlantic/Stanley",
                "offset": "-0300"
              },
              {
                "id": 50,
                "name": "(GMT-02:00) America/Noronha",
                "code": "America/Noronha",
                "offset": "-0200"
              },
              {
                "id": 144,
                "name": "(GMT-02:00) Atlantic/South_Georgia",
                "code": "Atlantic/South_Georgia",
                "offset": "-0200"
              },
              {
                "id": 141,
                "name": "(GMT-01:00) America/Scoresbysund",
                "code": "America/Scoresbysund",
                "offset": "-0100"
              },
              {
                "id": 246,
                "name": "(GMT-01:00) Atlantic/Azores",
                "code": "Atlantic/Azores",
                "offset": "-0100"
              },
              {
                "id": 109,
                "name": "(GMT-01:00) Atlantic/Cape_Verde",
                "code": "Atlantic/Cape_Verde",
                "offset": "-0100"
              },
              {
                "id": 100,
                "name": "(GMT+00:00) Africa/Abidjan",
                "code": "Africa/Abidjan",
                "offset": "+0000"
              },
              {
                "id": 137,
                "name": "(GMT+00:00) Africa/Accra",
                "code": "Africa/Accra",
                "offset": "+0000"
              },
              {
                "id": 147,
                "name": "(GMT+00:00) Africa/Bissau",
                "code": "Africa/Bissau",
                "offset": "+0000"
              },
              {
                "id": 188,
                "name": "(GMT+00:00) Africa/Casablanca",
                "code": "Africa/Casablanca",
                "offset": "+0000"
              },
              {
                "id": 122,
                "name": "(GMT+00:00) Africa/El_Aaiun",
                "code": "Africa/El_Aaiun",
                "offset": "+0000"
              },
              {
                "id": 183,
                "name": "(GMT+00:00) Africa/Monrovia",
                "code": "Africa/Monrovia",
                "offset": "+0000"
              },
              {
                "id": 140,
                "name": "(GMT+00:00) America/Danmarkshavn",
                "code": "America/Danmarkshavn",
                "offset": "+0000"
              },
              {
                "id": 14,
                "name": "(GMT+00:00) Antarctica/Troll",
                "code": "Antarctica/Troll",
                "offset": "+0000"
              },
              {
                "id": 125,
                "name": "(GMT+00:00) Atlantic/Canary",
                "code": "Atlantic/Canary",
                "offset": "+0000"
              },
              {
                "id": 132,
                "name": "(GMT+00:00) Atlantic/Faroe",
                "code": "Atlantic/Faroe",
                "offset": "+0000"
              },
              {
                "id": 245,
                "name": "(GMT+00:00) Atlantic/Madeira",
                "code": "Atlantic/Madeira",
                "offset": "+0000"
              },
              {
                "id": 163,
                "name": "(GMT+00:00) Atlantic/Reykjavik",
                "code": "Atlantic/Reykjavik",
                "offset": "+0000"
              },
              {
                "id": 157,
                "name": "(GMT+00:00) Europe/Dublin",
                "code": "Europe/Dublin",
                "offset": "+0000"
              },
              {
                "id": 244,
                "name": "(GMT+00:00) Europe/Lisbon",
                "code": "Europe/Lisbon",
                "offset": "+0000"
              },
              {
                "id": 134,
                "name": "(GMT+00:00) Europe/London",
                "code": "Europe/London",
                "offset": "+0000"
              },
              {
                "id": 117,
                "name": "(GMT+01:00) Africa/Algiers",
                "code": "Africa/Algiers",
                "offset": "+0100"
              },
              {
                "id": 124,
                "name": "(GMT+01:00) Africa/Ceuta",
                "code": "Africa/Ceuta",
                "offset": "+0100"
              },
              {
                "id": 220,
                "name": "(GMT+01:00) Africa/Lagos",
                "code": "Africa/Lagos",
                "offset": "+0100"
              },
              {
                "id": 284,
                "name": "(GMT+01:00) Africa/Ndjamena",
                "code": "Africa/Ndjamena",
                "offset": "+0100"
              },
              {
                "id": 291,
                "name": "(GMT+01:00) Africa/Tunis",
                "code": "Africa/Tunis",
                "offset": "+0100"
              },
              {
                "id": 217,
                "name": "(GMT+01:00) Africa/Windhoek",
                "code": "Africa/Windhoek",
                "offset": "+0100"
              },
              {
                "id": 222,
                "name": "(GMT+01:00) Europe/Amsterdam",
                "code": "Europe/Amsterdam",
                "offset": "+0100"
              },
              {
                "id": 1,
                "name": "(GMT+01:00) Europe/Andorra",
                "code": "Europe/Andorra",
                "offset": "+0100"
              },
              {
                "id": 252,
                "name": "(GMT+01:00) Europe/Belgrade",
                "code": "Europe/Belgrade",
                "offset": "+0100"
              },
              {
                "id": 114,
                "name": "(GMT+01:00) Europe/Berlin",
                "code": "Europe/Berlin",
                "offset": "+0100"
              },
              {
                "id": 45,
                "name": "(GMT+01:00) Europe/Brussels",
                "code": "Europe/Brussels",
                "offset": "+0100"
              },
              {
                "id": 152,
                "name": "(GMT+01:00) Europe/Budapest",
                "code": "Europe/Budapest",
                "offset": "+0100"
              },
              {
                "id": 115,
                "name": "(GMT+01:00) Europe/Copenhagen",
                "code": "Europe/Copenhagen",
                "offset": "+0100"
              },
              {
                "id": 138,
                "name": "(GMT+01:00) Europe/Gibraltar",
                "code": "Europe/Gibraltar",
                "offset": "+0100"
              },
              {
                "id": 185,
                "name": "(GMT+01:00) Europe/Luxembourg",
                "code": "Europe/Luxembourg",
                "offset": "+0100"
              },
              {
                "id": 123,
                "name": "(GMT+01:00) Europe/Madrid",
                "code": "Europe/Madrid",
                "offset": "+0100"
              },
              {
                "id": 199,
                "name": "(GMT+01:00) Europe/Malta",
                "code": "Europe/Malta",
                "offset": "+0100"
              },
              {
                "id": 189,
                "name": "(GMT+01:00) Europe/Monaco",
                "code": "Europe/Monaco",
                "offset": "+0100"
              },
              {
                "id": 223,
                "name": "(GMT+01:00) Europe/Oslo",
                "code": "Europe/Oslo",
                "offset": "+0100"
              },
              {
                "id": 133,
                "name": "(GMT+01:00) Europe/Paris",
                "code": "Europe/Paris",
                "offset": "+0100"
              },
              {
                "id": 113,
                "name": "(GMT+01:00) Europe/Prague",
                "code": "Europe/Prague",
                "offset": "+0100"
              },
              {
                "id": 164,
                "name": "(GMT+01:00) Europe/Rome",
                "code": "Europe/Rome",
                "offset": "+0100"
              },
              {
                "id": 278,
                "name": "(GMT+01:00) Europe/Stockholm",
                "code": "Europe/Stockholm",
                "offset": "+0100"
              },
              {
                "id": 4,
                "name": "(GMT+01:00) Europe/Tirane",
                "code": "Europe/Tirane",
                "offset": "+0100"
              },
              {
                "id": 28,
                "name": "(GMT+01:00) Europe/Vienna",
                "code": "Europe/Vienna",
                "offset": "+0100"
              },
              {
                "id": 238,
                "name": "(GMT+01:00) Europe/Warsaw",
                "code": "Europe/Warsaw",
                "offset": "+0100"
              },
              {
                "id": 99,
                "name": "(GMT+01:00) Europe/Zurich",
                "code": "Europe/Zurich",
                "offset": "+0100"
              },
              {
                "id": 121,
                "name": "(GMT+02:00) Africa/Cairo",
                "code": "Africa/Cairo",
                "offset": "+0200"
              },
              {
                "id": 338,
                "name": "(GMT+02:00) Africa/Johannesburg",
                "code": "Africa/Johannesburg",
                "offset": "+0200"
              },
              {
                "id": 216,
                "name": "(GMT+02:00) Africa/Maputo",
                "code": "Africa/Maputo",
                "offset": "+0200"
              },
              {
                "id": 187,
                "name": "(GMT+02:00) Africa/Tripoli",
                "code": "Africa/Tripoli",
                "offset": "+0200"
              },
              {
                "id": 166,
                "name": "(GMT+02:00) Asia/Amman",
                "code": "Asia/Amman",
                "offset": "+0200"
              },
              {
                "id": 181,
                "name": "(GMT+02:00) Asia/Beirut",
                "code": "Asia/Beirut",
                "offset": "+0200"
              },
              {
                "id": 282,
                "name": "(GMT+02:00) Asia/Damascus",
                "code": "Asia/Damascus",
                "offset": "+0200"
              },
              {
                "id": 242,
                "name": "(GMT+02:00) Asia/Gaza",
                "code": "Asia/Gaza",
                "offset": "+0200"
              },
              {
                "id": 243,
                "name": "(GMT+02:00) Asia/Hebron",
                "code": "Asia/Hebron",
                "offset": "+0200"
              },
              {
                "id": 158,
                "name": "(GMT+02:00) Asia/Jerusalem",
                "code": "Asia/Jerusalem",
                "offset": "+0200"
              },
              {
                "id": 112,
                "name": "(GMT+02:00) Asia/Nicosia",
                "code": "Asia/Nicosia",
                "offset": "+0200"
              },
              {
                "id": 143,
                "name": "(GMT+02:00) Europe/Athens",
                "code": "Europe/Athens",
                "offset": "+0200"
              },
              {
                "id": 251,
                "name": "(GMT+02:00) Europe/Bucharest",
                "code": "Europe/Bucharest",
                "offset": "+0200"
              },
              {
                "id": 190,
                "name": "(GMT+02:00) Europe/Chisinau",
                "code": "Europe/Chisinau",
                "offset": "+0200"
              },
              {
                "id": 126,
                "name": "(GMT+02:00) Europe/Helsinki",
                "code": "Europe/Helsinki",
                "offset": "+0200"
              },
              {
                "id": 293,
                "name": "(GMT+02:00) Europe/Istanbul",
                "code": "Europe/Istanbul",
                "offset": "+0200"
              },
              {
                "id": 253,
                "name": "(GMT+02:00) Europe/Kaliningrad",
                "code": "Europe/Kaliningrad",
                "offset": "+0200"
              },
              {
                "id": 297,
                "name": "(GMT+02:00) Europe/Kiev",
                "code": "Europe/Kiev",
                "offset": "+0200"
              },
              {
                "id": 186,
                "name": "(GMT+02:00) Europe/Riga",
                "code": "Europe/Riga",
                "offset": "+0200"
              },
              {
                "id": 46,
                "name": "(GMT+02:00) Europe/Sofia",
                "code": "Europe/Sofia",
                "offset": "+0200"
              },
              {
                "id": 120,
                "name": "(GMT+02:00) Europe/Tallinn",
                "code": "Europe/Tallinn",
                "offset": "+0200"
              },
              {
                "id": 298,
                "name": "(GMT+02:00) Europe/Uzhgorod",
                "code": "Europe/Uzhgorod",
                "offset": "+0200"
              },
              {
                "id": 184,
                "name": "(GMT+02:00) Europe/Vilnius",
                "code": "Europe/Vilnius",
                "offset": "+0200"
              },
              {
                "id": 299,
                "name": "(GMT+02:00) Europe/Zaporozhye",
                "code": "Europe/Zaporozhye",
                "offset": "+0200"
              },
              {
                "id": 277,
                "name": "(GMT+03:00) Africa/Khartoum",
                "code": "Africa/Khartoum",
                "offset": "+0300"
              },
              {
                "id": 168,
                "name": "(GMT+03:00) Africa/Nairobi",
                "code": "Africa/Nairobi",
                "offset": "+0300"
              },
              {
                "id": 13,
                "name": "(GMT+03:00) Antarctica/Syowa",
                "code": "Antarctica/Syowa",
                "offset": "+0300"
              },
              {
                "id": 161,
                "name": "(GMT+03:00) Asia/Baghdad",
                "code": "Asia/Baghdad",
                "offset": "+0300"
              },
              {
                "id": 249,
                "name": "(GMT+03:00) Asia/Qatar",
                "code": "Asia/Qatar",
                "offset": "+0300"
              },
              {
                "id": 274,
                "name": "(GMT+03:00) Asia/Riyadh",
                "code": "Asia/Riyadh",
                "offset": "+0300"
              },
              {
                "id": 68,
                "name": "(GMT+03:00) Europe/Minsk",
                "code": "Europe/Minsk",
                "offset": "+0300"
              },
              {
                "id": 254,
                "name": "(GMT+03:00) Europe/Moscow",
                "code": "Europe/Moscow",
                "offset": "+0300"
              },
              {
                "id": 255,
                "name": "(GMT+03:00) Europe/Simferopol",
                "code": "Europe/Simferopol",
                "offset": "+0300"
              },
              {
                "id": 256,
                "name": "(GMT+03:00) Europe/Volgograd",
                "code": "Europe/Volgograd",
                "offset": "+0300"
              },
              {
                "id": 162,
                "name": "(GMT+03:30) Asia/Tehran",
                "code": "Asia/Tehran",
                "offset": "+0330"
              },
              {
                "id": 42,
                "name": "(GMT+04:00) Asia/Baku",
                "code": "Asia/Baku",
                "offset": "+0400"
              },
              {
                "id": 2,
                "name": "(GMT+04:00) Asia/Dubai",
                "code": "Asia/Dubai",
                "offset": "+0400"
              },
              {
                "id": 135,
                "name": "(GMT+04:00) Asia/Tbilisi",
                "code": "Asia/Tbilisi",
                "offset": "+0400"
              },
              {
                "id": 5,
                "name": "(GMT+04:00) Asia/Yerevan",
                "code": "Asia/Yerevan",
                "offset": "+0400"
              },
              {
                "id": 257,
                "name": "(GMT+04:00) Europe/Samara",
                "code": "Europe/Samara",
                "offset": "+0400"
              },
              {
                "id": 276,
                "name": "(GMT+04:00) Indian/Mahe",
                "code": "Indian/Mahe",
                "offset": "+0400"
              },
              {
                "id": 200,
                "name": "(GMT+04:00) Indian/Mauritius",
                "code": "Indian/Mauritius",
                "offset": "+0400"
              },
              {
                "id": 250,
                "name": "(GMT+04:00) Indian/Reunion",
                "code": "Indian/Reunion",
                "offset": "+0400"
              },
              {
                "id": 3,
                "name": "(GMT+04:30) Asia/Kabul",
                "code": "Asia/Kabul",
                "offset": "+0430"
              },
              {
                "id": 9,
                "name": "(GMT+05:00) Antarctica/Davis",
                "code": "Antarctica/Davis",
                "offset": "+0500"
              },
              {
                "id": 8,
                "name": "(GMT+05:00) Antarctica/Mawson",
                "code": "Antarctica/Mawson",
                "offset": "+0500"
              },
              {
                "id": 179,
                "name": "(GMT+05:00) Asia/Aqtau",
                "code": "Asia/Aqtau",
                "offset": "+0500"
              },
              {
                "id": 178,
                "name": "(GMT+05:00) Asia/Aqtobe",
                "code": "Asia/Aqtobe",
                "offset": "+0500"
              },
              {
                "id": 290,
                "name": "(GMT+05:00) Asia/Ashgabat",
                "code": "Asia/Ashgabat",
                "offset": "+0500"
              },
              {
                "id": 287,
                "name": "(GMT+05:00) Asia/Dushanbe",
                "code": "Asia/Dushanbe",
                "offset": "+0500"
              },
              {
                "id": 237,
                "name": "(GMT+05:00) Asia/Karachi",
                "code": "Asia/Karachi",
                "offset": "+0500"
              },
              {
                "id": 180,
                "name": "(GMT+05:00) Asia/Oral",
                "code": "Asia/Oral",
                "offset": "+0500"
              },
              {
                "id": 331,
                "name": "(GMT+05:00) Asia/Samarkand",
                "code": "Asia/Samarkand",
                "offset": "+0500"
              },
              {
                "id": 332,
                "name": "(GMT+05:00) Asia/Tashkent",
                "code": "Asia/Tashkent",
                "offset": "+0500"
              },
              {
                "id": 258,
                "name": "(GMT+05:00) Asia/Yekaterinburg",
                "code": "Asia/Yekaterinburg",
                "offset": "+0500"
              },
              {
                "id": 285,
                "name": "(GMT+05:00) Indian/Kerguelen",
                "code": "Indian/Kerguelen",
                "offset": "+0500"
              },
              {
                "id": 201,
                "name": "(GMT+05:00) Indian/Maldives",
                "code": "Indian/Maldives",
                "offset": "+0500"
              },
              {
                "id": 182,
                "name": "(GMT+05:30) Asia/Colombo",
                "code": "Asia/Colombo",
                "offset": "+0530"
              },
              {
                "id": 159,
                "name": "(GMT+05:30) Asia/Kolkata",
                "code": "Asia/Kolkata",
                "offset": "+0530"
              },
              {
                "id": 224,
                "name": "(GMT+05:45) Asia/Kathmandu",
                "code": "Asia/Kathmandu",
                "offset": "+0545"
              },
              {
                "id": 11,
                "name": "(GMT+06:00) Antarctica/Vostok",
                "code": "Antarctica/Vostok",
                "offset": "+0600"
              },
              {
                "id": 176,
                "name": "(GMT+06:00) Asia/Almaty",
                "code": "Asia/Almaty",
                "offset": "+0600"
              },
              {
                "id": 169,
                "name": "(GMT+06:00) Asia/Bishkek",
                "code": "Asia/Bishkek",
                "offset": "+0600"
              },
              {
                "id": 44,
                "name": "(GMT+06:00) Asia/Dhaka",
                "code": "Asia/Dhaka",
                "offset": "+0600"
              },
              {
                "id": 260,
                "name": "(GMT+06:00) Asia/Novosibirsk",
                "code": "Asia/Novosibirsk",
                "offset": "+0600"
              },
              {
                "id": 259,
                "name": "(GMT+06:00) Asia/Omsk",
                "code": "Asia/Omsk",
                "offset": "+0600"
              },
              {
                "id": 177,
                "name": "(GMT+06:00) Asia/Qyzylorda",
                "code": "Asia/Qyzylorda",
                "offset": "+0600"
              },
              {
                "id": 67,
                "name": "(GMT+06:00) Asia/Thimphu",
                "code": "Asia/Thimphu",
                "offset": "+0600"
              },
              {
                "id": 160,
                "name": "(GMT+06:00) Indian/Chagos",
                "code": "Indian/Chagos",
                "offset": "+0600"
              },
              {
                "id": 193,
                "name": "(GMT+06:30) Asia/Rangoon",
                "code": "Asia/Rangoon",
                "offset": "+0630"
              },
              {
                "id": 98,
                "name": "(GMT+06:30) Indian/Cocos",
                "code": "Indian/Cocos",
                "offset": "+0630"
              },
              {
                "id": 286,
                "name": "(GMT+07:00) Asia/Bangkok",
                "code": "Asia/Bangkok",
                "offset": "+0700"
              },
              {
                "id": 334,
                "name": "(GMT+07:00) Asia/Ho_Chi_Minh",
                "code": "Asia/Ho_Chi_Minh",
                "offset": "+0700"
              },
              {
                "id": 195,
                "name": "(GMT+07:00) Asia/Hovd",
                "code": "Asia/Hovd",
                "offset": "+0700"
              },
              {
                "id": 153,
                "name": "(GMT+07:00) Asia/Jakarta",
                "code": "Asia/Jakarta",
                "offset": "+0700"
              },
              {
                "id": 262,
                "name": "(GMT+07:00) Asia/Krasnoyarsk",
                "code": "Asia/Krasnoyarsk",
                "offset": "+0700"
              },
              {
                "id": 261,
                "name": "(GMT+07:00) Asia/Novokuznetsk",
                "code": "Asia/Novokuznetsk",
                "offset": "+0700"
              },
              {
                "id": 154,
                "name": "(GMT+07:00) Asia/Pontianak",
                "code": "Asia/Pontianak",
                "offset": "+0700"
              },
              {
                "id": 111,
                "name": "(GMT+07:00) Indian/Christmas",
                "code": "Indian/Christmas",
                "offset": "+0700"
              },
              {
                "id": 48,
                "name": "(GMT+08:00) Asia/Brunei",
                "code": "Asia/Brunei",
                "offset": 800
              },
              {
                "id": 264,
                "name": "(GMT+08:00) Asia/Chita",
                "code": "Asia/Chita",
                "offset": 800
              },
              {
                "id": 196,
                "name": "(GMT+08:00) Asia/Choibalsan",
                "code": "Asia/Choibalsan",
                "offset": 800
              },
              {
                "id": 149,
                "name": "(GMT+08:00) Asia/Hong_Kong",
                "code": "Asia/Hong_Kong",
                "offset": 800
              },
              {
                "id": 263,
                "name": "(GMT+08:00) Asia/Irkutsk",
                "code": "Asia/Irkutsk",
                "offset": 800
              },
              {
                "id": 214,
                "name": "(GMT+08:00) Asia/Kuala_Lumpur",
                "code": "Asia/Kuala_Lumpur",
                "offset": 800
              },
              {
                "id": 215,
                "name": "(GMT+08:00) Asia/Kuching",
                "code": "Asia/Kuching",
                "offset": 800
              },
              {
                "id": 197,
                "name": "(GMT+08:00) Asia/Macau",
                "code": "Asia/Macau",
                "offset": 800
              },
              {
                "id": 155,
                "name": "(GMT+08:00) Asia/Makassar",
                "code": "Asia/Makassar",
                "offset": 800
              },
              {
                "id": 236,
                "name": "(GMT+08:00) Asia/Manila",
                "code": "Asia/Manila",
                "offset": 800
              },
              {
                "id": 104,
                "name": "(GMT+08:00) Asia/Shanghai",
                "code": "Asia/Shanghai",
                "offset": 800
              },
              {
                "id": 279,
                "name": "(GMT+08:00) Asia/Singapore",
                "code": "Asia/Singapore",
                "offset": 800
              },
              {
                "id": 296,
                "name": "(GMT+08:00) Asia/Taipei",
                "code": "Asia/Taipei",
                "offset": 800
              },
              {
                "id": 194,
                "name": "(GMT+08:00) Asia/Ulaanbaatar",
                "code": "Asia/Ulaanbaatar",
                "offset": 800
              },
              {
                "id": 105,
                "name": "(GMT+08:00) Asia/Urumqi",
                "code": "Asia/Urumqi",
                "offset": 800
              },
              {
                "id": 40,
                "name": "(GMT+08:00) Australia/Perth",
                "code": "Australia/Perth",
                "offset": 800
              },
              {
                "id": 173,
                "name": "(GMT+08:30) Asia/Pyongyang",
                "code": "Asia/Pyongyang",
                "offset": 830
              },
              {
                "id": 41,
                "name": "(GMT+08:45) Australia/Eucla",
                "code": "Australia/Eucla",
                "offset": 845
              },
              {
                "id": 289,
                "name": "(GMT+09:00) Asia/Dili",
                "code": "Asia/Dili",
                "offset": 900
              },
              {
                "id": 156,
                "name": "(GMT+09:00) Asia/Jayapura",
                "code": "Asia/Jayapura",
                "offset": 900
              },
              {
                "id": 266,
                "name": "(GMT+09:00) Asia/Khandyga",
                "code": "Asia/Khandyga",
                "offset": 900
              },
              {
                "id": 174,
                "name": "(GMT+09:00) Asia/Seoul",
                "code": "Asia/Seoul",
                "offset": 900
              },
              {
                "id": 167,
                "name": "(GMT+09:00) Asia/Tokyo",
                "code": "Asia/Tokyo",
                "offset": 900
              },
              {
                "id": 265,
                "name": "(GMT+09:00) Asia/Yakutsk",
                "code": "Asia/Yakutsk",
                "offset": 900
              },
              {
                "id": 247,
                "name": "(GMT+09:00) Pacific/Palau",
                "code": "Pacific/Palau",
                "offset": 900
              },
              {
                "id": 38,
                "name": "(GMT+09:30) Australia/Adelaide",
                "code": "Australia/Adelaide",
                "offset": 930
              },
              {
                "id": 35,
                "name": "(GMT+09:30) Australia/Broken_Hill",
                "code": "Australia/Broken_Hill",
                "offset": 930
              },
              {
                "id": 39,
                "name": "(GMT+09:30) Australia/Darwin",
                "code": "Australia/Darwin",
                "offset": 930
              },
              {
                "id": 12,
                "name": "(GMT+10:00) Antarctica/DumontDUrville",
                "code": "Antarctica/DumontDUrville",
                "offset": "+1000"
              },
              {
                "id": 270,
                "name": "(GMT+10:00) Asia/Magadan",
                "code": "Asia/Magadan",
                "offset": "+1000"
              },
              {
                "id": 269,
                "name": "(GMT+10:00) Asia/Ust-Nera",
                "code": "Asia/Ust-Nera",
                "offset": "+1000"
              },
              {
                "id": 267,
                "name": "(GMT+10:00) Asia/Vladivostok",
                "code": "Asia/Vladivostok",
                "offset": "+1000"
              },
              {
                "id": 36,
                "name": "(GMT+10:00) Australia/Brisbane",
                "code": "Australia/Brisbane",
                "offset": "+1000"
              },
              {
                "id": 32,
                "name": "(GMT+10:00) Australia/Currie",
                "code": "Australia/Currie",
                "offset": "+1000"
              },
              {
                "id": 31,
                "name": "(GMT+10:00) Australia/Hobart",
                "code": "Australia/Hobart",
                "offset": "+1000"
              },
              {
                "id": 37,
                "name": "(GMT+10:00) Australia/Lindeman",
                "code": "Australia/Lindeman",
                "offset": "+1000"
              },
              {
                "id": 33,
                "name": "(GMT+10:00) Australia/Melbourne",
                "code": "Australia/Melbourne",
                "offset": "+1000"
              },
              {
                "id": 34,
                "name": "(GMT+10:00) Australia/Sydney",
                "code": "Australia/Sydney",
                "offset": "+1000"
              },
              {
                "id": 129,
                "name": "(GMT+10:00) Pacific/Chuuk",
                "code": "Pacific/Chuuk",
                "offset": "+1000"
              },
              {
                "id": 146,
                "name": "(GMT+10:00) Pacific/Guam",
                "code": "Pacific/Guam",
                "offset": "+1000"
              },
              {
                "id": 234,
                "name": "(GMT+10:00) Pacific/Port_Moresby",
                "code": "Pacific/Port_Moresby",
                "offset": "+1000"
              },
              {
                "id": 29,
                "name": "(GMT+10:30) Australia/Lord_Howe",
                "code": "Australia/Lord_Howe",
                "offset": "+1030"
              },
              {
                "id": 10,
                "name": "(GMT+11:00) Antarctica/Casey",
                "code": "Antarctica/Casey",
                "offset": "+1100"
              },
              {
                "id": 30,
                "name": "(GMT+11:00) Antarctica/Macquarie",
                "code": "Antarctica/Macquarie",
                "offset": "+1100"
              },
              {
                "id": 268,
                "name": "(GMT+11:00) Asia/Sakhalin",
                "code": "Asia/Sakhalin",
                "offset": "+1100"
              },
              {
                "id": 271,
                "name": "(GMT+11:00) Asia/Srednekolymsk",
                "code": "Asia/Srednekolymsk",
                "offset": "+1100"
              },
              {
                "id": 235,
                "name": "(GMT+11:00) Pacific/Bougainville",
                "code": "Pacific/Bougainville",
                "offset": "+1100"
              },
              {
                "id": 335,
                "name": "(GMT+11:00) Pacific/Efate",
                "code": "Pacific/Efate",
                "offset": "+1100"
              },
              {
                "id": 275,
                "name": "(GMT+11:00) Pacific/Guadalcanal",
                "code": "Pacific/Guadalcanal",
                "offset": "+1100"
              },
              {
                "id": 131,
                "name": "(GMT+11:00) Pacific/Kosrae",
                "code": "Pacific/Kosrae",
                "offset": "+1100"
              },
              {
                "id": 218,
                "name": "(GMT+11:00) Pacific/Noumea",
                "code": "Pacific/Noumea",
                "offset": "+1100"
              },
              {
                "id": 130,
                "name": "(GMT+11:00) Pacific/Pohnpei",
                "code": "Pacific/Pohnpei",
                "offset": "+1100"
              },
              {
                "id": 219,
                "name": "(GMT+11:30) Pacific/Norfolk",
                "code": "Pacific/Norfolk",
                "offset": "+1130"
              },
              {
                "id": 273,
                "name": "(GMT+12:00) Asia/Anadyr",
                "code": "Asia/Anadyr",
                "offset": "+1200"
              },
              {
                "id": 272,
                "name": "(GMT+12:00) Asia/Kamchatka",
                "code": "Asia/Kamchatka",
                "offset": "+1200"
              },
              {
                "id": 227,
                "name": "(GMT+12:00) Pacific/Auckland",
                "code": "Pacific/Auckland",
                "offset": "+1200"
              },
              {
                "id": 127,
                "name": "(GMT+12:00) Pacific/Fiji",
                "code": "Pacific/Fiji",
                "offset": "+1200"
              },
              {
                "id": 295,
                "name": "(GMT+12:00) Pacific/Funafuti",
                "code": "Pacific/Funafuti",
                "offset": "+1200"
              },
              {
                "id": 192,
                "name": "(GMT+12:00) Pacific/Kwajalein",
                "code": "Pacific/Kwajalein",
                "offset": "+1200"
              },
              {
                "id": 191,
                "name": "(GMT+12:00) Pacific/Majuro",
                "code": "Pacific/Majuro",
                "offset": "+1200"
              },
              {
                "id": 225,
                "name": "(GMT+12:00) Pacific/Nauru",
                "code": "Pacific/Nauru",
                "offset": "+1200"
              },
              {
                "id": 170,
                "name": "(GMT+12:00) Pacific/Tarawa",
                "code": "Pacific/Tarawa",
                "offset": "+1200"
              },
              {
                "id": 300,
                "name": "(GMT+12:00) Pacific/Wake",
                "code": "Pacific/Wake",
                "offset": "+1200"
              },
              {
                "id": 336,
                "name": "(GMT+12:00) Pacific/Wallis",
                "code": "Pacific/Wallis",
                "offset": "+1200"
              },
              {
                "id": 228,
                "name": "(GMT+12:45) Pacific/Chatham",
                "code": "Pacific/Chatham",
                "offset": "+1245"
              },
              {
                "id": 337,
                "name": "(GMT+13:00) Pacific/Apia",
                "code": "Pacific/Apia",
                "offset": "+1300"
              },
              {
                "id": 171,
                "name": "(GMT+13:00) Pacific/Enderbury",
                "code": "Pacific/Enderbury",
                "offset": "+1300"
              },
              {
                "id": 288,
                "name": "(GMT+13:00) Pacific/Fakaofo",
                "code": "Pacific/Fakaofo",
                "offset": "+1300"
              },
              {
                "id": 292,
                "name": "(GMT+13:00) Pacific/Tongatapu",
                "code": "Pacific/Tongatapu",
                "offset": "+1300"
              },
              {
                "id": 172,
                "name": "(GMT+14:00) Pacific/Kiritimati",
                "code": "Pacific/Kiritimati",
                "offset": "+1400"
              }
            ]
          },
          "path": "/enums/timezones"
        }
      }
    },
    "enums-countries-get": {
      "endpointKey": "enums-countries-get",
      "path": "/enums/countries",
      "method": "get",
      "x-published": true,
      "tags": ["Enums"],
      "summary": "List countries",
      "description": "Gets the list of countries and their `countryId` values in the `id` column. The `countryId` is a required parameter when you create a new organization with the API call `POST /organizations`.",
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "countries": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "countries": [
                  {
                    "id": 4,
                    "name": "Afghanistan",
                    "code1": "AFG",
                    "code2": "af"
                  },
                  {
                    "id": 5,
                    "name": "Ãland Islands",
                    "code1": "ALA",
                    "code2": "ax"
                  },
                  {
                    "id": 6,
                    "name": "Albania",
                    "code1": "ALB",
                    "code2": "al"
                  }
                ]
              }
            }
          }
        }
      },
      "parameters": {
        "body": []
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "countries": [
              {
                "id": 4,
                "name": "Afghanistan",
                "code1": "AFG",
                "code2": "af"
              },
              {
                "id": 5,
                "name": "Ãland Islands",
                "code1": "ALA",
                "code2": "ax"
              },
              {
                "id": 6,
                "name": "Albania",
                "code1": "ALB",
                "code2": "al"
              }
            ]
          },
          "path": "/enums/countries"
        }
      }
    },
    "enums-locales-get": {
      "endpointKey": "enums-locales-get",
      "path": "/enums/locales",
      "method": "get",
      "x-published": true,
      "tags": ["Enums"],
      "summary": "List locales",
      "description": "Gets the list of locales and their `localeId` values and locale codes.",
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "locales": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "code": {
                          "type": "string"
                        },
                        "angularCode": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "locales": [
                  {
                    "id": 1,
                    "name": "Afrikaans",
                    "code": "af",
                    "angularCode": "af"
                  },
                  {
                    "id": 96,
                    "name": "Albanian",
                    "code": "sq",
                    "angularCode": "sq"
                  },
                  {
                    "id": 8,
                    "name": "Arabic",
                    "code": "ar",
                    "angularCode": "ar"
                  },
                  {
                    "id": 2,
                    "name": "Arabic (Algeria)",
                    "code": "ar-dz",
                    "angularCode": "ar-DZ"
                  },
                  {
                    "id": 3,
                    "name": "Arabic (Kuwait)",
                    "code": "ar-kw",
                    "angularCode": "ar-KW"
                  },
                  {
                    "id": 4,
                    "name": "Arabic (Libya)",
                    "code": "ar-ly",
                    "angularCode": "ar-LY"
                  },
                  {
                    "id": 5,
                    "name": "Arabic (Morocco)",
                    "code": "ar-ma",
                    "angularCode": "ar-MA"
                  },
                  {
                    "id": 6,
                    "name": "Arabic (Saudi Arabia)",
                    "code": "ar-sa",
                    "angularCode": "ar-SA"
                  },
                  {
                    "id": 7,
                    "name": "Arabic (Tunisia)",
                    "code": "ar-tn",
                    "angularCode": "ar-TN"
                  },
                  {
                    "id": 54,
                    "name": "Armenian (Armenia)",
                    "code": "hy-am",
                    "angularCode": "hy"
                  },
                  {
                    "id": 9,
                    "name": "Azerbaijani",
                    "code": "az",
                    "angularCode": "az"
                  },
                  {
                    "id": 12,
                    "name": "Bambara",
                    "code": "bm",
                    "angularCode": "bm"
                  },
                  {
                    "id": 38,
                    "name": "Basque",
                    "code": "eu",
                    "angularCode": "eu"
                  },
                  {
                    "id": 10,
                    "name": "Belarusian",
                    "code": "be",
                    "angularCode": "be"
                  },
                  {
                    "id": 13,
                    "name": "Bengali",
                    "code": "bn",
                    "angularCode": "bn"
                  },
                  {
                    "id": 16,
                    "name": "Bosnian",
                    "code": "bs",
                    "angularCode": "bs"
                  },
                  {
                    "id": 11,
                    "name": "Bulgarian",
                    "code": "bg",
                    "angularCode": "bg"
                  },
                  {
                    "id": 79,
                    "name": "Burmese",
                    "code": "my",
                    "angularCode": "my"
                  },
                  {
                    "id": 17,
                    "name": "Catalan",
                    "code": "ca",
                    "angularCode": "ca"
                  },
                  {
                    "id": 112,
                    "name": "Central Morocco Tamazight",
                    "code": "tzm",
                    "angularCode": "tzm"
                  },
                  {
                    "id": 111,
                    "name": "Central Morocco Tamazight (Latin)",
                    "code": "tzm-latn",
                    "angularCode": "tzm"
                  },
                  {
                    "id": 121,
                    "name": "Chinese - China",
                    "code": "zh-cn",
                    "angularCode": "zh-Hans"
                  },
                  {
                    "id": 122,
                    "name": "Chinese - Hong Kong SAR",
                    "code": "zh-hk",
                    "angularCode": "zh-Hant-HK"
                  },
                  {
                    "id": 123,
                    "name": "Chinese - Taiwan",
                    "code": "zh-tw",
                    "angularCode": "zh-Hant"
                  },
                  {
                    "id": 52,
                    "name": "Croatian",
                    "code": "hr",
                    "angularCode": "hr"
                  },
                  {
                    "id": 18,
                    "name": "Czech",
                    "code": "cs",
                    "angularCode": "cs"
                  },
                  {
                    "id": 21,
                    "name": "Danish",
                    "code": "da",
                    "angularCode": "da"
                  },
                  {
                    "id": 25,
                    "name": "Divehi",
                    "code": "dv",
                    "angularCode": "en-US"
                  },
                  {
                    "id": 83,
                    "name": "Dutch",
                    "code": "nl",
                    "angularCode": "nl"
                  },
                  {
                    "id": 82,
                    "name": "Dutch (Belgium)",
                    "code": "nl-be",
                    "angularCode": "nl-BE"
                  },
                  {
                    "id": 27,
                    "name": "English (Australia)",
                    "code": "en-au",
                    "angularCode": "en-AU"
                  },
                  {
                    "id": 28,
                    "name": "English (Canada)",
                    "code": "en-ca",
                    "angularCode": "en-CA"
                  },
                  {
                    "id": 30,
                    "name": "English (Ireland)",
                    "code": "en-ie",
                    "angularCode": "en-IE"
                  },
                  {
                    "id": 32,
                    "name": "English (New Zealand)",
                    "code": "en-nz",
                    "angularCode": "en-NZ"
                  },
                  {
                    "id": 29,
                    "name": "English (United Kingdom)",
                    "code": "en-gb",
                    "angularCode": "en-GB"
                  },
                  {
                    "id": 19,
                    "name": "English (United States)",
                    "code": "en-us",
                    "angularCode": "en-US"
                  },
                  {
                    "id": 33,
                    "name": "Esperanto",
                    "code": "eo",
                    "angularCode": "eo"
                  },
                  {
                    "id": 37,
                    "name": "Estonian",
                    "code": "et",
                    "angularCode": "et"
                  },
                  {
                    "id": 41,
                    "name": "Faroese",
                    "code": "fo",
                    "angularCode": "fo"
                  },
                  {
                    "id": 40,
                    "name": "Finnish",
                    "code": "fi",
                    "angularCode": "fi"
                  },
                  {
                    "id": 44,
                    "name": "French",
                    "code": "fr",
                    "angularCode": "fr"
                  },
                  {
                    "id": 42,
                    "name": "French (Canada)",
                    "code": "fr-ca",
                    "angularCode": "fr-CA"
                  },
                  {
                    "id": 43,
                    "name": "French (Switzerland)",
                    "code": "fr-ch",
                    "angularCode": "fr-CH"
                  },
                  {
                    "id": 46,
                    "name": "Gaelic",
                    "code": "gd",
                    "angularCode": "gd"
                  },
                  {
                    "id": 47,
                    "name": "Galician",
                    "code": "gl",
                    "angularCode": "gl"
                  },
                  {
                    "id": 60,
                    "name": "Georgian",
                    "code": "ka",
                    "angularCode": "ka"
                  },
                  {
                    "id": 24,
                    "name": "German",
                    "code": "de",
                    "angularCode": "de"
                  },
                  {
                    "id": 22,
                    "name": "German (Austria)",
                    "code": "de-at",
                    "angularCode": "de-AT"
                  },
                  {
                    "id": 23,
                    "name": "German (Switzerland)",
                    "code": "de-ch",
                    "angularCode": "de-CH"
                  },
                  {
                    "id": 26,
                    "name": "Greek",
                    "code": "el",
                    "angularCode": "el"
                  },
                  {
                    "id": 49,
                    "name": "Gujarati",
                    "code": "gu",
                    "angularCode": "gu"
                  },
                  {
                    "id": 50,
                    "name": "Hebrew",
                    "code": "he",
                    "angularCode": "he"
                  },
                  {
                    "id": 51,
                    "name": "Hindi",
                    "code": "hi",
                    "angularCode": "hi"
                  },
                  {
                    "id": 53,
                    "name": "Hungarian",
                    "code": "hu",
                    "angularCode": "hu"
                  },
                  {
                    "id": 56,
                    "name": "Icelandic",
                    "code": "is",
                    "angularCode": "is"
                  },
                  {
                    "id": 55,
                    "name": "Indonesian",
                    "code": "id",
                    "angularCode": "id"
                  },
                  {
                    "id": 57,
                    "name": "Italian",
                    "code": "it",
                    "angularCode": "it"
                  },
                  {
                    "id": 58,
                    "name": "Japanese",
                    "code": "ja",
                    "angularCode": "ja"
                  },
                  {
                    "id": 63,
                    "name": "Kannada",
                    "code": "kn",
                    "angularCode": "kn"
                  },
                  {
                    "id": 61,
                    "name": "Kazakh",
                    "code": "kk",
                    "angularCode": "kk"
                  },
                  {
                    "id": 62,
                    "name": "Khmer",
                    "code": "km",
                    "angularCode": "km"
                  },
                  {
                    "id": 64,
                    "name": "Korean",
                    "code": "ko",
                    "angularCode": "ko"
                  },
                  {
                    "id": 67,
                    "name": "Lao",
                    "code": "lo",
                    "angularCode": "lo"
                  },
                  {
                    "id": 69,
                    "name": "Latvian",
                    "code": "lv",
                    "angularCode": "lv"
                  },
                  {
                    "id": 68,
                    "name": "Lithuanian",
                    "code": "lt",
                    "angularCode": "lt"
                  },
                  {
                    "id": 72,
                    "name": "Macedonian",
                    "code": "mk",
                    "angularCode": "mk"
                  },
                  {
                    "id": 77,
                    "name": "Malay",
                    "code": "ms",
                    "angularCode": "ms"
                  },
                  {
                    "id": 73,
                    "name": "Malayalam",
                    "code": "ml",
                    "angularCode": "ml"
                  },
                  {
                    "id": 76,
                    "name": "Malay (Malaysia)",
                    "code": "ms-my",
                    "angularCode": "ms"
                  },
                  {
                    "id": 78,
                    "name": "Maltese",
                    "code": "mt",
                    "angularCode": "mt"
                  },
                  {
                    "id": 75,
                    "name": "Marathi",
                    "code": "mr",
                    "angularCode": "mr"
                  },
                  {
                    "id": 71,
                    "name": "Maroi",
                    "code": "mi",
                    "angularCode": "mi"
                  },
                  {
                    "id": 74,
                    "name": "Mongolian",
                    "code": "mn",
                    "angularCode": "mn"
                  },
                  {
                    "id": 81,
                    "name": "Nepali",
                    "code": "ne",
                    "angularCode": "ne"
                  },
                  {
                    "id": 80,
                    "name": "Norwegian BokmÃ¥l",
                    "code": "nb",
                    "angularCode": "nb"
                  },
                  {
                    "id": 84,
                    "name": "Norwegian Nynorsk",
                    "code": "nn",
                    "angularCode": "nn"
                  },
                  {
                    "id": 39,
                    "name": "Persian",
                    "code": "fa",
                    "angularCode": "fa"
                  },
                  {
                    "id": 86,
                    "name": "Polish",
                    "code": "pl",
                    "angularCode": "pl"
                  },
                  {
                    "id": 88,
                    "name": "Portuguese",
                    "code": "pt",
                    "angularCode": "pt"
                  },
                  {
                    "id": 87,
                    "name": "Portuguese (Brazil)",
                    "code": "pt-br",
                    "angularCode": "pt"
                  },
                  {
                    "id": 85,
                    "name": "Punjabi",
                    "code": "pa",
                    "angularCode": "pa"
                  },
                  {
                    "id": 89,
                    "name": "Romanian",
                    "code": "ro",
                    "angularCode": "ro"
                  },
                  {
                    "id": 90,
                    "name": "Russian",
                    "code": "ru",
                    "angularCode": "ru"
                  },
                  {
                    "id": 98,
                    "name": "Serbian",
                    "code": "sr",
                    "angularCode": "sr"
                  },
                  {
                    "id": 97,
                    "name": "Serbian (Cyrillic)",
                    "code": "sr-cyrl",
                    "angularCode": "sr-Cyrl"
                  },
                  {
                    "id": 91,
                    "name": "Sindhi",
                    "code": "sd",
                    "angularCode": "sd"
                  },
                  {
                    "id": 93,
                    "name": "Sinhala",
                    "code": "si",
                    "angularCode": "si"
                  },
                  {
                    "id": 94,
                    "name": "Slovak",
                    "code": "sk",
                    "angularCode": "sk"
                  },
                  {
                    "id": 95,
                    "name": "Slovenian",
                    "code": "sl",
                    "angularCode": "sl"
                  },
                  {
                    "id": 36,
                    "name": "Spanish",
                    "code": "es",
                    "angularCode": "es"
                  },
                  {
                    "id": 34,
                    "name": "Spanish (Dominican Republic)",
                    "code": "es-do",
                    "angularCode": "es-DO"
                  },
                  {
                    "id": 35,
                    "name": "Spanish (United States)",
                    "code": "es-us",
                    "angularCode": "es-US"
                  },
                  {
                    "id": 101,
                    "name": "Swahili",
                    "code": "sw",
                    "angularCode": "sw"
                  },
                  {
                    "id": 100,
                    "name": "Swedish",
                    "code": "sv",
                    "angularCode": "sv"
                  },
                  {
                    "id": 105,
                    "name": "Tajik",
                    "code": "tg",
                    "angularCode": "tg"
                  },
                  {
                    "id": 102,
                    "name": "Tamil",
                    "code": "ta",
                    "angularCode": "ta"
                  },
                  {
                    "id": 103,
                    "name": "Telugu",
                    "code": "te",
                    "angularCode": "te"
                  },
                  {
                    "id": 106,
                    "name": "Thai",
                    "code": "th",
                    "angularCode": "th"
                  },
                  {
                    "id": 14,
                    "name": "Tibetan",
                    "code": "bo",
                    "angularCode": "bo"
                  },
                  {
                    "id": 109,
                    "name": "Turkish",
                    "code": "tr",
                    "angularCode": "tr"
                  },
                  {
                    "id": 114,
                    "name": "Ukrainian",
                    "code": "uk",
                    "angularCode": "uk"
                  },
                  {
                    "id": 115,
                    "name": "Urdu",
                    "code": "ur",
                    "angularCode": "ur"
                  },
                  {
                    "id": 117,
                    "name": "Uzbek",
                    "code": "uz",
                    "angularCode": "uz"
                  },
                  {
                    "id": 116,
                    "name": "Uzbek (Latin)",
                    "code": "uz-latn",
                    "angularCode": "uz-Latn"
                  },
                  {
                    "id": 118,
                    "name": "Vietnamese",
                    "code": "vi",
                    "angularCode": "vi"
                  },
                  {
                    "id": 20,
                    "name": "Welsh",
                    "code": "cy",
                    "angularCode": "cy"
                  },
                  {
                    "id": 120,
                    "name": "Yoruba",
                    "code": "yo",
                    "angularCode": "yo"
                  }
                ]
              }
            }
          }
        }
      },
      "parameters": {
        "body": []
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "locales": [
              {
                "id": 1,
                "name": "Afrikaans",
                "code": "af",
                "angularCode": "af"
              },
              {
                "id": 96,
                "name": "Albanian",
                "code": "sq",
                "angularCode": "sq"
              },
              {
                "id": 8,
                "name": "Arabic",
                "code": "ar",
                "angularCode": "ar"
              },
              {
                "id": 2,
                "name": "Arabic (Algeria)",
                "code": "ar-dz",
                "angularCode": "ar-DZ"
              },
              {
                "id": 3,
                "name": "Arabic (Kuwait)",
                "code": "ar-kw",
                "angularCode": "ar-KW"
              },
              {
                "id": 4,
                "name": "Arabic (Libya)",
                "code": "ar-ly",
                "angularCode": "ar-LY"
              },
              {
                "id": 5,
                "name": "Arabic (Morocco)",
                "code": "ar-ma",
                "angularCode": "ar-MA"
              },
              {
                "id": 6,
                "name": "Arabic (Saudi Arabia)",
                "code": "ar-sa",
                "angularCode": "ar-SA"
              },
              {
                "id": 7,
                "name": "Arabic (Tunisia)",
                "code": "ar-tn",
                "angularCode": "ar-TN"
              },
              {
                "id": 54,
                "name": "Armenian (Armenia)",
                "code": "hy-am",
                "angularCode": "hy"
              },
              {
                "id": 9,
                "name": "Azerbaijani",
                "code": "az",
                "angularCode": "az"
              },
              {
                "id": 12,
                "name": "Bambara",
                "code": "bm",
                "angularCode": "bm"
              },
              {
                "id": 38,
                "name": "Basque",
                "code": "eu",
                "angularCode": "eu"
              },
              {
                "id": 10,
                "name": "Belarusian",
                "code": "be",
                "angularCode": "be"
              },
              {
                "id": 13,
                "name": "Bengali",
                "code": "bn",
                "angularCode": "bn"
              },
              {
                "id": 16,
                "name": "Bosnian",
                "code": "bs",
                "angularCode": "bs"
              },
              {
                "id": 11,
                "name": "Bulgarian",
                "code": "bg",
                "angularCode": "bg"
              },
              {
                "id": 79,
                "name": "Burmese",
                "code": "my",
                "angularCode": "my"
              },
              {
                "id": 17,
                "name": "Catalan",
                "code": "ca",
                "angularCode": "ca"
              },
              {
                "id": 112,
                "name": "Central Morocco Tamazight",
                "code": "tzm",
                "angularCode": "tzm"
              },
              {
                "id": 111,
                "name": "Central Morocco Tamazight (Latin)",
                "code": "tzm-latn",
                "angularCode": "tzm"
              },
              {
                "id": 121,
                "name": "Chinese - China",
                "code": "zh-cn",
                "angularCode": "zh-Hans"
              },
              {
                "id": 122,
                "name": "Chinese - Hong Kong SAR",
                "code": "zh-hk",
                "angularCode": "zh-Hant-HK"
              },
              {
                "id": 123,
                "name": "Chinese - Taiwan",
                "code": "zh-tw",
                "angularCode": "zh-Hant"
              },
              {
                "id": 52,
                "name": "Croatian",
                "code": "hr",
                "angularCode": "hr"
              },
              {
                "id": 18,
                "name": "Czech",
                "code": "cs",
                "angularCode": "cs"
              },
              {
                "id": 21,
                "name": "Danish",
                "code": "da",
                "angularCode": "da"
              },
              {
                "id": 25,
                "name": "Divehi",
                "code": "dv",
                "angularCode": "en-US"
              },
              {
                "id": 83,
                "name": "Dutch",
                "code": "nl",
                "angularCode": "nl"
              },
              {
                "id": 82,
                "name": "Dutch (Belgium)",
                "code": "nl-be",
                "angularCode": "nl-BE"
              },
              {
                "id": 27,
                "name": "English (Australia)",
                "code": "en-au",
                "angularCode": "en-AU"
              },
              {
                "id": 28,
                "name": "English (Canada)",
                "code": "en-ca",
                "angularCode": "en-CA"
              },
              {
                "id": 30,
                "name": "English (Ireland)",
                "code": "en-ie",
                "angularCode": "en-IE"
              },
              {
                "id": 32,
                "name": "English (New Zealand)",
                "code": "en-nz",
                "angularCode": "en-NZ"
              },
              {
                "id": 29,
                "name": "English (United Kingdom)",
                "code": "en-gb",
                "angularCode": "en-GB"
              },
              {
                "id": 19,
                "name": "English (United States)",
                "code": "en-us",
                "angularCode": "en-US"
              },
              {
                "id": 33,
                "name": "Esperanto",
                "code": "eo",
                "angularCode": "eo"
              },
              {
                "id": 37,
                "name": "Estonian",
                "code": "et",
                "angularCode": "et"
              },
              {
                "id": 41,
                "name": "Faroese",
                "code": "fo",
                "angularCode": "fo"
              },
              {
                "id": 40,
                "name": "Finnish",
                "code": "fi",
                "angularCode": "fi"
              },
              {
                "id": 44,
                "name": "French",
                "code": "fr",
                "angularCode": "fr"
              },
              {
                "id": 42,
                "name": "French (Canada)",
                "code": "fr-ca",
                "angularCode": "fr-CA"
              },
              {
                "id": 43,
                "name": "French (Switzerland)",
                "code": "fr-ch",
                "angularCode": "fr-CH"
              },
              {
                "id": 46,
                "name": "Gaelic",
                "code": "gd",
                "angularCode": "gd"
              },
              {
                "id": 47,
                "name": "Galician",
                "code": "gl",
                "angularCode": "gl"
              },
              {
                "id": 60,
                "name": "Georgian",
                "code": "ka",
                "angularCode": "ka"
              },
              {
                "id": 24,
                "name": "German",
                "code": "de",
                "angularCode": "de"
              },
              {
                "id": 22,
                "name": "German (Austria)",
                "code": "de-at",
                "angularCode": "de-AT"
              },
              {
                "id": 23,
                "name": "German (Switzerland)",
                "code": "de-ch",
                "angularCode": "de-CH"
              },
              {
                "id": 26,
                "name": "Greek",
                "code": "el",
                "angularCode": "el"
              },
              {
                "id": 49,
                "name": "Gujarati",
                "code": "gu",
                "angularCode": "gu"
              },
              {
                "id": 50,
                "name": "Hebrew",
                "code": "he",
                "angularCode": "he"
              },
              {
                "id": 51,
                "name": "Hindi",
                "code": "hi",
                "angularCode": "hi"
              },
              {
                "id": 53,
                "name": "Hungarian",
                "code": "hu",
                "angularCode": "hu"
              },
              {
                "id": 56,
                "name": "Icelandic",
                "code": "is",
                "angularCode": "is"
              },
              {
                "id": 55,
                "name": "Indonesian",
                "code": "id",
                "angularCode": "id"
              },
              {
                "id": 57,
                "name": "Italian",
                "code": "it",
                "angularCode": "it"
              },
              {
                "id": 58,
                "name": "Japanese",
                "code": "ja",
                "angularCode": "ja"
              },
              {
                "id": 63,
                "name": "Kannada",
                "code": "kn",
                "angularCode": "kn"
              },
              {
                "id": 61,
                "name": "Kazakh",
                "code": "kk",
                "angularCode": "kk"
              },
              {
                "id": 62,
                "name": "Khmer",
                "code": "km",
                "angularCode": "km"
              },
              {
                "id": 64,
                "name": "Korean",
                "code": "ko",
                "angularCode": "ko"
              },
              {
                "id": 67,
                "name": "Lao",
                "code": "lo",
                "angularCode": "lo"
              },
              {
                "id": 69,
                "name": "Latvian",
                "code": "lv",
                "angularCode": "lv"
              },
              {
                "id": 68,
                "name": "Lithuanian",
                "code": "lt",
                "angularCode": "lt"
              },
              {
                "id": 72,
                "name": "Macedonian",
                "code": "mk",
                "angularCode": "mk"
              },
              {
                "id": 77,
                "name": "Malay",
                "code": "ms",
                "angularCode": "ms"
              },
              {
                "id": 73,
                "name": "Malayalam",
                "code": "ml",
                "angularCode": "ml"
              },
              {
                "id": 76,
                "name": "Malay (Malaysia)",
                "code": "ms-my",
                "angularCode": "ms"
              },
              {
                "id": 78,
                "name": "Maltese",
                "code": "mt",
                "angularCode": "mt"
              },
              {
                "id": 75,
                "name": "Marathi",
                "code": "mr",
                "angularCode": "mr"
              },
              {
                "id": 71,
                "name": "Maroi",
                "code": "mi",
                "angularCode": "mi"
              },
              {
                "id": 74,
                "name": "Mongolian",
                "code": "mn",
                "angularCode": "mn"
              },
              {
                "id": 81,
                "name": "Nepali",
                "code": "ne",
                "angularCode": "ne"
              },
              {
                "id": 80,
                "name": "Norwegian BokmÃ¥l",
                "code": "nb",
                "angularCode": "nb"
              },
              {
                "id": 84,
                "name": "Norwegian Nynorsk",
                "code": "nn",
                "angularCode": "nn"
              },
              {
                "id": 39,
                "name": "Persian",
                "code": "fa",
                "angularCode": "fa"
              },
              {
                "id": 86,
                "name": "Polish",
                "code": "pl",
                "angularCode": "pl"
              },
              {
                "id": 88,
                "name": "Portuguese",
                "code": "pt",
                "angularCode": "pt"
              },
              {
                "id": 87,
                "name": "Portuguese (Brazil)",
                "code": "pt-br",
                "angularCode": "pt"
              },
              {
                "id": 85,
                "name": "Punjabi",
                "code": "pa",
                "angularCode": "pa"
              },
              {
                "id": 89,
                "name": "Romanian",
                "code": "ro",
                "angularCode": "ro"
              },
              {
                "id": 90,
                "name": "Russian",
                "code": "ru",
                "angularCode": "ru"
              },
              {
                "id": 98,
                "name": "Serbian",
                "code": "sr",
                "angularCode": "sr"
              },
              {
                "id": 97,
                "name": "Serbian (Cyrillic)",
                "code": "sr-cyrl",
                "angularCode": "sr-Cyrl"
              },
              {
                "id": 91,
                "name": "Sindhi",
                "code": "sd",
                "angularCode": "sd"
              },
              {
                "id": 93,
                "name": "Sinhala",
                "code": "si",
                "angularCode": "si"
              },
              {
                "id": 94,
                "name": "Slovak",
                "code": "sk",
                "angularCode": "sk"
              },
              {
                "id": 95,
                "name": "Slovenian",
                "code": "sl",
                "angularCode": "sl"
              },
              {
                "id": 36,
                "name": "Spanish",
                "code": "es",
                "angularCode": "es"
              },
              {
                "id": 34,
                "name": "Spanish (Dominican Republic)",
                "code": "es-do",
                "angularCode": "es-DO"
              },
              {
                "id": 35,
                "name": "Spanish (United States)",
                "code": "es-us",
                "angularCode": "es-US"
              },
              {
                "id": 101,
                "name": "Swahili",
                "code": "sw",
                "angularCode": "sw"
              },
              {
                "id": 100,
                "name": "Swedish",
                "code": "sv",
                "angularCode": "sv"
              },
              {
                "id": 105,
                "name": "Tajik",
                "code": "tg",
                "angularCode": "tg"
              },
              {
                "id": 102,
                "name": "Tamil",
                "code": "ta",
                "angularCode": "ta"
              },
              {
                "id": 103,
                "name": "Telugu",
                "code": "te",
                "angularCode": "te"
              },
              {
                "id": 106,
                "name": "Thai",
                "code": "th",
                "angularCode": "th"
              },
              {
                "id": 14,
                "name": "Tibetan",
                "code": "bo",
                "angularCode": "bo"
              },
              {
                "id": 109,
                "name": "Turkish",
                "code": "tr",
                "angularCode": "tr"
              },
              {
                "id": 114,
                "name": "Ukrainian",
                "code": "uk",
                "angularCode": "uk"
              },
              {
                "id": 115,
                "name": "Urdu",
                "code": "ur",
                "angularCode": "ur"
              },
              {
                "id": 117,
                "name": "Uzbek",
                "code": "uz",
                "angularCode": "uz"
              },
              {
                "id": 116,
                "name": "Uzbek (Latin)",
                "code": "uz-latn",
                "angularCode": "uz-Latn"
              },
              {
                "id": 118,
                "name": "Vietnamese",
                "code": "vi",
                "angularCode": "vi"
              },
              {
                "id": 20,
                "name": "Welsh",
                "code": "cy",
                "angularCode": "cy"
              },
              {
                "id": 120,
                "name": "Yoruba",
                "code": "yo",
                "angularCode": "yo"
              }
            ]
          },
          "path": "/enums/locales"
        }
      }
    },
    "enums-languages-get": {
      "endpointKey": "enums-languages-get",
      "path": "/enums/languages",
      "method": "get",
      "x-published": true,
      "tags": ["Enums"],
      "summary": "List languages",
      "description": "Gets the list of languages and their language codes.",
      "parameters": {
        "path": [],
        "query": [
          {
            "name": "localized",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "example": "true",
            "description": "When set to true, the response contains localized language names, for example --  German: Deutch or Czech: ÄeÅ¡tina. This setting limits the number of returned languages to those that have defined their localized name. The default value is `false`."
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "languages": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "languages": [
                  {
                    "code": "ab",
                    "name": "Abkhazian"
                  },
                  {
                    "code": "aa",
                    "name": "Afar"
                  },
                  {
                    "code": "af",
                    "name": "Afrikaans"
                  },
                  {
                    "code": "ak",
                    "name": "Akan"
                  },
                  {
                    "code": "sq",
                    "name": "Albanian"
                  },
                  {
                    "code": "am",
                    "name": "Amharic"
                  },
                  {
                    "code": "ar",
                    "name": "Arabic"
                  },
                  {
                    "code": "an",
                    "name": "Aragonese"
                  },
                  {
                    "code": "hy",
                    "name": "Armenian"
                  },
                  {
                    "code": "as",
                    "name": "Assamese"
                  },
                  {
                    "code": "av",
                    "name": "Avaric"
                  },
                  {
                    "code": "ae",
                    "name": "Avestan"
                  },
                  {
                    "code": "ay",
                    "name": "Aymara"
                  },
                  {
                    "code": "az",
                    "name": "Azerbaijani"
                  },
                  {
                    "code": "bm",
                    "name": "Bambara"
                  },
                  {
                    "code": "ba",
                    "name": "Bashkir"
                  },
                  {
                    "code": "eu",
                    "name": "Basque"
                  },
                  {
                    "code": "be",
                    "name": "Belarusian"
                  },
                  {
                    "code": "bn",
                    "name": "Bengali"
                  },
                  {
                    "code": "bh",
                    "name": "Bihari languages"
                  },
                  {
                    "code": "bi",
                    "name": "Bislama"
                  },
                  {
                    "code": "nb",
                    "name": "BokmÃ¥l, Norwegian; Norwegian BokmÃ¥l"
                  },
                  {
                    "code": "bs",
                    "name": "Bosnian"
                  },
                  {
                    "code": "br",
                    "name": "Breton"
                  },
                  {
                    "code": "bg",
                    "name": "Bulgarian"
                  },
                  {
                    "code": "my",
                    "name": "Burmese"
                  },
                  {
                    "code": "ca",
                    "name": "Catalan; Valencian"
                  },
                  {
                    "code": "km",
                    "name": "Central Khmer"
                  },
                  {
                    "code": "ch",
                    "name": "Chamorro"
                  },
                  {
                    "code": "ce",
                    "name": "Chechen"
                  },
                  {
                    "code": "ny",
                    "name": "Chichewa; Chewa; Nyanja"
                  },
                  {
                    "code": "zh",
                    "name": "Chinese"
                  },
                  {
                    "code": "cu",
                    "name": "Church Slavic; Old Slavonic; Church Slavonic; Old Bulgarian; Old Church Slavonic"
                  },
                  {
                    "code": "cv",
                    "name": "Chuvash"
                  },
                  {
                    "code": "kw",
                    "name": "Cornish"
                  },
                  {
                    "code": "co",
                    "name": "Corsican"
                  },
                  {
                    "code": "cr",
                    "name": "Cree"
                  },
                  {
                    "code": "hr",
                    "name": "Croatian"
                  },
                  {
                    "code": "cs",
                    "name": "Czech"
                  },
                  {
                    "code": "da",
                    "name": "Danish"
                  },
                  {
                    "code": "dv",
                    "name": "Divehi; Dhivehi; Maldivian"
                  },
                  {
                    "code": "nl",
                    "name": "Dutch; Flemish"
                  },
                  {
                    "code": "dz",
                    "name": "Dzongkha"
                  },
                  {
                    "code": "en",
                    "name": "English"
                  },
                  {
                    "code": "eo",
                    "name": "Esperanto"
                  },
                  {
                    "code": "et",
                    "name": "Estonian"
                  },
                  {
                    "code": "ee",
                    "name": "Ewe"
                  },
                  {
                    "code": "fo",
                    "name": "Faroese"
                  },
                  {
                    "code": "fj",
                    "name": "Fijian"
                  },
                  {
                    "code": "fi",
                    "name": "Finnish"
                  },
                  {
                    "code": "fr",
                    "name": "French"
                  },
                  {
                    "code": "ff",
                    "name": "Fulah"
                  },
                  {
                    "code": "gd",
                    "name": "Gaelic; Scottish Gaelic"
                  },
                  {
                    "code": "gl",
                    "name": "Galician"
                  },
                  {
                    "code": "lg",
                    "name": "Ganda"
                  },
                  {
                    "code": "ka",
                    "name": "Georgian"
                  },
                  {
                    "code": "de",
                    "name": "German"
                  },
                  {
                    "code": "el",
                    "name": "Greek, Modern (1453-)"
                  },
                  {
                    "code": "gn",
                    "name": "Guarani"
                  },
                  {
                    "code": "gu",
                    "name": "Gujarati"
                  },
                  {
                    "code": "ht",
                    "name": "Haitian; Haitian Creole"
                  },
                  {
                    "code": "ha",
                    "name": "Hausa"
                  },
                  {
                    "code": "he",
                    "name": "Hebrew"
                  },
                  {
                    "code": "hz",
                    "name": "Herero"
                  },
                  {
                    "code": "hi",
                    "name": "Hindi"
                  },
                  {
                    "code": "ho",
                    "name": "Hiri Motu"
                  },
                  {
                    "code": "hu",
                    "name": "Hungarian"
                  },
                  {
                    "code": "is",
                    "name": "Icelandic"
                  },
                  {
                    "code": "io",
                    "name": "Ido"
                  },
                  {
                    "code": "ig",
                    "name": "Igbo"
                  },
                  {
                    "code": "id",
                    "name": "Indonesian"
                  },
                  {
                    "code": "ia",
                    "name": "Interlingua (International Auxiliary Language Association)"
                  },
                  {
                    "code": "ie",
                    "name": "Interlingue; Occidental"
                  },
                  {
                    "code": "iu",
                    "name": "Inuktitut"
                  },
                  {
                    "code": "ik",
                    "name": "Inupiaq"
                  },
                  {
                    "code": "ga",
                    "name": "Irish"
                  },
                  {
                    "code": "it",
                    "name": "Italian"
                  },
                  {
                    "code": "ja",
                    "name": "Japanese"
                  },
                  {
                    "code": "jv",
                    "name": "Javanese"
                  },
                  {
                    "code": "kl",
                    "name": "Kalaallisut; Greenlandic"
                  },
                  {
                    "code": "kn",
                    "name": "Kannada"
                  },
                  {
                    "code": "kr",
                    "name": "Kanuri"
                  },
                  {
                    "code": "ks",
                    "name": "Kashmiri"
                  },
                  {
                    "code": "kk",
                    "name": "Kazakh"
                  },
                  {
                    "code": "ki",
                    "name": "Kikuyu; Gikuyu"
                  },
                  {
                    "code": "rw",
                    "name": "Kinyarwanda"
                  },
                  {
                    "code": "ky",
                    "name": "Kirghiz; Kyrgyz"
                  },
                  {
                    "code": "kv",
                    "name": "Komi"
                  },
                  {
                    "code": "kg",
                    "name": "Kongo"
                  },
                  {
                    "code": "ko",
                    "name": "Korean"
                  },
                  {
                    "code": "kj",
                    "name": "Kuanyama; Kwanyama"
                  },
                  {
                    "code": "ku",
                    "name": "Kurdish"
                  },
                  {
                    "code": "lo",
                    "name": "Lao"
                  },
                  {
                    "code": "la",
                    "name": "Latin"
                  },
                  {
                    "code": "lv",
                    "name": "Latvian"
                  },
                  {
                    "code": "li",
                    "name": "Limburgan; Limburger; Limburgish"
                  },
                  {
                    "code": "ln",
                    "name": "Lingala"
                  },
                  {
                    "code": "lt",
                    "name": "Lithuanian"
                  },
                  {
                    "code": "lu",
                    "name": "Luba-Katanga"
                  },
                  {
                    "code": "lb",
                    "name": "Luxembourgish; Letzeburgesch"
                  },
                  {
                    "code": "mk",
                    "name": "Macedonian"
                  },
                  {
                    "code": "mg",
                    "name": "Malagasy"
                  },
                  {
                    "code": "ms",
                    "name": "Malay"
                  },
                  {
                    "code": "ml",
                    "name": "Malayalam"
                  },
                  {
                    "code": "mt",
                    "name": "Maltese"
                  },
                  {
                    "code": "gv",
                    "name": "Manx"
                  },
                  {
                    "code": "mi",
                    "name": "Maori"
                  },
                  {
                    "code": "mr",
                    "name": "Marathi"
                  },
                  {
                    "code": "mh",
                    "name": "Marshallese"
                  },
                  {
                    "code": "mn",
                    "name": "Mongolian"
                  },
                  {
                    "code": "na",
                    "name": "Nauru"
                  },
                  {
                    "code": "nv",
                    "name": "Navajo; Navaho"
                  },
                  {
                    "code": "nd",
                    "name": "Ndebele, North; North Ndebele"
                  },
                  {
                    "code": "nr",
                    "name": "Ndebele, South; South Ndebele"
                  },
                  {
                    "code": "ng",
                    "name": "Ndonga"
                  },
                  {
                    "code": "ne",
                    "name": "Nepali"
                  },
                  {
                    "code": "se",
                    "name": "Northern Sami"
                  },
                  {
                    "code": "no",
                    "name": "Norwegian"
                  },
                  {
                    "code": "nn",
                    "name": "Norwegian Nynorsk; Nynorsk, Norwegian"
                  },
                  {
                    "code": "oc",
                    "name": "Occitan (post 1500); ProvenÃ§al"
                  },
                  {
                    "code": "oj",
                    "name": "Ojibwa"
                  },
                  {
                    "code": "or",
                    "name": "Oriya"
                  },
                  {
                    "code": "om",
                    "name": "Oromo"
                  },
                  {
                    "code": "os",
                    "name": "Ossetian; Ossetic"
                  },
                  {
                    "code": "pi",
                    "name": "Pali"
                  },
                  {
                    "code": "pa",
                    "name": "Panjabi; Punjabi"
                  },
                  {
                    "code": "fa",
                    "name": "Persian"
                  },
                  {
                    "code": "pl",
                    "name": "Polish"
                  },
                  {
                    "code": "pt",
                    "name": "Portuguese"
                  },
                  {
                    "code": "ps",
                    "name": "Pushto; Pashto"
                  },
                  {
                    "code": "qu",
                    "name": "Quechua"
                  },
                  {
                    "code": "ro",
                    "name": "Romanian; Moldavian; Moldovan"
                  },
                  {
                    "code": "rm",
                    "name": "Romansh"
                  },
                  {
                    "code": "rn",
                    "name": "Rundi"
                  },
                  {
                    "code": "ru",
                    "name": "Russian"
                  },
                  {
                    "code": "sm",
                    "name": "Samoan"
                  },
                  {
                    "code": "sg",
                    "name": "Sango"
                  },
                  {
                    "code": "sa",
                    "name": "Sanskrit"
                  },
                  {
                    "code": "sc",
                    "name": "Sardinian"
                  },
                  {
                    "code": "sr",
                    "name": "Serbian"
                  },
                  {
                    "code": "sn",
                    "name": "Shona"
                  },
                  {
                    "code": "ii",
                    "name": "Sichuan Yi; Nuosu"
                  },
                  {
                    "code": "sd",
                    "name": "Sindhi"
                  },
                  {
                    "code": "si",
                    "name": "Sinhala; Sinhalese"
                  },
                  {
                    "code": "sk",
                    "name": "Slovak"
                  },
                  {
                    "code": "sl",
                    "name": "Slovenian"
                  },
                  {
                    "code": "so",
                    "name": "Somali"
                  },
                  {
                    "code": "st",
                    "name": "Sotho, Southern"
                  },
                  {
                    "code": "es",
                    "name": "Spanish; Castilian"
                  },
                  {
                    "code": "su",
                    "name": "Sundanese"
                  },
                  {
                    "code": "sw",
                    "name": "Swahili"
                  },
                  {
                    "code": "ss",
                    "name": "Swati"
                  },
                  {
                    "code": "sv",
                    "name": "Swedish"
                  },
                  {
                    "code": "tl",
                    "name": "Tagalog"
                  },
                  {
                    "code": "ty",
                    "name": "Tahitian"
                  },
                  {
                    "code": "tg",
                    "name": "Tajik"
                  },
                  {
                    "code": "ta",
                    "name": "Tamil"
                  },
                  {
                    "code": "tt",
                    "name": "Tatar"
                  },
                  {
                    "code": "te",
                    "name": "Telugu"
                  },
                  {
                    "code": "th",
                    "name": "Thai"
                  },
                  {
                    "code": "bo",
                    "name": "Tibetan"
                  },
                  {
                    "code": "ti",
                    "name": "Tigrinya"
                  },
                  {
                    "code": "to",
                    "name": "Tonga (Tonga Islands)"
                  },
                  {
                    "code": "ts",
                    "name": "Tsonga"
                  },
                  {
                    "code": "tn",
                    "name": "Tswana"
                  },
                  {
                    "code": "tr",
                    "name": "Turkish"
                  },
                  {
                    "code": "tk",
                    "name": "Turkmen"
                  },
                  {
                    "code": "tw",
                    "name": "Twi"
                  },
                  {
                    "code": "ug",
                    "name": "Uighur; Uyghur"
                  },
                  {
                    "code": "uk",
                    "name": "Ukrainian"
                  },
                  {
                    "code": "ur",
                    "name": "Urdu"
                  },
                  {
                    "code": "uz",
                    "name": "Uzbek"
                  },
                  {
                    "code": "ve",
                    "name": "Venda"
                  },
                  {
                    "code": "vi",
                    "name": "Vietnamese"
                  },
                  {
                    "code": "vo",
                    "name": "VolapÃ¼k"
                  },
                  {
                    "code": "wa",
                    "name": "Walloon"
                  },
                  {
                    "code": "cy",
                    "name": "Welsh"
                  },
                  {
                    "code": "fy",
                    "name": "Western Frisian"
                  },
                  {
                    "code": "wo",
                    "name": "Wolof"
                  },
                  {
                    "code": "xh",
                    "name": "Xhosa"
                  },
                  {
                    "code": "yi",
                    "name": "Yiddish"
                  },
                  {
                    "code": "yo",
                    "name": "Yoruba"
                  },
                  {
                    "code": "za",
                    "name": "Zhuang; Chuang"
                  },
                  {
                    "code": "zu",
                    "name": "Zulu"
                  }
                ]
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "languages": [
              {
                "code": "ab",
                "name": "Abkhazian"
              },
              {
                "code": "aa",
                "name": "Afar"
              },
              {
                "code": "af",
                "name": "Afrikaans"
              },
              {
                "code": "ak",
                "name": "Akan"
              },
              {
                "code": "sq",
                "name": "Albanian"
              },
              {
                "code": "am",
                "name": "Amharic"
              },
              {
                "code": "ar",
                "name": "Arabic"
              },
              {
                "code": "an",
                "name": "Aragonese"
              },
              {
                "code": "hy",
                "name": "Armenian"
              },
              {
                "code": "as",
                "name": "Assamese"
              },
              {
                "code": "av",
                "name": "Avaric"
              },
              {
                "code": "ae",
                "name": "Avestan"
              },
              {
                "code": "ay",
                "name": "Aymara"
              },
              {
                "code": "az",
                "name": "Azerbaijani"
              },
              {
                "code": "bm",
                "name": "Bambara"
              },
              {
                "code": "ba",
                "name": "Bashkir"
              },
              {
                "code": "eu",
                "name": "Basque"
              },
              {
                "code": "be",
                "name": "Belarusian"
              },
              {
                "code": "bn",
                "name": "Bengali"
              },
              {
                "code": "bh",
                "name": "Bihari languages"
              },
              {
                "code": "bi",
                "name": "Bislama"
              },
              {
                "code": "nb",
                "name": "BokmÃ¥l, Norwegian; Norwegian BokmÃ¥l"
              },
              {
                "code": "bs",
                "name": "Bosnian"
              },
              {
                "code": "br",
                "name": "Breton"
              },
              {
                "code": "bg",
                "name": "Bulgarian"
              },
              {
                "code": "my",
                "name": "Burmese"
              },
              {
                "code": "ca",
                "name": "Catalan; Valencian"
              },
              {
                "code": "km",
                "name": "Central Khmer"
              },
              {
                "code": "ch",
                "name": "Chamorro"
              },
              {
                "code": "ce",
                "name": "Chechen"
              },
              {
                "code": "ny",
                "name": "Chichewa; Chewa; Nyanja"
              },
              {
                "code": "zh",
                "name": "Chinese"
              },
              {
                "code": "cu",
                "name": "Church Slavic; Old Slavonic; Church Slavonic; Old Bulgarian; Old Church Slavonic"
              },
              {
                "code": "cv",
                "name": "Chuvash"
              },
              {
                "code": "kw",
                "name": "Cornish"
              },
              {
                "code": "co",
                "name": "Corsican"
              },
              {
                "code": "cr",
                "name": "Cree"
              },
              {
                "code": "hr",
                "name": "Croatian"
              },
              {
                "code": "cs",
                "name": "Czech"
              },
              {
                "code": "da",
                "name": "Danish"
              },
              {
                "code": "dv",
                "name": "Divehi; Dhivehi; Maldivian"
              },
              {
                "code": "nl",
                "name": "Dutch; Flemish"
              },
              {
                "code": "dz",
                "name": "Dzongkha"
              },
              {
                "code": "en",
                "name": "English"
              },
              {
                "code": "eo",
                "name": "Esperanto"
              },
              {
                "code": "et",
                "name": "Estonian"
              },
              {
                "code": "ee",
                "name": "Ewe"
              },
              {
                "code": "fo",
                "name": "Faroese"
              },
              {
                "code": "fj",
                "name": "Fijian"
              },
              {
                "code": "fi",
                "name": "Finnish"
              },
              {
                "code": "fr",
                "name": "French"
              },
              {
                "code": "ff",
                "name": "Fulah"
              },
              {
                "code": "gd",
                "name": "Gaelic; Scottish Gaelic"
              },
              {
                "code": "gl",
                "name": "Galician"
              },
              {
                "code": "lg",
                "name": "Ganda"
              },
              {
                "code": "ka",
                "name": "Georgian"
              },
              {
                "code": "de",
                "name": "German"
              },
              {
                "code": "el",
                "name": "Greek, Modern (1453-)"
              },
              {
                "code": "gn",
                "name": "Guarani"
              },
              {
                "code": "gu",
                "name": "Gujarati"
              },
              {
                "code": "ht",
                "name": "Haitian; Haitian Creole"
              },
              {
                "code": "ha",
                "name": "Hausa"
              },
              {
                "code": "he",
                "name": "Hebrew"
              },
              {
                "code": "hz",
                "name": "Herero"
              },
              {
                "code": "hi",
                "name": "Hindi"
              },
              {
                "code": "ho",
                "name": "Hiri Motu"
              },
              {
                "code": "hu",
                "name": "Hungarian"
              },
              {
                "code": "is",
                "name": "Icelandic"
              },
              {
                "code": "io",
                "name": "Ido"
              },
              {
                "code": "ig",
                "name": "Igbo"
              },
              {
                "code": "id",
                "name": "Indonesian"
              },
              {
                "code": "ia",
                "name": "Interlingua (International Auxiliary Language Association)"
              },
              {
                "code": "ie",
                "name": "Interlingue; Occidental"
              },
              {
                "code": "iu",
                "name": "Inuktitut"
              },
              {
                "code": "ik",
                "name": "Inupiaq"
              },
              {
                "code": "ga",
                "name": "Irish"
              },
              {
                "code": "it",
                "name": "Italian"
              },
              {
                "code": "ja",
                "name": "Japanese"
              },
              {
                "code": "jv",
                "name": "Javanese"
              },
              {
                "code": "kl",
                "name": "Kalaallisut; Greenlandic"
              },
              {
                "code": "kn",
                "name": "Kannada"
              },
              {
                "code": "kr",
                "name": "Kanuri"
              },
              {
                "code": "ks",
                "name": "Kashmiri"
              },
              {
                "code": "kk",
                "name": "Kazakh"
              },
              {
                "code": "ki",
                "name": "Kikuyu; Gikuyu"
              },
              {
                "code": "rw",
                "name": "Kinyarwanda"
              },
              {
                "code": "ky",
                "name": "Kirghiz; Kyrgyz"
              },
              {
                "code": "kv",
                "name": "Komi"
              },
              {
                "code": "kg",
                "name": "Kongo"
              },
              {
                "code": "ko",
                "name": "Korean"
              },
              {
                "code": "kj",
                "name": "Kuanyama; Kwanyama"
              },
              {
                "code": "ku",
                "name": "Kurdish"
              },
              {
                "code": "lo",
                "name": "Lao"
              },
              {
                "code": "la",
                "name": "Latin"
              },
              {
                "code": "lv",
                "name": "Latvian"
              },
              {
                "code": "li",
                "name": "Limburgan; Limburger; Limburgish"
              },
              {
                "code": "ln",
                "name": "Lingala"
              },
              {
                "code": "lt",
                "name": "Lithuanian"
              },
              {
                "code": "lu",
                "name": "Luba-Katanga"
              },
              {
                "code": "lb",
                "name": "Luxembourgish; Letzeburgesch"
              },
              {
                "code": "mk",
                "name": "Macedonian"
              },
              {
                "code": "mg",
                "name": "Malagasy"
              },
              {
                "code": "ms",
                "name": "Malay"
              },
              {
                "code": "ml",
                "name": "Malayalam"
              },
              {
                "code": "mt",
                "name": "Maltese"
              },
              {
                "code": "gv",
                "name": "Manx"
              },
              {
                "code": "mi",
                "name": "Maori"
              },
              {
                "code": "mr",
                "name": "Marathi"
              },
              {
                "code": "mh",
                "name": "Marshallese"
              },
              {
                "code": "mn",
                "name": "Mongolian"
              },
              {
                "code": "na",
                "name": "Nauru"
              },
              {
                "code": "nv",
                "name": "Navajo; Navaho"
              },
              {
                "code": "nd",
                "name": "Ndebele, North; North Ndebele"
              },
              {
                "code": "nr",
                "name": "Ndebele, South; South Ndebele"
              },
              {
                "code": "ng",
                "name": "Ndonga"
              },
              {
                "code": "ne",
                "name": "Nepali"
              },
              {
                "code": "se",
                "name": "Northern Sami"
              },
              {
                "code": "no",
                "name": "Norwegian"
              },
              {
                "code": "nn",
                "name": "Norwegian Nynorsk; Nynorsk, Norwegian"
              },
              {
                "code": "oc",
                "name": "Occitan (post 1500); ProvenÃ§al"
              },
              {
                "code": "oj",
                "name": "Ojibwa"
              },
              {
                "code": "or",
                "name": "Oriya"
              },
              {
                "code": "om",
                "name": "Oromo"
              },
              {
                "code": "os",
                "name": "Ossetian; Ossetic"
              },
              {
                "code": "pi",
                "name": "Pali"
              },
              {
                "code": "pa",
                "name": "Panjabi; Punjabi"
              },
              {
                "code": "fa",
                "name": "Persian"
              },
              {
                "code": "pl",
                "name": "Polish"
              },
              {
                "code": "pt",
                "name": "Portuguese"
              },
              {
                "code": "ps",
                "name": "Pushto; Pashto"
              },
              {
                "code": "qu",
                "name": "Quechua"
              },
              {
                "code": "ro",
                "name": "Romanian; Moldavian; Moldovan"
              },
              {
                "code": "rm",
                "name": "Romansh"
              },
              {
                "code": "rn",
                "name": "Rundi"
              },
              {
                "code": "ru",
                "name": "Russian"
              },
              {
                "code": "sm",
                "name": "Samoan"
              },
              {
                "code": "sg",
                "name": "Sango"
              },
              {
                "code": "sa",
                "name": "Sanskrit"
              },
              {
                "code": "sc",
                "name": "Sardinian"
              },
              {
                "code": "sr",
                "name": "Serbian"
              },
              {
                "code": "sn",
                "name": "Shona"
              },
              {
                "code": "ii",
                "name": "Sichuan Yi; Nuosu"
              },
              {
                "code": "sd",
                "name": "Sindhi"
              },
              {
                "code": "si",
                "name": "Sinhala; Sinhalese"
              },
              {
                "code": "sk",
                "name": "Slovak"
              },
              {
                "code": "sl",
                "name": "Slovenian"
              },
              {
                "code": "so",
                "name": "Somali"
              },
              {
                "code": "st",
                "name": "Sotho, Southern"
              },
              {
                "code": "es",
                "name": "Spanish; Castilian"
              },
              {
                "code": "su",
                "name": "Sundanese"
              },
              {
                "code": "sw",
                "name": "Swahili"
              },
              {
                "code": "ss",
                "name": "Swati"
              },
              {
                "code": "sv",
                "name": "Swedish"
              },
              {
                "code": "tl",
                "name": "Tagalog"
              },
              {
                "code": "ty",
                "name": "Tahitian"
              },
              {
                "code": "tg",
                "name": "Tajik"
              },
              {
                "code": "ta",
                "name": "Tamil"
              },
              {
                "code": "tt",
                "name": "Tatar"
              },
              {
                "code": "te",
                "name": "Telugu"
              },
              {
                "code": "th",
                "name": "Thai"
              },
              {
                "code": "bo",
                "name": "Tibetan"
              },
              {
                "code": "ti",
                "name": "Tigrinya"
              },
              {
                "code": "to",
                "name": "Tonga (Tonga Islands)"
              },
              {
                "code": "ts",
                "name": "Tsonga"
              },
              {
                "code": "tn",
                "name": "Tswana"
              },
              {
                "code": "tr",
                "name": "Turkish"
              },
              {
                "code": "tk",
                "name": "Turkmen"
              },
              {
                "code": "tw",
                "name": "Twi"
              },
              {
                "code": "ug",
                "name": "Uighur; Uyghur"
              },
              {
                "code": "uk",
                "name": "Ukrainian"
              },
              {
                "code": "ur",
                "name": "Urdu"
              },
              {
                "code": "uz",
                "name": "Uzbek"
              },
              {
                "code": "ve",
                "name": "Venda"
              },
              {
                "code": "vi",
                "name": "Vietnamese"
              },
              {
                "code": "vo",
                "name": "VolapÃ¼k"
              },
              {
                "code": "wa",
                "name": "Walloon"
              },
              {
                "code": "cy",
                "name": "Welsh"
              },
              {
                "code": "fy",
                "name": "Western Frisian"
              },
              {
                "code": "wo",
                "name": "Wolof"
              },
              {
                "code": "xh",
                "name": "Xhosa"
              },
              {
                "code": "yi",
                "name": "Yiddish"
              },
              {
                "code": "yo",
                "name": "Yoruba"
              },
              {
                "code": "za",
                "name": "Zhuang; Chuang"
              },
              {
                "code": "zu",
                "name": "Zulu"
              }
            ]
          },
          "parameters": {
            "localized": "true"
          },
          "path": "/enums/languages"
        }
      }
    },
    "enums-user-email-notifications-get": {
      "endpointKey": "enums-user-email-notifications-get",
      "path": "/enums/user-email-notifications",
      "method": "get",
      "x-published": true,
      "tags": ["Enums"],
      "summary": "List email notification settings",
      "description": "Gets the list of available email notification settings and their `notificationId` values. The language of the notification settings descriptions is set according to user language settings by default. You can specify a different language for the notification settings descriptions with the `language` parameter.",
      "parameters": {
        "path": [],
        "query": [
          {
            "name": "language",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "en",
            "description": "Language code in the ISO 639-1 code standard. Only `en` (English) and `cs` (Czech) languages are supported."
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userEmailNotifications": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "userEmailNotifications": [
                  {
                    "id": 2,
                    "name": "Warning in scenario run",
                    "description": "Warnings encountered by your scenarios that need your attention, such as failure to connect with your apps and services."
                  },
                  {
                    "id": 1,
                    "name": "Errors in scenario run",
                    "description": "Notifications about errors encountered by specific modules in your scenarios that keep your workflows from running smoothly."
                  },
                  {
                    "id": 6,
                    "name": "Scenario deactivation",
                    "description": "Get notified when your scenario gets deactivated due to critical issues such as multiple consecutive errors."
                  }
                ]
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "userEmailNotifications": [
              {
                "id": 2,
                "name": "Warning in scenario run",
                "description": "Warnings encountered by your scenarios that need your attention, such as failure to connect with your apps and services."
              },
              {
                "id": 1,
                "name": "Errors in scenario run",
                "description": "Notifications about errors encountered by specific modules in your scenarios that keep your workflows from running smoothly."
              },
              {
                "id": 6,
                "name": "Scenario deactivation",
                "description": "Get notified when your scenario gets deactivated due to critical issues such as multiple consecutive errors."
              }
            ]
          },
          "parameters": {
            "language": "en"
          },
          "path": "/enums/user-email-notifications"
        }
      }
    },
    "enums-user-api-token-scopes-get": {
      "endpointKey": "enums-user-api-token-scopes-get",
      "path": "/enums/user-api-token-scopes",
      "method": "get",
      "x-published": true,
      "tags": ["Enums"],
      "summary": "List API token scopes",
      "description": "Gets the list of all of the existing user API token scopes. For more information about the user API scopes refer to the [Authentication section](https://www.make.com/en/api-documentation/authentication).",
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userApiTokenScopes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "userApiTokenScopes": [
                  {
                    "name": "accounts:read"
                  },
                  {
                    "name": "accounts:write"
                  },
                  {
                    "name": "admin:read"
                  },
                  {
                    "name": "admin:write"
                  },
                  {
                    "name": "apps:read"
                  },
                  {
                    "name": "apps:write"
                  },
                  {
                    "name": "imt-forms:read"
                  },
                  {
                    "name": "imt-forms:write"
                  },
                  {
                    "name": "keys:read"
                  },
                  {
                    "name": "keys:write"
                  },
                  {
                    "name": "notifications:read"
                  },
                  {
                    "name": "notifications:write"
                  },
                  {
                    "name": "organizations:read"
                  },
                  {
                    "name": "organizations:write"
                  },
                  {
                    "name": "packages:read"
                  },
                  {
                    "name": "packages:write"
                  },
                  {
                    "name": "scenarios:read"
                  },
                  {
                    "name": "scenarios:write"
                  },
                  {
                    "name": "system:read"
                  },
                  {
                    "name": "system:write"
                  },
                  {
                    "name": "templates:read"
                  },
                  {
                    "name": "templates:write"
                  },
                  {
                    "name": "udts:read"
                  },
                  {
                    "name": "udts:write"
                  }
                ]
              }
            }
          }
        }
      },
      "parameters": {
        "body": []
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "userApiTokenScopes": [
              {
                "name": "accounts:read"
              },
              {
                "name": "accounts:write"
              },
              {
                "name": "admin:read"
              },
              {
                "name": "admin:write"
              },
              {
                "name": "apps:read"
              },
              {
                "name": "apps:write"
              },
              {
                "name": "imt-forms:read"
              },
              {
                "name": "imt-forms:write"
              },
              {
                "name": "keys:read"
              },
              {
                "name": "keys:write"
              },
              {
                "name": "notifications:read"
              },
              {
                "name": "notifications:write"
              },
              {
                "name": "organizations:read"
              },
              {
                "name": "organizations:write"
              },
              {
                "name": "packages:read"
              },
              {
                "name": "packages:write"
              },
              {
                "name": "scenarios:read"
              },
              {
                "name": "scenarios:write"
              },
              {
                "name": "system:read"
              },
              {
                "name": "system:write"
              },
              {
                "name": "templates:read"
              },
              {
                "name": "templates:write"
              },
              {
                "name": "udts:read"
              },
              {
                "name": "udts:write"
              }
            ]
          },
          "path": "/enums/user-api-token-scopes"
        }
      }
    },
    "enums-imt-regions-get": {
      "endpointKey": "enums-imt-regions-get",
      "path": "/enums/imt-regions",
      "method": "get",
      "x-published": true,
      "tags": ["Enums"],
      "summary": "List Make regions",
      "description": "Gets the list of Make regions and their `regionId` values in the `id` column. The `regionId` is a required parameter when you create a new organization with the API call `POST /organizations`.",
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "imtRegions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "imtRegions": [
                  {
                    "id": 1,
                    "name": "Local"
                  }
                ]
              }
            }
          }
        }
      },
      "parameters": {
        "body": []
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "imtRegions": [
              {
                "id": 1,
                "name": "Local"
              }
            ]
          },
          "path": "/enums/imt-regions"
        }
      }
    },
    "enums-imt-zones-get": {
      "endpointKey": "enums-imt-zones-get",
      "path": "/enums/imt-zones",
      "method": "get",
      "x-published": true,
      "tags": ["Enums"],
      "summary": "List Make zones",
      "description": "Gets the list of Make zones and their `zoneId` values in the `id` column. The `zoneId` is a required parameter when you create a new organization with the API call `POST /organizations`.",
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "imtZones": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "domain": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "imtZones": [
                  {
                    "id": 1,
                    "domain": "slave1.make.cloud",
                    "name": "Zone Slave 1"
                  },
                  {
                    "id": 2,
                    "domain": "slave2.make.cloud",
                    "name": "Zone Slave 2"
                  }
                ]
              }
            }
          }
        }
      },
      "parameters": {
        "body": []
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "imtZones": [
              {
                "id": 1,
                "domain": "slave1.make.cloud",
                "name": "Zone Slave 1"
              },
              {
                "id": 2,
                "domain": "slave2.make.cloud",
                "name": "Zone Slave 2"
              }
            ]
          },
          "path": "/enums/imt-zones"
        }
      }
    },
    "enums-variable-types-get": {
      "endpointKey": "enums-variable-types-get",
      "path": "/enums/variable-types",
      "method": "get",
      "x-published": true,
      "tags": ["Enums"],
      "summary": "List variable types",
      "description": "Retrieves the mapping of custom variable types and their `typeId` values.",
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "variableTypes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "teamOnly": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "variableTypes": [
                  {
                    "id": 1,
                    "name": "number",
                    "teamOnly": false
                  },
                  {
                    "id": 2,
                    "name": "string",
                    "teamOnly": false
                  },
                  {
                    "id": 3,
                    "name": "boolean",
                    "teamOnly": false
                  },
                  {
                    "id": 4,
                    "name": "date",
                    "teamOnly": false
                  }
                ]
              }
            }
          }
        }
      },
      "parameters": {
        "body": []
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "variableTypes": [
              {
                "id": 1,
                "name": "number",
                "teamOnly": false
              },
              {
                "id": 2,
                "name": "string",
                "teamOnly": false
              },
              {
                "id": 3,
                "name": "boolean",
                "teamOnly": false
              },
              {
                "id": 4,
                "name": "date",
                "teamOnly": false
              }
            ]
          },
          "path": "/enums/variable-types"
        }
      }
    },
    "functions-get": {
      "endpointKey": "functions-get",
      "path": "/functions",
      "method": "get",
      "x-published": true,
      "tags": ["Custom functions"],
      "summary": "List custom functions",
      "description": "Retrieves a list of custom functions available in the team. The response contains `id`, `name`, `description` and a brief updates history of all custom functions available in the team.\n\nCheck availability of the custom functions feature with the API call `GET /organizations/{organizationId}` for the organization to which the team belongs. If the response contains `\"customFunctions\": true` pair in the `license` object then you have access to the custom functions feature.\n\nRefer to the [Make pricing page](https://www.make.com/en/help/general/pricing-parameters) for Make pricing plans overview.",
      "security": [
        {
          "token": ["function:read"]
        }
      ],
      "parameters": {
        "path": [],
        "query": [
          {
            "name": "teamId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the team.",
            "example": 11
          },
          {
            "description": "Specifies columns that are returned in the response. Use the `cols[]` parameter for every column that you want to return in the response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get both `key1` and `key2` columns in the response.\n\n[Check the \"Filtering\" section for a full example.](https://www.make.com/en/api-documentation/filtering)",
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "description",
                  "args",
                  "updatedAt",
                  "createdAt",
                  "createdByUser"
                ]
              }
            }
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "functions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "args": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "createdByUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            }
                          }
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "functions": [
                  {
                    "id": 2,
                    "name": "checkType",
                    "args": "(param)",
                    "description": "Returns the data type of the argument.",
                    "updatedAt": "2023-02-06T09:10:40.643Z",
                    "createdByUser": {
                      "id": 22,
                      "name": "John Doe",
                      "email": "john@doe.com"
                    },
                    "createdAt": "2023-02-06T09:09:16.063Z"
                  },
                  {
                    "id": 3,
                    "name": "numberOfWorkingDays",
                    "args": "()",
                    "description": "Calculate how many working days are between the two provided dates.",
                    "updatedAt": "2023-01-25T12:49:51.601Z",
                    "createdByUser": {
                      "id": 22,
                      "name": "John Doe",
                      "email": "john@doe.com"
                    },
                    "createdAt": "2023-01-25T12:49:51.601Z"
                  }
                ]
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "functions": [
              {
                "id": 2,
                "name": "checkType",
                "args": "(param)",
                "description": "Returns the data type of the argument.",
                "updatedAt": "2023-02-06T09:10:40.643Z",
                "createdByUser": {
                  "id": 22,
                  "name": "John Doe",
                  "email": "john@doe.com"
                },
                "createdAt": "2023-02-06T09:09:16.063Z"
              },
              {
                "id": 3,
                "name": "numberOfWorkingDays",
                "args": "()",
                "description": "Calculate how many working days are between the two provided dates.",
                "updatedAt": "2023-01-25T12:49:51.601Z",
                "createdByUser": {
                  "id": 22,
                  "name": "John Doe",
                  "email": "john@doe.com"
                },
                "createdAt": "2023-01-25T12:49:51.601Z"
              }
            ]
          },
          "parameters": {
            "teamId": 11
          },
          "path": "/functions"
        }
      }
    },
    "functions-post": {
      "endpointKey": "functions-post",
      "path": "/functions",
      "method": "post",
      "x-published": true,
      "tags": ["Custom functions"],
      "summary": "Create a custom function",
      "description": "Creates a custom function. Specify function `name`, `description` and `code` in the request body.\n\nYou cannot use a JavaScript reserved word for the function `name`. Check the [list of JavaScript reserved words](https://www.w3schools.com/js/js_reserved.asp).\n\nMake sure to use the same function name in the `name` field and in the function's `code`. Otherwise, you get the IM005 error.\n\nMake validates the custom function's code first. You get an IM005 error if the code validation fails. The validation might fail because of a syntax error in the function's code or when the code uses a JavaScript feature that Make doesn't support. Check the [custom functions limitations](https://www.make.com/en/help/functions/custom-functions#limitations-of-custom-functions) in the Make Help center.\n\nCheck availability of the custom functions feature with the API call `GET /organizations/{organizationId}` for the organization to which the team belongs. If the response contains `\"customFunctions\": true` pair in the `license` object then you have access to the custom functions feature.\n\nRefer to the [Make pricing page](https://www.make.com/en/help/general/pricing-parameters) for Make pricing plans overview.",
      "security": [
        {
          "token": ["functions:write"]
        }
      ],
      "parameters": {
        "path": [],
        "query": [
          {
            "name": "teamId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the team.",
            "example": 11
          }
        ],
        "body": [
          {
            "name": "name",
            "schema": {
              "type": "string",
              "description": "The name of the custom function."
            },
            "example": "symmetricDifference",
            "required": true,
            "description": "The name of the custom function."
          },
          {
            "name": "description",
            "schema": {
              "type": "string",
              "description": "The description of the custom function."
            },
            "example": "A function which returns an array with items unique across two arrays.",
            "required": true,
            "description": "The description of the custom function."
          },
          {
            "name": "code",
            "schema": {
              "type": "string",
              "description": "The code of the custom function."
            },
            "example": "function symmetricDifference(array1, array2){difference = array1.filter(x => !array2.includes(x)).concat(array2.filter(x => !array1.includes(x))) return difference}",
            "required": false,
            "description": "The code of the custom function."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the custom function."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the custom function."
                },
                "code": {
                  "type": "string",
                  "description": "The code of the custom function."
                }
              },
              "required": ["name", "description"]
            },
            "example": {
              "name": "symmetricDifference",
              "description": "A function which returns an array with items unique across two arrays.",
              "code": "function symmetricDifference(array1, array2){difference = array1.filter(x => !array2.includes(x)).concat(array2.filter(x => !array1.includes(x))) return difference}"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "function": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "args": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "createdByUser": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          }
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              },
              "example": {
                "function": {
                  "id": 16,
                  "name": "symmetricDifference",
                  "description": "A function which returns an array with items unique across two arrays.",
                  "code": "function symmetricDifference(array1, array2){difference = array1.filter(x => !array2.includes(x)).concat(array2.filter(x => !array1.includes(x))) return difference}",
                  "args": "(array1, array2)",
                  "updatedAt": "2023-02-06T14:09:37.834Z",
                  "createdAt": "2023-02-06T14:09:37.834Z",
                  "createdByUser": {
                    "id": 22,
                    "name": "John Doe",
                    "email": "john@doe.com"
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "function": {
              "id": 16,
              "name": "symmetricDifference",
              "description": "A function which returns an array with items unique across two arrays.",
              "code": "function symmetricDifference(array1, array2){difference = array1.filter(x => !array2.includes(x)).concat(array2.filter(x => !array1.includes(x))) return difference}",
              "args": "(array1, array2)",
              "updatedAt": "2023-02-06T14:09:37.834Z",
              "createdAt": "2023-02-06T14:09:37.834Z",
              "createdByUser": {
                "id": 22,
                "name": "John Doe",
                "email": "john@doe.com"
              }
            }
          },
          "requestBody": {
            "name": "symmetricDifference",
            "description": "A function which returns an array with items unique across two arrays.",
            "code": "function symmetricDifference(array1, array2){difference = array1.filter(x => !array2.includes(x)).concat(array2.filter(x => !array1.includes(x))) return difference}"
          },
          "parameters": {
            "teamId": 11
          },
          "path": "/functions"
        }
      }
    },
    "functions-eval-post": {
      "endpointKey": "functions-eval-post",
      "path": "/functions/eval",
      "method": "post",
      "x-published": true,
      "tags": ["Custom functions"],
      "summary": "Check custom function code",
      "description": "Checks the custom functions code. The response contains information whether Make validated the custom functions code successfully or whether there was an error.\n\nThe code validation might fail because of an syntax error in the function's code or when the code uses a JavaScript feature that Make doesn't support. Check the [custom functions limitations](https://www.make.com/en/help/functions/custom-functions#limitations-of-custom-functions) in the Make Help center.\n\nCheck availability of the custom functions feature with the API call `GET /organizations/{organizationId}` for the organization to which the team belongs. If the response contains `\"customFunctions\": true` pair in the `license` object then you have access to the custom functions feature.\n\nRefer to the [Make pricing page](https://www.make.com/en/help/general/pricing-parameters) for Make pricing plans overview.",
      "security": [
        {
          "token": ["functions:write"]
        }
      ],
      "parameters": {
        "path": [],
        "query": [
          {
            "name": "teamId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the team.",
            "example": 11
          }
        ],
        "body": [
          {
            "name": "code",
            "schema": {
              "type": "string",
              "description": "The code of the custom function."
            },
            "example": "function checkType(arg) {return (typeof(arg))}",
            "required": true,
            "description": "The code of the custom function."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code of the custom function."
                }
              },
              "required": ["code"]
            },
            "example": {
              "code": "function checkType(arg) {return (typeof(arg))}"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean"
                  },
                  "error": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "success": true,
                "error": null
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "success": true,
            "error": null
          },
          "requestBody": {
            "code": "function checkType(arg) {return (typeof(arg))}"
          },
          "parameters": {
            "teamId": 11
          },
          "path": "/functions/eval"
        }
      }
    },
    "functions-functionId-get": {
      "endpointKey": "functions-functionId-get",
      "path": "/functions/{functionId}",
      "method": "get",
      "x-published": true,
      "tags": ["Custom functions"],
      "summary": "Custom function detail",
      "description": "Gets detailed information about a custom function. The response contains function `name`, `code`,  a list of scenarios which use the custom function and the custom function's history of updates.",
      "security": [
        {
          "token": ["functions:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "functionId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "example": 44,
            "description": "The ID of the custom function."
          }
        ],
        "query": [
          {
            "description": "Specifies columns that are returned in the response. Use the `cols[]` parameter for every column that you want to return in the response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get both `key1` and `key2` columns in the response.\n\n[Check the \"Filtering\" section for a full example.](https://www.make.com/en/api-documentation/filtering)",
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "args",
                  "code",
                  "scenarios",
                  "description",
                  "updatedAt",
                  "createdByUser",
                  "createdAt"
                ]
              }
            }
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "function": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "args": {
                        "type": "string"
                      },
                      "scenarios": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "createdByUser": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          }
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              },
              "example": {
                "function": {
                  "id": 16,
                  "name": "symmetricDifference",
                  "description": "A function which returns an array with items unique across two arrays.",
                  "code": "function symmetricDifference(array1, array2){difference = array1.filter(x => !array2.includes(x)).concat(array2.filter(x => !array1.includes(x))) return difference}",
                  "args": "(array1, array2)",
                  "scenarios": [
                    {
                      "id": 1052,
                      "name": "Scenario to compare arrays"
                    }
                  ],
                  "updatedAt": "2023-02-06T14:09:37.834Z",
                  "createdAt": "2023-02-06T14:09:37.834Z",
                  "createdByUser": {
                    "id": 22,
                    "name": "John Doe",
                    "email": "john@doe.com"
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "function": {
              "id": 16,
              "name": "symmetricDifference",
              "description": "A function which returns an array with items unique across two arrays.",
              "code": "function symmetricDifference(array1, array2){difference = array1.filter(x => !array2.includes(x)).concat(array2.filter(x => !array1.includes(x))) return difference}",
              "args": "(array1, array2)",
              "scenarios": [
                {
                  "id": 1052,
                  "name": "Scenario to compare arrays"
                }
              ],
              "updatedAt": "2023-02-06T14:09:37.834Z",
              "createdAt": "2023-02-06T14:09:37.834Z",
              "createdByUser": {
                "id": 22,
                "name": "John Doe",
                "email": "john@doe.com"
              }
            }
          },
          "path": "/functions/44"
        }
      }
    },
    "functions-functionId-patch": {
      "endpointKey": "functions-functionId-patch",
      "path": "/functions/{functionId}",
      "method": "patch",
      "x-published": true,
      "tags": ["Custom functions"],
      "summary": "Update a custom function",
      "description": "Updates custom functions `description` or `code`. You cannot change the `name` of the custom function.\n\nMake sure to use the same function name in the function's `code`. Otherwise, you get an IM005 error.\n\nMake validates the custom function's code first. You get an IM005 error if the code validation fails. The validation might fail because of a syntax error in the function's code or when the code uses a JavaScript feature that Make doesn't support. Check the [custom functions limitations](https://www.make.com/en/help/functions/custom-functions#limitations-of-custom-functions) in the Make Help center.\n",
      "security": [
        {
          "token": ["functions:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "functionId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "example": 44,
            "description": "The ID of the custom function."
          }
        ],
        "query": [],
        "body": [
          {
            "name": "description",
            "schema": {
              "type": "string",
              "description": "The description of the custom function. You can use maximum of 128 characters."
            },
            "example": "Greet user instead of greeting the World.",
            "required": false,
            "description": "The description of the custom function. You can use maximum of 128 characters."
          },
          {
            "name": "code",
            "schema": {
              "type": "string",
              "description": "The code of the custom function."
            },
            "example": "function greeter(name){return concat('Hello ', name)",
            "required": false,
            "description": "The code of the custom function."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "description": "The description of the custom function. You can use maximum of 128 characters."
                },
                "code": {
                  "type": "string",
                  "description": "The code of the custom function."
                }
              }
            },
            "example": {
              "description": "Greet user instead of greeting the World.",
              "code": "function greeter(name){return concat('Hello ', name)"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "function": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "args": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "createdByUser": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          }
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              },
              "example": {
                "function": {
                  "id": 48,
                  "name": "greeter",
                  "description": "Greet user instead of greeting the World.",
                  "code": "function greeter(name){return concat('Hello ', name)",
                  "args": "(name)",
                  "updatedAt": "2023-02-06T14:09:37.834Z",
                  "createdAt": "2023-02-06T14:09:37.834Z",
                  "createdByUser": {
                    "id": 22,
                    "name": "John Doe",
                    "email": "john@doe.com"
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "function": {
              "id": 48,
              "name": "greeter",
              "description": "Greet user instead of greeting the World.",
              "code": "function greeter(name){return concat('Hello ', name)",
              "args": "(name)",
              "updatedAt": "2023-02-06T14:09:37.834Z",
              "createdAt": "2023-02-06T14:09:37.834Z",
              "createdByUser": {
                "id": 22,
                "name": "John Doe",
                "email": "john@doe.com"
              }
            }
          },
          "requestBody": {
            "description": "Greet user instead of greeting the World.",
            "code": "function greeter(name){return concat('Hello ', name)"
          },
          "path": "/functions/44"
        }
      }
    },
    "functions-functionId-delete": {
      "endpointKey": "functions-functionId-delete",
      "path": "/functions/{functionId}",
      "method": "delete",
      "x-published": true,
      "tags": ["Custom functions"],
      "summary": "Delete custom function",
      "description": "Deletes the custom function. The response contains information whether the custom function is deleted or not.\n\nIf you or any of your team members use the custom function in a scenario you have to use the `confirmed` parameter to confirm the custom function deletion. Otherwise, you get an error with a list of scenarios that use the custom function.",
      "security": [
        {
          "token": ["functions:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "functionId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "example": 44,
            "description": "The ID of the custom function."
          }
        ],
        "query": [
          {
            "name": "confirmed",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "example": true,
            "description": "Confirms deleting of the custom function. If you are using the custom function in a scenario Make requires the confirmation."
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean"
                  }
                }
              },
              "example": {
                "success": true
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "success": true
          },
          "parameters": {
            "confirmed": true
          },
          "path": "/functions/44"
        }
      }
    },
    "functions-functionId-history-get": {
      "endpointKey": "functions-functionId-history-get",
      "path": "/functions/{functionId}/history",
      "method": "get",
      "x-published": true,
      "tags": ["Custom functions"],
      "summary": "Custom function updates history",
      "description": "Gets history of updates of the specified custom function. The response contains a list of code changes, the change author and date when the author made the change.",
      "security": [
        {
          "token": ["functions:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "functionId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "example": 44,
            "description": "The ID of the custom function."
          }
        ],
        "query": [
          {
            "name": "teamId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the team.",
            "example": 11
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "objects",
                "properties": {
                  "functionHistory": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "previousCode": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updatedBy": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "functionHistory": [
                  {
                    "id": 1245,
                    "previousCode": "function checkType(param){return typeof(param)}",
                    "updatedAt": "2023-02-09T09:13:36.750Z",
                    "updatedBy": "John Doe"
                  },
                  {
                    "id": 1240,
                    "previousCode": "function checkType(arg){return typeof(arg)}",
                    "updatedAt": "2023-02-09T09:12:34.288Z",
                    "updatedBy": "John Doe"
                  }
                ]
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "functionHistory": [
              {
                "id": 1245,
                "previousCode": "function checkType(param){return typeof(param)}",
                "updatedAt": "2023-02-09T09:13:36.750Z",
                "updatedBy": "John Doe"
              },
              {
                "id": 1240,
                "previousCode": "function checkType(arg){return typeof(arg)}",
                "updatedAt": "2023-02-09T09:12:34.288Z",
                "updatedBy": "John Doe"
              }
            ]
          },
          "parameters": {
            "teamId": 11
          },
          "path": "/functions/44/history"
        }
      }
    },
    "ping-get": {
      "endpointKey": "ping-get",
      "path": "/ping",
      "method": "get",
      "x-published": true,
      "tags": ["General"],
      "summary": "Ping",
      "description": "Pings the Make API service. Successful response contains plain text.",
      "parameters": {
        "path": [],
        "query": [
          {
            "name": "delay",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "2000",
            "description": "The delay after which Make pings the API service in milliseconds."
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "pong"
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "parameters": {
            "delay": "2000"
          },
          "path": "/ping"
        }
      }
    },
    "hooks-get": {
      "endpointKey": "hooks-get",
      "path": "/hooks",
      "method": "get",
      "x-published": true,
      "tags": ["Hooks"],
      "summary": "List hooks",
      "description": "Retrieves a collection of all hooks for a team with a given ID. Returned hooks are sorted by name in ascending order.",
      "security": [
        {
          "token": ["hooks:read"]
        }
      ],
      "parameters": {
        "path": [],
        "query": [
          {
            "name": "teamId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The unique ID of the team whose hooks will be retrieved.",
            "example": 4
          },
          {
            "name": "typeName",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The hook type. Two native Make hook types are `gateway-webhook` and `gateway-mailhook`.",
            "example": "gateway-webhook"
          },
          {
            "name": "assigned",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Specifies if the hook is assigned to a scenario. If set to `true`, the request will return only the hooks which the `scenarioId` value is not set to null.",
            "example": true
          },
          {
            "name": "viewForScenarioId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "This parameter shows only the hooks that can be used by a scenario with a specific ID, which means hooks that are not assigned to another scenario yet and the hook that is already assigned to this scenario. This can be useful because Make allows assigning any hook to only one scenario. If this parameter is set the `assigned` parameter is ignored.",
            "example": 123
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "hooks": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "teamId": {
                          "type": "integer"
                        },
                        "udid": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "packageName": {
                          "type": "string"
                        },
                        "theme": {
                          "type": "string",
                          "format": "color"
                        },
                        "flags": {
                          "type": "object",
                          "properties": {
                            "form": {
                              "type": "boolean"
                            }
                          }
                        },
                        "editable": {
                          "type": "boolean"
                        },
                        "queueCount": {
                          "type": "integer"
                        },
                        "queueLimit": {
                          "type": "integer"
                        },
                        "enabled": {
                          "type": "boolean"
                        },
                        "gone": {
                          "type": "boolean"
                        },
                        "typeName": {
                          "type": "string"
                        },
                        "data": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "headers": {
                              "type": "boolean"
                            },
                            "method": {
                              "type": "boolean"
                            },
                            "stringify": {
                              "type": "boolean"
                            },
                            "teamId": {
                              "type": "integer"
                            },
                            "ip": {
                              "type": "string",
                              "format": "ipv6"
                            },
                            "udt": {
                              "type": "integer"
                            }
                          }
                        },
                        "scenarioId": {
                          "type": "integer"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "hooks": [
                  {
                    "id": 11,
                    "name": "My gateway-webhook webhook 1",
                    "teamId": 4,
                    "udid": "1gqnexkk1vwxg2wpj39kg30pzp6uhe7h",
                    "type": "web",
                    "packageName": null,
                    "theme": "#c73a63",
                    "editable": true,
                    "queueCount": 0,
                    "queueLimit": 10000,
                    "enabled": true,
                    "gone": false,
                    "typeName": "gateway-webhook",
                    "data": {
                      "headers": false,
                      "method": false,
                      "stringify": false
                    },
                    "scenarioId": 1,
                    "url": "https://local.make.cloud/wh/1gqnexkk1vwxg2wpj39kg30pzp6uhe7h"
                  },
                  {
                    "id": 58,
                    "name": "Test 1",
                    "teamId": 4,
                    "udid": "d4ezzfwgyav7qaukv8dbh3l21eru0fld",
                    "type": "web",
                    "packageName": null,
                    "theme": "#c73a63",
                    "editable": true,
                    "queueCount": 0,
                    "queueLimit": 10000,
                    "enabled": true,
                    "gone": false,
                    "typeName": "gateway-webhook",
                    "data": {
                      "ip": null,
                      "udt": null,
                      "headers": false,
                      "method": false,
                      "stringify": false,
                      "teamId": 4
                    },
                    "scenarioId": 112,
                    "url": "https://local.make.cloud/wh/d4ezzfwgyav7qaukv8dbh3l21eru0fld"
                  }
                ]
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "hooks": [
              {
                "id": 11,
                "name": "My gateway-webhook webhook 1",
                "teamId": 4,
                "udid": "1gqnexkk1vwxg2wpj39kg30pzp6uhe7h",
                "type": "web",
                "packageName": null,
                "theme": "#c73a63",
                "editable": true,
                "queueCount": 0,
                "queueLimit": 10000,
                "enabled": true,
                "gone": false,
                "typeName": "gateway-webhook",
                "data": {
                  "headers": false,
                  "method": false,
                  "stringify": false
                },
                "scenarioId": 1,
                "url": "https://local.make.cloud/wh/1gqnexkk1vwxg2wpj39kg30pzp6uhe7h"
              },
              {
                "id": 58,
                "name": "Test 1",
                "teamId": 4,
                "udid": "d4ezzfwgyav7qaukv8dbh3l21eru0fld",
                "type": "web",
                "packageName": null,
                "theme": "#c73a63",
                "editable": true,
                "queueCount": 0,
                "queueLimit": 10000,
                "enabled": true,
                "gone": false,
                "typeName": "gateway-webhook",
                "data": {
                  "ip": null,
                  "udt": null,
                  "headers": false,
                  "method": false,
                  "stringify": false,
                  "teamId": 4
                },
                "scenarioId": 112,
                "url": "https://local.make.cloud/wh/d4ezzfwgyav7qaukv8dbh3l21eru0fld"
              }
            ]
          },
          "parameters": {
            "teamId": 4,
            "typeName": "gateway-webhook",
            "assigned": true,
            "viewForScenarioId": 123
          },
          "path": "/hooks"
        }
      }
    },
    "hooks-post": {
      "endpointKey": "hooks-post",
      "path": "/hooks",
      "method": "post",
      "x-published": true,
      "tags": ["Hooks"],
      "summary": "Create hook",
      "description": "Creates a new hook with data passed in the request body. In the response, it returns all details of the created hook.",
      "security": [
        {
          "token": ["hooks:write"]
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the hook. The name must be at most 128 characters long and does not need to be unique.",
                  "min": 1,
                  "max": 128
                },
                "teamId": {
                  "type": "string",
                  "description": "The unique ID of the team in which a hook will be created."
                },
                "typeName": {
                  "type": "string",
                  "description": "The hook type strictly related to the app for which the hook was created."
                },
                "method": {
                  "type": "boolean",
                  "description": "Set the `method` parameter to `true` to add the HTTP method to the request body."
                },
                "header": {
                  "type": "boolean",
                  "description": "Set the `header` parameter to `true` to add headers to the request body."
                },
                "stringify": {
                  "type": "boolean",
                  "description": "Set the `stringify` parameter to `true` to return JSON payloads as strings."
                },
                "__IMTCONN__": {
                  "type": "integer",
                  "description": "The unique ID of the connection that will be included in the created hook."
                },
                "formId": {
                  "description": "The unique ID of the form that will be included in the created hook.",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "teamId",
                "typeName",
                "method",
                "header",
                "stringify"
              ]
            },
            "example": {
              "name": "Jotform hook 1",
              "teamId": "1",
              "typeName": "jotform",
              "method": false,
              "header": false,
              "stringify": false,
              "__IMTCONN__": 96,
              "formId": "91282545501352"
            }
          }
        }
      },
      "parameters": {
        "body": [
          {
            "name": "name",
            "schema": {
              "type": "string",
              "description": "The name of the hook. The name must be at most 128 characters long and does not need to be unique.",
              "min": 1,
              "max": 128
            },
            "example": "Jotform hook 1",
            "required": true,
            "description": "The name of the hook. The name must be at most 128 characters long and does not need to be unique."
          },
          {
            "name": "teamId",
            "schema": {
              "type": "string",
              "description": "The unique ID of the team in which a hook will be created."
            },
            "example": "1",
            "required": true,
            "description": "The unique ID of the team in which a hook will be created."
          },
          {
            "name": "typeName",
            "schema": {
              "type": "string",
              "description": "The hook type strictly related to the app for which the hook was created."
            },
            "example": "jotform",
            "required": true,
            "description": "The hook type strictly related to the app for which the hook was created."
          },
          {
            "name": "method",
            "schema": {
              "type": "boolean",
              "description": "Set the `method` parameter to `true` to add the HTTP method to the request body."
            },
            "example": false,
            "required": true,
            "description": "Set the `method` parameter to `true` to add the HTTP method to the request body."
          },
          {
            "name": "header",
            "schema": {
              "type": "boolean",
              "description": "Set the `header` parameter to `true` to add headers to the request body."
            },
            "example": false,
            "required": true,
            "description": "Set the `header` parameter to `true` to add headers to the request body."
          },
          {
            "name": "stringify",
            "schema": {
              "type": "boolean",
              "description": "Set the `stringify` parameter to `true` to return JSON payloads as strings."
            },
            "example": false,
            "required": true,
            "description": "Set the `stringify` parameter to `true` to return JSON payloads as strings."
          },
          {
            "name": "__IMTCONN__",
            "schema": {
              "type": "integer",
              "description": "The unique ID of the connection that will be included in the created hook."
            },
            "example": 96,
            "required": false,
            "description": "The unique ID of the connection that will be included in the created hook."
          },
          {
            "name": "formId",
            "schema": {
              "description": "The unique ID of the form that will be included in the created hook.",
              "type": "string"
            },
            "example": "91282545501352",
            "required": false,
            "description": "The unique ID of the form that will be included in the created hook."
          }
        ]
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "hook": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "teamId": {
                        "type": "integer"
                      },
                      "udid": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "packageName": {
                        "type": "string"
                      },
                      "theme": {
                        "type": "string",
                        "format": "color"
                      },
                      "flags": {
                        "type": "object",
                        "properties": {
                          "form": {
                            "type": "boolean"
                          }
                        }
                      },
                      "editable": {
                        "type": "boolean"
                      },
                      "queueCount": {
                        "type": "integer"
                      },
                      "queueLimit": {
                        "type": "integer"
                      },
                      "enabled": {
                        "type": "boolean"
                      },
                      "gone": {
                        "type": "boolean"
                      },
                      "typeName": {
                        "type": "string"
                      },
                      "data": {
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {
                          "headers": {
                            "type": "boolean"
                          },
                          "method": {
                            "type": "boolean"
                          },
                          "stringify": {
                            "type": "boolean"
                          },
                          "teamId": {
                            "type": "integer"
                          },
                          "ip": {
                            "type": "string",
                            "format": "ipv6"
                          },
                          "udt": {
                            "type": "integer"
                          }
                        }
                      },
                      "scenarioId": {
                        "type": "integer"
                      },
                      "url": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  },
                  "formula": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "array"
                      }
                    }
                  }
                }
              },
              "example": {
                "hook": {
                  "id": 46,
                  "name": "jotform hook 1",
                  "teamId": 4,
                  "udid": "ukkxypkmrcgufv8xmc9xumbvh8bfh69d",
                  "type": "web",
                  "packageName": null,
                  "theme": "#ffa500",
                  "editable": false,
                  "queueCount": 0,
                  "queueLimit": 10000,
                  "enabled": true,
                  "gone": false,
                  "typeName": "jotform",
                  "data": {
                    "__IMTCONN__": 96,
                    "formId": "91282545501352",
                    "teamId": 4,
                    "url": "https://local.make.cloud/wh/ukkxypkmrcgufv8xmc9xumbvh8bfh69d"
                  },
                  "url": "https://local.make.cloud/wh/ukkxypkmrcgufv8xmc9xumbvh8bfh69d"
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "hook": {
              "id": 46,
              "name": "jotform hook 1",
              "teamId": 4,
              "udid": "ukkxypkmrcgufv8xmc9xumbvh8bfh69d",
              "type": "web",
              "packageName": null,
              "theme": "#ffa500",
              "editable": false,
              "queueCount": 0,
              "queueLimit": 10000,
              "enabled": true,
              "gone": false,
              "typeName": "jotform",
              "data": {
                "__IMTCONN__": 96,
                "formId": "91282545501352",
                "teamId": 4,
                "url": "https://local.make.cloud/wh/ukkxypkmrcgufv8xmc9xumbvh8bfh69d"
              },
              "url": "https://local.make.cloud/wh/ukkxypkmrcgufv8xmc9xumbvh8bfh69d"
            }
          },
          "requestBody": {
            "name": "Jotform hook 1",
            "teamId": "1",
            "typeName": "jotform",
            "method": false,
            "header": false,
            "stringify": false,
            "__IMTCONN__": 96,
            "formId": "91282545501352"
          },
          "path": "/hooks"
        }
      }
    },
    "hooks-hookId-get": {
      "endpointKey": "hooks-hookId-get",
      "path": "/hooks/{hookId}",
      "method": "get",
      "x-published": true,
      "tags": ["Hooks"],
      "summary": "Get hook details",
      "description": "Retrieves details of a hook with a given ID including hooks data.",
      "security": [
        {
          "token": ["hooks:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "hookId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the webhook. Use the `GET /hooks` API call to get the ID values of your webhooks.",
            "example": 654
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "hook": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "teamId": {
                        "type": "integer"
                      },
                      "udid": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "packageName": {
                        "type": "string"
                      },
                      "theme": {
                        "type": "string",
                        "format": "color"
                      },
                      "flags": {
                        "type": "object",
                        "properties": {
                          "form": {
                            "type": "boolean"
                          }
                        }
                      },
                      "editable": {
                        "type": "boolean"
                      },
                      "queueCount": {
                        "type": "integer"
                      },
                      "queueLimit": {
                        "type": "integer"
                      },
                      "enabled": {
                        "type": "boolean"
                      },
                      "gone": {
                        "type": "boolean"
                      },
                      "typeName": {
                        "type": "string"
                      },
                      "data": {
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {
                          "headers": {
                            "type": "boolean"
                          },
                          "method": {
                            "type": "boolean"
                          },
                          "stringify": {
                            "type": "boolean"
                          },
                          "teamId": {
                            "type": "integer"
                          },
                          "ip": {
                            "type": "string",
                            "format": "ipv6"
                          },
                          "udt": {
                            "type": "integer"
                          }
                        }
                      },
                      "scenarioId": {
                        "type": "integer"
                      },
                      "url": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  }
                }
              },
              "example": {
                "hook": {
                  "id": 58,
                  "name": "Test 1",
                  "teamId": 4,
                  "udid": "d4ezzfwgyav7qaukv8dbh3l21eru0fld",
                  "type": "web",
                  "packageName": null,
                  "theme": "#c73a63",
                  "editable": true,
                  "queueCount": 0,
                  "queueLimit": 10000,
                  "enabled": true,
                  "gone": false,
                  "typeName": "gateway-webhook",
                  "data": {
                    "ip": null,
                    "udt": null,
                    "headers": false,
                    "method": false,
                    "stringify": false,
                    "teamId": 4
                  },
                  "scenarioId": 112,
                  "url": "https://local.make.cloud/wh/d4ezzfwgyav7qaukv8dbh3l21eru0fld"
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "hook": {
              "id": 58,
              "name": "Test 1",
              "teamId": 4,
              "udid": "d4ezzfwgyav7qaukv8dbh3l21eru0fld",
              "type": "web",
              "packageName": null,
              "theme": "#c73a63",
              "editable": true,
              "queueCount": 0,
              "queueLimit": 10000,
              "enabled": true,
              "gone": false,
              "typeName": "gateway-webhook",
              "data": {
                "ip": null,
                "udt": null,
                "headers": false,
                "method": false,
                "stringify": false,
                "teamId": 4
              },
              "scenarioId": 112,
              "url": "https://local.make.cloud/wh/d4ezzfwgyav7qaukv8dbh3l21eru0fld"
            }
          },
          "path": "/hooks/654"
        }
      }
    },
    "hooks-hookId-delete": {
      "endpointKey": "hooks-hookId-delete",
      "path": "/hooks/{hookId}",
      "method": "delete",
      "x-published": true,
      "tags": ["Hooks"],
      "summary": "Delete hook",
      "description": "Deletes a hook with a given ID and returns the ID in the response.",
      "security": [
        {
          "token": ["hooks:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "hookId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "example": 12,
            "description": "The unique ID of the hook. It can be retrieved from the [List hooks](/hooks-get) endpoint."
          }
        ],
        "query": [
          {
            "name": "confirmed",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Confirms the deletion if a hook is included in the scenario. Confirmation is required because the scenario will stop working without the hook. If the parameter is missing or it is set to `false` an error code is returned and the resource is not deleted.",
            "example": true
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "hook": {
                    "type": "integer"
                  }
                }
              },
              "example": {
                "hook": 12
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "hook": 12
          },
          "parameters": {
            "confirmed": true
          },
          "path": "/hooks/12"
        }
      }
    },
    "hooks-hookId-patch": {
      "endpointKey": "hooks-hookId-patch",
      "path": "/hooks/{hookId}",
      "method": "patch",
      "x-published": true,
      "tags": ["Hooks"],
      "summary": "Update hook",
      "description": "Updates a hook with a given ID by passing new values in the request body. Any property that is not provided will be left unchanged. In the response, it returns all details of the updated hook including properties that were not changed.",
      "security": [
        {
          "token": ["hooks:write"]
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "requrired": false,
                  "description": "The name of the updated hook. The name must be at most 128 characters long and does not need to be unique."
                }
              }
            },
            "example": {
              "name": "My gateway-webhook webhook 1"
            }
          }
        }
      },
      "parameters": {
        "path": [
          {
            "name": "hookId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The unique ID of the hook. It can be retrieved from the [List hooks](/hooks-get) endpoint.",
            "example": 11
          }
        ],
        "query": [],
        "body": [
          {
            "name": "name",
            "schema": {
              "type": "string",
              "requrired": false,
              "description": "The name of the updated hook. The name must be at most 128 characters long and does not need to be unique."
            },
            "example": "My gateway-webhook webhook 1",
            "required": false,
            "description": "The name of the updated hook. The name must be at most 128 characters long and does not need to be unique."
          }
        ]
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "hook": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "teamId": {
                        "type": "integer"
                      },
                      "udid": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "packageName": {
                        "type": "string"
                      },
                      "theme": {
                        "type": "string",
                        "format": "color"
                      },
                      "flags": {
                        "type": "object",
                        "properties": {
                          "form": {
                            "type": "boolean"
                          }
                        }
                      },
                      "editable": {
                        "type": "boolean"
                      },
                      "queueCount": {
                        "type": "integer"
                      },
                      "queueLimit": {
                        "type": "integer"
                      },
                      "enabled": {
                        "type": "boolean"
                      },
                      "gone": {
                        "type": "boolean"
                      },
                      "typeName": {
                        "type": "string"
                      },
                      "data": {
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {
                          "headers": {
                            "type": "boolean"
                          },
                          "method": {
                            "type": "boolean"
                          },
                          "stringify": {
                            "type": "boolean"
                          },
                          "teamId": {
                            "type": "integer"
                          },
                          "ip": {
                            "type": "string",
                            "format": "ipv6"
                          },
                          "udt": {
                            "type": "integer"
                          }
                        }
                      },
                      "scenarioId": {
                        "type": "integer"
                      },
                      "url": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  }
                }
              },
              "example": {
                "hook": {
                  "id": 11,
                  "name": "My gateway-webhook webhook 1",
                  "teamId": 4,
                  "udid": "1gqnexkk1vwxg2wpj39kg30pzp6uhe7h",
                  "type": "web",
                  "packageName": null,
                  "theme": "#c73a63",
                  "editable": true,
                  "queueCount": 0,
                  "queueLimit": 10000,
                  "enabled": true,
                  "gone": false,
                  "typeName": "gateway-webhook",
                  "data": {
                    "headers": false,
                    "method": false,
                    "stringify": false
                  },
                  "url": "https://local.make.cloud/wh/1gqnexkk1vwxg2wpj39kg30pzp6uhe7h"
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "hook": {
              "id": 11,
              "name": "My gateway-webhook webhook 1",
              "teamId": 4,
              "udid": "1gqnexkk1vwxg2wpj39kg30pzp6uhe7h",
              "type": "web",
              "packageName": null,
              "theme": "#c73a63",
              "editable": true,
              "queueCount": 0,
              "queueLimit": 10000,
              "enabled": true,
              "gone": false,
              "typeName": "gateway-webhook",
              "data": {
                "headers": false,
                "method": false,
                "stringify": false
              },
              "url": "https://local.make.cloud/wh/1gqnexkk1vwxg2wpj39kg30pzp6uhe7h"
            }
          },
          "requestBody": {
            "name": "My gateway-webhook webhook 1"
          },
          "path": "/hooks/11"
        }
      }
    },
    "hooks-hookId-ping-get": {
      "endpointKey": "hooks-hookId-ping-get",
      "path": "/hooks/{hookId}/ping",
      "method": "get",
      "x-published": true,
      "tags": ["Hooks"],
      "summary": "Ping hook",
      "description": "Determines if a hook with a given ID is active and retrieves its properties that provide you with the address of the hook and inform if the hook is attached, what is its learning status, and if it was not used for a long time.",
      "security": [
        {
          "token": ["hooks:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "hookId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the webhook. Use the `GET /hooks` API call to get the ID values of your webhooks.",
            "example": 654
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "format": "uri"
                  },
                  "attached": {
                    "type": "boolean"
                  },
                  "learning": {
                    "type": "boolean"
                  },
                  "gone": {
                    "type": "boolean"
                  }
                }
              },
              "example": {
                "address": "https://local.make.cloud/wh/wmhqi8todng3en3z2tl7ausm15tg33iz",
                "attached": false,
                "learning": false,
                "gone": false
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "address": "https://local.make.cloud/wh/wmhqi8todng3en3z2tl7ausm15tg33iz",
            "attached": false,
            "learning": false,
            "gone": false
          },
          "path": "/hooks/654/ping"
        }
      }
    },
    "hooks-hookId-learn-start-post": {
      "endpointKey": "hooks-hookId-learn-start-post",
      "path": "/hooks/{hookId}/learn-start",
      "method": "post",
      "x-published": true,
      "tags": ["Hooks"],
      "summary": "Learn start",
      "description": "Starts the process of learning the request body structure by a hook with a given ID. When you send to the hook address a request with data in its body, you can use this endpoint to force the hook to start determining the payload data structure which will later be suggested in the scenario as the output of the hook. The data structure learning process also starts automatically when a new hook is created and stops once the data structure is determined. If you want to stop this process, you can use the [Learn stop](hooks-hookId-learn-stop-post) endpoint.",
      "security": [
        {
          "token": ["hooks:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "hookId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the webhook. Use the `GET /hooks` API call to get the ID values of your webhooks.",
            "example": 654
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean"
                  }
                }
              },
              "example": {
                "success": true
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "success": true
          },
          "path": "/hooks/654/learn-start"
        }
      }
    },
    "hooks-hookId-learn-stop-post": {
      "endpointKey": "hooks-hookId-learn-stop-post",
      "path": "/hooks/{hookId}/learn-stop",
      "method": "post",
      "x-published": true,
      "tags": ["Hooks"],
      "summary": "Learn stop",
      "description": "Stops the process of learning the request body structure by a hook with a given ID. When you send to the hook address a request with data in its body, you can use the [Learn start](hooks-hookId-learn-start-post) endpoint to force the hook to start determining the payload data structure which will later be suggested in the scenario as the output of the hook. The data structure learning process also starts automatically when a new hook is created and stops once the data structure is determined. You can use this endpoint to stop the learning process at any time.",
      "security": [
        {
          "token": ["hooks:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "hookId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the webhook. Use the `GET /hooks` API call to get the ID values of your webhooks.",
            "example": 654
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean"
                  }
                }
              },
              "example": {
                "success": true
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "success": true
          },
          "path": "/hooks/654/learn-stop"
        }
      }
    },
    "hooks-hookId-enable-post": {
      "endpointKey": "hooks-hookId-enable-post",
      "path": "/hooks/{hookId}/enable",
      "method": "post",
      "x-published": true,
      "tags": ["Hooks"],
      "summary": "Enable hook",
      "description": "Enables a disabled hook with a given ID. Newly created hooks are enabled by default which means they are ready to accept data. In response, this endpoint returns the confirmation that the hook was successfully enabled.",
      "security": [
        {
          "token": ["hooks:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "hookId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the webhook. Use the `GET /hooks` API call to get the ID values of your webhooks.",
            "example": 654
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean"
                  }
                }
              },
              "example": {
                "success": true
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "success": true
          },
          "path": "/hooks/654/enable"
        }
      }
    },
    "hooks-hookId-disable-post": {
      "endpointKey": "hooks-hookId-disable-post",
      "path": "/hooks/{hookId}/disable",
      "method": "post",
      "x-published": true,
      "tags": ["Hooks"],
      "summary": "Disable hook",
      "description": "Disables a hook with a given ID. Newly created hooks are enabled by default which means they are ready to accept data. The disabled hook does not accept any data. This endpoint can be useful when you want to debug the scenario functionality. In response, this endpoint returns the confirmation that the hook was successfully disabled.",
      "security": [
        {
          "token": ["hooks:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "hookId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the webhook. Use the `GET /hooks` API call to get the ID values of your webhooks.",
            "example": 654
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean"
                  }
                }
              },
              "example": {
                "success": true
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "success": true
          },
          "path": "/hooks/654/disable"
        }
      }
    },
    "hooks-hookId-set-data-post": {
      "endpointKey": "hooks-hookId-set-data-post",
      "path": "/hooks/{hookId}/set-data",
      "method": "post",
      "x-published": true,
      "tags": ["Hooks"],
      "summary": "Set hook details",
      "description": "Sets data for a hook with a given ID. Data differ depending on the hook type. It returns the confirmation if the hook data was changed (`true`) or not (`false`).",
      "security": [
        {
          "token": ["hooks:write"]
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object"
            },
            "example": {
              "ip": "",
              "udt": "",
              "headers": false,
              "method": false,
              "stringify": false
            }
          }
        }
      },
      "parameters": {
        "path": [
          {
            "name": "hookId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the webhook. Use the `GET /hooks` API call to get the ID values of your webhooks.",
            "example": 654
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "changed": {
                    "type": "boolean"
                  }
                }
              },
              "example": {
                "changed": true
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "changed": true
          },
          "requestBody": {
            "ip": "",
            "udt": "",
            "headers": false,
            "method": false,
            "stringify": false
          },
          "path": "/hooks/654/set-data"
        }
      }
    },
    "hooks-hookId-incomings-get": {
      "endpointKey": "hooks-hookId-incomings-get",
      "path": "/hooks/{hookId}/incomings",
      "method": "get",
      "x-published": true,
      "tags": ["Hooks > Incomings"],
      "summary": "Get webhook queue",
      "description": "Retrieves a list of webhook queue items waiting for processing with the specified webhook. The request response contains:\n\n- the incoming payload hash\n - incoming data scope\n - the size of the data in bytes\n - timestamp of the moment when the data were placed in the processing queue",
      "security": [
        {
          "token": ["hooks:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "hookId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the webhook. Use the `GET /hooks` API call to get the ID values of your webhooks.",
            "example": 654
          }
        ],
        "query": [
          {
            "name": "pg[sortBy]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The value that will be used to sort returned entities by."
          },
          {
            "name": "pg[offset]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The value of entities you want to skip before getting entities you need.",
            "default": 0
          },
          {
            "name": "pg[sortDir]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "The sorting order. It accepts the ascending and descending direction specifiers."
          },
          {
            "name": "pg[limit]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The maximum entities to return."
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "incomings": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "scope": {
                          "type": "string"
                        },
                        "size": {
                          "type": "integer"
                        },
                        "created": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "data": {
                          "type": "object"
                        }
                      }
                    }
                  },
                  "pg": {
                    "type": "object",
                    "properties": {
                      "last": {
                        "type": "string"
                      },
                      "showLast": {
                        "type": "boolean"
                      },
                      "sortBy": {
                        "type": "string"
                      },
                      "sortDir": {
                        "type": "string"
                      },
                      "limit": {
                        "type": "integer"
                      },
                      "offset": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "example": {
                "incomings": [
                  {
                    "id": "a17c1163d7e04d258fce6bac2c8bd3d6",
                    "scope": "hook",
                    "size": 1,
                    "created": "2021-02-03T09:59:36.260Z"
                  },
                  {
                    "id": "73b56c93f1ff49fe880eeab4fe4c029b",
                    "scope": "hook",
                    "size": 1,
                    "created": "2021-02-03T09:59:38.594Z"
                  }
                ],
                "pg": {
                  "sortBy": "created",
                  "limit": 10000,
                  "sortDir": "asc",
                  "offset": 0
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "incomings": [
              {
                "id": "a17c1163d7e04d258fce6bac2c8bd3d6",
                "scope": "hook",
                "size": 1,
                "created": "2021-02-03T09:59:36.260Z"
              },
              {
                "id": "73b56c93f1ff49fe880eeab4fe4c029b",
                "scope": "hook",
                "size": 1,
                "created": "2021-02-03T09:59:38.594Z"
              }
            ],
            "pg": {
              "sortBy": "created",
              "limit": 10000,
              "sortDir": "asc",
              "offset": 0
            }
          },
          "path": "/hooks/654/incomings"
        }
      }
    },
    "hooks-hookId-incomings-delete": {
      "endpointKey": "hooks-hookId-incomings-delete",
      "path": "/hooks/{hookId}/incomings",
      "method": "delete",
      "x-published": true,
      "tags": ["Hooks > Incomings"],
      "summary": "Delete items from webhook queue",
      "description": "Deletes items from the processing queue of the specified webhook. Specify the payload ID values that you want to delete in the request body in the `ids` array.\n\nYou can set the `\"all\": true` pair to delete all items from the webhook processing queue. If you use the `\"all\": true` parameter, you have to specify the `confirmed=true` query parameter to confirm the deletion. Otherwise the API call returns the error IM004 (406).\n \nAdd the `exceptIds` array to the request body to specify items you don't want to delete.\n\nThe API call response will contain an error message if some of the specified queue items cannot be deleted. The rest of the specified items will be deleted. Deleting a webhook queue item is not allowed when the item is already being processed by the webhook.",
      "security": [
        {
          "token": ["hooks:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "hookId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the webhook. Use the `GET /hooks` API call to get the ID values of your webhooks.",
            "example": 654
          }
        ],
        "query": [
          {
            "name": "confirmed",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "example": true,
            "description": "Set to `true` to confirm deleting the webhook queue items. Otherwise the API call fails with the error IM004 (406)."
          }
        ],
        "body": [
          {
            "name": "ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The ID values of the webhook processing queue items that you want to delete. Use the API call `GET /hooks/{hookId}/incomings` to get the ID values of the webhook processing queue items."
            },
            "example": [
              "d1efa5318a034d36ad7cbeac543573cf",
              "29d9a7410dff494ab739036f6c332335"
            ],
            "required": false,
            "description": "The ID values of the webhook processing queue items that you want to delete. Use the API call `GET /hooks/{hookId}/incomings` to get the ID values of the webhook processing queue items."
          },
          {
            "name": "exceptIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "If you are deleting all of the incomplete executions with the `all:true` parameter, you can specify the ID values of the webhook queue items that you want to keep. Use the API call `GET /hooks/{hookId}/incomings` to get the ID values of the webhook queue items."
            },
            "example": [],
            "required": false,
            "description": "If you are deleting all of the incomplete executions with the `all:true` parameter, you can specify the ID values of the webhook queue items that you want to keep. Use the API call `GET /hooks/{hookId}/incomings` to get the ID values of the webhook queue items."
          },
          {
            "name": "all",
            "schema": {
              "type": "boolean",
              "description": "Set to `true` to delete all items in the webhook processing queue."
            },
            "example": false,
            "required": false,
            "description": "Set to `true` to delete all items in the webhook processing queue."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The ID values of the webhook processing queue items that you want to delete. Use the API call `GET /hooks/{hookId}/incomings` to get the ID values of the webhook processing queue items."
                },
                "exceptIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "If you are deleting all of the incomplete executions with the `all:true` parameter, you can specify the ID values of the webhook queue items that you want to keep. Use the API call `GET /hooks/{hookId}/incomings` to get the ID values of the webhook queue items."
                },
                "all": {
                  "type": "boolean",
                  "description": "Set to `true` to delete all items in the webhook processing queue."
                }
              }
            },
            "examples": {
              "delete": {
                "summary": "Delete queue items",
                "description": "Delete webhook queue items.",
                "value": {
                  "ids": [
                    "d1efa5318a034d36ad7cbeac543573cf",
                    "29d9a7410dff494ab739036f6c332335"
                  ],
                  "exceptIds": [],
                  "all": false
                }
              },
              "delete-with-error": {
                "summary": "Delete error",
                "description": "The API call response will contain an error message if you try to delete webhook queue items that Make is processing at the moment. The rest of the incomplete execution items will be deleted.",
                "value": {
                  "ids": [
                    "02731358e5ab4022aff040015a1f1a57",
                    "dcf18b685e5c4095b9ee24cea09146d3"
                  ],
                  "exceptIds": [],
                  "all": false
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "incomings": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "error": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "examples": {
                "delete": {
                  "value": {
                    "incomings": [
                      "d1efa5318a034d36ad7cbeac543573cf",
                      "29d9a7410dff494ab739036f6c332335"
                    ]
                  }
                },
                "delete-with-error": {
                  "value": {
                    "incomings": [
                      "02731358e5ab4022aff040015a1f1a57",
                      "dcf18b685e5c4095b9ee24cea09146d3"
                    ],
                    "error": {
                      "name": "APIError",
                      "message": "Some of the incoming messages could not be deleted because they are being processed right now."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "delete": {
          "summary": "Delete queue items",
          "response": {
            "incomings": [
              "d1efa5318a034d36ad7cbeac543573cf",
              "29d9a7410dff494ab739036f6c332335"
            ]
          },
          "description": "Delete webhook queue items.",
          "requestBody": {
            "ids": [
              "d1efa5318a034d36ad7cbeac543573cf",
              "29d9a7410dff494ab739036f6c332335"
            ],
            "exceptIds": [],
            "all": false
          },
          "parameters": {
            "confirmed": true
          },
          "path": "/hooks/654/incomings"
        },
        "delete-with-error": {
          "summary": "Delete error",
          "response": {
            "incomings": [
              "02731358e5ab4022aff040015a1f1a57",
              "dcf18b685e5c4095b9ee24cea09146d3"
            ],
            "error": {
              "name": "APIError",
              "message": "Some of the incoming messages could not be deleted because they are being processed right now."
            }
          },
          "description": "The API call response will contain an error message if you try to delete webhook queue items that Make is processing at the moment. The rest of the incomplete execution items will be deleted.",
          "requestBody": {
            "ids": [
              "02731358e5ab4022aff040015a1f1a57",
              "dcf18b685e5c4095b9ee24cea09146d3"
            ],
            "exceptIds": [],
            "all": false
          },
          "parameters": {
            "confirmed": true
          },
          "path": "/hooks/654/incomings"
        }
      }
    },
    "hooks-hookId-incomings-incomingId-get": {
      "endpointKey": "hooks-hookId-incomings-incomingId-get",
      "path": "/hooks/{hookId}/incomings/{incomingId}",
      "method": "get",
      "x-published": true,
      "tags": ["Hooks > Incomings"],
      "summary": "Get webhook queue item detail",
      "description": "Retrieves detail information about the specified webhook queue item. You can get the webhook queue item ID value with the API call `GET /hooks/{hookId}/incomings`.",
      "security": [
        {
          "token": ["hooks:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "hookId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the webhook. Use the `GET /hooks` API call to get the ID values of your webhooks.",
            "example": 654
          },
          {
            "name": "incomingId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID value of the webhook queue item. Get the list of webhook queue items with the API call `GET /hooks/{hookId}/incomings`.",
            "example": "7a567f385d1a4f5ab7bff89162b7605e"
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "incoming": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "size": {
                        "type": "integer"
                      },
                      "created": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "data": {
                        "type": "object"
                      }
                    }
                  }
                }
              },
              "examples": {
                "detail-2": {
                  "summary": "Binary queue item",
                  "description": "Detail of a webhook queue item that contains data in binary format.",
                  "value": {
                    "incoming": {
                      "id": "7a567f385d1a4f5ab7bff89162b7605e",
                      "scope": "hook",
                      "size": 31,
                      "created": "2020-03-05T14:48:10.537Z",
                      "data": {
                        "value": "IMTBuffer(22, binary, d4cf3d1cbf035278e7a1a909e71354d7a0387db9): 7b0a20202020226e616d65223a202274657374220a7d"
                      }
                    }
                  }
                },
                "detail-1": {
                  "summary": "JSON queue item",
                  "description": "Detail of a webhook queue item that contains data in the JSON data format.",
                  "value": {
                    "incoming": {
                      "id": "8d88f6f5b0484908890ef11fe7e5bf63",
                      "scope": "hook",
                      "size": 11,
                      "created": "2020-03-05T14:52:01.359Z",
                      "data": {
                        "name": "test"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "detail-2": {
          "summary": "Binary queue item",
          "response": {
            "incoming": {
              "id": "7a567f385d1a4f5ab7bff89162b7605e",
              "scope": "hook",
              "size": 31,
              "created": "2020-03-05T14:48:10.537Z",
              "data": {
                "value": "IMTBuffer(22, binary, d4cf3d1cbf035278e7a1a909e71354d7a0387db9): 7b0a20202020226e616d65223a202274657374220a7d"
              }
            }
          },
          "description": "Detail of a webhook queue item that contains data in binary format.",
          "parameters": {},
          "path": "/hooks/654/incomings/7a567f385d1a4f5ab7bff89162b7605e"
        },
        "detail-1": {
          "summary": "JSON queue item",
          "response": {
            "incoming": {
              "id": "8d88f6f5b0484908890ef11fe7e5bf63",
              "scope": "hook",
              "size": 11,
              "created": "2020-03-05T14:52:01.359Z",
              "data": {
                "name": "test"
              }
            }
          },
          "description": "Detail of a webhook queue item that contains data in the JSON data format.",
          "parameters": {},
          "path": "/hooks/654/incomings/7a567f385d1a4f5ab7bff89162b7605e"
        }
      }
    },
    "hooks-hookId-incomings-stats-get": {
      "endpointKey": "hooks-hookId-incomings-stats-get",
      "path": "/hooks/{hookId}/incomings/stats",
      "method": "get",
      "x-published": true,
      "tags": ["Hooks > Incomings"],
      "summary": "Get webhook queue stats",
      "description": "Gets webhook processing queue stats. The response contains the number of items in the webhook queue and the webhook queue limit.",
      "security": [
        {
          "token": ["hooks:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "hookId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the webhook. Use the `GET /hooks` API call to get the ID values of your webhooks.",
            "example": 654
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "incomingStat": {
                    "type": "object",
                    "properties": {
                      "queue": {
                        "type": "integer"
                      },
                      "limit": {
                        "type": "integer"
                      },
                      "enabled": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "example": {
                "incomingStat": {
                  "queue": 2,
                  "limit": 10000,
                  "enabled": true
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "incomingStat": {
              "queue": 2,
              "limit": 10000,
              "enabled": true
            }
          },
          "path": "/hooks/654/incomings/stats"
        }
      }
    },
    "hooks-hookId-logs-get": {
      "endpointKey": "hooks-hookId-logs-get",
      "path": "/hooks/{hookId}/logs",
      "method": "get",
      "x-published": true,
      "tags": ["Hooks > Logs"],
      "summary": "Get webhook logs",
      "description": "Retrieves a list of the specified webhook execution logs. Use the `to` and `from` parameters to filter the returned logs. The response contains:\n\n- `statusId`: the status of the webhook execution; `1` means successful execution, `3` means failed execution\n - `loggedAt`: the moment when Make created the log\n - `id`: the ID of the webhook execution log",
      "security": [
        {
          "token": ["hooks:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "hookId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the webhook. Use the `GET /hooks` API call to get the ID values of your webhooks.",
            "example": 654
          }
        ],
        "query": [
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": 1663495749015,
            "description": "Limits data in the response to entries older than the specified timestamp. Use the [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format in milliseconds."
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": 1663495749015,
            "description": "Limits data in the response to entries newer than the specified timestamp. Use the [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format in milliseconds."
          },
          {
            "name": "pg[sortBy]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The value that will be used to sort returned entities by."
          },
          {
            "name": "pg[offset]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The value of entities you want to skip before getting entities you need.",
            "default": 0
          },
          {
            "name": "pg[sortDir]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "The sorting order. It accepts the ascending and descending direction specifiers."
          },
          {
            "name": "pg[limit]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The maximum entities to return."
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "hookLogs": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "statusId": {
                          "type": "integer"
                        },
                        "parser": {
                          "type": "string"
                        },
                        "replayable": {
                          "type": "boolean"
                        },
                        "sizes": {
                          "type": "object",
                          "properties": {
                            "before": {
                              "type": "integer"
                            },
                            "after": {
                              "type": "integer"
                            }
                          }
                        },
                        "loggedAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "udids": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "typeId": {
                          "type": "integer"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "appParser": {
                          "type": "string"
                        },
                        "imtId": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "pg": {
                    "type": "object",
                    "properties": {
                      "last": {
                        "type": "string"
                      },
                      "showLast": {
                        "type": "boolean"
                      },
                      "sortBy": {
                        "type": "string"
                      },
                      "sortDir": {
                        "type": "string"
                      },
                      "limit": {
                        "type": "integer"
                      },
                      "offset": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "example": {
                "hookLogs": [
                  {
                    "statusId": 1,
                    "parser": "gateway-webhook",
                    "replayable": true,
                    "sizes": {
                      "before": 169,
                      "after": 169
                    },
                    "loggedAt": "2022-09-01T13:37:19.344Z",
                    "udids": ["1oknbf9q7ctpjwrych332ump3ny4d66s"],
                    "typeId": 3,
                    "id": "89ea4412db0119b205daf41c84eb2160",
                    "appParser": null,
                    "imtId": "1662039439344_N1ZF-YIBperJkDkkOJFc"
                  },
                  {
                    "statusId": 3,
                    "parser": "gateway-webhook",
                    "replayable": true,
                    "sizes": {
                      "before": 589,
                      "after": 589
                    },
                    "loggedAt": "2022-09-01T13:36:19.344Z",
                    "udids": ["1oknbf9q7ctpjwrych332ump3ny4d66s"],
                    "typeId": 3,
                    "id": "89ea4412db0119b205daf41c84eb1020",
                    "appParser": null,
                    "imtId": "2662039439344_N1ZF-YIBperJkDkkOkUv"
                  }
                ],
                "pg": {
                  "sortBy": "loggedAt",
                  "limit": 25,
                  "sortDir": "desc",
                  "offset": 0
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "hookLogs": [
              {
                "statusId": 1,
                "parser": "gateway-webhook",
                "replayable": true,
                "sizes": {
                  "before": 169,
                  "after": 169
                },
                "loggedAt": "2022-09-01T13:37:19.344Z",
                "udids": ["1oknbf9q7ctpjwrych332ump3ny4d66s"],
                "typeId": 3,
                "id": "89ea4412db0119b205daf41c84eb2160",
                "appParser": null,
                "imtId": "1662039439344_N1ZF-YIBperJkDkkOJFc"
              },
              {
                "statusId": 3,
                "parser": "gateway-webhook",
                "replayable": true,
                "sizes": {
                  "before": 589,
                  "after": 589
                },
                "loggedAt": "2022-09-01T13:36:19.344Z",
                "udids": ["1oknbf9q7ctpjwrych332ump3ny4d66s"],
                "typeId": 3,
                "id": "89ea4412db0119b205daf41c84eb1020",
                "appParser": null,
                "imtId": "2662039439344_N1ZF-YIBperJkDkkOkUv"
              }
            ],
            "pg": {
              "sortBy": "loggedAt",
              "limit": 25,
              "sortDir": "desc",
              "offset": 0
            }
          },
          "parameters": {
            "to": 1663495749015,
            "from": 1663495749015
          },
          "path": "/hooks/654/logs"
        }
      }
    },
    "hooks-hookId-logs-logId-get": {
      "endpointKey": "hooks-hookId-logs-logId-get",
      "path": "/hooks/{hookId}/logs/{logId}",
      "method": "get",
      "x-published": true,
      "tags": ["Hooks > Logs"],
      "summary": "Get webhook execution detail",
      "description": "Retrieves the specified webhook execution log. The response contains:\n\n- `statusId`: the status of the webhook execution; `1` means successful execution, `3` means failed execution\n - `loggedAt`: the moment when Make created the log\n - `id`: the ID of the webhook execution log\n - `data`: information about the request, header, and payload sent to the webhook.\n\nSome webhooks don't return the `data` object due to their implementation. Most common examples include instant triggers for Slack, Zoom, Intercom and Facebook lead ads apps.",
      "security": [
        {
          "token": ["hooks:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "hookId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the webhook. Use the `GET /hooks` API call to get the ID values of your webhooks.",
            "example": 654
          },
          {
            "name": "logId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the webhook execution log. Use the `GET /hooks/{hookId}/logs` API call to get the ID values of your webhook execution logs.",
            "example": "95b1c20c790ff5f9d2f1e805943ce95d"
          }
        ],
        "query": [
          {
            "name": "pg[sortBy]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The value that will be used to sort returned entities by."
          },
          {
            "name": "pg[offset]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The value of entities you want to skip before getting entities you need.",
            "default": 0
          },
          {
            "name": "pg[sortDir]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "The sorting order. It accepts the ascending and descending direction specifiers."
          },
          {
            "name": "pg[limit]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The maximum entities to return."
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "hookLog": {
                    "type": "object",
                    "properties": {
                      "statusId": {
                        "type": "integer"
                      },
                      "parser": {
                        "type": "string"
                      },
                      "replayable": {
                        "type": "boolean"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "request": {
                            "type": "object",
                            "properties": {
                              "headers": {
                                "type": "object",
                                "properties": null
                              },
                              "method": {
                                "type": "string"
                              },
                              "query": {
                                "type": "object",
                                "properties": null
                              },
                              "ip": {
                                "type": "string"
                              },
                              "parsed": {
                                "type": "string"
                              },
                              "body": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "object",
                                    "properties": null
                                  }
                                ]
                              },
                              "url": {
                                "type": "string"
                              }
                            }
                          },
                          "response": {
                            "type": "object",
                            "properties": {
                              "headers": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "body": {
                                "type": "string"
                              },
                              "status": {
                                "type": "integer"
                              }
                            }
                          }
                        }
                      },
                      "sizes": {
                        "type": "object",
                        "properties": {
                          "before": {
                            "type": "integer"
                          },
                          "after": {
                            "type": "integer"
                          }
                        }
                      },
                      "loggedAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "udids": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "typeId": {
                        "type": "integer"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "appParser": {
                        "type": "string"
                      },
                      "imtId": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "example": {
                "hookLog": {
                  "statusId": 1,
                  "parser": "gateway-webhook",
                  "replayable": true,
                  "data": {
                    "request": {
                      "headers": {
                        "x-request-sample-header-item": "95b1c20c790ff5f9d2f1e805943ce95d"
                      },
                      "method": "POST",
                      "query": {},
                      "ip": "11.111.111.111",
                      "parsed": null,
                      "body": {
                        "value": "Test"
                      },
                      "url": "/1oknbf9q7ctpjwrych332ump3ny4d66r"
                    },
                    "response": {
                      "headers": [],
                      "body": "Accepted",
                      "status": 200
                    }
                  }
                },
                "sizes": {
                  "before": 127,
                  "after": 127
                },
                "loggedAt": "2022-09-01T13:36:37.908Z",
                "udids": ["1oknbf9q7ctpjwrych332ump3ny4d66r"],
                "typeId": 3,
                "id": "95b1c20c790ff5f9d2f1e805943ce95e",
                "appParser": null,
                "imtId": "1662039397908_DlZE-YIBperJkDkklpFj"
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "hookLog": {
              "statusId": 1,
              "parser": "gateway-webhook",
              "replayable": true,
              "data": {
                "request": {
                  "headers": {
                    "x-request-sample-header-item": "95b1c20c790ff5f9d2f1e805943ce95d"
                  },
                  "method": "POST",
                  "query": {},
                  "ip": "11.111.111.111",
                  "parsed": null,
                  "body": {
                    "value": "Test"
                  },
                  "url": "/1oknbf9q7ctpjwrych332ump3ny4d66r"
                },
                "response": {
                  "headers": [],
                  "body": "Accepted",
                  "status": 200
                }
              }
            },
            "sizes": {
              "before": 127,
              "after": 127
            },
            "loggedAt": "2022-09-01T13:36:37.908Z",
            "udids": ["1oknbf9q7ctpjwrych332ump3ny4d66r"],
            "typeId": 3,
            "id": "95b1c20c790ff5f9d2f1e805943ce95e",
            "appParser": null,
            "imtId": "1662039397908_DlZE-YIBperJkDkklpFj"
          },
          "path": "/hooks/654/logs/95b1c20c790ff5f9d2f1e805943ce95d"
        }
      }
    },
    "notifications-get": {
      "endpointKey": "notifications-get",
      "path": "/notifications",
      "method": "get",
      "x-published": true,
      "tags": ["Notifications"],
      "summary": "List notifications",
      "description": "Retrieves a collection of all notifications for the authenticated user. Returned notifications are sorted by ID in descending order.",
      "security": [
        {
          "token": ["notifications:read"]
        }
      ],
      "parameters": {
        "path": [],
        "query": [
          {
            "name": "unreadOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "If set to `true`, this parameter returns only the unread notifications.",
            "example": false
          },
          {
            "name": "imtZoneId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The unique ID of the Make zone. This parameter is required to retrieve notifications from the Make version. For other Make platforms, it can be ignored. The IDs of the zones can be obtained from the `/enum/imt-zones` endpoint.",
            "example": 2
          },
          {
            "description": "The value that will be used to sort returned entities by. Notifications can be currently sorted only by ID.",
            "name": "pg[sortBy]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["id"]
            },
            "default": "id"
          },
          {
            "name": "pg[offset]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The value of entities you want to skip before getting entities you need.",
            "default": 0
          },
          {
            "name": "pg[sortDir]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "The sorting order. It accepts the ascending and descending direction specifiers.",
            "default": "desc"
          },
          {
            "name": "pg[limit]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The maximum entities to return.",
            "default": 10000,
            "maximum": 10000
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notifications": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "subject": {
                          "type": "string"
                        },
                        "read": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "created": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "type": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "userUnreadNotifications": {
                    "type": "integer"
                  },
                  "userZoneNotifications": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "imtZoneId": {
                          "type": "integer"
                        },
                        "unreadNotifications": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "pg": {
                    "type": "object",
                    "properties": {
                      "last": {
                        "type": "string"
                      },
                      "showLast": {
                        "type": "boolean"
                      },
                      "sortBy": {
                        "type": "string"
                      },
                      "sortDir": {
                        "type": "string"
                      },
                      "limit": {
                        "type": "integer"
                      },
                      "offset": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "example": {
                "notifications": [
                  {
                    "id": "3",
                    "subject": "Encountered error in Integration HTTP scenario",
                    "read": "2021-05-14T11:35:22.837Z",
                    "created": "2021-05-14T11:18:43.340Z",
                    "type": 1
                  },
                  {
                    "id": "2",
                    "subject": "Encountered error in Integration HTTP scenario",
                    "read": null,
                    "created": "2021-05-14T11:17:04.433Z",
                    "type": 1
                  },
                  {
                    "id": "1",
                    "subject": "Encountered error in Integration HTTP scenario",
                    "read": null,
                    "created": "2021-05-14T11:14:08.675Z",
                    "type": 1
                  }
                ],
                "userUnreadNotifications": 4,
                "userZoneNotifications": [
                  {
                    "imtZoneId": 1,
                    "unreadNotifications": 4
                  }
                ],
                "pg": {
                  "sortBy": "id",
                  "limit": 10000,
                  "sortDir": "desc",
                  "offset": 0
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "notifications": [
              {
                "id": "3",
                "subject": "Encountered error in Integration HTTP scenario",
                "read": "2021-05-14T11:35:22.837Z",
                "created": "2021-05-14T11:18:43.340Z",
                "type": 1
              },
              {
                "id": "2",
                "subject": "Encountered error in Integration HTTP scenario",
                "read": null,
                "created": "2021-05-14T11:17:04.433Z",
                "type": 1
              },
              {
                "id": "1",
                "subject": "Encountered error in Integration HTTP scenario",
                "read": null,
                "created": "2021-05-14T11:14:08.675Z",
                "type": 1
              }
            ],
            "userUnreadNotifications": 4,
            "userZoneNotifications": [
              {
                "imtZoneId": 1,
                "unreadNotifications": 4
              }
            ],
            "pg": {
              "sortBy": "id",
              "limit": 10000,
              "sortDir": "desc",
              "offset": 0
            }
          },
          "parameters": {
            "imtZoneId": 2
          },
          "path": "/notifications"
        }
      }
    },
    "notifications-delete": {
      "endpointKey": "notifications-delete",
      "path": "/notifications",
      "method": "delete",
      "x-published": true,
      "tags": ["Notifications"],
      "summary": "Delete notifications",
      "description": "Deletes notifications with given IDs and returns their IDs in the response. This endpoint allows deleting one or more notifications at once.",
      "security": [
        {
          "token": ["notifications:write"]
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "description": "The array with IDs of the notifications to delete. Since the number of notifications can reach a `BigInt` and because of the limitations of the Open API format, the IDs need to be strings.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": ["ids"]
            },
            "example": {
              "ids": ["1", "2", "3"]
            }
          }
        }
      },
      "parameters": {
        "path": [],
        "query": [
          {
            "name": "imtZoneId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The unique ID of the Make zone. This parameter is required to retrieve notifications from the Make version. For other Make platforms, it can be ignored. The IDs of the zones can be obtained from the `/enum/imt-zones` endpoint.",
            "example": 2
          }
        ],
        "body": [
          {
            "name": "ids",
            "schema": {
              "type": "array",
              "description": "The array with IDs of the notifications to delete. Since the number of notifications can reach a `BigInt` and because of the limitations of the Open API format, the IDs need to be strings.",
              "items": {
                "type": "string"
              }
            },
            "example": ["1", "2", "3"],
            "required": true,
            "description": "The array with IDs of the notifications to delete. Since the number of notifications can reach a `BigInt` and because of the limitations of the Open API format, the IDs need to be strings."
          }
        ]
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notifications": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "notifications": [
                  {
                    "id": "1"
                  },
                  {
                    "id": "2"
                  }
                ]
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "notifications": [
              {
                "id": "1"
              },
              {
                "id": "2"
              }
            ]
          },
          "requestBody": {
            "ids": ["1", "2", "3"]
          },
          "parameters": {
            "imtZoneId": 2
          },
          "path": "/notifications"
        }
      }
    },
    "notifications-notificationId-get": {
      "endpointKey": "notifications-notificationId-get",
      "path": "/notifications/{notificationId}",
      "method": "get",
      "x-published": true,
      "tags": ["Notifications"],
      "summary": "Get notification detail",
      "description": "Retrieves details and full content of a notification with a given ID.",
      "security": [
        {
          "token": ["notifications:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "notificationId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "The unique ID of the notification. It can be retrieved from the [List notifications](/notifications) endpoint. Since the number of notifications can reach a `BigInt` and because of the limitations of the Open API format, the IDs need to be strings.",
            "required": true,
            "example": "3"
          }
        ],
        "query": [
          {
            "name": "imtZoneId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The unique ID of the Make zone. This parameter is required to retrieve notifications from the Make version. For other Make platforms, it can be ignored. The IDs of the zones can be obtained from the `/enum/imt-zones` endpoint.",
            "example": 2
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notification": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "subject": {
                            "type": "string"
                          },
                          "read": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "created": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "type": {
                            "type": "integer"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "body": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                }
              },
              "example": {
                "notification": {
                  "id": "3",
                  "subject": "Encountered error in Integration HTTP 3 scenario",
                  "read": "2020-02-29T21:20:40.093Z",
                  "created": "2020-01-22T13:54:29.748Z",
                  "type": 1,
                  "body": "<p>Your scenario <strong>Integration HTTP 3</strong> has encountered an error.</p>\n<p>The scenario has not been paused and continues to run according to your settings. Nevertheless, you should pay attention to the issue.</p>\n<ul>\n<li>Scenario: <a href=\"https://local.make.cloud/scenario/86/log\">Integration HTTP 3</a></li>\n<li>Organization: <a href=\"https://local.make.cloud/organization/2\">test team</a></li>\n<li>Team: <a href=\"https://local.make.cloud/team/1\">My Lab</a></li>\n<li>Execution: <a href=\"https://local.make.cloud/scenario/86/log/d4f49055d5f44705b2aaf77a09547b77\">d4f49055d5f44705b2aaf77a09547b77</a></li>\n</ul>\n<p>Details:</p>\n<ul>\n<li><code>Validation failed for 1 parameter(s).</code></li>\n<li><code>Missing value of required parameter &#39;{{!expect.json.label}}&#39;.</code></li>\n</ul>\n<p>If you have questions or need help, please contact us.</p>\n"
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "notification": {
              "id": "3",
              "subject": "Encountered error in Integration HTTP 3 scenario",
              "read": "2020-02-29T21:20:40.093Z",
              "created": "2020-01-22T13:54:29.748Z",
              "type": 1,
              "body": "<p>Your scenario <strong>Integration HTTP 3</strong> has encountered an error.</p>\n<p>The scenario has not been paused and continues to run according to your settings. Nevertheless, you should pay attention to the issue.</p>\n<ul>\n<li>Scenario: <a href=\"https://local.make.cloud/scenario/86/log\">Integration HTTP 3</a></li>\n<li>Organization: <a href=\"https://local.make.cloud/organization/2\">test team</a></li>\n<li>Team: <a href=\"https://local.make.cloud/team/1\">My Lab</a></li>\n<li>Execution: <a href=\"https://local.make.cloud/scenario/86/log/d4f49055d5f44705b2aaf77a09547b77\">d4f49055d5f44705b2aaf77a09547b77</a></li>\n</ul>\n<p>Details:</p>\n<ul>\n<li><code>Validation failed for 1 parameter(s).</code></li>\n<li><code>Missing value of required parameter &#39;{{!expect.json.label}}&#39;.</code></li>\n</ul>\n<p>If you have questions or need help, please contact us.</p>\n"
            }
          },
          "parameters": {
            "imtZoneId": 2
          },
          "path": "/notifications/3"
        }
      }
    },
    "notifications-mark-as-read-post": {
      "endpointKey": "notifications-mark-as-read-post",
      "path": "/notifications/mark-as-read",
      "method": "post",
      "x-published": true,
      "tags": ["Notifications"],
      "summary": "Mark all notifications as read",
      "description": "Marks all notifications as read and returns the IDs of the updated notifications in the response.",
      "security": [
        {
          "token": ["notifications:write"]
        }
      ],
      "parameters": {
        "path": [],
        "query": [
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Forces the request to mark all notifications as read. This parameter can only have the `all` value."
          },
          {
            "name": "imtZoneId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The unique ID of the Make zone. This parameter is required to retrieve notifications from the Make version. For other Make platforms, it can be ignored. The IDs of the zones can be obtained from the `/enum/imt-zones` endpoint.",
            "example": 2
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notifications": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "notifications": [
                  {
                    "id": "1"
                  },
                  {
                    "id": "2"
                  },
                  {
                    "id": "3"
                  },
                  {
                    "id": "4"
                  },
                  {
                    "id": "5"
                  }
                ]
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "notifications": [
              {
                "id": "1"
              },
              {
                "id": "2"
              },
              {
                "id": "3"
              },
              {
                "id": "4"
              },
              {
                "id": "5"
              }
            ]
          },
          "parameters": {
            "imtZoneId": 2
          },
          "path": "/notifications/mark-as-read"
        }
      }
    },
    "organizations-get": {
      "endpointKey": "organizations-get",
      "path": "/organizations",
      "method": "get",
      "x-published": true,
      "tags": ["Organizations"],
      "summary": "List user organizations",
      "description": "Retrieves a collection of all organizations, in which the user has membership. The response contains information about the organization `name`, `organizationId` and `timezoneId`. You can get more data about the user organizations with specifying the `cols[]` query parameter.\n\nHowever, the values for parameters `license`, `serviceName` and `isPaused` are returned only for organizations in your current Make zone.\n\nReturned organizations are sorted by the organization name in ascending order by default. You can specify sorting order with the query parameter `pg[sortBy].`",
      "security": [
        {
          "token": ["organizations:read"]
        }
      ],
      "parameters": {
        "path": [],
        "query": [
          {
            "name": "zone",
            "in": "query",
            "description": "The URL of your Make instance domain.",
            "schema": {
              "type": "string"
            },
            "example": "eu1.make.com"
          },
          {
            "name": "externalId",
            "in": "query",
            "description": "Make White Label product instances use the `externalId` parameter for security reasons. This parameter has `null` value in the public Make Cloud instance.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "all-cols": {
                "value": "TESTORG003"
              }
            }
          },
          {
            "description": "Specifies columns that are returned in the response. Use the `cols[]` parameter for every column that you want to return in the response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get both `key1` and `key2` columns in the response.\n\n[Check the \"Filtering\" section for a full example.](https://www.make.com/en/api-documentation/filtering)",
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "countryId",
                  "timezoneId",
                  "license",
                  "zone",
                  "serviceName",
                  "teams",
                  "isPaused",
                  "externalId",
                  "productName"
                ]
              }
            },
            "examples": {
              "all-cols": {
                "value": [
                  "id",
                  "name",
                  "countryId",
                  "timezoneId",
                  "license",
                  "zone",
                  "serviceName",
                  "teams",
                  "isPaused",
                  "externalId",
                  "productName"
                ]
              }
            }
          },
          {
            "name": "pg[sortBy]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The value that will be used to sort returned entities by."
          },
          {
            "name": "pg[offset]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The value of entities you want to skip before getting entities you need.",
            "default": 0
          },
          {
            "name": "pg[sortDir]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "The sorting order. It accepts the ascending and descending direction specifiers."
          },
          {
            "name": "pg[limit]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The maximum entities to return."
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organizations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "serviceName": {
                          "type": "string"
                        },
                        "nextReset": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "lastReset": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "isPaused": {
                          "type": "boolean"
                        },
                        "countryId": {
                          "type": "integer"
                        },
                        "timezoneId": {
                          "type": "integer"
                        },
                        "deleted": {
                          "type": "boolean"
                        },
                        "license": {
                          "type": "object",
                          "properties": null
                        },
                        "zone": {
                          "type": "string"
                        },
                        "teams": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "productName": {
                          "type": "string"
                        },
                        "scenarios": {
                          "type": "integer"
                        },
                        "activeScenarios": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "pg": {
                    "type": "object",
                    "properties": {
                      "last": {
                        "type": "string"
                      },
                      "showLast": {
                        "type": "boolean"
                      },
                      "sortBy": {
                        "type": "string"
                      },
                      "sortDir": {
                        "type": "string"
                      },
                      "limit": {
                        "type": "integer"
                      },
                      "offset": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "examples": {
                "default-cols": {
                  "summary": "Return default columns",
                  "description": "Return default set of information about all organizations in which the user has membership.",
                  "value": {
                    "organizations": [
                      {
                        "id": 5,
                        "name": "New organization",
                        "timezoneId": 113
                      },
                      {
                        "id": 6,
                        "name": "New organization",
                        "timezoneId": 113
                      }
                    ],
                    "pg": {
                      "sortBy": "name",
                      "sortDir": "asc",
                      "limit": 10000,
                      "offset": 0
                    }
                  }
                },
                "all-cols": {
                  "summary": "Return all values",
                  "description": "Returns all available information about all organizations in which the user has membership.",
                  "value": {
                    "organizations": [
                      {
                        "name": "New organization",
                        "id": 5,
                        "countryId": 1,
                        "timezoneId": 113,
                        "license": {
                          "apps": "T2",
                          "users": 50,
                          "dslimit": 40,
                          "fslimit": 2147483648,
                          "iolimit": 10000,
                          "dsslimit": 524288000,
                          "fulltext": true,
                          "interval": 1,
                          "transfer": 1099511627776,
                          "operations": 800000000
                        },
                        "zone": "local.make.cloud",
                        "serviceName": "unlimited",
                        "teams": [
                          {
                            "id": 5,
                            "name": "My Team"
                          }
                        ],
                        "isPaused": false
                      },
                      {
                        "name": "New organization",
                        "id": 6,
                        "countryId": 1,
                        "timezoneId": 113,
                        "license": {
                          "apps": "T2",
                          "users": 50,
                          "dslimit": 40,
                          "fslimit": 2147483648,
                          "iolimit": 10000,
                          "dsslimit": 524288000,
                          "fulltext": true,
                          "interval": 1,
                          "transfer": 1099511627776,
                          "operations": 800000000
                        },
                        "zone": "local.make.cloud",
                        "serviceName": "unlimited",
                        "teams": [
                          {
                            "id": 6,
                            "name": "My Team"
                          }
                        ],
                        "isPaused": false
                      }
                    ],
                    "pg": {
                      "sortBy": "name",
                      "sortDir": "asc",
                      "limit": 10000,
                      "offset": 0
                    }
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "default-cols": {
          "summary": "Return default columns",
          "response": {
            "organizations": [
              {
                "id": 5,
                "name": "New organization",
                "timezoneId": 113
              },
              {
                "id": 6,
                "name": "New organization",
                "timezoneId": 113
              }
            ],
            "pg": {
              "sortBy": "name",
              "sortDir": "asc",
              "limit": 10000,
              "offset": 0
            }
          },
          "description": "Return default set of information about all organizations in which the user has membership.",
          "parameters": {
            "zone": "eu1.make.com"
          },
          "path": "/organizations"
        },
        "all-cols": {
          "summary": "Return all values",
          "response": {
            "organizations": [
              {
                "name": "New organization",
                "id": 5,
                "countryId": 1,
                "timezoneId": 113,
                "license": {
                  "apps": "T2",
                  "users": 50,
                  "dslimit": 40,
                  "fslimit": 2147483648,
                  "iolimit": 10000,
                  "dsslimit": 524288000,
                  "fulltext": true,
                  "interval": 1,
                  "transfer": 1099511627776,
                  "operations": 800000000
                },
                "zone": "local.make.cloud",
                "serviceName": "unlimited",
                "teams": [
                  {
                    "id": 5,
                    "name": "My Team"
                  }
                ],
                "isPaused": false
              },
              {
                "name": "New organization",
                "id": 6,
                "countryId": 1,
                "timezoneId": 113,
                "license": {
                  "apps": "T2",
                  "users": 50,
                  "dslimit": 40,
                  "fslimit": 2147483648,
                  "iolimit": 10000,
                  "dsslimit": 524288000,
                  "fulltext": true,
                  "interval": 1,
                  "transfer": 1099511627776,
                  "operations": 800000000
                },
                "zone": "local.make.cloud",
                "serviceName": "unlimited",
                "teams": [
                  {
                    "id": 6,
                    "name": "My Team"
                  }
                ],
                "isPaused": false
              }
            ],
            "pg": {
              "sortBy": "name",
              "sortDir": "asc",
              "limit": 10000,
              "offset": 0
            }
          },
          "description": "Returns all available information about all organizations in which the user has membership.",
          "parameters": {
            "zone": "eu1.make.com",
            "externalId": "TESTORG003",
            "cols[]": [
              "id",
              "name",
              "countryId",
              "timezoneId",
              "license",
              "zone",
              "serviceName",
              "teams",
              "isPaused",
              "externalId",
              "productName"
            ]
          },
          "path": "/organizations"
        }
      }
    },
    "organizations-post": {
      "endpointKey": "organizations-post",
      "path": "/organizations",
      "method": "post",
      "x-published": true,
      "tags": ["Organizations"],
      "summary": "Create an organization",
      "description": "Create a new organization using the data sent in the request body. Successful response contains all information about the created organization.",
      "security": [
        {
          "token": ["admin:write", "organizations:write"]
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the organization."
                },
                "regionId": {
                  "type": "integer",
                  "description": "ID of the Make region instance associated with the organization. Get the list of Make regions with the API call `GET /enums/imt-regions`."
                },
                "timezoneId": {
                  "type": "integer",
                  "description": "The ID of the timezone associated with the organization. Get the list of the timezone IDs with the API call `GET /enums/timezones`."
                },
                "countryId": {
                  "type": "integer",
                  "description": "The ID of the country associated with the organization. Get the list of the country IDs with the API call `GET /enums/countries`."
                }
              },
              "required": ["name", "regionId", "timezoneId", "countryId"]
            },
            "example": {
              "name": "New organization I",
              "regionId": 1,
              "timezoneId": 113,
              "countryId": 1
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organization": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "serviceName": {
                        "type": "string"
                      },
                      "nextReset": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "lastReset": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "isPaused": {
                        "type": "boolean"
                      },
                      "countryId": {
                        "type": "integer"
                      },
                      "timezoneId": {
                        "type": "integer"
                      },
                      "deleted": {
                        "type": "boolean"
                      },
                      "license": {
                        "type": "object",
                        "properties": null
                      },
                      "zone": {
                        "type": "string"
                      },
                      "teams": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "productName": {
                        "type": "string"
                      },
                      "scenarios": {
                        "type": "integer"
                      },
                      "activeScenarios": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "example": {
                "organization": {
                  "id": 9,
                  "name": "New organization",
                  "timezoneId": 113,
                  "countryId": 1,
                  "license": {
                    "apps": [],
                    "users": 50,
                    "dslimit": 40,
                    "fslimit": 2147483648,
                    "iolimit": 10000,
                    "advsched": true,
                    "dsslimit": 524288000,
                    "fulltext": true,
                    "interval": 1,
                    "transfer": 1099511627776,
                    "operations": 800000000
                  },
                  "zone": "slave1.make.cloud",
                  "serviceName": "default",
                  "teams": [
                    {
                      "id": 6,
                      "name": "My Team"
                    }
                  ],
                  "isPaused": false
                },
                "userOrganizationRole": {
                  "userId": 3,
                  "organizationId": 9,
                  "usersRoleId": 11,
                  "invitation": null
                }
              }
            }
          }
        }
      },
      "parameters": {
        "body": [
          {
            "name": "name",
            "schema": {
              "type": "string",
              "description": "The name of the organization."
            },
            "example": "New organization I",
            "required": true,
            "description": "The name of the organization."
          },
          {
            "name": "regionId",
            "schema": {
              "type": "integer",
              "description": "ID of the Make region instance associated with the organization. Get the list of Make regions with the API call `GET /enums/imt-regions`."
            },
            "example": 1,
            "required": true,
            "description": "ID of the Make region instance associated with the organization. Get the list of Make regions with the API call `GET /enums/imt-regions`."
          },
          {
            "name": "timezoneId",
            "schema": {
              "type": "integer",
              "description": "The ID of the timezone associated with the organization. Get the list of the timezone IDs with the API call `GET /enums/timezones`."
            },
            "example": 113,
            "required": true,
            "description": "The ID of the timezone associated with the organization. Get the list of the timezone IDs with the API call `GET /enums/timezones`."
          },
          {
            "name": "countryId",
            "schema": {
              "type": "integer",
              "description": "The ID of the country associated with the organization. Get the list of the country IDs with the API call `GET /enums/countries`."
            },
            "example": 1,
            "required": true,
            "description": "The ID of the country associated with the organization. Get the list of the country IDs with the API call `GET /enums/countries`."
          }
        ]
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "organization": {
              "id": 9,
              "name": "New organization",
              "timezoneId": 113,
              "countryId": 1,
              "license": {
                "apps": [],
                "users": 50,
                "dslimit": 40,
                "fslimit": 2147483648,
                "iolimit": 10000,
                "advsched": true,
                "dsslimit": 524288000,
                "fulltext": true,
                "interval": 1,
                "transfer": 1099511627776,
                "operations": 800000000
              },
              "zone": "slave1.make.cloud",
              "serviceName": "default",
              "teams": [
                {
                  "id": 6,
                  "name": "My Team"
                }
              ],
              "isPaused": false
            },
            "userOrganizationRole": {
              "userId": 3,
              "organizationId": 9,
              "usersRoleId": 11,
              "invitation": null
            }
          },
          "requestBody": {
            "name": "New organization I",
            "regionId": 1,
            "timezoneId": 113,
            "countryId": 1
          },
          "path": "/organizations"
        }
      }
    },
    "organizations-organizationId-get": {
      "endpointKey": "organizations-organizationId-get",
      "path": "/organizations/{organizationId}",
      "method": "get",
      "x-published": true,
      "tags": ["Organizations"],
      "summary": "Get organization details",
      "description": "Retrieves detail information of the organization with the specified `organizationId`.",
      "security": [
        {
          "token": ["organizations:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "organizationId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the organization.",
            "example": 11
          }
        ],
        "query": [
          {
            "name": "wait",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Set this parameter to `true` if you are using the API call `GET /organizations/{organizationId}` shortly after creating the organization. The API call will first check synchronization of the Make backend and your Make zone data. If you don't use this argument, the API call might fail with an error due to unfinished data synchronization. The default value of this argument is `false`.",
            "example": "true"
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organization": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "serviceName": {
                        "type": "string"
                      },
                      "nextReset": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "lastReset": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "isPaused": {
                        "type": "boolean"
                      },
                      "countryId": {
                        "type": "integer"
                      },
                      "timezoneId": {
                        "type": "integer"
                      },
                      "deleted": {
                        "type": "boolean"
                      },
                      "license": {
                        "type": "object",
                        "properties": null
                      },
                      "zone": {
                        "type": "string"
                      },
                      "teams": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "productName": {
                        "type": "string"
                      },
                      "scenarios": {
                        "type": "integer"
                      },
                      "activeScenarios": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "example": {
                "organization": {
                  "id": 10,
                  "name": "Organization 10",
                  "serviceName": "unlimited",
                  "nextReset": null,
                  "operations": "0",
                  "transfer": "0",
                  "operationsExt": "0",
                  "transferExt": "0",
                  "unusedOperations": "0",
                  "unusedTransfer": "0",
                  "isPaused": false,
                  "countryId": 1,
                  "timezoneId": 113,
                  "deleted": false,
                  "license": {
                    "apps": ["T2", "T3"],
                    "users": 50,
                    "dslimit": 40,
                    "fslimit": 2147483648,
                    "iolimit": 10000,
                    "dsslimit": 524288000,
                    "fulltext": true,
                    "interval": 1,
                    "transfer": 1099511627776,
                    "operations": 800000000
                  },
                  "features": {},
                  "zone": "local.make.cloud",
                  "teams": [
                    {
                      "id": 16,
                      "name": "My Team"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "organization": {
              "id": 10,
              "name": "Organization 10",
              "serviceName": "unlimited",
              "nextReset": null,
              "operations": "0",
              "transfer": "0",
              "operationsExt": "0",
              "transferExt": "0",
              "unusedOperations": "0",
              "unusedTransfer": "0",
              "isPaused": false,
              "countryId": 1,
              "timezoneId": 113,
              "deleted": false,
              "license": {
                "apps": ["T2", "T3"],
                "users": 50,
                "dslimit": 40,
                "fslimit": 2147483648,
                "iolimit": 10000,
                "dsslimit": 524288000,
                "fulltext": true,
                "interval": 1,
                "transfer": 1099511627776,
                "operations": 800000000
              },
              "features": {},
              "zone": "local.make.cloud",
              "teams": [
                {
                  "id": 16,
                  "name": "My Team"
                }
              ]
            }
          },
          "parameters": {
            "wait": "true"
          },
          "path": "/organizations/11"
        }
      }
    },
    "organizations-organizationId-patch": {
      "endpointKey": "organizations-organizationId-patch",
      "path": "/organizations/{organizationId}",
      "method": "patch",
      "x-published": true,
      "tags": ["Organizations"],
      "summary": "Update organization information",
      "description": "Updates the organization data with the values in the request body. If you don't use a parameter in the request body, Make won't change its value. You can update organization name, timezone, and country with the `name`, `timezoneId`, and `countryId` parameters.\n\nCheck the available values for the `timezoneId` and `countryId` parameters with the API calls `GET /enums/timezones` and `GET /enums/countries`.\n\nThe request response returns all organization data.",
      "security": [
        {
          "token": ["organizations:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "organizationId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the organization.",
            "example": 11
          }
        ],
        "query": [],
        "body": [
          {
            "name": "name",
            "schema": {
              "type": "string",
              "description": "The new name of the organization."
            },
            "example": "Organization 10",
            "required": false,
            "description": "The new name of the organization."
          },
          {
            "name": "countryId",
            "schema": {
              "type": "integer",
              "description": "The ID of the country associated with the organization. Get the list of the country IDs with the API call `GET /enums/countries`."
            },
            "example": 1,
            "required": false,
            "description": "The ID of the country associated with the organization. Get the list of the country IDs with the API call `GET /enums/countries`."
          },
          {
            "name": "timezoneId",
            "schema": {
              "type": "integer",
              "description": "The ID of the timezone associated with the organization. Get the `timezoneId` values with the API call `GET /enums/timezones`."
            },
            "example": 113,
            "required": false,
            "description": "The ID of the timezone associated with the organization. Get the `timezoneId` values with the API call `GET /enums/timezones`."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The new name of the organization."
                },
                "countryId": {
                  "type": "integer",
                  "description": "The ID of the country associated with the organization. Get the list of the country IDs with the API call `GET /enums/countries`."
                },
                "timezoneId": {
                  "type": "integer",
                  "description": "The ID of the timezone associated with the organization. Get the `timezoneId` values with the API call `GET /enums/timezones`."
                }
              }
            },
            "example": {
              "name": "Organization 10",
              "countryId": 1,
              "timezoneId": 113
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organization": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "serviceName": {
                        "type": "string"
                      },
                      "nextReset": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "lastReset": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "isPaused": {
                        "type": "boolean"
                      },
                      "countryId": {
                        "type": "integer"
                      },
                      "timezoneId": {
                        "type": "integer"
                      },
                      "deleted": {
                        "type": "boolean"
                      },
                      "license": {
                        "type": "object",
                        "properties": null
                      },
                      "zone": {
                        "type": "string"
                      },
                      "teams": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "productName": {
                        "type": "string"
                      },
                      "scenarios": {
                        "type": "integer"
                      },
                      "activeScenarios": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "example": {
                "organization": {
                  "name": "Organization 10",
                  "countryId": 1,
                  "timezoneId": 113,
                  "license": {
                    "apps": "T2",
                    "users": 50,
                    "dslimit": 40,
                    "fslimit": 2147483648,
                    "iolimit": 10000,
                    "dsslimit": 524288000,
                    "fulltext": true,
                    "interval": 1,
                    "transfer": 1099511627776,
                    "operations": 800000000
                  },
                  "zone": "local.make.cloud",
                  "serviceName": "limit1",
                  "teams": [
                    {
                      "id": 10,
                      "name": "My Team"
                    }
                  ],
                  "isPaused": false,
                  "id": 10
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "organization": {
              "name": "Organization 10",
              "countryId": 1,
              "timezoneId": 113,
              "license": {
                "apps": "T2",
                "users": 50,
                "dslimit": 40,
                "fslimit": 2147483648,
                "iolimit": 10000,
                "dsslimit": 524288000,
                "fulltext": true,
                "interval": 1,
                "transfer": 1099511627776,
                "operations": 800000000
              },
              "zone": "local.make.cloud",
              "serviceName": "limit1",
              "teams": [
                {
                  "id": 10,
                  "name": "My Team"
                }
              ],
              "isPaused": false,
              "id": 10
            }
          },
          "requestBody": {
            "name": "Organization 10",
            "countryId": 1,
            "timezoneId": 113
          },
          "path": "/organizations/11"
        }
      }
    },
    "organizations-organizationId-delete": {
      "endpointKey": "organizations-organizationId-delete",
      "path": "/organizations/{organizationId}",
      "method": "delete",
      "x-published": true,
      "tags": ["Organizations"],
      "summary": "Delete an organization",
      "description": "Deletes the organization with the specified `organizationId`. Make also deletes all the teams in the organization.  \n You can only delete organizations that are associated with your current Make zone. Your current Make zone is specified in the API call URL. Currently, it is either: \n - `eu1.make.com` \n - `us1.make.com`",
      "security": [
        {
          "token": ["organizations:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "organizationId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the organization.",
            "example": 11
          }
        ],
        "query": [
          {
            "name": "confirmed",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "example": true,
            "description": "Set to `true` to confirm the organization deletion. Otherwise, if the organization has active scenarios, Make won't delete the organization and the API call returns an error."
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organization": {
                    "type": "integer"
                  }
                }
              },
              "example": {
                "organization": 11
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "organization": 11
          },
          "parameters": {
            "confirmed": true
          },
          "path": "/organizations/11"
        }
      }
    },
    "organizations-organizationId-apps-get": {
      "endpointKey": "organizations-organizationId-apps-get",
      "path": "/organizations/{organizationId}/apps",
      "method": "get",
      "x-published": true,
      "tags": ["Organizations"],
      "summary": "Get a list of custom apps",
      "description": "Get list of custom apps associated with the users in the organization. The request response contains information of both published and unpublished custom apps. The custom app name is suffixed with a random text string.",
      "security": [
        {
          "token": ["organizations:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "organizationId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the organization.",
            "example": 11
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "installedApps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "appName": {
                          "type": "string"
                        },
                        "appVersion": {
                          "type": "integer"
                        },
                        "organizationId": {
                          "type": "integer"
                        },
                        "installedAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "installedBy": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "installedApps": [
                  {
                    "appName": "my-app-7xpqrg",
                    "appVersion": 1,
                    "organizationId": 11,
                    "installedAt": "2021-02-09T16:36:11.322Z",
                    "installedBy": 1
                  }
                ]
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "installedApps": [
              {
                "appName": "my-app-7xpqrg",
                "appVersion": 1,
                "organizationId": 11,
                "installedAt": "2021-02-09T16:36:11.322Z",
                "installedBy": 1
              }
            ]
          },
          "path": "/organizations/11/apps"
        }
      }
    },
    "organizations-organizationId-invite-post": {
      "endpointKey": "organizations-organizationId-invite-post",
      "path": "/organizations/{organizationId}/invite",
      "method": "post",
      "x-published": true,
      "tags": ["Organizations"],
      "summary": "Invite a user to the organization",
      "security": [
        {
          "token": ["organizations:write"]
        }
      ],
      "description": "Invite a user to the organization. To automatically add the user to teams, specify IDs of the teams. The user gets the team role **member**. You can change the user team role with the API call `POST /users/{userId}/user-team-roles/{teamId}`.",
      "parameters": {
        "path": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "The ID of the organization.",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "example": 11
          }
        ],
        "query": [],
        "body": [
          {
            "name": "usersRoleId",
            "schema": {
              "type": "integer",
              "description": "The ID of the user organization role assigned to the invited user. Get list of user role IDs from the API call `GET /users/roles`."
            },
            "example": 12,
            "required": false,
            "description": "The ID of the user organization role assigned to the invited user. Get list of user role IDs from the API call `GET /users/roles`."
          },
          {
            "name": "email",
            "schema": {
              "type": "string",
              "description": "The user registration email.",
              "format": "email"
            },
            "example": "tom@make.cloud",
            "required": true,
            "description": "The user registration email."
          },
          {
            "name": "name",
            "schema": {
              "type": "string",
              "description": "The user name visible in the team and organization interface."
            },
            "example": "Tom",
            "required": true,
            "description": "The user name visible in the team and organization interface."
          },
          {
            "name": "note",
            "schema": {
              "type": "string",
              "description": "Note added to the invitation."
            },
            "example": "Hi Tom, please join our organization.",
            "required": false,
            "description": "Note added to the invitation."
          },
          {
            "name": "teamsId",
            "schema": {
              "type": "array",
              "description": "The list of team IDs to which the invited user will be assigned. The invited user will receive the team role **member**.",
              "items": {
                "type": "integer"
              }
            },
            "example": [5, 26],
            "required": false,
            "description": "The list of team IDs to which the invited user will be assigned. The invited user will receive the team role **member**."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "usersRoleId": {
                  "type": "integer",
                  "description": "The ID of the user organization role assigned to the invited user. Get list of user role IDs from the API call `GET /users/roles`."
                },
                "email": {
                  "type": "string",
                  "description": "The user registration email.",
                  "format": "email"
                },
                "name": {
                  "type": "string",
                  "description": "The user name visible in the team and organization interface."
                },
                "note": {
                  "type": "string",
                  "description": "Note added to the invitation."
                },
                "teamsId": {
                  "type": "array",
                  "description": "The list of team IDs to which the invited user will be assigned. The invited user will receive the team role **member**.",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "required": ["name", "email", "userRoleId"]
            },
            "example": {
              "usersRoleId": 12,
              "email": "tom@make.cloud",
              "name": "Tom",
              "note": "Hi Tom, please join our organization.",
              "teamsId": [5, 26]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string",
                        "format": "email"
                      },
                      "language": {
                        "type": "string"
                      },
                      "timezoneId": {
                        "type": "integer"
                      },
                      "localeId": {
                        "type": "integer"
                      },
                      "countryId": {
                        "type": "integer"
                      },
                      "features": {
                        "type": "object",
                        "properties": {
                          "allow_apps": {
                            "type": "boolean"
                          }
                        }
                      },
                      "avatar": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  },
                  "userOrganizationRole": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "integer"
                      },
                      "organizationId": {
                        "type": "integer"
                      },
                      "usersRoleId": {
                        "type": "integer"
                      },
                      "invitation": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "example": {
                "user": {
                  "id": 31,
                  "name": "Tom",
                  "email": "tom@make.cloud",
                  "language": "en",
                  "timezoneId": 113,
                  "localeId": 18,
                  "countryId": 1,
                  "features": {},
                  "avatar": "https://secure.gravatar.com/avatar/ada7391afa4ad83584d00afe3986aef2.jpg?d=mm"
                },
                "userOrganizationRole": {
                  "userId": 31,
                  "organizationId": 1,
                  "usersRoleId": 12,
                  "invitation": "pending",
                  "organizationTeamsCount": 2,
                  "joinedTeamsCount": 1
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "user": {
              "id": 31,
              "name": "Tom",
              "email": "tom@make.cloud",
              "language": "en",
              "timezoneId": 113,
              "localeId": 18,
              "countryId": 1,
              "features": {},
              "avatar": "https://secure.gravatar.com/avatar/ada7391afa4ad83584d00afe3986aef2.jpg?d=mm"
            },
            "userOrganizationRole": {
              "userId": 31,
              "organizationId": 1,
              "usersRoleId": 12,
              "invitation": "pending",
              "organizationTeamsCount": 2,
              "joinedTeamsCount": 1
            }
          },
          "requestBody": {
            "usersRoleId": 12,
            "email": "tom@make.cloud",
            "name": "Tom",
            "note": "Hi Tom, please join our organization.",
            "teamsId": [5, 26]
          },
          "path": "/organizations/11/invite"
        }
      }
    },
    "organizations-organizationId-user-organization-roles-get": {
      "endpointKey": "organizations-organizationId-user-organization-roles-get",
      "path": "/organizations/{organizationId}/user-organization-roles",
      "method": "get",
      "x-published": true,
      "tags": ["Organizations > User organization roles"],
      "summary": "List user roles",
      "security": [
        {
          "token": ["organizations:read"]
        }
      ],
      "description": "Retrieves information about all users and their roles in the organization with the specified `organizationId`.",
      "parameters": {
        "path": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "The ID of the organization.",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "example": 11
          }
        ],
        "query": [
          {
            "description": "Specifies columns that are returned in the response. Use the `cols[]` parameter for every column that you want to return in the response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get both `key1` and `key2` columns in the response.\n\n[Check the \"Filtering\" section for a full example.](https://www.make.com/en/api-documentation/filtering)",
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "userId",
                  "organizationId",
                  "userRoleId",
                  "invitation",
                  "organizationTeamsCount",
                  "joinedTeamsCount"
                ]
              }
            },
            "examples": {
              "all-cols": {
                "value": [
                  "userId",
                  "organizationId",
                  "userRoleId",
                  "invitation",
                  "organizationTeamsCount",
                  "joinedTeamsCount"
                ]
              }
            }
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userOrganizationRoles": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "userId": {
                              "type": "integer"
                            },
                            "organizationId": {
                              "type": "integer"
                            },
                            "usersRoleId": {
                              "type": "integer"
                            },
                            "invitation": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "organizationTeamsCount": {
                              "type": "integer"
                            },
                            "joinedTeamsCount": {
                              "type": "integer"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "examples": {
                "list": {
                  "summary": "List user roles",
                  "description": "List all users and their roles in the specified organization.",
                  "value": {
                    "userOrganizationRoles": [
                      {
                        "userId": 1,
                        "organizationId": 11,
                        "usersRoleId": 11,
                        "invitation": null
                      },
                      {
                        "userId": 2,
                        "organizationId": 11,
                        "usersRoleId": 13,
                        "invitation": "expired"
                      }
                    ]
                  }
                },
                "all-cols": {
                  "summary": "Get all information",
                  "description": "Get all available information about every user role in the specified organization.",
                  "value": {
                    "userOrganizationRoles": [
                      {
                        "userId": 1,
                        "organizationId": 11,
                        "usersRoleId": 11,
                        "invitation": null,
                        "organizationTeamsCount": 2,
                        "joinedTeamsCount": 2
                      },
                      {
                        "userId": 2,
                        "organizationId": 11,
                        "usersRoleId": 13,
                        "invitation": "expired",
                        "organizationTeamsCount": 2,
                        "joinedTeamsCount": 0
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "list": {
          "summary": "List user roles",
          "response": {
            "userOrganizationRoles": [
              {
                "userId": 1,
                "organizationId": 11,
                "usersRoleId": 11,
                "invitation": null
              },
              {
                "userId": 2,
                "organizationId": 11,
                "usersRoleId": 13,
                "invitation": "expired"
              }
            ]
          },
          "description": "List all users and their roles in the specified organization.",
          "parameters": {},
          "path": "/organizations/11/user-organization-roles"
        },
        "all-cols": {
          "summary": "Get all information",
          "response": {
            "userOrganizationRoles": [
              {
                "userId": 1,
                "organizationId": 11,
                "usersRoleId": 11,
                "invitation": null,
                "organizationTeamsCount": 2,
                "joinedTeamsCount": 2
              },
              {
                "userId": 2,
                "organizationId": 11,
                "usersRoleId": 13,
                "invitation": "expired",
                "organizationTeamsCount": 2,
                "joinedTeamsCount": 0
              }
            ]
          },
          "description": "Get all available information about every user role in the specified organization.",
          "parameters": {
            "cols[]": [
              "userId",
              "organizationId",
              "userRoleId",
              "invitation",
              "organizationTeamsCount",
              "joinedTeamsCount"
            ]
          },
          "path": "/organizations/11/user-organization-roles"
        }
      }
    },
    "organizations-organizationId-user-organization-roles-userId-get": {
      "endpointKey": "organizations-organizationId-user-organization-roles-userId-get",
      "path": "/organizations/{organizationId}/user-organization-roles/{userId}",
      "method": "get",
      "x-published": true,
      "tags": ["Organizations > User organization roles"],
      "summary": "Get user organization role details",
      "description": "Retrieves information about a user role in an organization with the specified `userId` and `organizationId`. Get all user role IDs with the API call `GET users/roles`.",
      "security": [
        {
          "token": ["organizations:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "organizationId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the organization.",
            "example": 11
          },
          {
            "name": "userId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the user.",
            "example": 111
          }
        ],
        "query": [
          {
            "description": "Specifies columns that are returned in the response. Use the `cols[]` parameter for every column that you want to return in the response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get both `key1` and `key2` columns in the response.\n\n[Check the \"Filtering\" section for a full example.](https://www.make.com/en/api-documentation/filtering)",
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "userId",
                  "organizationId",
                  "userRoleId",
                  "invitation",
                  "organizationTeamsCount",
                  "joinedTeamsCount"
                ]
              }
            },
            "examples": {
              "all-cols": {
                "value": [
                  "userId",
                  "organizationId",
                  "userRoleId",
                  "invitation",
                  "organizationTeamsCount",
                  "joinedTeamsCount"
                ]
              }
            }
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userOrganizationRole": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "userId": {
                            "type": "integer"
                          },
                          "organizationId": {
                            "type": "integer"
                          },
                          "usersRoleId": {
                            "type": "integer"
                          },
                          "invitation": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "organizationTeamsCount": {
                            "type": "integer"
                          },
                          "joinedTeamsCount": {
                            "type": "integer"
                          }
                        }
                      }
                    ]
                  }
                }
              },
              "examples": {
                "detail": {
                  "summary": "Get user role detail",
                  "description": "Returns information about the role of the specified user in the organization.",
                  "value": {
                    "userOrganizationRole": {
                      "userId": 111,
                      "organizationId": 11,
                      "usersRoleId": 11,
                      "invitation": null
                    }
                  }
                },
                "all-cols": {
                  "summary": "Get all available information",
                  "description": "Returns all available information about the user role in the organization.",
                  "value": {
                    "userOrganizationRole": {
                      "userId": 111,
                      "organizationId": 11,
                      "usersRoleId": 11,
                      "invitation": null,
                      "organizationTeamsCount": 2,
                      "joinedTeamsCount": 2
                    }
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "detail": {
          "summary": "Get user role detail",
          "response": {
            "userOrganizationRole": {
              "userId": 111,
              "organizationId": 11,
              "usersRoleId": 11,
              "invitation": null
            }
          },
          "description": "Returns information about the role of the specified user in the organization.",
          "parameters": {},
          "path": "/organizations/11/user-organization-roles/111"
        },
        "all-cols": {
          "summary": "Get all available information",
          "response": {
            "userOrganizationRole": {
              "userId": 111,
              "organizationId": 11,
              "usersRoleId": 11,
              "invitation": null,
              "organizationTeamsCount": 2,
              "joinedTeamsCount": 2
            }
          },
          "description": "Returns all available information about the user role in the organization.",
          "parameters": {
            "cols[]": [
              "userId",
              "organizationId",
              "userRoleId",
              "invitation",
              "organizationTeamsCount",
              "joinedTeamsCount"
            ]
          },
          "path": "/organizations/11/user-organization-roles/111"
        }
      }
    },
    "organizations-organizationId-user-organization-roles-transfer-post": {
      "endpointKey": "organizations-organizationId-user-organization-roles-transfer-post",
      "path": "/organizations/{organizationId}/user-organization-roles/transfer",
      "method": "post",
      "x-published": true,
      "tags": ["Organizations > User organization roles"],
      "summary": "Transfer organization ownership",
      "description": "Transfer organization ownership to the specified user. Only the user that has the user role \"Owner\" in the organization can transfer ownership.",
      "parameters": {
        "path": [
          {
            "name": "organizationId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the organization.",
            "example": 11
          }
        ],
        "query": [],
        "body": [
          {
            "name": "userId",
            "schema": {
              "type": "integer",
              "description": "The ID of the user."
            },
            "example": 1,
            "required": true,
            "description": "The ID of the user."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "integer",
                  "description": "The ID of the user."
                }
              },
              "required": ["userId"]
            },
            "example": {
              "userId": 1
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userOrganizationRoles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "integer"
                        },
                        "organizationId": {
                          "type": "integer"
                        },
                        "usersRoleId": {
                          "type": "integer"
                        },
                        "invitation": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "userOrganizationRoles": [
                  {
                    "userId": 12,
                    "organizationId": 10,
                    "usersRoleId": 11,
                    "invitation": null
                  },
                  {
                    "userId": 1,
                    "organizationId": 10,
                    "usersRoleId": 12,
                    "invitation": null
                  }
                ]
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "userOrganizationRoles": [
              {
                "userId": 12,
                "organizationId": 10,
                "usersRoleId": 11,
                "invitation": null
              },
              {
                "userId": 1,
                "organizationId": 10,
                "usersRoleId": 12,
                "invitation": null
              }
            ]
          },
          "requestBody": {
            "userId": 1
          },
          "path": "/organizations/11/user-organization-roles/transfer"
        }
      }
    },
    "organizations-organizationId-variables-get": {
      "endpointKey": "organizations-organizationId-variables-get",
      "path": "/organizations/{organizationId}/variables",
      "method": "get",
      "x-published": true,
      "tags": ["Organizations"],
      "summary": "List organization variables",
      "description": "Retrieves the collection of organization variables. The response contains all organization variables if your account has the custom variables feature available. Otherwise, the response contains only Make system variables.\n\nCheck availability of the custom variables feature with the API call `GET /organizations/{organizationId}`. If the response contains `\"customVariables\": true` pair in the `license` object then you have access to the custom variables feature.\n\nRefer to the [Make pricing page](https://www.make.com/en/help/general/pricing-parameters) for Make pricing plans overview.",
      "security": [
        {
          "token": ["organization-variables:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "organizationId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the organization.",
            "example": 11
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organizationVariables": {
                    "type": "object",
                    "properties": {
                      "typeId": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "any"
                      },
                      "isSystem": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "example": {
                "organizationVariables": {
                  "name": "userId",
                  "typeId": 1,
                  "value": 123,
                  "isSystem": false
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "organizationVariables": {
              "name": "userId",
              "typeId": 1,
              "value": 123,
              "isSystem": false
            }
          },
          "path": "/organizations/11/variables"
        }
      }
    },
    "organizations-organizationId-variables-post": {
      "endpointKey": "organizations-organizationId-variables-post",
      "path": "/organizations/{organizationId}/variables",
      "method": "post",
      "x-published": true,
      "tags": ["Organizations"],
      "summary": "Create organization variable",
      "description": "Creates new organization variable. You can check the availability of the custom variables feature with the API call `GET /organizations/{organizationId}`. If the response contains `\"customVariables\": true` pair in the `license` object then you have access to the custom variables feature.\n\nA successful response contains all information about the new variable. If you don't have the custom variables feature available then the API call returns the error 404.\n\nRefer to the [Make pricing page](https://www.make.com/en/help/general/pricing-parameters) for Make pricing plans overview.",
      "security": [
        {
          "token": ["organization-variables:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "organizationId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the organization.",
            "example": 11
          }
        ],
        "query": [],
        "body": [
          {
            "name": "typeId",
            "schema": {
              "type": "number",
              "description": "Number representing the type of the custom variable. The mapping of `typeId` and variable types is as follows:\n\n- 1: `number`,\n - 2: `string`,\n - 3: `boolean`,\n - 4: `date`in ISO 8601 compliant format `YYYY-MM-DDTHH:mm:ss.sssZ`. For example: `1998-03-06T12:31:00.000Z`."
            },
            "example": 1,
            "required": false,
            "description": "Number representing the type of the custom variable. The mapping of `typeId` and variable types is as follows:\n\n- 1: `number`,\n - 2: `string`,\n - 3: `boolean`,\n - 4: `date`in ISO 8601 compliant format `YYYY-MM-DDTHH:mm:ss.sssZ`. For example: `1998-03-06T12:31:00.000Z`."
          },
          {
            "name": "value",
            "schema": {
              "type": "any",
              "description": "Value assigned to the custom variable."
            },
            "example": 123,
            "required": false,
            "description": "Value assigned to the custom variable."
          },
          {
            "name": "name",
            "schema": {
              "type": "string",
              "description": "The name of the variable. You can use letters, digits, `$` and `_` characters in the custom variable name."
            },
            "example": "userId",
            "required": false,
            "description": "The name of the variable. You can use letters, digits, `$` and `_` characters in the custom variable name."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "typeId": {
                  "type": "number",
                  "description": "Number representing the type of the custom variable. The mapping of `typeId` and variable types is as follows:\n\n- 1: `number`,\n - 2: `string`,\n - 3: `boolean`,\n - 4: `date`in ISO 8601 compliant format `YYYY-MM-DDTHH:mm:ss.sssZ`. For example: `1998-03-06T12:31:00.000Z`."
                },
                "value": {
                  "type": "any",
                  "description": "Value assigned to the custom variable."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the variable. You can use letters, digits, `$` and `_` characters in the custom variable name."
                }
              }
            },
            "example": {
              "typeId": 1,
              "value": 123,
              "name": "userId"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organizationVariable": {
                    "type": "object",
                    "properties": {
                      "typeId": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "any"
                      },
                      "isSystem": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "example": {
                "organizationVariable": {
                  "name": "userId",
                  "typeId": 1,
                  "value": 123,
                  "isSystem": false
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "organizationVariable": {
              "name": "userId",
              "typeId": 1,
              "value": 123,
              "isSystem": false
            }
          },
          "requestBody": {
            "typeId": 1,
            "value": 123,
            "name": "userId"
          },
          "path": "/organizations/11/variables"
        }
      }
    },
    "organizations-organizationId-variables-variableName-patch": {
      "endpointKey": "organizations-organizationId-variables-variableName-patch",
      "path": "/organizations/{organizationId}/variables/{variableName}",
      "method": "patch",
      "x-published": true,
      "tags": ["Organizations"],
      "summary": "Update organization variable",
      "description": "Updates custom organization variable with the specified variable `name`. Only parameters specified in the request body are updated.\n\nYou can check the availability of the custom variables feature with the API call `GET /organizations/{organizationId}`. If the response contains `\"customVariables\": true` pair in the `license` object then you have access to the custom variables feature.\n\nA successful response contains all information about the updated variable. If you don't have the custom variables feature available then the API call returns the error 404.\n\nRefer to the [Make pricing page](https://www.make.com/en/help/general/pricing-parameters) for the Make pricing plans overview.\n\nUpdate the variable `typeId` accordingly when you are updating the variable `value`. Make checks whether the variable type and value match in the request body. There is no check for incorrect variable type when you update only variable value and _vice versa_.",
      "security": [
        {
          "token": ["organization-variables:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "organizationId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the organization.",
            "example": 11
          },
          {
            "name": "variableName",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The name of the custom variable.",
            "example": "userID"
          }
        ],
        "query": [],
        "body": [
          {
            "name": "typeId",
            "schema": {
              "type": "number",
              "description": "Number representing the type of the custom variable. The mapping of `typeId` and variable types is as follows:\n\n- 1: `number`,\n - 2: `string`,\n - 3: `boolean`,\n - 4: `date`in ISO 8601 compliant format `YYYY-MM-DDTHH:mm:ss.sssZ`. For example: `1998-03-06T12:31:00.000Z`."
            },
            "required": false,
            "description": "Number representing the type of the custom variable. The mapping of `typeId` and variable types is as follows:\n\n- 1: `number`,\n - 2: `string`,\n - 3: `boolean`,\n - 4: `date`in ISO 8601 compliant format `YYYY-MM-DDTHH:mm:ss.sssZ`. For example: `1998-03-06T12:31:00.000Z`."
          },
          {
            "name": "value",
            "schema": {
              "type": "any",
              "description": "Value assigned to the custom variable."
            },
            "example": 251,
            "required": false,
            "description": "Value assigned to the custom variable."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "typeId": {
                  "type": "number",
                  "description": "Number representing the type of the custom variable. The mapping of `typeId` and variable types is as follows:\n\n- 1: `number`,\n - 2: `string`,\n - 3: `boolean`,\n - 4: `date`in ISO 8601 compliant format `YYYY-MM-DDTHH:mm:ss.sssZ`. For example: `1998-03-06T12:31:00.000Z`."
                },
                "value": {
                  "type": "any",
                  "description": "Value assigned to the custom variable."
                }
              }
            },
            "example": {
              "value": 251
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organizationVariable": {
                    "type": "object",
                    "properties": {
                      "typeId": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "any"
                      },
                      "isSystem": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "example": {
                "organizationVariable": {
                  "name": "userId",
                  "typeId": 1,
                  "value": 251
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "organizationVariable": {
              "name": "userId",
              "typeId": 1,
              "value": 251
            }
          },
          "requestBody": {
            "value": 251
          },
          "path": "/organizations/11/variables/userID"
        }
      }
    },
    "organizations-organizationId-variables-variableName-delete": {
      "endpointKey": "organizations-organizationId-variables-variableName-delete",
      "path": "/organizations/{organizationId}/variables/{variableName}",
      "method": "delete",
      "x-published": true,
      "tags": ["Organizations"],
      "summary": "Delete organization variable",
      "description": "Deletes organization variable.\n \nIf you don't have the custom variables feature available then the API call returns the error 404. Check the availability of the custom variables feature with the API call `GET /organizations/{organizationId}`. If the response contains `\"customVariables\": true` pair in the `license` object then you have access to the custom variables feature.\n\nRefer to the [Make pricing page](https://www.make.com/en/help/general/pricing-parameters) for Make pricing plans overview.",
      "security": [
        {
          "token": ["organization-variables:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "organizationId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the organization.",
            "example": 11
          },
          {
            "name": "variableName",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The name of the custom variable.",
            "example": "userID"
          }
        ],
        "query": [
          {
            "name": "confirmed",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Set to `true` to confirm deleting the custom variable. Otherwise the API call fails with the error IM004 (406).",
            "example": true
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ok": {
                    "type": "integer"
                  }
                }
              },
              "example": {
                "ok": 1
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "ok": 1
          },
          "parameters": {
            "confirmed": true
          },
          "path": "/organizations/11/variables/userID"
        }
      }
    },
    "organizations-organizationId-variables-variableName-history-get": {
      "endpointKey": "organizations-organizationId-variables-variableName-history-get",
      "path": "/organizations/{organizationId}/variables/{variableName}/history",
      "method": "get",
      "x-published": true,
      "tags": ["Organizations"],
      "summary": "History of custom variable updates",
      "description": "Gets the history of updates of the specified custom variable. The response contains the ID value of the variable history entry and a `diffObject`. The `diffObject` contains:\n\n- the original value,\n - the new value,\n - the timestamp of the update,\n - the author of the update.\n\nIf the variable doesn't have any updates, the `diffObject` contains the current value of the variable instead of the original and new values.\n\nThe update history entries are sorted from newest to latest.",
      "security": [
        {
          "token": ["organization-variables:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "organizationId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the organization.",
            "example": 11
          },
          {
            "name": "variableName",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The name of the custom variable.",
            "example": "userID"
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organizationVariableHistory": {
                    "type": "array",
                    "properties": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "diffObject": {
                              "type": "object",
                              "properties": {
                                "name": "string",
                                "value": "string",
                                "typeId": "integer"
                              }
                            },
                            "changed": {
                              "type": "date"
                            },
                            "action": {
                              "type": "string",
                              "description": "organization_variable_created or organization_variable_edited or team_variable_created or team_variable_edited"
                            },
                            "author": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "diffObject": {
                              "type": "object",
                              "properties": {
                                "name": "string",
                                "value": "string",
                                "typeId": "integer"
                              }
                            },
                            "changed": {
                              "type": "date"
                            },
                            "action": {
                              "type": "string"
                            },
                            "author": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "example": {
                "organizationVariableHistory": [
                  {
                    "id": 1,
                    "diffObject": {
                      "name": "userId",
                      "value": 25,
                      "typeId": 1
                    },
                    "changed": "2022-08-02T09:37:05.364Z",
                    "action": "organization_variable_created",
                    "author": "Jon Doe"
                  },
                  {
                    "id": 2,
                    "diffObject": {
                      "old": {
                        "value": 25,
                        "typeId": 1
                      },
                      "new": {
                        "value": 140,
                        "typeId": 1
                      }
                    },
                    "changed": "2022-08-02T09:37:05.364Z",
                    "action": "organization_variable_edited",
                    "author": "Jon Doe"
                  }
                ]
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "organizationVariableHistory": [
              {
                "id": 1,
                "diffObject": {
                  "name": "userId",
                  "value": 25,
                  "typeId": 1
                },
                "changed": "2022-08-02T09:37:05.364Z",
                "action": "organization_variable_created",
                "author": "Jon Doe"
              },
              {
                "id": 2,
                "diffObject": {
                  "old": {
                    "value": 25,
                    "typeId": 1
                  },
                  "new": {
                    "value": 140,
                    "typeId": 1
                  }
                },
                "changed": "2022-08-02T09:37:05.364Z",
                "action": "organization_variable_edited",
                "author": "Jon Doe"
              }
            ]
          },
          "path": "/organizations/11/variables/userID/history"
        }
      }
    },
    "scenarios-get": {
      "endpointKey": "scenarios-get",
      "path": "/scenarios",
      "method": "get",
      "x-published": true,
      "tags": ["Scenarios"],
      "summary": "List scenarios",
      "description": "Retrieves a collection of all scenarios for a team or an organization with a given ID. Returned scenarios are sorted by proprietary setting in descending order.",
      "security": [
        {
          "token": ["scenarios:read"]
        }
      ],
      "parameters": {
        "path": [],
        "query": [
          {
            "description": "The unique ID of the team whose scenarios will be retrieved. If this parameter is set, the `organizationId` parameter must be skipped. For each request either `teamId` or `organizationId` must be defined.",
            "name": "teamId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "description": "The unique ID of the organization whose scenarios will be retrieved. If this parameter is set, the `teamId` parameter must be skipped. For each request either `teamId` or `organizationId` must be defined.",
            "name": "organizationId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": 11
          },
          {
            "name": "id[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "description": "The array of IDs of scenarios to retrieve.",
            "example": [1, 2, 3]
          },
          {
            "description": "The unique ID of the folder containing scenarios you want to retrieve.",
            "name": "folderId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "name": "islinked",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "If set to `true`, this parameter filters only active scenarios for which the schedule is enabled.",
            "example": true
          },
          {
            "name": "concept",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "If set to `true`, the response contains only scenario concepts.",
            "example": true
          },
          {
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "teamId",
                  "hookId",
                  "deviceId",
                  "deviceScope",
                  "description",
                  "folderId",
                  "isinvalid",
                  "islinked",
                  "islocked",
                  "isPaused",
                  "usedPackages",
                  "lastEdit",
                  "scheduling",
                  "iswaiting",
                  "dlqCount",
                  "createdByUser",
                  "updatedByUser",
                  "nextExec",
                  "scenarioVersion",
                  "moduleSequenceId"
                ]
              }
            },
            "description": "Specifies columns that are returned in the response. Use the `cols[]` parameter for every column that you want to return in the response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get both `key1` and `key2` columns in the response.\n\n[Check the \"Filtering\" section for a full example.](https://www.make.com/en/api-documentation/filtering)"
          },
          {
            "name": "pg[offset]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The value of entities you want to skip before getting entities you need.",
            "default": 0
          },
          {
            "default": 10,
            "maximum": 10000,
            "name": "pg[limit]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The value of maximum entities to return."
          },
          {
            "schema": {
              "type": "string",
              "enum": ["proprietal"]
            },
            "description": "The value that will be used to sort returned entities by. The scenarios currently can be sorted only in proprietal order.",
            "default": "proprietal",
            "name": "pg[sortBy]",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": ["desc"]
            },
            "description": "The only allowed value for this parameter is `desc` that sorts scenarios in descending direction. Ascendent sorting direction is **not allowed** for this endpoint.",
            "default": "desc",
            "name": "pg[sortDir]",
            "in": "query"
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Retrieved scenarios",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scenarios": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "teamId": {
                          "type": "integer"
                        },
                        "hookId": {
                          "type": "integer"
                        },
                        "deviceId": {
                          "type": "integer"
                        },
                        "deviceScope": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "folderId": {
                          "type": "integer"
                        },
                        "isinvalid": {
                          "type": "boolean"
                        },
                        "islinked": {
                          "type": "boolean"
                        },
                        "islocked": {
                          "type": "boolean"
                        },
                        "isPaused": {
                          "type": "boolean"
                        },
                        "usedPackages": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "lastEdit": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "scheduling": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "interval": {
                              "type": "integer"
                            }
                          }
                        },
                        "iswaiting": {
                          "type": "boolean"
                        },
                        "dlqCount": {
                          "type": "integer"
                        },
                        "createdByUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            }
                          }
                        },
                        "updatedByUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            }
                          }
                        },
                        "nextExec": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "scenarioVersion": {
                          "type": "integer"
                        },
                        "moduleSequenceId": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "pg": {
                    "type": "object",
                    "properties": {
                      "last": {
                        "type": "string",
                        "description": "Shown only when using the `last` based pagination."
                      },
                      "showLast": {
                        "type": "boolean",
                        "description": "Shown only when using the `last` based pagination."
                      },
                      "sortBy": {
                        "type": "string"
                      },
                      "sortDir": {
                        "type": "string"
                      },
                      "limit": {
                        "type": "integer"
                      },
                      "offset": {
                        "type": "integer",
                        "description": "Shown only when using the `offset` based pagination."
                      }
                    }
                  }
                }
              },
              "example": {
                "scenarios": [
                  {
                    "id": 925,
                    "name": "New scenario",
                    "teamId": 215,
                    "hookId": null,
                    "deviceId": null,
                    "deviceScope": null,
                    "concept": false,
                    "description": "",
                    "folderId": null,
                    "isinvalid": false,
                    "islinked": false,
                    "islocked": false,
                    "isPaused": false,
                    "usedPackages": ["json"],
                    "lastEdit": "2021-09-22T06:40:56.692Z",
                    "scheduling": {
                      "type": "indefinitely",
                      "interval": 900
                    },
                    "iswaiting": false,
                    "dlqCount": 0,
                    "createdByUser": {
                      "id": 985,
                      "name": "John Doe",
                      "email": "j.doe@example.com"
                    },
                    "updatedByUser": {
                      "id": 986,
                      "name": "John Foo",
                      "email": "j.foo@example.com"
                    },
                    "nextExec": "2021-09-22T06:41:56.692Z"
                  }
                ],
                "pg": {
                  "sortBy": "id",
                  "sortDir": "desc",
                  "offset": 0,
                  "limit": 10
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "scenarios": [
              {
                "id": 925,
                "name": "New scenario",
                "teamId": 215,
                "hookId": null,
                "deviceId": null,
                "deviceScope": null,
                "concept": false,
                "description": "",
                "folderId": null,
                "isinvalid": false,
                "islinked": false,
                "islocked": false,
                "isPaused": false,
                "usedPackages": ["json"],
                "lastEdit": "2021-09-22T06:40:56.692Z",
                "scheduling": {
                  "type": "indefinitely",
                  "interval": 900
                },
                "iswaiting": false,
                "dlqCount": 0,
                "createdByUser": {
                  "id": 985,
                  "name": "John Doe",
                  "email": "j.doe@example.com"
                },
                "updatedByUser": {
                  "id": 986,
                  "name": "John Foo",
                  "email": "j.foo@example.com"
                },
                "nextExec": "2021-09-22T06:41:56.692Z"
              }
            ],
            "pg": {
              "sortBy": "id",
              "sortDir": "desc",
              "offset": 0,
              "limit": 10
            }
          },
          "parameters": {
            "teamId": 1,
            "organizationId": 11,
            "id[]": [1, 2, 3],
            "folderId": 1,
            "islinked": true,
            "concept": true
          },
          "path": "/scenarios"
        }
      }
    },
    "scenarios-post": {
      "endpointKey": "scenarios-post",
      "path": "/scenarios",
      "method": "post",
      "x-published": true,
      "tags": ["Scenarios"],
      "summary": "Create scenario",
      "description": "Creates a new scenario with data passed in the request body. In the response, it returns all details of the created scenario including its blueprint.",
      "security": [
        {
          "token": ["scenarios:write"]
        }
      ],
      "parameters": {
        "path": [],
        "query": [
          {
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "teamId",
                  "hookId",
                  "deviceId",
                  "deviceScope",
                  "description",
                  "folderId",
                  "isinvalid",
                  "islinked",
                  "islocked",
                  "isPaused",
                  "usedPackages",
                  "lastEdit",
                  "scheduling",
                  "iswaiting",
                  "dlqCount",
                  "createdByUser",
                  "updatedByUser",
                  "nextExec",
                  "scenarioVersion",
                  "moduleSequenceId"
                ]
              }
            },
            "description": "Specifies columns that are returned in the response. Use the `cols[]` parameter for every column that you want to return in the response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get both `key1` and `key2` columns in the response.\n\n[Check the \"Filtering\" section for a full example.](https://www.make.com/en/api-documentation/filtering)"
          },
          {
            "description": "If set to `true` this parameter confirms the scenario creation when the scenario contains the app that is used in the organization for the first time and needs installation. If the parameter is missing or it is set to `false` an error code is returned and the scenario is not created.",
            "name": "confirmed",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "body": [
          {
            "name": "blueprint",
            "schema": {
              "type": "string",
              "description": "The scenario blueprint. To save resources, the blueprint is sent as a string, not as an object."
            },
            "example": "{ \"name\": \"Empty integration\", \"flow\": [ { \"id\": 2, \"module\": \"json:ParseJSON\", \"version\": 1, \"metadata\": { \"designer\": { \"x\": -46, \"y\": 47, \"messages\": [ { \"category\": \"last\", \"severity\": \"warning\", \"message\": \"A transformer should not be the last module in the route.\" } ] } } } ], \"metadata\": { \"version\": 1, \"scenario\": { \"roundtrips\": 1, \"maxErrors\": 3, \"autoCommit\": true, \"autoCommitTriggerLast\": true, \"sequential\": false, \"confidential\": false, \"dataloss\": false, \"dlq\": false, \"freshVariables\": false }, \"designer\": { \"orphans\": [ ] } } }",
            "required": true,
            "description": "The scenario blueprint. To save resources, the blueprint is sent as a string, not as an object."
          },
          {
            "name": "teamId",
            "schema": {
              "type": "integer",
              "description": "The unique ID of the team in which the scenario will be created."
            },
            "example": 1,
            "required": true,
            "description": "The unique ID of the team in which the scenario will be created."
          },
          {
            "name": "scheduling",
            "schema": {
              "type": "string",
              "description": "The scenario scheduling details. To save resources, the scheduling details are sent as a string, not as an object."
            },
            "example": "{ \"type\": \"indefinitely\", \"interval\": 900 }",
            "required": true,
            "description": "The scenario scheduling details. To save resources, the scheduling details are sent as a string, not as an object."
          },
          {
            "name": "folderId",
            "schema": {
              "type": "integer",
              "description": "The unique ID of the folder in which you want to store created scenario."
            },
            "example": 1,
            "required": false,
            "description": "The unique ID of the folder in which you want to store created scenario."
          },
          {
            "name": "basedon",
            "schema": {
              "type": "integer",
              "description": "Defines if the scenario is created based on a template. The value is the template ID."
            },
            "example": 20,
            "required": false,
            "description": "Defines if the scenario is created based on a template. The value is the template ID."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "blueprint": {
                  "type": "string",
                  "description": "The scenario blueprint. To save resources, the blueprint is sent as a string, not as an object."
                },
                "teamId": {
                  "type": "integer",
                  "description": "The unique ID of the team in which the scenario will be created."
                },
                "scheduling": {
                  "type": "string",
                  "description": "The scenario scheduling details. To save resources, the scheduling details are sent as a string, not as an object."
                },
                "folderId": {
                  "type": "integer",
                  "description": "The unique ID of the folder in which you want to store created scenario."
                },
                "basedon": {
                  "type": "integer",
                  "description": "Defines if the scenario is created based on a template. The value is the template ID."
                }
              },
              "required": ["blueprint", "teamId", "scheduling"]
            },
            "examples": {
              "create": {
                "summary": "Blueprint for scenario creation",
                "x-expand": true,
                "value": {
                  "blueprint": "{ \"name\": \"Empty integration\", \"flow\": [ { \"id\": 2, \"module\": \"json:ParseJSON\", \"version\": 1, \"metadata\": { \"designer\": { \"x\": -46, \"y\": 47, \"messages\": [ { \"category\": \"last\", \"severity\": \"warning\", \"message\": \"A transformer should not be the last module in the route.\" } ] } } } ], \"metadata\": { \"version\": 1, \"scenario\": { \"roundtrips\": 1, \"maxErrors\": 3, \"autoCommit\": true, \"autoCommitTriggerLast\": true, \"sequential\": false, \"confidential\": false, \"dataloss\": false, \"dlq\": false, \"freshVariables\": false }, \"designer\": { \"orphans\": [ ] } } }",
                  "teamId": 1,
                  "scheduling": "{ \"type\": \"indefinitely\", \"interval\": 900 }",
                  "folderId": 1,
                  "basedon": 20
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Scenario created successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scenario": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "teamId": {
                        "type": "integer"
                      },
                      "hookId": {
                        "type": "integer"
                      },
                      "deviceId": {
                        "type": "integer"
                      },
                      "deviceScope": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "folderId": {
                        "type": "integer"
                      },
                      "isinvalid": {
                        "type": "boolean"
                      },
                      "islinked": {
                        "type": "boolean"
                      },
                      "islocked": {
                        "type": "boolean"
                      },
                      "isPaused": {
                        "type": "boolean"
                      },
                      "usedPackages": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "lastEdit": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "scheduling": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "interval": {
                            "type": "integer"
                          }
                        }
                      },
                      "iswaiting": {
                        "type": "boolean"
                      },
                      "dlqCount": {
                        "type": "integer"
                      },
                      "createdByUser": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          }
                        }
                      },
                      "updatedByUser": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          }
                        }
                      },
                      "nextExec": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "scenarioVersion": {
                        "type": "integer"
                      },
                      "moduleSequenceId": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "example": {
                "scenario": {
                  "id": 925,
                  "name": "New scenario",
                  "teamId": 215,
                  "hookId": null,
                  "deviceId": null,
                  "deviceScope": null,
                  "concept": false,
                  "description": "",
                  "folderId": null,
                  "isinvalid": false,
                  "islinked": false,
                  "islocked": false,
                  "isPaused": false,
                  "usedPackages": ["json"],
                  "lastEdit": "2021-09-22T06:40:56.692Z",
                  "scheduling": {
                    "type": "indefinitely",
                    "interval": 900
                  },
                  "iswaiting": false,
                  "dlqCount": 0,
                  "createdByUser": {
                    "id": 985,
                    "name": "John Doe",
                    "email": "j.doe@example.com"
                  },
                  "updatedByUser": {
                    "id": 986,
                    "name": "John Foo",
                    "email": "j.foo@example.com"
                  },
                  "nextExec": "2021-09-22T06:41:56.692Z"
                }
              }
            }
          }
        }
      },
      "examples": {
        "create": {
          "summary": "Blueprint for scenario creation",
          "requestBody": {
            "blueprint": "{ \"name\": \"Empty integration\", \"flow\": [ { \"id\": 2, \"module\": \"json:ParseJSON\", \"version\": 1, \"metadata\": { \"designer\": { \"x\": -46, \"y\": 47, \"messages\": [ { \"category\": \"last\", \"severity\": \"warning\", \"message\": \"A transformer should not be the last module in the route.\" } ] } } } ], \"metadata\": { \"version\": 1, \"scenario\": { \"roundtrips\": 1, \"maxErrors\": 3, \"autoCommit\": true, \"autoCommitTriggerLast\": true, \"sequential\": false, \"confidential\": false, \"dataloss\": false, \"dlq\": false, \"freshVariables\": false }, \"designer\": { \"orphans\": [ ] } } }",
            "teamId": 1,
            "scheduling": "{ \"type\": \"indefinitely\", \"interval\": 900 }",
            "folderId": 1,
            "basedon": 20
          },
          "response": {
            "scenario": {
              "id": 925,
              "name": "New scenario",
              "teamId": 215,
              "hookId": null,
              "deviceId": null,
              "deviceScope": null,
              "concept": false,
              "description": "",
              "folderId": null,
              "isinvalid": false,
              "islinked": false,
              "islocked": false,
              "isPaused": false,
              "usedPackages": ["json"],
              "lastEdit": "2021-09-22T06:40:56.692Z",
              "scheduling": {
                "type": "indefinitely",
                "interval": 900
              },
              "iswaiting": false,
              "dlqCount": 0,
              "createdByUser": {
                "id": 985,
                "name": "John Doe",
                "email": "j.doe@example.com"
              },
              "updatedByUser": {
                "id": 986,
                "name": "John Foo",
                "email": "j.foo@example.com"
              },
              "nextExec": "2021-09-22T06:41:56.692Z"
            }
          },
          "parameters": {
            "confirmed": true
          },
          "path": "/scenarios"
        }
      }
    },
    "scenarios-scenarioId-get": {
      "endpointKey": "scenarios-scenarioId-get",
      "path": "/scenarios/{scenarioId}",
      "method": "get",
      "x-published": true,
      "tags": ["Scenarios"],
      "summary": "Get scenario details",
      "description": "Retrieves all available properties of a scenario with a given ID. The returned details do not include a scenario blueprint. If you want to get a scenario blueprint, refer to the [Get scenario blueprint](/scenarios-scenarioId-blueprint-get) endpoint.",
      "security": [
        {
          "token": ["scenarios:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "description": "The ID of the scenario. You can get the `scenarioId` with the [List scenarios](/scenarios-get) API call.",
            "name": "scenarioId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "example": 112,
            "required": true
          }
        ],
        "query": [
          {
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "teamId",
                  "hookId",
                  "deviceId",
                  "deviceScope",
                  "description",
                  "folderId",
                  "isinvalid",
                  "islinked",
                  "islocked",
                  "isPaused",
                  "usedPackages",
                  "lastEdit",
                  "scheduling",
                  "iswaiting",
                  "dlqCount",
                  "createdByUser",
                  "updatedByUser",
                  "nextExec",
                  "scenarioVersion",
                  "moduleSequenceId"
                ]
              }
            },
            "description": "Specifies columns that are returned in the response. Use the `cols[]` parameter for every column that you want to return in the response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get both `key1` and `key2` columns in the response.\n\n[Check the \"Filtering\" section for a full example.](https://www.make.com/en/api-documentation/filtering)"
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scenario": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "teamId": {
                        "type": "integer"
                      },
                      "hookId": {
                        "type": "integer"
                      },
                      "deviceId": {
                        "type": "integer"
                      },
                      "deviceScope": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "folderId": {
                        "type": "integer"
                      },
                      "isinvalid": {
                        "type": "boolean"
                      },
                      "islinked": {
                        "type": "boolean"
                      },
                      "islocked": {
                        "type": "boolean"
                      },
                      "isPaused": {
                        "type": "boolean"
                      },
                      "usedPackages": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "lastEdit": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "scheduling": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "interval": {
                            "type": "integer"
                          }
                        }
                      },
                      "iswaiting": {
                        "type": "boolean"
                      },
                      "dlqCount": {
                        "type": "integer"
                      },
                      "createdByUser": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          }
                        }
                      },
                      "updatedByUser": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          }
                        }
                      },
                      "nextExec": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "scenarioVersion": {
                        "type": "integer"
                      },
                      "moduleSequenceId": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "example": {
                "scenario": {
                  "id": 925,
                  "name": "New scenario",
                  "teamId": 215,
                  "hookId": null,
                  "deviceId": null,
                  "deviceScope": null,
                  "concept": false,
                  "description": "",
                  "folderId": null,
                  "isinvalid": false,
                  "islinked": false,
                  "islocked": false,
                  "isPaused": false,
                  "usedPackages": ["json"],
                  "lastEdit": "2021-09-22T06:40:56.692Z",
                  "scheduling": {
                    "type": "indefinitely",
                    "interval": 900
                  },
                  "iswaiting": false,
                  "dlqCount": 0,
                  "createdByUser": {
                    "id": 985,
                    "name": "John Doe",
                    "email": "j.doe@example.com"
                  },
                  "updatedByUser": {
                    "id": 986,
                    "name": "John Foo",
                    "email": "j.foo@example.com"
                  },
                  "nextExec": "2021-09-22T06:41:56.692Z"
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "scenario": {
              "id": 925,
              "name": "New scenario",
              "teamId": 215,
              "hookId": null,
              "deviceId": null,
              "deviceScope": null,
              "concept": false,
              "description": "",
              "folderId": null,
              "isinvalid": false,
              "islinked": false,
              "islocked": false,
              "isPaused": false,
              "usedPackages": ["json"],
              "lastEdit": "2021-09-22T06:40:56.692Z",
              "scheduling": {
                "type": "indefinitely",
                "interval": 900
              },
              "iswaiting": false,
              "dlqCount": 0,
              "createdByUser": {
                "id": 985,
                "name": "John Doe",
                "email": "j.doe@example.com"
              },
              "updatedByUser": {
                "id": 986,
                "name": "John Foo",
                "email": "j.foo@example.com"
              },
              "nextExec": "2021-09-22T06:41:56.692Z"
            }
          },
          "path": "/scenarios/112"
        }
      }
    },
    "scenarios-scenarioId-patch": {
      "endpointKey": "scenarios-scenarioId-patch",
      "path": "/scenarios/{scenarioId}",
      "method": "patch",
      "x-published": true,
      "tags": ["Scenarios"],
      "summary": "Update scenario",
      "description": "Updates a scenario with a given ID by passing new values in the request body. Any property that is not provided will be left unchanged. In the response, it returns all details of the updated scenario including properties that were not changed.",
      "security": [
        {
          "token": ["scenarios:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "description": "The ID of the scenario. You can get the `scenarioId` with the [List scenarios](/scenarios-get) API call.",
            "name": "scenarioId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "example": 112,
            "required": true
          }
        ],
        "query": [
          {
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "teamId",
                  "hookId",
                  "deviceId",
                  "deviceScope",
                  "description",
                  "folderId",
                  "isinvalid",
                  "islinked",
                  "islocked",
                  "isPaused",
                  "usedPackages",
                  "lastEdit",
                  "scheduling",
                  "iswaiting",
                  "dlqCount",
                  "createdByUser",
                  "updatedByUser",
                  "nextExec",
                  "scenarioVersion",
                  "moduleSequenceId"
                ]
              }
            },
            "description": "Specifies columns that are returned in the response. Use the `cols[]` parameter for every column that you want to return in the response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get both `key1` and `key2` columns in the response.\n\n[Check the \"Filtering\" section for a full example.](https://www.make.com/en/api-documentation/filtering)"
          },
          {
            "description": "If set to `true` this parameter confirms the scenario update when the scenario contains the app that is used in the organization for the first time and needs installation. If the parameter is missing or it is set to `false` an error code is returned and the scenario is not updated.",
            "name": "confirmed",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "body": [
          {
            "name": "blueprint",
            "schema": {
              "type": "string",
              "description": "The scenario blueprint. To save resources, the blueprint is sent as a string, not as an object."
            },
            "example": "{ \"name\": \"Empty integration\", \"flow\": [ { \"id\": 2, \"module\": \"json:ParseJSON\", \"version\": 1, \"metadata\": { \"designer\": { \"x\": -46, \"y\": 47, \"messages\": [ { \"category\": \"last\", \"severity\": \"warning\", \"message\": \"A transformer should not be the last module in the route.\" } ] } } } ], \"metadata\": { \"version\": 1, \"scenario\": { \"roundtrips\": 1, \"maxErrors\": 3, \"autoCommit\": true, \"autoCommitTriggerLast\": true, \"sequential\": false, \"confidential\": false, \"dataloss\": false, \"dlq\": false, \"freshVariables\": false }, \"designer\": { \"orphans\": [ ] } } }",
            "required": false,
            "description": "The scenario blueprint. To save resources, the blueprint is sent as a string, not as an object."
          },
          {
            "name": "scheduling",
            "schema": {
              "type": "string",
              "description": "The scenario scheduling details. To save resources, the scheduling details are sent as a string, not as an object."
            },
            "example": "{ \"type\": \"indefinitely\", \"interval\": 900 }",
            "required": false,
            "description": "The scenario scheduling details. To save resources, the scheduling details are sent as a string, not as an object."
          },
          {
            "name": "folderId",
            "schema": {
              "type": "integer",
              "description": "The unique ID of the folder in which you want to store created scenario."
            },
            "example": 1,
            "required": false,
            "description": "The unique ID of the folder in which you want to store created scenario."
          },
          {
            "name": "name",
            "schema": {
              "type": "string",
              "description": "A new name of the scenario. The name does not need to be unique."
            },
            "example": "My New Integration",
            "required": false,
            "description": "A new name of the scenario. The name does not need to be unique."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "blueprint": {
                  "type": "string",
                  "description": "The scenario blueprint. To save resources, the blueprint is sent as a string, not as an object."
                },
                "scheduling": {
                  "type": "string",
                  "description": "The scenario scheduling details. To save resources, the scheduling details are sent as a string, not as an object."
                },
                "folderId": {
                  "type": "integer",
                  "description": "The unique ID of the folder in which you want to store created scenario."
                },
                "name": {
                  "type": "string",
                  "description": "A new name of the scenario. The name does not need to be unique."
                }
              }
            },
            "examples": {
              "update": {
                "summary": "Blueprint for scenario update",
                "x-expand": true,
                "value": {
                  "blueprint": "{ \"name\": \"Empty integration\", \"flow\": [ { \"id\": 2, \"module\": \"json:ParseJSON\", \"version\": 1, \"metadata\": { \"designer\": { \"x\": -46, \"y\": 47, \"messages\": [ { \"category\": \"last\", \"severity\": \"warning\", \"message\": \"A transformer should not be the last module in the route.\" } ] } } } ], \"metadata\": { \"version\": 1, \"scenario\": { \"roundtrips\": 1, \"maxErrors\": 3, \"autoCommit\": true, \"autoCommitTriggerLast\": true, \"sequential\": false, \"confidential\": false, \"dataloss\": false, \"dlq\": false, \"freshVariables\": false }, \"designer\": { \"orphans\": [ ] } } }",
                  "scheduling": "{ \"type\": \"indefinitely\", \"interval\": 900 }",
                  "folderId": 1,
                  "name": "My New Integration"
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Scenario was updated successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scenario": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "teamId": {
                        "type": "integer"
                      },
                      "hookId": {
                        "type": "integer"
                      },
                      "deviceId": {
                        "type": "integer"
                      },
                      "deviceScope": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "folderId": {
                        "type": "integer"
                      },
                      "isinvalid": {
                        "type": "boolean"
                      },
                      "islinked": {
                        "type": "boolean"
                      },
                      "islocked": {
                        "type": "boolean"
                      },
                      "isPaused": {
                        "type": "boolean"
                      },
                      "usedPackages": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "lastEdit": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "scheduling": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "interval": {
                            "type": "integer"
                          }
                        }
                      },
                      "iswaiting": {
                        "type": "boolean"
                      },
                      "dlqCount": {
                        "type": "integer"
                      },
                      "createdByUser": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          }
                        }
                      },
                      "updatedByUser": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          }
                        }
                      },
                      "nextExec": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "scenarioVersion": {
                        "type": "integer"
                      },
                      "moduleSequenceId": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "example": {
                "scenario": {
                  "id": 925,
                  "name": "New scenario",
                  "teamId": 215,
                  "hookId": null,
                  "deviceId": null,
                  "deviceScope": null,
                  "concept": false,
                  "description": "",
                  "folderId": null,
                  "isinvalid": false,
                  "islinked": false,
                  "islocked": false,
                  "isPaused": false,
                  "usedPackages": ["json"],
                  "lastEdit": "2021-09-22T06:40:56.692Z",
                  "scheduling": {
                    "type": "indefinitely",
                    "interval": 900
                  },
                  "iswaiting": false,
                  "dlqCount": 0,
                  "createdByUser": {
                    "id": 985,
                    "name": "John Doe",
                    "email": "j.doe@example.com"
                  },
                  "updatedByUser": {
                    "id": 986,
                    "name": "John Foo",
                    "email": "j.foo@example.com"
                  },
                  "nextExec": "2021-09-22T06:41:56.692Z"
                }
              }
            }
          }
        }
      },
      "examples": {
        "update": {
          "summary": "Blueprint for scenario update",
          "requestBody": {
            "blueprint": "{ \"name\": \"Empty integration\", \"flow\": [ { \"id\": 2, \"module\": \"json:ParseJSON\", \"version\": 1, \"metadata\": { \"designer\": { \"x\": -46, \"y\": 47, \"messages\": [ { \"category\": \"last\", \"severity\": \"warning\", \"message\": \"A transformer should not be the last module in the route.\" } ] } } } ], \"metadata\": { \"version\": 1, \"scenario\": { \"roundtrips\": 1, \"maxErrors\": 3, \"autoCommit\": true, \"autoCommitTriggerLast\": true, \"sequential\": false, \"confidential\": false, \"dataloss\": false, \"dlq\": false, \"freshVariables\": false }, \"designer\": { \"orphans\": [ ] } } }",
            "scheduling": "{ \"type\": \"indefinitely\", \"interval\": 900 }",
            "folderId": 1,
            "name": "My New Integration"
          },
          "response": {
            "scenario": {
              "id": 925,
              "name": "New scenario",
              "teamId": 215,
              "hookId": null,
              "deviceId": null,
              "deviceScope": null,
              "concept": false,
              "description": "",
              "folderId": null,
              "isinvalid": false,
              "islinked": false,
              "islocked": false,
              "isPaused": false,
              "usedPackages": ["json"],
              "lastEdit": "2021-09-22T06:40:56.692Z",
              "scheduling": {
                "type": "indefinitely",
                "interval": 900
              },
              "iswaiting": false,
              "dlqCount": 0,
              "createdByUser": {
                "id": 985,
                "name": "John Doe",
                "email": "j.doe@example.com"
              },
              "updatedByUser": {
                "id": 986,
                "name": "John Foo",
                "email": "j.foo@example.com"
              },
              "nextExec": "2021-09-22T06:41:56.692Z"
            }
          },
          "parameters": {
            "confirmed": true
          },
          "path": "/scenarios/112"
        }
      }
    },
    "scenarios-scenarioId-delete": {
      "endpointKey": "scenarios-scenarioId-delete",
      "path": "/scenarios/{scenarioId}",
      "method": "delete",
      "x-published": true,
      "tags": ["Scenarios"],
      "summary": "Delete scenario",
      "description": "Deletes a scenario with a given ID and returns the ID in the response.",
      "security": [
        {
          "token": ["scenarios:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "description": "The ID of the scenario. You can get the `scenarioId` with the [List scenarios](/scenarios-get) API call.",
            "name": "scenarioId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "example": 112,
            "required": true
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Scenario deleted successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scenario": {
                    "type": "integer"
                  }
                }
              },
              "example": {
                "scenario": 1399
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "scenario": 1399
          },
          "path": "/scenarios/112"
        }
      }
    },
    "scenarios-scenarioId-triggers-get": {
      "endpointKey": "scenarios-scenarioId-triggers-get",
      "path": "/scenarios/{scenarioId}/triggers",
      "method": "get",
      "x-published": true,
      "tags": ["Scenarios"],
      "summary": "Get trigger details",
      "description": "Retrieves properties of a trigger included in a scenario with a given ID. A trigger is a module that is able to return bundles that were newly added or updated (depending on the settings) since the last run of the scenario. An example of a trigger is a hook.",
      "security": [
        {
          "token": ["scenarios:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "description": "The ID of the scenario. You can get the `scenarioId` with the [List scenarios](/scenarios-get) API call.",
            "name": "scenarioId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "example": 112,
            "required": true
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "udid": {
                    "type": "string"
                  },
                  "scope": {
                    "type": "string"
                  },
                  "queueCount": {
                    "type": "integer"
                  },
                  "queueLimit": {
                    "type": "integer"
                  },
                  "typeName": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "flags": {
                    "type": "object"
                  }
                }
              },
              "example": {
                "id": 9765,
                "name": "WH1",
                "udid": "e7cq6zty4qcnq7fb83kzcdsgqniqtd5c",
                "scope": "hook",
                "queueCount": 0,
                "queueLimit": 100000,
                "typeName": "gateway-webhook",
                "type": "web",
                "flags": {},
                "url": "https://hook.make.com/e7cq6zty4qcnq7fb83kzcdsgqniqtd5c"
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "id": 9765,
            "name": "WH1",
            "udid": "e7cq6zty4qcnq7fb83kzcdsgqniqtd5c",
            "scope": "hook",
            "queueCount": 0,
            "queueLimit": 100000,
            "typeName": "gateway-webhook",
            "type": "web",
            "flags": {},
            "url": "https://hook.make.com/e7cq6zty4qcnq7fb83kzcdsgqniqtd5c"
          },
          "path": "/scenarios/112/triggers"
        }
      }
    },
    "scenarios-scenarioId-clone-post": {
      "endpointKey": "scenarios-scenarioId-clone-post",
      "path": "/scenarios/{scenarioId}/clone",
      "method": "post",
      "x-published": true,
      "tags": ["Scenarios"],
      "summary": "Clone scenario",
      "description": "Clones the specified scenario. The response contains all information about the scenario clone.\n\nYou have to know which app integrations the scenario contains. You can get a list of apps used in the scenario with the API call `GET /scenarios/{scenarioId}` in the `usedPackages` array.\n\nIf you are cloning the scenario to a different team and the scenario contains an app module, webhook or data store, you have to either:\n\n- map the entity ID to a different entity with the correct properties. For example, you can map an app module connection to a different connection of the same app with the same scopes, or\n - use the `notAnalyze` query parameter to turn off the scenario clone blueprint analysis.\n\nWhen you turn off the scenario blueprint analysis you can map the entity ID to the `null` value, which omits the entity settings.\n\nThe scenario blueprint analysis makes sure that the scenario clone will work without further changes. If you turn off the scenario blueprint analysis, check the configuration of all entities in the scenario clone.\n\nIf you are cloning the scenario to a different team and the scenario contains a custom app or a custom function, which is not available for the users in the team, use the `confirmed` query parameter to confirm cloning of the scenario. Otherwise, you get an error listing the custom function that you have to create in the team.\n\nRefer to the request body parameters description and examples for more information.",
      "security": [
        {
          "token": ["scenarios:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "description": "The ID of the scenario. You can get the `scenarioId` with the [List scenarios](/scenarios-get) API call.",
            "name": "scenarioId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "example": 112,
            "required": true
          }
        ],
        "query": [
          {
            "description": "The ID of the organization.",
            "required": true,
            "name": "organizationId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": 11
          },
          {
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "teamId",
                  "hookId",
                  "deviceId",
                  "deviceScope",
                  "description",
                  "folderId",
                  "isinvalid",
                  "islinked",
                  "islocked",
                  "isPaused",
                  "usedPackages",
                  "lastEdit",
                  "scheduling",
                  "iswaiting",
                  "dlqCount",
                  "createdByUser",
                  "updatedByUser",
                  "nextExec",
                  "scenarioVersion",
                  "moduleSequenceId"
                ]
              }
            },
            "description": "Specifies columns that are returned in the response. Use the `cols[]` parameter for every column that you want to return in the response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get both `key1` and `key2` columns in the response.\n\n[Check the \"Filtering\" section for a full example.](https://www.make.com/en/api-documentation/filtering)"
          },
          {
            "name": "confirmed",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "If the scenario contains a custom app or a custom function, that is not available in the team, you have to set the `confirmed` parameter to `true` to clone the scenario. Otherwise you get an error and the scenario is not cloned.",
            "examples": {
              "suppressBlueprintAnalysis": {
                "value": true
              }
            }
          },
          {
            "examples": {
              "suppressBlueprintAnalysis": {
                "value": true
              }
            },
            "name": "notAnalyze",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "If you are cloning a scenario to a different team, you have to map the scenario entities (connections, data stores, webhooks, ...) from the original to the clone. If you cannot map all of the scenario entities, set the `notAnalyze` parameter to `true` to suppress the scenario blueprint analysis."
          }
        ],
        "body": [
          {
            "name": "name",
            "schema": {
              "type": "string",
              "description": "The name for the scenario clone. The maximum length of the name is 120 characters."
            },
            "example": "Scenario clone",
            "required": true,
            "description": "The name for the scenario clone. The maximum length of the name is 120 characters."
          },
          {
            "name": "teamId",
            "schema": {
              "type": "integer",
              "description": "The ID of the team to which you want to clone the scenario."
            },
            "example": 20030,
            "required": true,
            "description": "The ID of the team to which you want to clone the scenario."
          },
          {
            "name": "account",
            "schema": {
              "description": "Specify pairs of original and clone connection IDs to map connections to the cloned scenario.",
              "type": "object",
              "patternProperties": {
                "^[0-9]+$": {
                  "type": ["string", "integer"]
                }
              }
            },
            "example": {
              "4400": 5564,
              "5500": 7542
            },
            "required": false,
            "description": "Specify pairs of original and clone connection IDs to map connections to the cloned scenario."
          },
          {
            "name": "key",
            "schema": {
              "description": "Specify pairs of original and clone key IDs to map keys to the cloned scenario.",
              "type": "object",
              "patternProperties": {
                "^[0-9]+$": {
                  "type": ["string", "integer"]
                }
              }
            },
            "example": {
              "4383": 465
            },
            "required": false,
            "description": "Specify pairs of original and clone key IDs to map keys to the cloned scenario."
          },
          {
            "name": "hook",
            "schema": {
              "description": "Specify pairs of original and clone hook IDs to map webhooks to the cloned scenario.",
              "type": "object",
              "patternProperties": {
                "^[0-9]+$": {
                  "type": ["string", "integer"]
                }
              }
            },
            "example": {
              "11899": 11900
            },
            "required": false,
            "description": "Specify pairs of original and clone hook IDs to map webhooks to the cloned scenario."
          },
          {
            "name": "device",
            "schema": {
              "description": "Specify pairs of original and clone device IDs to map devices to the cloned scenario.",
              "type": "object",
              "patternProperties": {
                "^[0-9]+$": {
                  "type": ["string", "integer"]
                }
              }
            },
            "example": {
              "432": 116
            },
            "required": false,
            "description": "Specify pairs of original and clone device IDs to map devices to the cloned scenario."
          },
          {
            "name": "udt",
            "schema": {
              "description": "Specify pairs of original and clone data structure IDs to map data structures to the cloned scenario.",
              "type": "object",
              "patternProperties": {
                "^[0-9]+$": {
                  "type": ["string", "integer"]
                }
              }
            },
            "example": {
              "4130": 5698
            },
            "required": false,
            "description": "Specify pairs of original and clone data structure IDs to map data structures to the cloned scenario."
          },
          {
            "name": "datastore",
            "schema": {
              "description": "Specify pairs of original and clone data store IDs to map data stores to the cloned scenario.",
              "type": "object",
              "patternProperties": {
                "^[0-9]+$": {
                  "type": ["string", "integer"]
                }
              }
            },
            "example": {
              "3572": 4587
            },
            "required": false,
            "description": "Specify pairs of original and clone data store IDs to map data stores to the cloned scenario."
          },
          {
            "name": "states",
            "schema": {
              "type": "boolean",
              "description": "Set to `true` to clone also states of the scenario modules, for example last scenario trigger execution. Setting to `false` resets the state information of the scenario modules in the scenario clone."
            },
            "example": true,
            "required": true,
            "description": "Set to `true` to clone also states of the scenario modules, for example last scenario trigger execution. Setting to `false` resets the state information of the scenario modules in the scenario clone."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name for the scenario clone. The maximum length of the name is 120 characters."
                },
                "teamId": {
                  "type": "integer",
                  "description": "The ID of the team to which you want to clone the scenario."
                },
                "account": {
                  "description": "Specify pairs of original and clone connection IDs to map connections to the cloned scenario.",
                  "type": "object",
                  "patternProperties": {
                    "^[0-9]+$": {
                      "type": ["string", "integer"]
                    }
                  }
                },
                "key": {
                  "description": "Specify pairs of original and clone key IDs to map keys to the cloned scenario.",
                  "type": "object",
                  "patternProperties": {
                    "^[0-9]+$": {
                      "type": ["string", "integer"]
                    }
                  }
                },
                "hook": {
                  "description": "Specify pairs of original and clone hook IDs to map webhooks to the cloned scenario.",
                  "type": "object",
                  "patternProperties": {
                    "^[0-9]+$": {
                      "type": ["string", "integer"]
                    }
                  }
                },
                "device": {
                  "description": "Specify pairs of original and clone device IDs to map devices to the cloned scenario.",
                  "type": "object",
                  "patternProperties": {
                    "^[0-9]+$": {
                      "type": ["string", "integer"]
                    }
                  }
                },
                "udt": {
                  "description": "Specify pairs of original and clone data structure IDs to map data structures to the cloned scenario.",
                  "type": "object",
                  "patternProperties": {
                    "^[0-9]+$": {
                      "type": ["string", "integer"]
                    }
                  }
                },
                "datastore": {
                  "description": "Specify pairs of original and clone data store IDs to map data stores to the cloned scenario.",
                  "type": "object",
                  "patternProperties": {
                    "^[0-9]+$": {
                      "type": ["string", "integer"]
                    }
                  }
                },
                "states": {
                  "type": "boolean",
                  "description": "Set to `true` to clone also states of the scenario modules, for example last scenario trigger execution. Setting to `false` resets the state information of the scenario modules in the scenario clone."
                }
              },
              "required": ["name", "teamId", "states"]
            },
            "examples": {
              "cloneScenario": {
                "summary": "Clone scenario",
                "description": "Clone the specified scenario to the team with the specified `teamId`.",
                "value": {
                  "name": "Scenario clone",
                  "teamId": 20030,
                  "states": true,
                  "account": {
                    "4400": 5564,
                    "5500": 7542
                  },
                  "key": {
                    "4383": 465
                  },
                  "hook": {
                    "11899": 11900
                  },
                  "device": {
                    "432": 116
                  },
                  "udt": {
                    "4130": 5698
                  },
                  "datastore": {
                    "3572": 4587
                  }
                }
              },
              "suppressBlueprintAnalysis": {
                "summary": "Suppress validation",
                "description": "Suppress scenario clone blueprint analysis to clone the scenario without mapping the connections, data stores or other scenario entities. \n\nIf you do not map all of the scenario entities to the scenario clone, you will have to edit the scenario manually.",
                "value": {
                  "name": "Scenario clone without connections",
                  "teamId": 20030,
                  "states": false,
                  "account": {
                    "4400": null,
                    "5500": null
                  },
                  "udt": {
                    "4131": 5700
                  },
                  "datastore": {
                    "3573": 4900
                  }
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scenario": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "teamId": {
                        "type": "integer"
                      },
                      "hookId": {
                        "type": "integer"
                      },
                      "deviceId": {
                        "type": "integer"
                      },
                      "deviceScope": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "folderId": {
                        "type": "integer"
                      },
                      "isinvalid": {
                        "type": "boolean"
                      },
                      "islinked": {
                        "type": "boolean"
                      },
                      "islocked": {
                        "type": "boolean"
                      },
                      "isPaused": {
                        "type": "boolean"
                      },
                      "usedPackages": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "lastEdit": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "scheduling": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "interval": {
                            "type": "integer"
                          }
                        }
                      },
                      "iswaiting": {
                        "type": "boolean"
                      },
                      "dlqCount": {
                        "type": "integer"
                      },
                      "createdByUser": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          }
                        }
                      },
                      "updatedByUser": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          }
                        }
                      },
                      "nextExec": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "scenarioVersion": {
                        "type": "integer"
                      },
                      "moduleSequenceId": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "examples": {
                "cloneScenario": {
                  "value": {
                    "id": 925,
                    "name": "Scenario clone",
                    "teamId": 20030,
                    "hookId": 11900,
                    "deviceId": 116,
                    "deviceScope": null,
                    "concept": false,
                    "description": "",
                    "folderId": null,
                    "isinvalid": false,
                    "islinked": false,
                    "islocked": false,
                    "isPaused": false,
                    "usedPackages": [
                      "gateway",
                      "airtable",
                      "datastore",
                      "google-sheets",
                      "util"
                    ],
                    "lastEdit": "2021-09-22T06:40:56.692Z",
                    "scheduling": {
                      "type": "indefinitely",
                      "interval": 900
                    },
                    "iswaiting": false,
                    "dlqCount": 0,
                    "createdByUser": {
                      "id": 985,
                      "name": "John Doe",
                      "email": "j.doe@example.com"
                    },
                    "updatedByUser": {
                      "id": 986,
                      "name": "John Foo",
                      "email": "j.foo@example.com"
                    },
                    "nextExec": "2021-09-22T06:41:56.692Z"
                  }
                },
                "suppressBlueprintAnalysis": {
                  "value": {
                    "id": 925,
                    "name": "Scenario clone without connections",
                    "teamId": 20030,
                    "hookId": null,
                    "deviceId": null,
                    "deviceScope": null,
                    "concept": false,
                    "description": "",
                    "folderId": null,
                    "isinvalid": false,
                    "islinked": false,
                    "islocked": false,
                    "isPaused": false,
                    "usedPackages": [
                      "airtable",
                      "datastore",
                      "google-sheets",
                      "util"
                    ],
                    "lastEdit": "2021-09-22T06:40:56.692Z",
                    "scheduling": {
                      "type": "indefinitely",
                      "interval": 900
                    },
                    "iswaiting": false,
                    "dlqCount": 0,
                    "createdByUser": {
                      "id": 985,
                      "name": "John Doe",
                      "email": "j.doe@example.com"
                    },
                    "updatedByUser": {
                      "id": 986,
                      "name": "John Foo",
                      "email": "j.foo@example.com"
                    },
                    "nextExec": "2021-09-22T06:41:56.692Z"
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "cloneScenario": {
          "summary": "Clone scenario",
          "response": {
            "id": 925,
            "name": "Scenario clone",
            "teamId": 20030,
            "hookId": 11900,
            "deviceId": 116,
            "deviceScope": null,
            "concept": false,
            "description": "",
            "folderId": null,
            "isinvalid": false,
            "islinked": false,
            "islocked": false,
            "isPaused": false,
            "usedPackages": [
              "gateway",
              "airtable",
              "datastore",
              "google-sheets",
              "util"
            ],
            "lastEdit": "2021-09-22T06:40:56.692Z",
            "scheduling": {
              "type": "indefinitely",
              "interval": 900
            },
            "iswaiting": false,
            "dlqCount": 0,
            "createdByUser": {
              "id": 985,
              "name": "John Doe",
              "email": "j.doe@example.com"
            },
            "updatedByUser": {
              "id": 986,
              "name": "John Foo",
              "email": "j.foo@example.com"
            },
            "nextExec": "2021-09-22T06:41:56.692Z"
          },
          "description": "Clone the specified scenario to the team with the specified `teamId`.",
          "requestBody": {
            "name": "Scenario clone",
            "teamId": 20030,
            "states": true,
            "account": {
              "4400": 5564,
              "5500": 7542
            },
            "key": {
              "4383": 465
            },
            "hook": {
              "11899": 11900
            },
            "device": {
              "432": 116
            },
            "udt": {
              "4130": 5698
            },
            "datastore": {
              "3572": 4587
            }
          },
          "parameters": {
            "organizationId": 11
          },
          "path": "/scenarios/112/clone"
        },
        "suppressBlueprintAnalysis": {
          "summary": "Suppress validation",
          "response": {
            "id": 925,
            "name": "Scenario clone without connections",
            "teamId": 20030,
            "hookId": null,
            "deviceId": null,
            "deviceScope": null,
            "concept": false,
            "description": "",
            "folderId": null,
            "isinvalid": false,
            "islinked": false,
            "islocked": false,
            "isPaused": false,
            "usedPackages": ["airtable", "datastore", "google-sheets", "util"],
            "lastEdit": "2021-09-22T06:40:56.692Z",
            "scheduling": {
              "type": "indefinitely",
              "interval": 900
            },
            "iswaiting": false,
            "dlqCount": 0,
            "createdByUser": {
              "id": 985,
              "name": "John Doe",
              "email": "j.doe@example.com"
            },
            "updatedByUser": {
              "id": 986,
              "name": "John Foo",
              "email": "j.foo@example.com"
            },
            "nextExec": "2021-09-22T06:41:56.692Z"
          },
          "description": "Suppress scenario clone blueprint analysis to clone the scenario without mapping the connections, data stores or other scenario entities. \n\nIf you do not map all of the scenario entities to the scenario clone, you will have to edit the scenario manually.",
          "requestBody": {
            "name": "Scenario clone without connections",
            "teamId": 20030,
            "states": false,
            "account": {
              "4400": null,
              "5500": null
            },
            "udt": {
              "4131": 5700
            },
            "datastore": {
              "3573": 4900
            }
          },
          "parameters": {
            "organizationId": 11,
            "confirmed": true,
            "notAnalyze": true
          },
          "path": "/scenarios/112/clone"
        }
      }
    },
    "scenarios-scenarioId-data-moduleId-get": {
      "endpointKey": "scenarios-scenarioId-data-moduleId-get",
      "path": "/scenarios/{scenarioId}/data/{moduleId}",
      "method": "get",
      "x-published": true,
      "tags": ["Scenarios"],
      "summary": "Check module data",
      "description": "Verifies whether the module data is set or not. This endpoint doesn't retrieve the module data.",
      "security": [
        {
          "token": ["scenarios:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "description": "The ID of the scenario. You can get the `scenarioId` with the [List scenarios](/scenarios-get) API call.",
            "name": "scenarioId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "example": 112,
            "required": true
          },
          {
            "description": "The unique ID of the scenario module. It is available in the scenario blueprint that can be retrieved from the [Get scenario blueprint](/scenarios-scenarioId-blueprint-get) endpoint.",
            "name": "moduleId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "example": 1,
            "required": true
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "exists": {
                    "type": "boolean"
                  }
                }
              },
              "example": {
                "exists": true
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "exists": true
          },
          "path": "/scenarios/112/data/1"
        }
      }
    },
    "scenarios-scenarioId-start-post": {
      "endpointKey": "scenarios-scenarioId-start-post",
      "path": "/scenarios/{scenarioId}/start",
      "method": "post",
      "x-published": true,
      "tags": ["Scenarios"],
      "summary": "Activate scenario",
      "description": "Activates the specified scenario. Also executes the scenario if the scenario is scheduled to run at regular intervals. Read more about [scenario scheduling](https://www.make.com/en/help/scenarios/scheduling-a-scenario).\n\nThe API call response contains the scenario ID and the scenario `isLinked` property set to `true`.",
      "security": [
        {
          "token": ["scenarios:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "description": "The ID of the scenario. You can get the `scenarioId` with the [List scenarios](/scenarios-get) API call.",
            "name": "scenarioId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "example": 112,
            "required": true
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scenario": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "islinked": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "example": {
                "scenario": {
                  "id": 5,
                  "islinked": true
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "scenario": {
              "id": 5,
              "islinked": true
            }
          },
          "path": "/scenarios/112/start"
        }
      }
    },
    "scenarios-scenarioId-stop-post": {
      "endpointKey": "scenarios-scenarioId-stop-post",
      "path": "/scenarios/{scenarioId}/stop",
      "method": "post",
      "x-published": true,
      "tags": ["Scenarios"],
      "summary": "Deactivate scenario",
      "description": "Deactivates and stops the specified scenario if the scenario is running. The API call response contains the scenario ID and the scenario `isLinked` property set to `false`.",
      "security": [
        {
          "token": ["scenarios:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "description": "The ID of the scenario. You can get the `scenarioId` with the [List scenarios](/scenarios-get) API call.",
            "name": "scenarioId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "example": 112,
            "required": true
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scenario": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "islinked": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "example": {
                "scenario": {
                  "id": 5,
                  "islinked": false
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "scenario": {
              "id": 5,
              "islinked": false
            }
          },
          "path": "/scenarios/112/stop"
        }
      }
    },
    "scenarios-scenarioId-run-post": {
      "endpointKey": "scenarios-scenarioId-run-post",
      "path": "/scenarios/{scenarioId}/run",
      "method": "post",
      "x-published": true,
      "tags": ["Scenarios"],
      "summary": "Run a scenario",
      "description": "Runs the specified scenario. The scenario has to be active. If your scenario has required scenario inputs you have to provide the scenario inputs in the request body.",
      "security": [
        {
          "token": ["scenarios:read", "scenarios:write", "scenarios:run"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "scenarioId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "description": "The ID of the scenario. Get the ID of the scenario with the API call `GET /scenarios`.",
            "example": 111
          }
        ],
        "query": [],
        "body": [
          {
            "name": "data",
            "schema": {
              "type": "object",
              "description": "If your scenario has inputs specify the input parameters and values in the `data` object."
            },
            "example": {
              "Test input": "Test value",
              "My array": ["test 1", "test 2"],
              "My collection": {
                "key": "value"
              }
            },
            "required": false,
            "description": "If your scenario has inputs specify the input parameters and values in the `data` object."
          },
          {
            "name": "responsive",
            "schema": {
              "type": "boolean",
              "description": "If set to `true` the Make API waits until the scenario finishes. The response contains the scenario `status` and `executionId`. If the scenario execution takes longer than 40 seconds, the API call returns the time out error, but the scenario is still executed.\n\nIf set to `false` the API call returns immediately without waiting. The response contains only the `executionId`.",
              "default": false
            },
            "example": false,
            "required": false,
            "description": "If set to `true` the Make API waits until the scenario finishes. The response contains the scenario `status` and `executionId`. If the scenario execution takes longer than 40 seconds, the API call returns the time out error, but the scenario is still executed.\n\nIf set to `false` the API call returns immediately without waiting. The response contains only the `executionId`."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "If your scenario has inputs specify the input parameters and values in the `data` object."
                },
                "responsive": {
                  "type": "boolean",
                  "description": "If set to `true` the Make API waits until the scenario finishes. The response contains the scenario `status` and `executionId`. If the scenario execution takes longer than 40 seconds, the API call returns the time out error, but the scenario is still executed.\n\nIf set to `false` the API call returns immediately without waiting. The response contains only the `executionId`.",
                  "default": false
                }
              }
            },
            "example": {
              "data": {
                "Test input": "Test value",
                "My array": ["test 1", "test 2"],
                "My collection": {
                  "key": "value"
                }
              },
              "responsive": false
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "executionId": {
                    "type": "string",
                    "description": "ID of the scenario execution."
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the scenario execution:\n\n- `1`: success\n - `2`: warning\n - `3`: error."
                  }
                }
              },
              "example": {
                "executionId": "9c4874979d974c3ebdef1e8aaa7dc452"
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "executionId": "9c4874979d974c3ebdef1e8aaa7dc452"
          },
          "requestBody": {
            "data": {
              "Test input": "Test value",
              "My array": ["test 1", "test 2"],
              "My collection": {
                "key": "value"
              }
            },
            "responsive": false
          },
          "path": "/scenarios/111/run"
        }
      }
    },
    "scenarios-scenarioId-interface-get": {
      "endpointKey": "scenarios-scenarioId-interface-get",
      "path": "/scenarios/{scenarioId}/interface",
      "method": "get",
      "x-published": true,
      "tags": ["Scenarios"],
      "summary": "Get scenario interface",
      "description": "Retrieves scenario inputs specification of the specified scenario. Check out the [scenario inputs documentation](https://www.make.com/en/help/scenarios/scenario-inputs) in the Make help center.\n\nThe scenario inputs feature requires your account to have the pricing plan **Pro** or higher. [Read more about Make pricing.](https://www.make.com/en/pricing)",
      "security": [
        {
          "token": ["scenarios:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "in": "path",
            "name": "scenarioId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the scenario. Get the list of scenarios with the API call `GET /scenarios`.",
            "example": 111
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "interface": {
                    "type": "object",
                    "properties": {
                      "input": {
                        "type": "object",
                        "properties": {
                          "parameters": {
                            "type": "array",
                            "items": {
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "maxLength": 128,
                                      "minLength": 1
                                    },
                                    "label": {
                                      "type": "string",
                                      "maxLength": 256,
                                      "minLength": 1
                                    },
                                    "help": {
                                      "type": "string",
                                      "minLength": 1
                                    },
                                    "type": {
                                      "type": "string",
                                      "maxLength": 64,
                                      "minLength": 1
                                    },
                                    "semantic": {
                                      "type": "string",
                                      "minLength": 1
                                    },
                                    "default": {
                                      "oneOf": [
                                        {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": null
                                          }
                                        },
                                        {
                                          "type": "boolean"
                                        },
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "null"
                                        },
                                        {
                                          "type": "number"
                                        },
                                        {
                                          "type": "object"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    },
                                    "advanced": {
                                      "type": "boolean"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "grouped": {
                                      "type": "boolean"
                                    },
                                    "multiline": {
                                      "type": "boolean"
                                    },
                                    "sort": {
                                      "type": "string"
                                    },
                                    "sequence": {
                                      "type": "boolean"
                                    },
                                    "tags": {
                                      "type": "string",
                                      "enum": ["strip", "stripall", "escape"]
                                    },
                                    "multiple": {
                                      "type": "boolean"
                                    },
                                    "mappable": {
                                      "oneOf": [
                                        {
                                          "type": "boolean"
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "enabled": {
                                              "type": "boolean"
                                            },
                                            "help": {
                                              "type": "string",
                                              "minLength": 1
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      ]
                                    },
                                    "time": {
                                      "type": "boolean"
                                    },
                                    "labels": {
                                      "type": "object"
                                    },
                                    "spec": {
                                      "oneOf": [
                                        {
                                          "parameter": {
                                            "type": "object",
                                            "properties": null
                                          }
                                        },
                                        {
                                          "parameters": {
                                            "type": "object",
                                            "properties": null
                                          }
                                        }
                                      ]
                                    },
                                    "codepage": {
                                      "type": "string"
                                    },
                                    "pattern": {
                                      "type": "string"
                                    },
                                    "nested": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "parameters": {
                                              "type": "array",
                                              "items": {
                                                "oneOf": [
                                                  {
                                                    "type": "string"
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "parameter": {
                                                        "type": "object",
                                                        "properties": null
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "store": {
                                              "oneOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "parameters": {
                                                      "type": "object",
                                                      "properties": {
                                                        "parameter": {
                                                          "type": "object",
                                                          "properties": null
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            "domain": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false,
                                          "required": ["store"]
                                        }
                                      ]
                                    },
                                    "options": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "label": {
                                                "type": "string",
                                                "maxLength": 256,
                                                "minLength": 1
                                              },
                                              "value": {
                                                "oneOf": [
                                                  {
                                                    "type": "array"
                                                  },
                                                  {
                                                    "type": "boolean"
                                                  },
                                                  {
                                                    "type": "integer"
                                                  },
                                                  {
                                                    "type": "null"
                                                  },
                                                  {
                                                    "type": "number"
                                                  },
                                                  {
                                                    "type": "object"
                                                  },
                                                  {
                                                    "type": "string"
                                                  }
                                                ]
                                              },
                                              "nested": {
                                                "oneOf": [
                                                  {
                                                    "type": "string"
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "parameters": {
                                                        "type": "array",
                                                        "items": {
                                                          "oneOf": [
                                                            {
                                                              "type": "string"
                                                            },
                                                            {
                                                              "type": "object",
                                                              "properties": {
                                                                "parameter": {
                                                                  "type": "object",
                                                                  "properties": null
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "store": {
                                                        "oneOf": [
                                                          {
                                                            "type": "string"
                                                          },
                                                          {
                                                            "type": "object",
                                                            "properties": {
                                                              "parameters": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "parameter": {
                                                                    "type": "object",
                                                                    "properties": null
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "domain": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "additionalProperties": false,
                                                    "required": ["store"]
                                                  }
                                                ]
                                              },
                                              "default": {
                                                "type": "boolean"
                                              },
                                              "short": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false,
                                            "required": ["value"]
                                          }
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "label": {
                                                "type": "string",
                                                "maxLength": 256,
                                                "minLength": 1
                                              },
                                              "options": {
                                                "oneOf": [
                                                  {
                                                    "type": "string"
                                                  },
                                                  {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": null
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            "additionalProperties": false,
                                            "required": ["label", "options"]
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "store": {
                                              "oneOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": null
                                                  }
                                                },
                                                {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "label": {
                                                        "type": "string",
                                                        "maxLength": 256,
                                                        "minLength": 1
                                                      },
                                                      "options": {
                                                        "oneOf": [
                                                          {
                                                            "type": "string"
                                                          },
                                                          {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": null
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    "additionalProperties": false,
                                                    "required": [
                                                      "label",
                                                      "options"
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            "label": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            },
                                            "default": {
                                              "type": "string"
                                            },
                                            "learning": {
                                              "type": "boolean"
                                            },
                                            "placeholder": {
                                              "oneOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "label": {
                                                      "type": "string"
                                                    },
                                                    "nested": {
                                                      "oneOf": [
                                                        {
                                                          "type": "string"
                                                        },
                                                        {
                                                          "type": "object",
                                                          "properties": {
                                                            "parameters": {
                                                              "type": "array",
                                                              "items": {
                                                                "oneOf": [
                                                                  {
                                                                    "type": "string"
                                                                  },
                                                                  {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "parameter": {
                                                                        "type": "object",
                                                                        "properties": null
                                                                      }
                                                                    }
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object",
                                                          "properties": {
                                                            "store": {
                                                              "oneOf": [
                                                                {
                                                                  "type": "string"
                                                                },
                                                                {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "parameters": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                        "parameter": {
                                                                          "type": "object",
                                                                          "properties": null
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "domain": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false,
                                                          "required": ["store"]
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              ]
                                            },
                                            "nested": {
                                              "oneOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "parameters": {
                                                      "type": "array",
                                                      "items": {
                                                        "oneOf": [
                                                          {
                                                            "type": "string"
                                                          },
                                                          {
                                                            "type": "object",
                                                            "properties": {
                                                              "parameter": {
                                                                "type": "object",
                                                                "properties": null
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "store": {
                                                      "oneOf": [
                                                        {
                                                          "type": "string"
                                                        },
                                                        {
                                                          "type": "object",
                                                          "properties": {
                                                            "parameters": {
                                                              "type": "object",
                                                              "properties": {
                                                                "parameter": {
                                                                  "type": "object",
                                                                  "properties": null
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "domain": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "additionalProperties": false,
                                                  "required": ["store"]
                                                }
                                              ]
                                            },
                                            "operators": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "label": {
                                                    "type": "string",
                                                    "maxLength": 256,
                                                    "minLength": 1
                                                  },
                                                  "options": {
                                                    "oneOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": null
                                                        }
                                                      }
                                                    ]
                                                  }
                                                },
                                                "additionalProperties": false,
                                                "required": ["label", "options"]
                                              }
                                            },
                                            "logic": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "oneOf": [
                                                {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            "ids": {
                                              "type": "boolean"
                                            },
                                            "showRoot": {
                                              "type": "boolean"
                                            },
                                            "singleLevel": {
                                              "type": "boolean"
                                            },
                                            "showSearcher": [
                                              {
                                                "type": "boolean"
                                              },
                                              {
                                                "type": "integer"
                                              }
                                            ]
                                          },
                                          "additionalProperties": false
                                        }
                                      ]
                                    },
                                    "extension": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      ]
                                    },
                                    "validate": {
                                      "oneOf": [
                                        {
                                          "type": "boolean"
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "max": {
                                              "type": "number"
                                            },
                                            "min": {
                                              "type": "number"
                                            },
                                            "pattern": {
                                              "type": "string"
                                            },
                                            "minItems": {
                                              "type": "integer"
                                            },
                                            "maxItems": {
                                              "type": "integer"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      ]
                                    },
                                    "omit": {
                                      "type": "boolean"
                                    },
                                    "collapsed": {
                                      "type": "boolean"
                                    },
                                    "disabled": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              ],
                              "additionalProperties": false,
                              "required": ["type"]
                            }
                          }
                        }
                      },
                      "output": {
                        "type": "object"
                      }
                    }
                  }
                }
              },
              "example": {
                "interface": {
                  "input": [
                    {
                      "name": "email",
                      "type": "text",
                      "default": null,
                      "required": false,
                      "multiline": false
                    }
                  ],
                  "output": null
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "interface": {
              "input": [
                {
                  "name": "email",
                  "type": "text",
                  "default": null,
                  "required": false,
                  "multiline": false
                }
              ],
              "output": null
            }
          },
          "path": "/scenarios/111/interface"
        }
      }
    },
    "scenarios-scenarioId-interface-patch": {
      "endpointKey": "scenarios-scenarioId-interface-patch",
      "path": "/scenarios/{scenarioId}/interface",
      "method": "patch",
      "x-published": true,
      "tags": ["Scenarios"],
      "summary": "Update scenario interface",
      "description": "Updates specification of the scenario inputs. Check out the [scenario inputs documentation](https://www.make.com/en/help/scenarios/scenario-inputs) in the Make help center.\n\nIf you want to enable the scenario inputs you have to set the scenario scheduling to \"On demand\" first, otherwise you get error 422 (IM016). You can use the API call:\n\n`PATCH /scenarios/{scenarioId}?confirmed=true`\n\nwith the request body:\n \n`{\"scheduling\": \"{\\\"type\\\":\\\"on-demand\\\"}\"}`\n\nYou can disable inputs for the specified scenario by sending a payload with an empty `input` array.\n\nThe response contains the updated scenario inputs specification.\n\nThe scenario inputs feature requires your account to have the pricing plan **Pro** or higher. [Read more about Make pricing.](https://www.make.com/en/pricing)",
      "security": {
        "token": ["scenarios:write"]
      },
      "parameters": {
        "path": [
          {
            "name": "scenarioId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the scenario. Get the list of scenarios with the API call `GET /scenarios`.",
            "example": 111
          }
        ],
        "query": [],
        "body": [
          {
            "name": "interface",
            "schema": {
              "type": "object",
              "description": "Contains the `input` array with specification of the scenario input parameters.",
              "properties": {
                "input": {
                  "type": "object",
                  "properties": {
                    "parameters": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "maxLength": 128,
                                "minLength": 1
                              },
                              "label": {
                                "type": "string",
                                "maxLength": 256,
                                "minLength": 1
                              },
                              "help": {
                                "type": "string",
                                "minLength": 1
                              },
                              "type": {
                                "type": "string",
                                "maxLength": 64,
                                "minLength": 1
                              },
                              "semantic": {
                                "type": "string",
                                "minLength": 1
                              },
                              "default": {
                                "oneOf": [
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": null
                                    }
                                  },
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "null"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "object"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ]
                              },
                              "advanced": {
                                "type": "boolean"
                              },
                              "required": {
                                "type": "boolean"
                              },
                              "grouped": {
                                "type": "boolean"
                              },
                              "multiline": {
                                "type": "boolean"
                              },
                              "sort": {
                                "type": "string"
                              },
                              "sequence": {
                                "type": "boolean"
                              },
                              "tags": {
                                "type": "string",
                                "enum": ["strip", "stripall", "escape"]
                              },
                              "multiple": {
                                "type": "boolean"
                              },
                              "mappable": {
                                "oneOf": [
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "enabled": {
                                        "type": "boolean"
                                      },
                                      "help": {
                                        "type": "string",
                                        "minLength": 1
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                ]
                              },
                              "time": {
                                "type": "boolean"
                              },
                              "labels": {
                                "type": "object"
                              },
                              "spec": {
                                "oneOf": [
                                  {
                                    "parameter": {
                                      "type": "object",
                                      "properties": null
                                    }
                                  },
                                  {
                                    "parameters": {
                                      "type": "object",
                                      "properties": null
                                    }
                                  }
                                ]
                              },
                              "codepage": {
                                "type": "string"
                              },
                              "pattern": {
                                "type": "string"
                              },
                              "nested": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "parameters": {
                                        "type": "array",
                                        "items": {
                                          "oneOf": [
                                            {
                                              "type": "string"
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "parameter": {
                                                  "type": "object",
                                                  "properties": null
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "store": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "parameters": {
                                                "type": "object",
                                                "properties": {
                                                  "parameter": {
                                                    "type": "object",
                                                    "properties": null
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "domain": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": ["store"]
                                  }
                                ]
                              },
                              "options": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "label": {
                                          "type": "string",
                                          "maxLength": 256,
                                          "minLength": 1
                                        },
                                        "value": {
                                          "oneOf": [
                                            {
                                              "type": "array"
                                            },
                                            {
                                              "type": "boolean"
                                            },
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "null"
                                            },
                                            {
                                              "type": "number"
                                            },
                                            {
                                              "type": "object"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ]
                                        },
                                        "nested": {
                                          "oneOf": [
                                            {
                                              "type": "string"
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "parameters": {
                                                  "type": "array",
                                                  "items": {
                                                    "oneOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "parameter": {
                                                            "type": "object",
                                                            "properties": null
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "store": {
                                                  "oneOf": [
                                                    {
                                                      "type": "string"
                                                    },
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "parameters": {
                                                          "type": "object",
                                                          "properties": {
                                                            "parameter": {
                                                              "type": "object",
                                                              "properties": null
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "domain": {
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false,
                                              "required": ["store"]
                                            }
                                          ]
                                        },
                                        "default": {
                                          "type": "boolean"
                                        },
                                        "short": {
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false,
                                      "required": ["value"]
                                    }
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "label": {
                                          "type": "string",
                                          "maxLength": 256,
                                          "minLength": 1
                                        },
                                        "options": {
                                          "oneOf": [
                                            {
                                              "type": "string"
                                            },
                                            {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": null
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "additionalProperties": false,
                                      "required": ["label", "options"]
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "store": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": null
                                            }
                                          },
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "label": {
                                                  "type": "string",
                                                  "maxLength": 256,
                                                  "minLength": 1
                                                },
                                                "options": {
                                                  "oneOf": [
                                                    {
                                                      "type": "string"
                                                    },
                                                    {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": null
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              "additionalProperties": false,
                                              "required": ["label", "options"]
                                            }
                                          }
                                        ]
                                      },
                                      "label": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "type": "string"
                                      },
                                      "default": {
                                        "type": "string"
                                      },
                                      "learning": {
                                        "type": "boolean"
                                      },
                                      "placeholder": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "label": {
                                                "type": "string"
                                              },
                                              "nested": {
                                                "oneOf": [
                                                  {
                                                    "type": "string"
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "parameters": {
                                                        "type": "array",
                                                        "items": {
                                                          "oneOf": [
                                                            {
                                                              "type": "string"
                                                            },
                                                            {
                                                              "type": "object",
                                                              "properties": {
                                                                "parameter": {
                                                                  "type": "object",
                                                                  "properties": null
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "store": {
                                                        "oneOf": [
                                                          {
                                                            "type": "string"
                                                          },
                                                          {
                                                            "type": "object",
                                                            "properties": {
                                                              "parameters": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "parameter": {
                                                                    "type": "object",
                                                                    "properties": null
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "domain": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "additionalProperties": false,
                                                    "required": ["store"]
                                                  }
                                                ]
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        ]
                                      },
                                      "nested": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "parameters": {
                                                "type": "array",
                                                "items": {
                                                  "oneOf": [
                                                    {
                                                      "type": "string"
                                                    },
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "parameter": {
                                                          "type": "object",
                                                          "properties": null
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "store": {
                                                "oneOf": [
                                                  {
                                                    "type": "string"
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "parameters": {
                                                        "type": "object",
                                                        "properties": {
                                                          "parameter": {
                                                            "type": "object",
                                                            "properties": null
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "domain": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false,
                                            "required": ["store"]
                                          }
                                        ]
                                      },
                                      "operators": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "label": {
                                              "type": "string",
                                              "maxLength": 256,
                                              "minLength": 1
                                            },
                                            "options": {
                                              "oneOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": null
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          "additionalProperties": false,
                                          "required": ["label", "options"]
                                        }
                                      },
                                      "logic": {
                                        "type": "string"
                                      },
                                      "scope": {
                                        "oneOf": [
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "ids": {
                                        "type": "boolean"
                                      },
                                      "showRoot": {
                                        "type": "boolean"
                                      },
                                      "singleLevel": {
                                        "type": "boolean"
                                      },
                                      "showSearcher": [
                                        {
                                          "type": "boolean"
                                        },
                                        {
                                          "type": "integer"
                                        }
                                      ]
                                    },
                                    "additionalProperties": false
                                  }
                                ]
                              },
                              "extension": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                ]
                              },
                              "validate": {
                                "oneOf": [
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "max": {
                                        "type": "number"
                                      },
                                      "min": {
                                        "type": "number"
                                      },
                                      "pattern": {
                                        "type": "string"
                                      },
                                      "minItems": {
                                        "type": "integer"
                                      },
                                      "maxItems": {
                                        "type": "integer"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                ]
                              },
                              "omit": {
                                "type": "boolean"
                              },
                              "collapsed": {
                                "type": "boolean"
                              },
                              "disabled": {
                                "type": "boolean"
                              }
                            }
                          }
                        ],
                        "additionalProperties": false,
                        "required": ["type"]
                      }
                    }
                  }
                },
                "output": {
                  "type": "object"
                }
              }
            },
            "example": {
              "input": [
                {
                  "name": "userName",
                  "type": "text",
                  "default": "John Doe",
                  "required": true,
                  "multiline": false
                },
                {
                  "name": "employeeID",
                  "type": "number",
                  "default": null,
                  "required": false
                },
                {
                  "name": "enabledApps_array",
                  "spec": {
                    "type": "text",
                    "default": "Salesforce",
                    "required": true,
                    "multiline": false
                  },
                  "type": "array"
                },
                {
                  "name": "myTestInput4_collection",
                  "spec": [
                    {
                      "name": "accountName",
                      "type": "text",
                      "default": "John Doe",
                      "required": true,
                      "multiline": false
                    },
                    {
                      "name": "accountID",
                      "type": "number",
                      "default": null,
                      "required": true
                    }
                  ],
                  "type": "collection"
                }
              ],
              "output": null
            },
            "required": false,
            "description": "Contains the `input` array with specification of the scenario input parameters."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "interface": {
                  "type": "object",
                  "description": "Contains the `input` array with specification of the scenario input parameters.",
                  "properties": {
                    "input": {
                      "type": "object",
                      "properties": {
                        "parameters": {
                          "type": "array",
                          "items": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "maxLength": 128,
                                    "minLength": 1
                                  },
                                  "label": {
                                    "type": "string",
                                    "maxLength": 256,
                                    "minLength": 1
                                  },
                                  "help": {
                                    "type": "string",
                                    "minLength": 1
                                  },
                                  "type": {
                                    "type": "string",
                                    "maxLength": 64,
                                    "minLength": 1
                                  },
                                  "semantic": {
                                    "type": "string",
                                    "minLength": 1
                                  },
                                  "default": {
                                    "oneOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": null
                                        }
                                      },
                                      {
                                        "type": "boolean"
                                      },
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "null"
                                      },
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "object"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "advanced": {
                                    "type": "boolean"
                                  },
                                  "required": {
                                    "type": "boolean"
                                  },
                                  "grouped": {
                                    "type": "boolean"
                                  },
                                  "multiline": {
                                    "type": "boolean"
                                  },
                                  "sort": {
                                    "type": "string"
                                  },
                                  "sequence": {
                                    "type": "boolean"
                                  },
                                  "tags": {
                                    "type": "string",
                                    "enum": ["strip", "stripall", "escape"]
                                  },
                                  "multiple": {
                                    "type": "boolean"
                                  },
                                  "mappable": {
                                    "oneOf": [
                                      {
                                        "type": "boolean"
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "enabled": {
                                            "type": "boolean"
                                          },
                                          "help": {
                                            "type": "string",
                                            "minLength": 1
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    ]
                                  },
                                  "time": {
                                    "type": "boolean"
                                  },
                                  "labels": {
                                    "type": "object"
                                  },
                                  "spec": {
                                    "oneOf": [
                                      {
                                        "parameter": {
                                          "type": "object",
                                          "properties": null
                                        }
                                      },
                                      {
                                        "parameters": {
                                          "type": "object",
                                          "properties": null
                                        }
                                      }
                                    ]
                                  },
                                  "codepage": {
                                    "type": "string"
                                  },
                                  "pattern": {
                                    "type": "string"
                                  },
                                  "nested": {
                                    "oneOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "parameters": {
                                            "type": "array",
                                            "items": {
                                              "oneOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "parameter": {
                                                      "type": "object",
                                                      "properties": null
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "store": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "parameters": {
                                                    "type": "object",
                                                    "properties": {
                                                      "parameter": {
                                                        "type": "object",
                                                        "properties": null
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "domain": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": ["store"]
                                      }
                                    ]
                                  },
                                  "options": {
                                    "oneOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "label": {
                                              "type": "string",
                                              "maxLength": 256,
                                              "minLength": 1
                                            },
                                            "value": {
                                              "oneOf": [
                                                {
                                                  "type": "array"
                                                },
                                                {
                                                  "type": "boolean"
                                                },
                                                {
                                                  "type": "integer"
                                                },
                                                {
                                                  "type": "null"
                                                },
                                                {
                                                  "type": "number"
                                                },
                                                {
                                                  "type": "object"
                                                },
                                                {
                                                  "type": "string"
                                                }
                                              ]
                                            },
                                            "nested": {
                                              "oneOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "parameters": {
                                                      "type": "array",
                                                      "items": {
                                                        "oneOf": [
                                                          {
                                                            "type": "string"
                                                          },
                                                          {
                                                            "type": "object",
                                                            "properties": {
                                                              "parameter": {
                                                                "type": "object",
                                                                "properties": null
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "store": {
                                                      "oneOf": [
                                                        {
                                                          "type": "string"
                                                        },
                                                        {
                                                          "type": "object",
                                                          "properties": {
                                                            "parameters": {
                                                              "type": "object",
                                                              "properties": {
                                                                "parameter": {
                                                                  "type": "object",
                                                                  "properties": null
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "domain": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "additionalProperties": false,
                                                  "required": ["store"]
                                                }
                                              ]
                                            },
                                            "default": {
                                              "type": "boolean"
                                            },
                                            "short": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false,
                                          "required": ["value"]
                                        }
                                      },
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "label": {
                                              "type": "string",
                                              "maxLength": 256,
                                              "minLength": 1
                                            },
                                            "options": {
                                              "oneOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": null
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          "additionalProperties": false,
                                          "required": ["label", "options"]
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "store": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": null
                                                }
                                              },
                                              {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "label": {
                                                      "type": "string",
                                                      "maxLength": 256,
                                                      "minLength": 1
                                                    },
                                                    "options": {
                                                      "oneOf": [
                                                        {
                                                          "type": "string"
                                                        },
                                                        {
                                                          "type": "array",
                                                          "items": {
                                                            "type": "object",
                                                            "properties": null
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "additionalProperties": false,
                                                  "required": [
                                                    "label",
                                                    "options"
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "label": {
                                            "type": "string"
                                          },
                                          "value": {
                                            "type": "string"
                                          },
                                          "default": {
                                            "type": "string"
                                          },
                                          "learning": {
                                            "type": "boolean"
                                          },
                                          "placeholder": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "label": {
                                                    "type": "string"
                                                  },
                                                  "nested": {
                                                    "oneOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "parameters": {
                                                            "type": "array",
                                                            "items": {
                                                              "oneOf": [
                                                                {
                                                                  "type": "string"
                                                                },
                                                                {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "parameter": {
                                                                      "type": "object",
                                                                      "properties": null
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "store": {
                                                            "oneOf": [
                                                              {
                                                                "type": "string"
                                                              },
                                                              {
                                                                "type": "object",
                                                                "properties": {
                                                                  "parameters": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "parameter": {
                                                                        "type": "object",
                                                                        "properties": null
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "domain": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "additionalProperties": false,
                                                        "required": ["store"]
                                                      }
                                                    ]
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            ]
                                          },
                                          "nested": {
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "parameters": {
                                                    "type": "array",
                                                    "items": {
                                                      "oneOf": [
                                                        {
                                                          "type": "string"
                                                        },
                                                        {
                                                          "type": "object",
                                                          "properties": {
                                                            "parameter": {
                                                              "type": "object",
                                                              "properties": null
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "store": {
                                                    "oneOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "parameters": {
                                                            "type": "object",
                                                            "properties": {
                                                              "parameter": {
                                                                "type": "object",
                                                                "properties": null
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "domain": {
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false,
                                                "required": ["store"]
                                              }
                                            ]
                                          },
                                          "operators": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "label": {
                                                  "type": "string",
                                                  "maxLength": 256,
                                                  "minLength": 1
                                                },
                                                "options": {
                                                  "oneOf": [
                                                    {
                                                      "type": "string"
                                                    },
                                                    {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": null
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              "additionalProperties": false,
                                              "required": ["label", "options"]
                                            }
                                          },
                                          "logic": {
                                            "type": "string"
                                          },
                                          "scope": {
                                            "oneOf": [
                                              {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "ids": {
                                            "type": "boolean"
                                          },
                                          "showRoot": {
                                            "type": "boolean"
                                          },
                                          "singleLevel": {
                                            "type": "boolean"
                                          },
                                          "showSearcher": [
                                            {
                                              "type": "boolean"
                                            },
                                            {
                                              "type": "integer"
                                            }
                                          ]
                                        },
                                        "additionalProperties": false
                                      }
                                    ]
                                  },
                                  "extension": {
                                    "oneOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    ]
                                  },
                                  "validate": {
                                    "oneOf": [
                                      {
                                        "type": "boolean"
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "max": {
                                            "type": "number"
                                          },
                                          "min": {
                                            "type": "number"
                                          },
                                          "pattern": {
                                            "type": "string"
                                          },
                                          "minItems": {
                                            "type": "integer"
                                          },
                                          "maxItems": {
                                            "type": "integer"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    ]
                                  },
                                  "omit": {
                                    "type": "boolean"
                                  },
                                  "collapsed": {
                                    "type": "boolean"
                                  },
                                  "disabled": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            ],
                            "additionalProperties": false,
                            "required": ["type"]
                          }
                        }
                      }
                    },
                    "output": {
                      "type": "object"
                    }
                  }
                }
              }
            },
            "examples": {
              "interface-update": {
                "summary": "Update scenario interface",
                "description": "Updates scenario inputs to the specification you provide in the request body.",
                "value": {
                  "interface": {
                    "input": [
                      {
                        "name": "userName",
                        "type": "text",
                        "default": "John Doe",
                        "required": true,
                        "multiline": false
                      },
                      {
                        "name": "employeeID",
                        "type": "number",
                        "default": null,
                        "required": false
                      },
                      {
                        "name": "enabledApps_array",
                        "spec": {
                          "type": "text",
                          "default": "Salesforce",
                          "required": true,
                          "multiline": false
                        },
                        "type": "array"
                      },
                      {
                        "name": "myTestInput4_collection",
                        "spec": [
                          {
                            "name": "accountName",
                            "type": "text",
                            "default": "John Doe",
                            "required": true,
                            "multiline": false
                          },
                          {
                            "name": "accountID",
                            "type": "number",
                            "default": null,
                            "required": true
                          }
                        ],
                        "type": "collection"
                      }
                    ],
                    "output": null
                  }
                }
              },
              "delete-interface": {
                "summary": "Disable scenario inputs",
                "description": "Disable scenario inputs for the specified scenario by sending empty `input` and `output` arrays in the request body.",
                "value": {
                  "interface": {
                    "input": "",
                    "output": ""
                  }
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "interface": {
                    "type": "object",
                    "properties": {
                      "input": {
                        "type": "object",
                        "properties": {
                          "parameters": {
                            "type": "array",
                            "items": {
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "maxLength": 128,
                                      "minLength": 1
                                    },
                                    "label": {
                                      "type": "string",
                                      "maxLength": 256,
                                      "minLength": 1
                                    },
                                    "help": {
                                      "type": "string",
                                      "minLength": 1
                                    },
                                    "type": {
                                      "type": "string",
                                      "maxLength": 64,
                                      "minLength": 1
                                    },
                                    "semantic": {
                                      "type": "string",
                                      "minLength": 1
                                    },
                                    "default": {
                                      "oneOf": [
                                        {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": null
                                          }
                                        },
                                        {
                                          "type": "boolean"
                                        },
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "null"
                                        },
                                        {
                                          "type": "number"
                                        },
                                        {
                                          "type": "object"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    },
                                    "advanced": {
                                      "type": "boolean"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "grouped": {
                                      "type": "boolean"
                                    },
                                    "multiline": {
                                      "type": "boolean"
                                    },
                                    "sort": {
                                      "type": "string"
                                    },
                                    "sequence": {
                                      "type": "boolean"
                                    },
                                    "tags": {
                                      "type": "string",
                                      "enum": ["strip", "stripall", "escape"]
                                    },
                                    "multiple": {
                                      "type": "boolean"
                                    },
                                    "mappable": {
                                      "oneOf": [
                                        {
                                          "type": "boolean"
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "enabled": {
                                              "type": "boolean"
                                            },
                                            "help": {
                                              "type": "string",
                                              "minLength": 1
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      ]
                                    },
                                    "time": {
                                      "type": "boolean"
                                    },
                                    "labels": {
                                      "type": "object"
                                    },
                                    "spec": {
                                      "oneOf": [
                                        {
                                          "parameter": {
                                            "type": "object",
                                            "properties": null
                                          }
                                        },
                                        {
                                          "parameters": {
                                            "type": "object",
                                            "properties": null
                                          }
                                        }
                                      ]
                                    },
                                    "codepage": {
                                      "type": "string"
                                    },
                                    "pattern": {
                                      "type": "string"
                                    },
                                    "nested": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "parameters": {
                                              "type": "array",
                                              "items": {
                                                "oneOf": [
                                                  {
                                                    "type": "string"
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "parameter": {
                                                        "type": "object",
                                                        "properties": null
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "store": {
                                              "oneOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "parameters": {
                                                      "type": "object",
                                                      "properties": {
                                                        "parameter": {
                                                          "type": "object",
                                                          "properties": null
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            "domain": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false,
                                          "required": ["store"]
                                        }
                                      ]
                                    },
                                    "options": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "label": {
                                                "type": "string",
                                                "maxLength": 256,
                                                "minLength": 1
                                              },
                                              "value": {
                                                "oneOf": [
                                                  {
                                                    "type": "array"
                                                  },
                                                  {
                                                    "type": "boolean"
                                                  },
                                                  {
                                                    "type": "integer"
                                                  },
                                                  {
                                                    "type": "null"
                                                  },
                                                  {
                                                    "type": "number"
                                                  },
                                                  {
                                                    "type": "object"
                                                  },
                                                  {
                                                    "type": "string"
                                                  }
                                                ]
                                              },
                                              "nested": {
                                                "oneOf": [
                                                  {
                                                    "type": "string"
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "parameters": {
                                                        "type": "array",
                                                        "items": {
                                                          "oneOf": [
                                                            {
                                                              "type": "string"
                                                            },
                                                            {
                                                              "type": "object",
                                                              "properties": {
                                                                "parameter": {
                                                                  "type": "object",
                                                                  "properties": null
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "store": {
                                                        "oneOf": [
                                                          {
                                                            "type": "string"
                                                          },
                                                          {
                                                            "type": "object",
                                                            "properties": {
                                                              "parameters": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "parameter": {
                                                                    "type": "object",
                                                                    "properties": null
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "domain": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "additionalProperties": false,
                                                    "required": ["store"]
                                                  }
                                                ]
                                              },
                                              "default": {
                                                "type": "boolean"
                                              },
                                              "short": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false,
                                            "required": ["value"]
                                          }
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "label": {
                                                "type": "string",
                                                "maxLength": 256,
                                                "minLength": 1
                                              },
                                              "options": {
                                                "oneOf": [
                                                  {
                                                    "type": "string"
                                                  },
                                                  {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": null
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            "additionalProperties": false,
                                            "required": ["label", "options"]
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "store": {
                                              "oneOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": null
                                                  }
                                                },
                                                {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "label": {
                                                        "type": "string",
                                                        "maxLength": 256,
                                                        "minLength": 1
                                                      },
                                                      "options": {
                                                        "oneOf": [
                                                          {
                                                            "type": "string"
                                                          },
                                                          {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": null
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    "additionalProperties": false,
                                                    "required": [
                                                      "label",
                                                      "options"
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            "label": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            },
                                            "default": {
                                              "type": "string"
                                            },
                                            "learning": {
                                              "type": "boolean"
                                            },
                                            "placeholder": {
                                              "oneOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "label": {
                                                      "type": "string"
                                                    },
                                                    "nested": {
                                                      "oneOf": [
                                                        {
                                                          "type": "string"
                                                        },
                                                        {
                                                          "type": "object",
                                                          "properties": {
                                                            "parameters": {
                                                              "type": "array",
                                                              "items": {
                                                                "oneOf": [
                                                                  {
                                                                    "type": "string"
                                                                  },
                                                                  {
                                                                    "type": "object",
                                                                    "properties": {
                                                                      "parameter": {
                                                                        "type": "object",
                                                                        "properties": null
                                                                      }
                                                                    }
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object",
                                                          "properties": {
                                                            "store": {
                                                              "oneOf": [
                                                                {
                                                                  "type": "string"
                                                                },
                                                                {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "parameters": {
                                                                      "type": "object",
                                                                      "properties": {
                                                                        "parameter": {
                                                                          "type": "object",
                                                                          "properties": null
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "domain": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "additionalProperties": false,
                                                          "required": ["store"]
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              ]
                                            },
                                            "nested": {
                                              "oneOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "parameters": {
                                                      "type": "array",
                                                      "items": {
                                                        "oneOf": [
                                                          {
                                                            "type": "string"
                                                          },
                                                          {
                                                            "type": "object",
                                                            "properties": {
                                                              "parameter": {
                                                                "type": "object",
                                                                "properties": null
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "store": {
                                                      "oneOf": [
                                                        {
                                                          "type": "string"
                                                        },
                                                        {
                                                          "type": "object",
                                                          "properties": {
                                                            "parameters": {
                                                              "type": "object",
                                                              "properties": {
                                                                "parameter": {
                                                                  "type": "object",
                                                                  "properties": null
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "domain": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "additionalProperties": false,
                                                  "required": ["store"]
                                                }
                                              ]
                                            },
                                            "operators": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "label": {
                                                    "type": "string",
                                                    "maxLength": 256,
                                                    "minLength": 1
                                                  },
                                                  "options": {
                                                    "oneOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": null
                                                        }
                                                      }
                                                    ]
                                                  }
                                                },
                                                "additionalProperties": false,
                                                "required": ["label", "options"]
                                              }
                                            },
                                            "logic": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "oneOf": [
                                                {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            "ids": {
                                              "type": "boolean"
                                            },
                                            "showRoot": {
                                              "type": "boolean"
                                            },
                                            "singleLevel": {
                                              "type": "boolean"
                                            },
                                            "showSearcher": [
                                              {
                                                "type": "boolean"
                                              },
                                              {
                                                "type": "integer"
                                              }
                                            ]
                                          },
                                          "additionalProperties": false
                                        }
                                      ]
                                    },
                                    "extension": {
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      ]
                                    },
                                    "validate": {
                                      "oneOf": [
                                        {
                                          "type": "boolean"
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "max": {
                                              "type": "number"
                                            },
                                            "min": {
                                              "type": "number"
                                            },
                                            "pattern": {
                                              "type": "string"
                                            },
                                            "minItems": {
                                              "type": "integer"
                                            },
                                            "maxItems": {
                                              "type": "integer"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      ]
                                    },
                                    "omit": {
                                      "type": "boolean"
                                    },
                                    "collapsed": {
                                      "type": "boolean"
                                    },
                                    "disabled": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              ],
                              "additionalProperties": false,
                              "required": ["type"]
                            }
                          }
                        }
                      },
                      "output": {
                        "type": "object"
                      }
                    }
                  }
                }
              },
              "examples": {
                "interface-update": {
                  "value": {
                    "interface": {
                      "input": [
                        {
                          "name": "userName",
                          "type": "text",
                          "default": "John Doe",
                          "required": true,
                          "multiline": false
                        },
                        {
                          "name": "employeeID",
                          "type": "number",
                          "default": null,
                          "required": false
                        },
                        {
                          "name": "enabledApps_array",
                          "spec": {
                            "type": "text",
                            "default": "Salesforce",
                            "required": true,
                            "multiline": false
                          },
                          "type": "array"
                        },
                        {
                          "name": "myTestInput4_collection",
                          "spec": [
                            {
                              "name": "accountName",
                              "type": "text",
                              "default": "John Doe",
                              "required": true,
                              "multiline": false
                            },
                            {
                              "name": "accountID",
                              "type": "number",
                              "default": null,
                              "required": true
                            }
                          ],
                          "type": "collection"
                        }
                      ],
                      "output": null
                    }
                  }
                },
                "delete-interface": {
                  "value": {
                    "interface": {
                      "input": null,
                      "output": null
                    }
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "interface-update": {
          "summary": "Update scenario interface",
          "response": {
            "interface": {
              "input": [
                {
                  "name": "userName",
                  "type": "text",
                  "default": "John Doe",
                  "required": true,
                  "multiline": false
                },
                {
                  "name": "employeeID",
                  "type": "number",
                  "default": null,
                  "required": false
                },
                {
                  "name": "enabledApps_array",
                  "spec": {
                    "type": "text",
                    "default": "Salesforce",
                    "required": true,
                    "multiline": false
                  },
                  "type": "array"
                },
                {
                  "name": "myTestInput4_collection",
                  "spec": [
                    {
                      "name": "accountName",
                      "type": "text",
                      "default": "John Doe",
                      "required": true,
                      "multiline": false
                    },
                    {
                      "name": "accountID",
                      "type": "number",
                      "default": null,
                      "required": true
                    }
                  ],
                  "type": "collection"
                }
              ],
              "output": null
            }
          },
          "description": "Updates scenario inputs to the specification you provide in the request body.",
          "requestBody": {
            "interface": {
              "input": [
                {
                  "name": "userName",
                  "type": "text",
                  "default": "John Doe",
                  "required": true,
                  "multiline": false
                },
                {
                  "name": "employeeID",
                  "type": "number",
                  "default": null,
                  "required": false
                },
                {
                  "name": "enabledApps_array",
                  "spec": {
                    "type": "text",
                    "default": "Salesforce",
                    "required": true,
                    "multiline": false
                  },
                  "type": "array"
                },
                {
                  "name": "myTestInput4_collection",
                  "spec": [
                    {
                      "name": "accountName",
                      "type": "text",
                      "default": "John Doe",
                      "required": true,
                      "multiline": false
                    },
                    {
                      "name": "accountID",
                      "type": "number",
                      "default": null,
                      "required": true
                    }
                  ],
                  "type": "collection"
                }
              ],
              "output": null
            }
          },
          "parameters": {},
          "path": "/scenarios/111/interface"
        },
        "delete-interface": {
          "summary": "Disable scenario inputs",
          "response": {
            "interface": {
              "input": null,
              "output": null
            }
          },
          "description": "Disable scenario inputs for the specified scenario by sending empty `input` and `output` arrays in the request body.",
          "requestBody": {
            "interface": {
              "input": "",
              "output": ""
            }
          },
          "parameters": {},
          "path": "/scenarios/111/interface"
        }
      }
    },
    "scenarios-scenarioId-logs-get": {
      "endpointKey": "scenarios-scenarioId-logs-get",
      "path": "/scenarios/{scenarioId}/logs",
      "method": "get",
      "x-published": true,
      "tags": ["Scenarios > Logs"],
      "summary": "List scenario logs",
      "description": "Retrieves a collection of all logs for a scenario with a given ID. Returned logs are sorted by `imtId` in descending order.",
      "security": [
        {
          "token": ["scenarios:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "description": "The ID of the scenario. You can get the `scenarioId` with the [List scenarios](/scenarios-get) API call.",
            "name": "scenarioId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "example": 112,
            "required": true
          }
        ],
        "query": [
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The timestamp in milliseconds that defines the starting point of time from which the logs should be retrieved. Older logs will not be returned.",
            "example": 1632395547
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The timestamp in milliseconds that defines the ending point of time to which the logs should be retrieved. Newer logs will not be returned.",
            "example": 1632395548
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "integer",
              "enum": [1, 2, 3]
            },
            "example": 2,
            "description": "Filters logs by the execution status. `1` is for success, `2` is for warning, and `3` is for error."
          },
          {
            "name": "showCheckRuns",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "example": true,
            "description": "If set to `true`, this parameter specifies that check runs should be hidden in the returned results. Check runs concern scenarios starting with a trigger in cases when the trigger does not find anything new."
          },
          {
            "name": "pg[offset]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The value of entities you want to skip before getting entities you need.",
            "default": 0
          },
          {
            "default": 10,
            "maximum": 50,
            "name": "pg[limit]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The value of maximum entities to return."
          },
          {
            "name": "pg[showLast]",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "example": true,
            "description": "Include records with `last` value in the result set. Just in case of the `last` based paging."
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "pg[last]",
            "in": "query",
            "example": 10,
            "description": "The last seen key. Only newer or older, depending on the sorting order, will be returned."
          },
          {
            "schema": {
              "type": "string",
              "enum": ["imtId"]
            },
            "description": "The value that will be used to sort returned entities by. Scenarios logs can be currently sorted only by `imtId`.",
            "default": "imtId",
            "name": "pg[sortBy]",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "default": "desc",
            "name": "pg[sortDir]",
            "in": "query",
            "description": "The sorting order. It accepts the ascending and descending direction specifiers."
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scenarioLogs": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "imtId": {
                          "type": "string"
                        },
                        "duration": {
                          "type": "integer"
                        },
                        "operations": {
                          "type": "integer"
                        },
                        "transfer": {
                          "type": "integer"
                        },
                        "organizationId": {
                          "type": "integer"
                        },
                        "teamId": {
                          "type": "integer"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "type": {
                          "type": "string"
                        },
                        "authorId": {
                          "type": "integer"
                        },
                        "instant": {
                          "type": "boolean"
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "status": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "pg": {
                    "type": "object",
                    "properties": {
                      "last": {
                        "type": "string",
                        "description": "Shown only when using the `last` based pagination."
                      },
                      "showLast": {
                        "type": "boolean",
                        "description": "Shown only when using the `last` based pagination."
                      },
                      "sortBy": {
                        "type": "string"
                      },
                      "sortDir": {
                        "type": "string"
                      },
                      "limit": {
                        "type": "integer"
                      },
                      "offset": {
                        "type": "integer",
                        "description": "Shown only when using the `offset` based pagination."
                      }
                    }
                  }
                }
              },
              "examples": {
                "scheduled": {
                  "summary": "Log of scheduled scenario",
                  "description": "Returns log of the scheduled scenario",
                  "value": {
                    "scenarioLogs": {
                      "imtId": "1632371744497_scenario.1229.auto.da518adcd14b4b64ac6358823ccb80ca",
                      "duration": 19979,
                      "operations": 10,
                      "transfer": 3942,
                      "organizationId": 21,
                      "teamId": 27,
                      "id": "da518adcd14b4b64ac6358823ccb80ca",
                      "type": "auto",
                      "authorId": null,
                      "instant": false,
                      "timestamp": "2021-09-23T04:35:44.497Z",
                      "status": 1
                    },
                    "pg": {
                      "sortBy": "imtId",
                      "sortDir": "desc",
                      "last": "1632371803593_scenario.1229.auto.3cf2f332f74f43f1b2c4ae431cbedb5b",
                      "showLast": false,
                      "limit": 50
                    }
                  }
                },
                "manual": {
                  "summary": "Log of manual scenario",
                  "description": "Returns log of the manual scenario",
                  "value": {
                    "scenarioLogs": {
                      "imtId": "1632398122946_scenario.5.manual.cc1c49323b344687a324888762206003",
                      "duration": 5611,
                      "operations": 2,
                      "transfer": 5,
                      "organizationId": 5,
                      "teamId": 16,
                      "id": "cc1c49323b344687a324888762206003",
                      "type": "manual",
                      "authorId": 5,
                      "instant": true,
                      "timestamp": "2021-09-23T11:55:22.946Z",
                      "status": 1
                    },
                    "pg": {
                      "sortBy": "imtId",
                      "sortDir": "desc",
                      "last": "1632371803593_scenario.1229.auto.3cf2f332f74f43f1b2c4ae431cbedb5b",
                      "showLast": false,
                      "limit": 50
                    }
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "scheduled": {
          "summary": "Log of scheduled scenario",
          "response": {
            "scenarioLogs": {
              "imtId": "1632371744497_scenario.1229.auto.da518adcd14b4b64ac6358823ccb80ca",
              "duration": 19979,
              "operations": 10,
              "transfer": 3942,
              "organizationId": 21,
              "teamId": 27,
              "id": "da518adcd14b4b64ac6358823ccb80ca",
              "type": "auto",
              "authorId": null,
              "instant": false,
              "timestamp": "2021-09-23T04:35:44.497Z",
              "status": 1
            },
            "pg": {
              "sortBy": "imtId",
              "sortDir": "desc",
              "last": "1632371803593_scenario.1229.auto.3cf2f332f74f43f1b2c4ae431cbedb5b",
              "showLast": false,
              "limit": 50
            }
          },
          "description": "Returns log of the scheduled scenario",
          "parameters": {
            "from": 1632395547,
            "to": 1632395548,
            "status": 2,
            "showCheckRuns": true,
            "pg[showLast]": true,
            "pg[last]": 10
          },
          "path": "/scenarios/112/logs"
        },
        "manual": {
          "summary": "Log of manual scenario",
          "response": {
            "scenarioLogs": {
              "imtId": "1632398122946_scenario.5.manual.cc1c49323b344687a324888762206003",
              "duration": 5611,
              "operations": 2,
              "transfer": 5,
              "organizationId": 5,
              "teamId": 16,
              "id": "cc1c49323b344687a324888762206003",
              "type": "manual",
              "authorId": 5,
              "instant": true,
              "timestamp": "2021-09-23T11:55:22.946Z",
              "status": 1
            },
            "pg": {
              "sortBy": "imtId",
              "sortDir": "desc",
              "last": "1632371803593_scenario.1229.auto.3cf2f332f74f43f1b2c4ae431cbedb5b",
              "showLast": false,
              "limit": 50
            }
          },
          "description": "Returns log of the manual scenario",
          "parameters": {
            "from": 1632395547,
            "to": 1632395548,
            "status": 2,
            "showCheckRuns": true,
            "pg[showLast]": true,
            "pg[last]": 10
          },
          "path": "/scenarios/112/logs"
        }
      }
    },
    "scenarios-scenarioId-logs-executionId-get": {
      "endpointKey": "scenarios-scenarioId-logs-executionId-get",
      "path": "/scenarios/{scenarioId}/logs/{executionId}",
      "method": "get",
      "x-published": true,
      "tags": ["Scenarios > Logs"],
      "summary": "Get execution log",
      "description": "Retrieves an execution log with a given ID for a scenario with a given ID. It returns the execution details such as execution duration, type, and status.",
      "security": [
        {
          "token": ["scenarios:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "description": "The ID of the scenario. You can get the `scenarioId` with the [List scenarios](/scenarios-get) API call.",
            "name": "scenarioId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "example": 112,
            "required": true
          },
          {
            "description": "The unique ID of the scenario execution. It can be retrieved from the [List scenario logs](/scenarios-scenarioId-logs-get) endpoint under the ID key.",
            "name": "executionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "cc1c49323b344687a324888762206003",
            "pattern": "^[0-9a-f]{32}$"
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Execution log retrieved",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scenarioLog": {
                    "type": "object",
                    "properties": {
                      "imtId": {
                        "type": "string"
                      },
                      "duration": {
                        "type": "integer"
                      },
                      "operations": {
                        "type": "integer"
                      },
                      "transfer": {
                        "type": "integer"
                      },
                      "organizationId": {
                        "type": "integer"
                      },
                      "teamId": {
                        "type": "integer"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "type": "string"
                      },
                      "authorId": {
                        "type": "integer"
                      },
                      "instant": {
                        "type": "boolean"
                      },
                      "timestamp": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "status": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "example": {
                "scenarioLogs": {
                  "imtId": "1632398122946_scenario.5.manual.cc1c49323b344687a324888762206003",
                  "duration": 5611,
                  "operations": 2,
                  "transfer": 5,
                  "organizationId": 5,
                  "teamId": 16,
                  "id": "cc1c49323b344687a324888762206003",
                  "type": "manual",
                  "authorId": 5,
                  "instant": true,
                  "timestamp": "2021-09-23T11:55:22.946Z",
                  "status": 1
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "scenarioLogs": {
              "imtId": "1632398122946_scenario.5.manual.cc1c49323b344687a324888762206003",
              "duration": 5611,
              "operations": 2,
              "transfer": 5,
              "organizationId": 5,
              "teamId": 16,
              "id": "cc1c49323b344687a324888762206003",
              "type": "manual",
              "authorId": 5,
              "instant": true,
              "timestamp": "2021-09-23T11:55:22.946Z",
              "status": 1
            }
          },
          "path": "/scenarios/112/logs/cc1c49323b344687a324888762206003"
        }
      }
    },
    "scenarios-scenarioId-blueprint-get": {
      "endpointKey": "scenarios-scenarioId-blueprint-get",
      "path": "/scenarios/{scenarioId}/blueprint",
      "method": "get",
      "x-published": true,
      "tags": ["Scenarios > Blueprints"],
      "summary": "Get scenario blueprint",
      "description": "Retrieves a blueprint of a scenario with a given ID.",
      "security": [
        {
          "token": ["scenarios:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "description": "The ID of the scenario. You can get the `scenarioId` with the [List scenarios](/scenarios-get) API call.",
            "name": "scenarioId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "example": 112,
            "required": true
          }
        ],
        "query": [
          {
            "name": "blueprintId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The unique ID of the blueprint version. It can be retrieved from the [Get blueprint versions](/scenarios-blueprints) endpoint. This parameter can be useful when you want to retrieve the older version of the blueprint.",
            "example": 12
          },
          {
            "name": "draft",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "If this parameter is set to `true`, the draft version of the scenario blueprint will be retrieved. If set to `false`, the live version of the blueprint will be retrieved. In case that the `blueprintId` parameter is set to the query as well, this parameter is ignored.",
            "example": false
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Blueprint retrieved",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "response": {
                    "type": "object",
                    "properties": {
                      "blueprint": {
                        "type": "object",
                        "properties": {
                          "flow": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "mapper": {
                                  "type": "object",
                                  "properties": {
                                    "ca": {
                                      "type": "string"
                                    },
                                    "qs": {
                                      "type": "array"
                                    },
                                    "url": {
                                      "type": "string",
                                      "format": "uri"
                                    },
                                    "gzip": {
                                      "type": "boolean"
                                    },
                                    "method": {
                                      "type": "string"
                                    },
                                    "headers": {
                                      "type": "array"
                                    },
                                    "timeout": {
                                      "type": "string"
                                    },
                                    "authPass": {
                                      "type": "string"
                                    },
                                    "authUser": {
                                      "type": "string"
                                    },
                                    "bodyType": {
                                      "type": "string"
                                    },
                                    "shareCookies": {
                                      "type": "boolean"
                                    },
                                    "parseResponse": {
                                      "type": "boolean"
                                    },
                                    "followRedirect": {
                                      "type": "boolean"
                                    },
                                    "useQuerystring": {
                                      "type": "boolean"
                                    },
                                    "rejectUnauthorized": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "module": {
                                  "type": "string",
                                  "format": "uri"
                                },
                                "onerror": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer"
                                      },
                                      "mapper": {
                                        "type": "object",
                                        "properties": {
                                          "count": {
                                            "type": "string",
                                            "format": "utc-millisec"
                                          },
                                          "retry": {
                                            "type": "boolean"
                                          },
                                          "interval": {
                                            "type": "string",
                                            "format": "utc-millisec"
                                          }
                                        }
                                      },
                                      "module": {
                                        "type": "string",
                                        "format": "uri"
                                      },
                                      "version": {
                                        "type": "integer"
                                      },
                                      "metadata": {
                                        "type": "object",
                                        "properties": {
                                          "expect": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "type": "string"
                                                },
                                                "label": {
                                                  "type": "string"
                                                },
                                                "required": {
                                                  "type": "boolean"
                                                }
                                              }
                                            }
                                          },
                                          "restore": {
                                            "type": "object",
                                            "properties": {
                                              "retry": {
                                                "type": "object",
                                                "properties": {
                                                  "mode": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "designer": {
                                            "type": "object",
                                            "properties": {
                                              "x": {
                                                "type": "integer"
                                              },
                                              "y": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "parameters": {
                                        "type": "object"
                                      }
                                    }
                                  }
                                },
                                "version": {
                                  "type": "integer"
                                },
                                "metadata": {
                                  "type": "object",
                                  "properties": {
                                    "expect": {
                                      "type": "array",
                                      "items": {
                                        "type": "object"
                                      }
                                    },
                                    "restore": {
                                      "type": "object",
                                      "properties": {
                                        "qs": {
                                          "type": "object",
                                          "properties": {
                                            "mode": {
                                              "type": "string"
                                            },
                                            "items": {
                                              "type": "array"
                                            }
                                          }
                                        },
                                        "method": {
                                          "type": "object",
                                          "properties": {
                                            "mode": {
                                              "type": "string"
                                            },
                                            "label": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "headers": {
                                          "type": "object",
                                          "properties": {
                                            "mode": {
                                              "type": "string"
                                            },
                                            "items": {
                                              "type": "array"
                                            }
                                          }
                                        },
                                        "bodyType": {
                                          "type": "object",
                                          "properties": {
                                            "label": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "designer": {
                                      "type": "object",
                                      "properties": {
                                        "x": {
                                          "type": "integer"
                                        },
                                        "y": {
                                          "type": "integer"
                                        }
                                      }
                                    },
                                    "parameters": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string"
                                          },
                                          "label": {
                                            "type": "string"
                                          },
                                          "required": {
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "parameters": {
                                  "type": "object",
                                  "properties": {
                                    "handleErrors": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "metadata": {
                            "type": "object",
                            "properties": {
                              "version": {
                                "type": "integer"
                              },
                              "scenario": {
                                "type": "object",
                                "properties": {
                                  "maxErrors": {
                                    "type": "integer"
                                  },
                                  "autoCommit": {
                                    "type": "boolean"
                                  },
                                  "roundtrips": {
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "scheduling": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "immediately",
                              "indefinitely",
                              "once",
                              "daily",
                              "weekly",
                              "monthly",
                              "yearly"
                            ]
                          },
                          "interval": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "between": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "format": "date-time"
                            }
                          },
                          "time": {
                            "type": "string",
                            "pattern": "^[0-2]?[0-9]:[0-5]?[0-9](:[0-5]?[0-9])?(\\\\.[0-9]+)?$"
                          },
                          "days": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "minimum": 0,
                              "maximum": 31
                            }
                          },
                          "months": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 12
                            }
                          },
                          "restrict": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "time": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "nullable": true,
                                    "pattern": "^[0-2]?[0-9]:[0-5]?[0-9](:[0-5]?[0-9])?(\\\\.[0-9]+)?$"
                                  }
                                },
                                "days": {
                                  "type": "array",
                                  "items": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 31
                                  }
                                },
                                "months": {
                                  "type": "array",
                                  "items": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "maximum": 12
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "idSequence": {
                        "type": "integer"
                      },
                      "created": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "last_edit": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              },
              "example": {
                "code": "OK",
                "response": {
                  "blueprint": {
                    "name": "Empty integration",
                    "flow": [
                      {
                        "id": 2,
                        "module": "json:ParseJSON",
                        "version": 1,
                        "metadata": {
                          "designer": {
                            "x": -46,
                            "y": 47,
                            "messages": [
                              {
                                "category": "last",
                                "severity": "warning",
                                "message": "A transformer should not be the last module in the route."
                              }
                            ]
                          }
                        }
                      }
                    ],
                    "metadata": {
                      "version": 1,
                      "scenario": {
                        "roundtrips": 1,
                        "maxErrors": 3,
                        "autoCommit": true,
                        "autoCommitTriggerLast": true,
                        "sequential": false,
                        "confidential": false,
                        "dataloss": false,
                        "dlq": false,
                        "freshVariables": false
                      },
                      "designer": {
                        "orphans": []
                      }
                    }
                  },
                  "scheduling": {
                    "type": "indefinitely",
                    "interval": 900
                  },
                  "idSequence": 4,
                  "created": "2021-09-22T09:28:41.129Z",
                  "last_edit": "2021-09-22T09:40:31.488Z"
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "code": "OK",
            "response": {
              "blueprint": {
                "name": "Empty integration",
                "flow": [
                  {
                    "id": 2,
                    "module": "json:ParseJSON",
                    "version": 1,
                    "metadata": {
                      "designer": {
                        "x": -46,
                        "y": 47,
                        "messages": [
                          {
                            "category": "last",
                            "severity": "warning",
                            "message": "A transformer should not be the last module in the route."
                          }
                        ]
                      }
                    }
                  }
                ],
                "metadata": {
                  "version": 1,
                  "scenario": {
                    "roundtrips": 1,
                    "maxErrors": 3,
                    "autoCommit": true,
                    "autoCommitTriggerLast": true,
                    "sequential": false,
                    "confidential": false,
                    "dataloss": false,
                    "dlq": false,
                    "freshVariables": false
                  },
                  "designer": {
                    "orphans": []
                  }
                }
              },
              "scheduling": {
                "type": "indefinitely",
                "interval": 900
              },
              "idSequence": 4,
              "created": "2021-09-22T09:28:41.129Z",
              "last_edit": "2021-09-22T09:40:31.488Z"
            }
          },
          "parameters": {
            "blueprintId": 12
          },
          "path": "/scenarios/112/blueprint"
        }
      }
    },
    "scenarios-scenarioId-blueprints-get": {
      "endpointKey": "scenarios-scenarioId-blueprints-get",
      "path": "/scenarios/{scenarioId}/blueprints",
      "method": "get",
      "x-published": true,
      "tags": ["Scenarios > Blueprints"],
      "summary": "Get blueprint versions",
      "description": "Retrieves a collection of all blueprints versions for a scenario with a given ID. Due to the regular archiving process, only the versions that are not older than 60 days can be retrieved. Each returned blueprint version consists of the date and time of the blueprint creation, IDs of the blueprint version and related scenario, and the information if the blueprint was created for the draft or live scenario version.",
      "security": [
        {
          "token": ["scenarios:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "description": "The ID of the scenario. You can get the `scenarioId` with the [List scenarios](/scenarios-get) API call.",
            "name": "scenarioId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "example": 112,
            "required": true
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Blueprints versions successfully retrieved",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scenariosBlueprints": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "created": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "version": {
                          "type": "integer"
                        },
                        "scenarioId": {
                          "type": "integer"
                        },
                        "draft": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "scenariosBlueprints": {
                  "created": "2021-08-25T17:48:07.360Z",
                  "version": 16,
                  "scenarioId": 424,
                  "draft": false
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "scenariosBlueprints": {
              "created": "2021-08-25T17:48:07.360Z",
              "version": 16,
              "scenarioId": 424,
              "draft": false
            }
          },
          "path": "/scenarios/112/blueprints"
        }
      }
    },
    "scenarios-consumptions-get": {
      "endpointKey": "scenarios-consumptions-get",
      "path": "/scenarios/consumptions",
      "method": "get",
      "x-published": true,
      "tags": ["Scenarios > Consumptions"],
      "summary": "List scenario consumptions",
      "description": "Retrieves a list of scenarios and their current consumptions. Make counts the number of consumed operations and transferred data according to your reset period.\n\nIf you have the monthly reset period, the response contains a list of scenarios that consumed at least one operation in the current reset period with their consumptions and data transfer.\n\n<div class=\"alert alert-warning\"> <p>If you have the yearly reset period, the response contains a list of scenarios that consumed at least one operation in the last 60 days, or from the last reset if that's shorter than 60 days.</p>\n<p>60 days after the reset the scenario consumptions turn into running totals over the last 60 days.</p>\n<p>For example, let's assume that you have a set of scenarios that consume 1000 operations every day. On the 61st day from your last reset, you would turn off a scenario that consumes 200 operations every day, turning your consumption to 800 operations per day.<p> \n<p>If you would have the yearly reset period and you would be tracking your scenario consumptions, you would get the following data:</p>\n<div itemscope itemtype=\"https://schema.org/FAQPage\"> <div class=\"card table\"> <table class=\"table\"> <thead> <tr> <th><strong class=\"text-nowrap\">Day</strong></th> <th><strong>Consumptions</strong></th> <th><strong>Delta</strong></th> </tr> </thead> <tbody> <tr> <td>1</td>  <td>1000</td> <td></td> </tr> <tr> <td>2</td> <td>2000</td> <td>1000</td> </tr> <tr> <td>3</td> <td>3000</td> <td>1000</td> </tr> <tr> <td>...</td> <td></td> <td></td> </tr> <tr> <td>60</td> <td>60000</td> <td>1000</td> </tr> <tr> <td>61</td> <td>59800</td> <td>-200</td> </tr> <tr> <td>62</td> <td>59600</td> <td>-200</td> </tr> </tbody> </table> </div> </div>\n<p>The negative difference between scenario consumptions on the 60th and 61st day happens because on the 61st day, the endpoint doesn't collect data from the first day anymore. Your scenario consumptions contain a total over the time period from the second day until the 61st day.</p>\n<p>For billing, Make uses a different system which ensures accurate billing.<p> </div>\n\nCheck the parameter `lastReset` in the response for the timestamp of the start of your current reset period. You can also view the end of your current restart period in your dashboard in the **Usage reset** field.\n\nSet the `organizationId` or `teamId` parameters to limit the results to a specific organization or team.",
      "security": [
        {
          "token": ["scenarios:read"]
        }
      ],
      "parameters": {
        "path": [],
        "query": [
          {
            "description": "The ID of the team.",
            "name": "teamId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "description": "The ID of the organization.",
            "name": "organizationId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": 11
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Retrieved a list of Consumptions",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scenarioConsumptions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "scenarioId": {
                          "type": "integer"
                        },
                        "operations": {
                          "type": "integer"
                        },
                        "transfer": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "lastReset": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "example": {
                "scenarioConsumptions": [
                  {
                    "scenarioId": 1128,
                    "operations": 9,
                    "transfer": 135
                  },
                  {
                    "scenarioId": 424,
                    "operations": 5,
                    "transfer": 143
                  }
                ],
                "lastReset": "2021-09-10T08:53:25.292Z"
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "scenarioConsumptions": [
              {
                "scenarioId": 1128,
                "operations": 9,
                "transfer": 135
              },
              {
                "scenarioId": 424,
                "operations": 5,
                "transfer": 143
              }
            ],
            "lastReset": "2021-09-10T08:53:25.292Z"
          },
          "parameters": {
            "teamId": 1,
            "organizationId": 11
          },
          "path": "/scenarios/consumptions"
        }
      }
    },
    "scenarios-folders-get": {
      "endpointKey": "scenarios-folders-get",
      "path": "/scenarios-folders",
      "method": "get",
      "x-published": true,
      "tags": ["Scenarios folders"],
      "summary": "List scenario folders",
      "description": "Retrieves a collection of all scenarios folders for a team with a given ID. Returned folders are sorted by name in ascending order.",
      "security": [
        {
          "token": ["scenarios:read"]
        }
      ],
      "parameters": {
        "path": [],
        "query": [
          {
            "description": "The unique ID of the team whose scenarios folders will be retrieved.",
            "required": true,
            "name": "teamId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "name": "cols[]",
            "in": "query",
            "description": "Specifies the group of values to return. For example, you may want to receive in response only the names and IDs of folders.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["id", "name", "scenariosTotal"]
              }
            },
            "default": ["id", "name", "scenariosTotal"]
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scenariosFolders": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "scenariosTotal": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "scenariosFolders": [
                  {
                    "id": 1576,
                    "name": "ALPHA",
                    "scenariosTotal": 10
                  }
                ]
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "scenariosFolders": [
              {
                "id": 1576,
                "name": "ALPHA",
                "scenariosTotal": 10
              }
            ]
          },
          "parameters": {
            "teamId": 1
          },
          "path": "/scenarios-folders"
        }
      }
    },
    "scenarios-folders-post": {
      "endpointKey": "scenarios-folders-post",
      "path": "/scenarios-folders",
      "method": "post",
      "x-published": true,
      "tags": ["Scenarios folders"],
      "summary": "Create scenario folder",
      "description": "Creates a new scenario folder with data passed in the request body. As the response, it returns all details of the created scenario folder.",
      "security": [
        {
          "token": ["scenarios:write"]
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the scenario folder. The name must be at most 100 characters long and does not need to be unique."
                },
                "teamId": {
                  "type": "integer",
                  "description": "The unique ID of the team in which the scenario folder will be created."
                }
              },
              "required": ["name", "teamId"]
            },
            "example": {
              "name": "ZULU",
              "teamId": 123
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Created a Folder",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scenarioFolder": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "scenariosTotal": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "example": {
                "scenarioFolder": {
                  "id": 1576,
                  "name": "ALPHA",
                  "scenariosTotal": 10
                }
              }
            }
          }
        }
      },
      "parameters": {
        "body": [
          {
            "name": "name",
            "schema": {
              "type": "string",
              "description": "The name of the scenario folder. The name must be at most 100 characters long and does not need to be unique."
            },
            "example": "ZULU",
            "required": true,
            "description": "The name of the scenario folder. The name must be at most 100 characters long and does not need to be unique."
          },
          {
            "name": "teamId",
            "schema": {
              "type": "integer",
              "description": "The unique ID of the team in which the scenario folder will be created."
            },
            "example": 123,
            "required": true,
            "description": "The unique ID of the team in which the scenario folder will be created."
          }
        ]
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "scenarioFolder": {
              "id": 1576,
              "name": "ALPHA",
              "scenariosTotal": 10
            }
          },
          "requestBody": {
            "name": "ZULU",
            "teamId": 123
          },
          "path": "/scenarios-folders"
        }
      }
    },
    "scenarios-folders-folderId-patch": {
      "endpointKey": "scenarios-folders-folderId-patch",
      "path": "/scenarios-folders/{folderId}",
      "method": "patch",
      "x-published": true,
      "tags": ["Scenarios folders"],
      "summary": "Update scenario folder",
      "description": "Updates a scenario folder with a given ID by passing new values in the request body. Any property that is not provided will be left unchanged. In the response, it returns all details of the updated folder including properties that were not changed.",
      "security": [
        {
          "token": ["scenarios:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "folderId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "description": "The unique ID of the scenario folder. It can be retrieved from the [List scenarios folders](/scenarios-folders-get) endpoint.",
            "example": 1,
            "required": true
          }
        ],
        "query": [
          {
            "name": "cols[]",
            "in": "query",
            "description": "Specifies the group of values to return. For example, you may want to receive in response only the names and IDs of folders.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["id", "name", "scenariosTotal"]
              }
            },
            "default": ["id", "name", "scenariosTotal"]
          }
        ],
        "body": [
          {
            "name": "name",
            "schema": {
              "type": "string",
              "description": "The name for the updated scenario folder. The name must be at most 100 characters long and does not need to be unique."
            },
            "example": "BRAVO",
            "required": false,
            "description": "The name for the updated scenario folder. The name must be at most 100 characters long and does not need to be unique."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name for the updated scenario folder. The name must be at most 100 characters long and does not need to be unique."
                }
              }
            },
            "example": {
              "name": "BRAVO"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Folder updated",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scenarioFolder": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "scenariosTotal": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "example": {
                "scenarioFolder": {
                  "id": 1576,
                  "name": "ALPHA",
                  "scenariosTotal": 10
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "scenarioFolder": {
              "id": 1576,
              "name": "ALPHA",
              "scenariosTotal": 10
            }
          },
          "requestBody": {
            "name": "BRAVO"
          },
          "path": "/scenarios-folders/1"
        }
      }
    },
    "scenarios-folders-folderId-delete": {
      "endpointKey": "scenarios-folders-folderId-delete",
      "path": "/scenarios-folders/{folderId}",
      "method": "delete",
      "x-published": true,
      "tags": ["Scenarios folders"],
      "summary": "Delete scenario folder",
      "description": "Deletes a scenario folder with a given ID and returns the ID in the response.",
      "security": [
        {
          "token": ["scenarios:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "folderId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "description": "The unique ID of the scenario folder. It can be retrieved from the [List scenarios folders](/scenarios-folders-get) endpoint.",
            "example": 1,
            "required": true
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scenarioFolder": {
                    "type": "integer"
                  }
                }
              },
              "example": {
                "scenarioFolder": 123
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "scenarioFolder": 123
          },
          "path": "/scenarios-folders/1"
        }
      }
    },
    "scenarios-scenarioId-custom-properties-get": {
      "endpointKey": "scenarios-scenarioId-custom-properties-get",
      "path": "/scenarios/{scenarioId}/custom-properties",
      "method": "get",
      "x-published": true,
      "tags": ["Scenarios > Custom properties data"],
      "summary": "Get custom properties data",
      "description": "Gets custom properties data of the specified scenario.",
      "security": [
        {
          "token": ["scenarios:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "scenarioId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the scenario.",
            "example": 22
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customProperties": {
                    "type": "object"
                  },
                  "scenarioId": {
                    "type": "number"
                  }
                }
              },
              "example": {
                "customProperties": {
                  "category": ["notifications", "routing"],
                  "customId": 45,
                  "location": "London, UK",
                  "companyTeam": "Product",
                  "description": "This scenario handles notifications for the Product team in London.",
                  "highPriority": true,
                  "performanceCheck": "2023-08-31T14:19:00.000Z"
                },
                "scenarioId": 22
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "customProperties": {
              "category": ["notifications", "routing"],
              "customId": 45,
              "location": "London, UK",
              "companyTeam": "Product",
              "description": "This scenario handles notifications for the Product team in London.",
              "highPriority": true,
              "performanceCheck": "2023-08-31T14:19:00.000Z"
            },
            "scenarioId": 22
          },
          "path": "/scenarios/22/custom-properties"
        }
      }
    },
    "scenarios-scenarioId-custom-properties-post": {
      "endpointKey": "scenarios-scenarioId-custom-properties-post",
      "path": "/scenarios/{scenarioId}/custom-properties",
      "method": "post",
      "x-published": true,
      "tags": ["Scenarios > Custom properties data"],
      "summary": "Fill in custom properties data",
      "description": "Fills in custom properties data for the specified scenario. The scenario has to have no custom properties data.\nThe data you fill in has to conform to the current custom scenario properties structure. You have to specify a value for every required item, otherwise you get an error.\nTo update existing data, use the following API calls:\n- [Update custom properties data](https://www.make.com/en/api-documentation/scenarios-scenarioId-custom-properties-patch)\n - [Set custom properties data](https://www.make.com/en/api-documentation/scenarios-scenarioId-custom-properties-put)\n\n",
      "security": [
        {
          "token": ["scenarios:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "scenarioId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the scenario.",
            "example": 80
          }
        ],
        "query": [],
        "body": []
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object"
            },
            "example": {
              "companyTeam": "marketing",
              "customId": 60,
              "performanceCheck": "2024-09-31T14:19:00.000Z",
              "category": ["eshop"],
              "highPriority": false,
              "location": "Chicago, US",
              "description": "Scenario for the Marketing team to share information with other stakeholders."
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customProperties": {
                    "type": "object"
                  },
                  "scenarioId": {
                    "type": "number"
                  }
                }
              },
              "example": {
                "customProperties": {
                  "category": ["eshop"],
                  "customId": 60,
                  "location": "Chicago, US",
                  "companyTeam": "marketing",
                  "description": "Scenario for the Marketing team to share information with other stakeholders.",
                  "highPriority": false,
                  "performanceCheck": "2024-10-01T14:19:00.000Z"
                },
                "scenarioId": 80
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "customProperties": {
              "category": ["eshop"],
              "customId": 60,
              "location": "Chicago, US",
              "companyTeam": "marketing",
              "description": "Scenario for the Marketing team to share information with other stakeholders.",
              "highPriority": false,
              "performanceCheck": "2024-10-01T14:19:00.000Z"
            },
            "scenarioId": 80
          },
          "requestBody": {
            "companyTeam": "marketing",
            "customId": 60,
            "performanceCheck": "2024-09-31T14:19:00.000Z",
            "category": ["eshop"],
            "highPriority": false,
            "location": "Chicago, US",
            "description": "Scenario for the Marketing team to share information with other stakeholders."
          },
          "path": "/scenarios/80/custom-properties"
        }
      }
    },
    "scenarios-scenarioId-custom-properties-patch": {
      "endpointKey": "scenarios-scenarioId-custom-properties-patch",
      "path": "/scenarios/{scenarioId}/custom-properties",
      "method": "patch",
      "x-published": true,
      "tags": ["Scenarios > Custom properties data"],
      "summary": "Update custom properties data",
      "description": "Updates custom properties data of the specified scenario. Make updates only the custom properties data you specify in the request body.\nThe custom property has to contain data already. The update data have to conform to the current custom scenario properties structure. If the initial value is empty, then the API call returns an error.\nTo fill in first values to the custom properties, use the API call to [fill in custom properties data](https://www.make.com/en/api-documentation/scenarios-scenarioId-custom-properties-post). ",
      "security": [
        {
          "token": ["scenarios:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "scenarioId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the scenario.",
            "example": 80
          }
        ],
        "query": [],
        "body": []
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object"
            },
            "examples": {
              "basic-example": {
                "summary": "Update item data",
                "description": "Update custom property item data. Make updates only the data you specify in the request body.",
                "value": {
                  "customId": 48,
                  "location": "Wien, AUS"
                }
              },
              "options-example": {
                "summary": "Update options",
                "description": "Update custom property item data from a list of options. If you specify a value that is not part of the list of available options, you get an error.",
                "value": {
                  "category": ["marketing", "engineering"]
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customProperties": {
                    "type": "object"
                  },
                  "scenarioId": {
                    "type": "number"
                  }
                }
              },
              "examples": {
                "basic-example": {
                  "value": {
                    "customProperties": {
                      "category": ["eshop", "products"],
                      "customId": 48,
                      "location": "Wien, AUS",
                      "companyTeam": "Product",
                      "description": "This scenario is handling notifications for the Product team in London.",
                      "highPriority": true,
                      "performanceCheck": "2023-08-31T14:19:00.000Z"
                    },
                    "scenarioId": 80
                  }
                },
                "options-example": {
                  "value": {
                    "customProperties": {
                      "category": ["marketing", "engineering"],
                      "customId": 46,
                      "location": "London, UK",
                      "companyTeam": "Product",
                      "description": "This scenario is handling notifications for the Product team in London.",
                      "highPriority": true,
                      "performanceCheck": "2023-08-31T14:19:00.000Z"
                    },
                    "scenarioId": 80
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "basic-example": {
          "summary": "Update item data",
          "response": {
            "customProperties": {
              "category": ["eshop", "products"],
              "customId": 48,
              "location": "Wien, AUS",
              "companyTeam": "Product",
              "description": "This scenario is handling notifications for the Product team in London.",
              "highPriority": true,
              "performanceCheck": "2023-08-31T14:19:00.000Z"
            },
            "scenarioId": 80
          },
          "description": "Update custom property item data. Make updates only the data you specify in the request body.",
          "requestBody": {
            "customId": 48,
            "location": "Wien, AUS"
          },
          "parameters": {},
          "path": "/scenarios/80/custom-properties"
        },
        "options-example": {
          "summary": "Update options",
          "response": {
            "customProperties": {
              "category": ["marketing", "engineering"],
              "customId": 46,
              "location": "London, UK",
              "companyTeam": "Product",
              "description": "This scenario is handling notifications for the Product team in London.",
              "highPriority": true,
              "performanceCheck": "2023-08-31T14:19:00.000Z"
            },
            "scenarioId": 80
          },
          "description": "Update custom property item data from a list of options. If you specify a value that is not part of the list of available options, you get an error.",
          "requestBody": {
            "category": ["marketing", "engineering"]
          },
          "parameters": {},
          "path": "/scenarios/80/custom-properties"
        }
      }
    },
    "scenarios-scenarioId-custom-properties-put": {
      "endpointKey": "scenarios-scenarioId-custom-properties-put",
      "path": "/scenarios/{scenarioId}/custom-properties",
      "method": "put",
      "x-published": true,
      "tags": ["Scenarios > Custom properties data"],
      "summary": "Set custom properties",
      "description": "Sets custom properties data for the specified scenario. Make replaces the original data with the data you send in the request body.\nYou have to specify a value for every required custom properties structure item, otherwise you get an error.\nThe scenario has to have custom property data already. The new data set has to conform to the current custom scenario properties structure. If the initial data is empty, then the API call returns an error.\nTo fill in first values to the custom properties, use the API call to [fill in custom properties data](https://www.make.com/en/api-documentation/scenarios-scenarioId-custom-properties-post). ",
      "security": [
        {
          "token": ["scenarios:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "scenarioId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the scenario.",
            "example": 80
          }
        ],
        "query": [],
        "body": []
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object"
            },
            "example": {
              "companyTeam": "engineering",
              "customId": 50,
              "performanceCheck": "2024-08-31T14:19:00.000Z",
              "category": ["notifications", "routing"],
              "highPriority": false,
              "location": "London, UK",
              "description": "Scenario for the London engineering team"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customProperties": {
                    "type": "object"
                  },
                  "scenarioId": {
                    "type": "number"
                  }
                }
              },
              "example": {
                "customProperties": {
                  "category": ["notifications", "routing"],
                  "customId": 50,
                  "location": "London, UK",
                  "companyTeam": "engineering",
                  "description": "Scenario for the London engineering team",
                  "highPriority": false,
                  "performanceCheck": "2024-08-31T14:19:00.000Z"
                },
                "scenarioId": 80
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "customProperties": {
              "category": ["notifications", "routing"],
              "customId": 50,
              "location": "London, UK",
              "companyTeam": "engineering",
              "description": "Scenario for the London engineering team",
              "highPriority": false,
              "performanceCheck": "2024-08-31T14:19:00.000Z"
            },
            "scenarioId": 80
          },
          "requestBody": {
            "companyTeam": "engineering",
            "customId": 50,
            "performanceCheck": "2024-08-31T14:19:00.000Z",
            "category": ["notifications", "routing"],
            "highPriority": false,
            "location": "London, UK",
            "description": "Scenario for the London engineering team"
          },
          "path": "/scenarios/80/custom-properties"
        }
      }
    },
    "scenarios-scenarioId-custom-properties-delete": {
      "endpointKey": "scenarios-scenarioId-custom-properties-delete",
      "path": "/scenarios/{scenarioId}/custom-properties",
      "method": "delete",
      "x-published": true,
      "tags": ["Scenarios > Custom properties data"],
      "summary": "Delete custom properties data",
      "description": "Deletes custom properties data. \nDeleting custom properties data is irreversible.\nUse the `confirmed` parameter to confirm deleting the data, otherwise you get an error and the data are not deleted.",
      "security": [
        {
          "token": ["scenarios:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "scenarioId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the scenario.",
            "example": 28
          }
        ],
        "query": [
          {
            "name": "confirmed",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ok": {
                    "type": "integer"
                  }
                }
              },
              "example": {
                "ok": 1
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "ok": 1
          },
          "parameters": {
            "confirmed": true
          },
          "path": "/scenarios/28/custom-properties"
        }
      }
    },
    "teams-get": {
      "endpointKey": "teams-get",
      "path": "/teams",
      "method": "get",
      "x-published": true,
      "tags": ["Teams"],
      "summary": "List teams",
      "description": "Gets the list of teams in the organization with specified `organizationId`.",
      "security": [
        {
          "token": ["teams:read"]
        }
      ],
      "parameters": {
        "path": [],
        "query": [
          {
            "name": "organizationId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "example": 1,
            "description": "The ID of the organization."
          },
          {
            "description": "Specifies columns that are returned in the response. Use the `cols[]` parameter for every column that you want to return in the response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get both `key1` and `key2` columns in the response.\n\n[Check the \"Filtering\" section for a full example.](https://www.make.com/en/api-documentation/filtering)",
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["id", "name", "organizationId"]
              }
            }
          },
          {
            "name": "pg[sortBy]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The value that will be used to sort returned entities by."
          },
          {
            "name": "pg[offset]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The value of entities you want to skip before getting entities you need.",
            "default": 0
          },
          {
            "name": "pg[sortDir]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "The sorting order. It accepts the ascending and descending direction specifiers."
          },
          {
            "name": "pg[limit]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The maximum entities to return."
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "teams": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "organizationId": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "pg": {
                    "type": "object",
                    "properties": {
                      "last": {
                        "type": "string"
                      },
                      "showLast": {
                        "type": "boolean"
                      },
                      "sortBy": {
                        "type": "string"
                      },
                      "sortDir": {
                        "type": "string"
                      },
                      "limit": {
                        "type": "integer"
                      },
                      "offset": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "example": {
                "teams": [
                  {
                    "id": 5,
                    "name": "My Team",
                    "organizationId": 5
                  }
                ],
                "pg": {
                  "sortBy": "name",
                  "sortDir": "asc",
                  "limit": 10000,
                  "offset": 0
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "teams": [
              {
                "id": 5,
                "name": "My Team",
                "organizationId": 5
              }
            ],
            "pg": {
              "sortBy": "name",
              "sortDir": "asc",
              "limit": 10000,
              "offset": 0
            }
          },
          "parameters": {
            "organizationId": 1
          },
          "path": "/teams"
        }
      }
    },
    "teams-post": {
      "endpointKey": "teams-post",
      "path": "/teams",
      "method": "post",
      "x-published": true,
      "tags": ["Teams"],
      "summary": "Create a team",
      "description": "Create a new team in the organization with the specified `organizationId`.",
      "security": [
        {
          "token": ["teams:write"]
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the team."
                },
                "organizationId": {
                  "type": "integer",
                  "description": "The ID of the organization."
                }
              },
              "required": ["name", "organizationId"]
            },
            "example": {
              "name": "New Team",
              "organizationId": 1
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "team": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "organizationId": {
                        "type": "integer"
                      }
                    }
                  },
                  "userTeamRole": {
                    "type": "object",
                    "properties": {
                      "usersRoleId": {
                        "type": "integer"
                      },
                      "userId": {
                        "type": "integer"
                      },
                      "teamId": {
                        "type": "integer"
                      },
                      "changeable": {
                        "type": "boolean"
                      },
                      "ssoPending": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "example": {
                "team": {
                  "id": 26,
                  "name": "New Team",
                  "organizationId": 1
                },
                "userTeamRole": {
                  "usersRoleId": 1,
                  "userId": 1,
                  "teamId": 26,
                  "changeable": false
                }
              }
            }
          }
        }
      },
      "parameters": {
        "body": [
          {
            "name": "name",
            "schema": {
              "type": "string",
              "description": "The name of the team."
            },
            "example": "New Team",
            "required": true,
            "description": "The name of the team."
          },
          {
            "name": "organizationId",
            "schema": {
              "type": "integer",
              "description": "The ID of the organization."
            },
            "example": 1,
            "required": true,
            "description": "The ID of the organization."
          }
        ]
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "team": {
              "id": 26,
              "name": "New Team",
              "organizationId": 1
            },
            "userTeamRole": {
              "usersRoleId": 1,
              "userId": 1,
              "teamId": 26,
              "changeable": false
            }
          },
          "requestBody": {
            "name": "New Team",
            "organizationId": 1
          },
          "path": "/teams"
        }
      }
    },
    "teams-teamId-get": {
      "endpointKey": "teams-teamId-get",
      "path": "/teams/{teamId}",
      "method": "get",
      "x-published": true,
      "tags": ["Teams"],
      "summary": "Get team details",
      "description": "Returns information about the team with the specified `teamId`.",
      "security": [
        {
          "token": ["teams:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "teamId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the team.",
            "example": 22
          }
        ],
        "query": [
          {
            "description": "Specifies columns that are returned in the response. Use the `cols[]` parameter for every column that you want to return in the response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get both `key1` and `key2` columns in the response.\n\n[Check the \"Filtering\" section for a full example.](https://www.make.com/en/api-documentation/filtering)",
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "organizationId",
                  "activeScenarios",
                  "activeApps",
                  "operations",
                  "transfer"
                ]
              }
            },
            "examples": {
              "all-cols": {
                "value": [
                  "id",
                  "name",
                  "organizationId",
                  "activeScenarios",
                  "activeApps",
                  "operations",
                  "transfer"
                ]
              }
            }
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "team": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "organizationId": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "examples": {
                "default-cols": {
                  "summary": "Get detail of a team",
                  "description": "Gets detail information about the specified team.",
                  "value": {
                    "team": {
                      "id": 1,
                      "name": "Team 1",
                      "organizationId": 1,
                      "scenarioDrafts": false
                    }
                  }
                },
                "all-cols": {
                  "summary": "Get all team data",
                  "description": "Gets all available information about the team.",
                  "value": {
                    "team": {
                      "id": 1,
                      "name": "Team 1",
                      "organizationId": 1,
                      "activeScenarios": 1,
                      "activeApps": 0,
                      "operations": "2015",
                      "transfer": "27914902"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "default-cols": {
          "summary": "Get detail of a team",
          "response": {
            "team": {
              "id": 1,
              "name": "Team 1",
              "organizationId": 1,
              "scenarioDrafts": false
            }
          },
          "description": "Gets detail information about the specified team.",
          "parameters": {},
          "path": "/teams/22"
        },
        "all-cols": {
          "summary": "Get all team data",
          "response": {
            "team": {
              "id": 1,
              "name": "Team 1",
              "organizationId": 1,
              "activeScenarios": 1,
              "activeApps": 0,
              "operations": "2015",
              "transfer": "27914902"
            }
          },
          "description": "Gets all available information about the team.",
          "parameters": {
            "cols[]": [
              "id",
              "name",
              "organizationId",
              "activeScenarios",
              "activeApps",
              "operations",
              "transfer"
            ]
          },
          "path": "/teams/22"
        }
      }
    },
    "teams-teamId-delete": {
      "endpointKey": "teams-teamId-delete",
      "path": "/teams/{teamId}",
      "method": "delete",
      "x-published": true,
      "tags": ["Teams"],
      "summary": "Delete a team",
      "description": "Deletes the team with the specified `teamId`. Make also deletes all data associated with the team, for example scenarios, webhooks or custom team variables.",
      "security": [
        {
          "token": ["teams:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "teamId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the team.",
            "example": 22
          }
        ],
        "query": [
          {
            "name": "confirmed",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "example": true,
            "description": "Set this parameter to `true` to confirm the team deletion. Otherwise, the API call returns an error and the team is not deleted."
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "team": {
                    "type": "integer"
                  }
                }
              },
              "example": {
                "team": 22
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "team": 22
          },
          "parameters": {
            "confirmed": true
          },
          "path": "/teams/22"
        }
      }
    },
    "teams-teamId-user-team-roles-get": {
      "endpointKey": "teams-teamId-user-team-roles-get",
      "path": "/teams/{teamId}/user-team-roles",
      "method": "get",
      "x-published": true,
      "tags": ["Teams > User team roles"],
      "summary": "List user roles in the team",
      "description": "Gets list of all users and their roles in the team with the specified `teamId`. Get all user role IDs with the API call `GET /users/roles`.",
      "security": [
        {
          "token": ["teams:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "teamId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the team.",
            "example": 22
          }
        ],
        "query": [
          {
            "description": "Specifies columns that are returned in the response. Use the `cols[]` parameter for every column that you want to return in the response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get both `key1` and `key2` columns in the response.\n\n[Check the \"Filtering\" section for a full example.](https://www.make.com/en/api-documentation/filtering)",
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "country",
                  "timezone",
                  "license",
                  "zone",
                  "serviceName",
                  "teams",
                  "ispaused"
                ]
              }
            }
          },
          {
            "name": "pg[sortBy]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The value that will be used to sort returned entities by."
          },
          {
            "name": "pg[offset]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The value of entities you want to skip before getting entities you need.",
            "default": 0
          },
          {
            "name": "pg[sortDir]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "The sorting order. It accepts the ascending and descending direction specifiers."
          },
          {
            "name": "pg[limit]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The maximum entities to return."
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userTeamRoles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "usersRoleId": {
                          "type": "integer"
                        },
                        "userId": {
                          "type": "integer"
                        },
                        "teamId": {
                          "type": "integer"
                        },
                        "changeable": {
                          "type": "boolean"
                        },
                        "ssoPending": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "userTeamRoles": [
                  {
                    "usersRoleId": 1,
                    "userId": 1,
                    "teamId": 1,
                    "changeable": false
                  },
                  {
                    "usersRoleId": 3,
                    "userId": 13,
                    "teamId": 1,
                    "changeable": true
                  }
                ]
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "userTeamRoles": [
              {
                "usersRoleId": 1,
                "userId": 1,
                "teamId": 1,
                "changeable": false
              },
              {
                "usersRoleId": 3,
                "userId": 13,
                "teamId": 1,
                "changeable": true
              }
            ]
          },
          "path": "/teams/22/user-team-roles"
        }
      }
    },
    "teams-teamId-user-team-roles-userId-get": {
      "endpointKey": "teams-teamId-user-team-roles-userId-get",
      "path": "/teams/{teamId}/user-team-roles/{userId}",
      "method": "get",
      "x-published": true,
      "tags": ["Teams > User team roles"],
      "summary": "Get user team role details",
      "description": "Retrieves information about user role in a team with the specified `userId` and `teamId`. Get all user role IDs with the API call `GET users/roles`.",
      "security": [
        {
          "token": ["teams:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "teamId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the team.",
            "example": 22
          },
          {
            "name": "userId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the user.",
            "example": 111
          }
        ],
        "query": [
          {
            "description": "Specifies columns that are returned in the response. Use the `cols[]` parameter for every column that you want to return in the response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get both `key1` and `key2` columns in the response.\n\n[Check the \"Filtering\" section for a full example.](https://www.make.com/en/api-documentation/filtering)",
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["usersRoleId", "userId", "teamId", "changeable"]
              }
            }
          },
          {
            "name": "pg[sortBy]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The value that will be used to sort returned entities by."
          },
          {
            "name": "pg[offset]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The value of entities you want to skip before getting entities you need.",
            "default": 0
          },
          {
            "name": "pg[sortDir]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "The sorting order. It accepts the ascending and descending direction specifiers."
          },
          {
            "name": "pg[limit]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The maximum entities to return."
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userTeamRole": {
                    "type": "object",
                    "properties": {
                      "usersRoleId": {
                        "type": "integer"
                      },
                      "userId": {
                        "type": "integer"
                      },
                      "teamId": {
                        "type": "integer"
                      },
                      "changeable": {
                        "type": "boolean"
                      },
                      "ssoPending": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "example": {
                "userTeamRole": {
                  "usersRoleId": 3,
                  "userId": 12,
                  "teamId": 1,
                  "changeable": true
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "userTeamRole": {
              "usersRoleId": 3,
              "userId": 12,
              "teamId": 1,
              "changeable": true
            }
          },
          "path": "/teams/22/user-team-roles/111"
        }
      }
    },
    "teams-teamId-variables-get": {
      "endpointKey": "teams-teamId-variables-get",
      "path": "/teams/{teamId}/variables",
      "method": "get",
      "x-published": true,
      "tags": ["Teams"],
      "summary": "List team variables",
      "description": "Retrieves the collection of team variables. The response contains all team variables if your account has the custom variables feature available. Otherwise, the response contains only Make system variables.\n\nCheck availability of the custom variables feature with the API call `GET /organizations/{organizationId}` for the organization to which the team belongs. If the response contains `\"customVariables\": true` pair in the `license` object then you have access to the custom variables feature.\n\nRefer to the [Make pricing page](https://www.make.com/en/help/general/pricing-parameters) for Make pricing plans overview.",
      "security": [
        {
          "token": ["team-variables:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "teamId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the team.",
            "example": 22
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "teamVariables": {
                    "type": "object",
                    "properties": {
                      "typeId": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "any"
                      },
                      "isSystem": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "example": {
                "teamVariables": {
                  "name": "userId",
                  "typeId": 1,
                  "value": 123,
                  "isSystem": false
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "teamVariables": {
              "name": "userId",
              "typeId": 1,
              "value": 123,
              "isSystem": false
            }
          },
          "path": "/teams/22/variables"
        }
      }
    },
    "teams-teamId-variables-post": {
      "endpointKey": "teams-teamId-variables-post",
      "path": "/teams/{teamId}/variables",
      "method": "post",
      "x-published": true,
      "tags": ["Teams"],
      "summary": "Create team variable",
      "description": "Creates new team variable. You can check the availability of the custom variables feature with the API call `GET /organizations/{organizationId}` for the organization to which the team belongs. If the API call response contains `\"customVariables\": true` pair in the `license` object then you have access to the custom variables feature.\n\nA successful response contains all information about the new variable. If you don't have the custom variables feature available then the API call returns the error 404.\n\nRefer to the [Make pricing page](https://www.make.com/en/help/general/pricing-parameters) for Make pricing plans overview.",
      "security": [
        {
          "token": ["team-variables:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "teamId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the team.",
            "example": 22
          }
        ],
        "query": [],
        "body": [
          {
            "name": "typeId",
            "schema": {
              "type": "number",
              "description": "Number representing the type of the custom variable. The mapping of `typeId` and variable types is as follows:\n\n- 1: `number`,\n - 2: `string`,\n - 3: `boolean`,\n - 4: `date`in ISO 8601 compliant format `YYYY-MM-DDTHH:mm:ss.sssZ`. For example: `1998-03-06T12:31:00.000Z`."
            },
            "example": 1,
            "required": false,
            "description": "Number representing the type of the custom variable. The mapping of `typeId` and variable types is as follows:\n\n- 1: `number`,\n - 2: `string`,\n - 3: `boolean`,\n - 4: `date`in ISO 8601 compliant format `YYYY-MM-DDTHH:mm:ss.sssZ`. For example: `1998-03-06T12:31:00.000Z`."
          },
          {
            "name": "value",
            "schema": {
              "type": "any",
              "description": "Value assigned to the custom variable."
            },
            "example": 123,
            "required": false,
            "description": "Value assigned to the custom variable."
          },
          {
            "name": "name",
            "schema": {
              "type": "string",
              "description": "The name of the variable. You can use letters, digits, `$` and `_` characters in the custom variable name."
            },
            "example": "userId",
            "required": false,
            "description": "The name of the variable. You can use letters, digits, `$` and `_` characters in the custom variable name."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "typeId": {
                  "type": "number",
                  "description": "Number representing the type of the custom variable. The mapping of `typeId` and variable types is as follows:\n\n- 1: `number`,\n - 2: `string`,\n - 3: `boolean`,\n - 4: `date`in ISO 8601 compliant format `YYYY-MM-DDTHH:mm:ss.sssZ`. For example: `1998-03-06T12:31:00.000Z`."
                },
                "value": {
                  "type": "any",
                  "description": "Value assigned to the custom variable."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the variable. You can use letters, digits, `$` and `_` characters in the custom variable name."
                }
              }
            },
            "example": {
              "typeId": 1,
              "value": 123,
              "name": "userId"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "teamVariable": {
                    "type": "object",
                    "properties": {
                      "typeId": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "any"
                      },
                      "isSystem": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "example": {
                "teamVariable": {
                  "name": "userId",
                  "typeId": 1,
                  "value": 123,
                  "isSystem": false
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "teamVariable": {
              "name": "userId",
              "typeId": 1,
              "value": 123,
              "isSystem": false
            }
          },
          "requestBody": {
            "typeId": 1,
            "value": 123,
            "name": "userId"
          },
          "path": "/teams/22/variables"
        }
      }
    },
    "teams-teamId-variables-variableName-patch": {
      "endpointKey": "teams-teamId-variables-variableName-patch",
      "path": "/teams/{teamId}/variables/{variableName}",
      "method": "patch",
      "x-published": true,
      "tags": ["Teams"],
      "summary": "Update team variable",
      "description": "Updates custom team variable with the specified variable `name`. Only parameters specified in the request body are updated.\n\nYou can check the availability of the custom variables feature with the API call `GET /organizations/{organizationId}` for the organization to which the team belongs. If the response contains `\"customVariables\": true` pair in the `license` object then you have access to the custom variables feature.\n\nA successful response contains all information about the updated variable. If you don't have the custom variables feature available then the API call returns the error 404.\n\nRefer to the [Make pricing page](https://www.make.com/en/help/general/pricing-parameters) for the Make pricing plans overview.\n\nUpdate the variable `typeId` accordingly when you are updating the variable `value`. Make checks whether the variable type and value match in the request body. There is no check for incorrect variable type when you update only variable value and _vice versa_.",
      "security": [
        {
          "token": ["team-variables:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "teamId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the team.",
            "example": 22
          },
          {
            "name": "variableName",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The name of the custom variable.",
            "example": "userID"
          }
        ],
        "query": [],
        "body": [
          {
            "name": "typeId",
            "schema": {
              "type": "number",
              "description": "Number representing the type of the custom variable. The mapping of `typeId` and variable types is as follows:\n\n- 1: `number`,\n - 2: `string`,\n - 3: `boolean`,\n - 4: `date`in ISO 8601 compliant format `YYYY-MM-DDTHH:mm:ss.sssZ`. For example: `1998-03-06T12:31:00.000Z`."
            },
            "required": false,
            "description": "Number representing the type of the custom variable. The mapping of `typeId` and variable types is as follows:\n\n- 1: `number`,\n - 2: `string`,\n - 3: `boolean`,\n - 4: `date`in ISO 8601 compliant format `YYYY-MM-DDTHH:mm:ss.sssZ`. For example: `1998-03-06T12:31:00.000Z`."
          },
          {
            "name": "value",
            "schema": {
              "type": "any",
              "description": "Value assigned to the custom variable."
            },
            "example": 221,
            "required": false,
            "description": "Value assigned to the custom variable."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "typeId": {
                  "type": "number",
                  "description": "Number representing the type of the custom variable. The mapping of `typeId` and variable types is as follows:\n\n- 1: `number`,\n - 2: `string`,\n - 3: `boolean`,\n - 4: `date`in ISO 8601 compliant format `YYYY-MM-DDTHH:mm:ss.sssZ`. For example: `1998-03-06T12:31:00.000Z`."
                },
                "value": {
                  "type": "any",
                  "description": "Value assigned to the custom variable."
                }
              }
            },
            "example": {
              "value": 221
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "teamVariable": {
                    "type": "object",
                    "properties": {
                      "typeId": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "any"
                      },
                      "isSystem": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "example": {
                "teamVariable": {
                  "name": "userId",
                  "typeId": 1,
                  "value": 251
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "teamVariable": {
              "name": "userId",
              "typeId": 1,
              "value": 251
            }
          },
          "requestBody": {
            "value": 221
          },
          "path": "/teams/22/variables/userID"
        }
      }
    },
    "teams-teamId-variables-variableName-delete": {
      "endpointKey": "teams-teamId-variables-variableName-delete",
      "path": "/teams/{teamId}/variables/{variableName}",
      "method": "delete",
      "x-published": true,
      "tags": ["Teams"],
      "summary": "Delete team variable",
      "description": "Deletes team variable.\n\nIf you don't have the custom variables feature available then the API call returns error 404. Check the availability of the custom variables feature with the API call `GET /organizations/{organizationId}` for the organization in which the team belongs. If the response contains `\"customVariables\": true` pair in the `license` object then you have access to the custom variables feature.\n\nRefer to the [Make pricing page](https://www.make.com/en/help/general/pricing-parameters) for Make pricing plans overview.",
      "security": [
        {
          "token": ["team-variables:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "teamId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the team.",
            "example": 22
          },
          {
            "name": "variableName",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The name of the custom variable.",
            "example": "userID"
          }
        ],
        "query": [
          {
            "name": "confirmed",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Set to `true` to confirm deleting the custom variable. Otherwise the API call fails with the error IM004 (406).",
            "example": true
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ok": {
                    "type": "integer"
                  }
                }
              },
              "example": {
                "ok": 1
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "ok": 1
          },
          "parameters": {
            "confirmed": true
          },
          "path": "/teams/22/variables/userID"
        }
      }
    },
    "teams-teamId-variables-variableName-history-get": {
      "endpointKey": "teams-teamId-variables-variableName-history-get",
      "path": "/teams/{teamId}/variables/{variableName}/history",
      "method": "get",
      "x-published": true,
      "tags": ["Teams"],
      "summary": "History of custom variable updates",
      "description": "Gets the history of updates of the specified custom variable. The response contains the ID value of the variable history entry and a `diffObject`. The `diffObject` contains:\n\n- the original value,\n - the new value,\n - the timestamp of the update,\n - the author of the update.\n\nIf the variable doesn't have any updates, the `diffObject` contains the current value of the variable instead of the original and new values.\n\nThe update history entries are sorted from newest to latest.",
      "security": [
        {
          "token": ["team-variables:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "teamId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the team.",
            "example": 22
          },
          {
            "name": "variableName",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The name of the custom variable.",
            "example": "userID"
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "teamVariableHistory": {
                    "type": "array",
                    "properties": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "diffObject": {
                              "type": "object",
                              "properties": {
                                "name": "string",
                                "value": "string",
                                "typeId": "integer"
                              }
                            },
                            "changed": {
                              "type": "date"
                            },
                            "action": {
                              "type": "string",
                              "description": "organization_variable_created or organization_variable_edited or team_variable_created or team_variable_edited"
                            },
                            "author": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "diffObject": {
                              "type": "object",
                              "properties": {
                                "name": "string",
                                "value": "string",
                                "typeId": "integer"
                              }
                            },
                            "changed": {
                              "type": "date"
                            },
                            "action": {
                              "type": "string"
                            },
                            "author": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "example": {
                "teamVariableHistory": [
                  {
                    "id": 1,
                    "diffObject": {
                      "name": "userId",
                      "value": 11,
                      "typeId": 1
                    },
                    "changed": "2022-08-02T09:37:05.364Z",
                    "action": "team_variable_created",
                    "author": "Jon Doe"
                  },
                  {
                    "id": 2,
                    "diffObject": {
                      "old": {
                        "value": 11,
                        "typeId": 1
                      },
                      "new": {
                        "value": 23,
                        "typeId": 1
                      }
                    },
                    "changed": "2022-08-02T09:37:05.364Z",
                    "action": "team_variable_edited",
                    "author": "Jon Doe"
                  }
                ]
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "teamVariableHistory": [
              {
                "id": 1,
                "diffObject": {
                  "name": "userId",
                  "value": 11,
                  "typeId": 1
                },
                "changed": "2022-08-02T09:37:05.364Z",
                "action": "team_variable_created",
                "author": "Jon Doe"
              },
              {
                "id": 2,
                "diffObject": {
                  "old": {
                    "value": 11,
                    "typeId": 1
                  },
                  "new": {
                    "value": 23,
                    "typeId": 1
                  }
                },
                "changed": "2022-08-02T09:37:05.364Z",
                "action": "team_variable_edited",
                "author": "Jon Doe"
              }
            ]
          },
          "path": "/teams/22/variables/userID/history"
        }
      }
    },
    "templates-get": {
      "endpointKey": "templates-get",
      "path": "/templates",
      "method": "get",
      "x-published": true,
      "tags": ["Templates"],
      "summary": "List templates",
      "description": "Retrieves a collection of all templates for a team with a given ID. Returned templates are sorted by ID in ascending order.",
      "security": [
        {
          "token": ["templates:read"]
        }
      ],
      "parameters": {
        "path": [],
        "query": [
          {
            "name": "teamId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The unique ID of the team whose templates will be retrieved.",
            "example": 1
          },
          {
            "name": "public",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Indicates if the template is public which means that it was published and approved, and can be accessed by anyone.",
            "example": true
          },
          {
            "name": "usedApps[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": ["http"],
            "description": "The array with the text IDs of the apps used in the templates. This parameter allows you to get only the templates containing specific apps."
          },
          {
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "teamId",
                  "description",
                  "usedApps",
                  "public",
                  "published",
                  "approved",
                  "approvedId",
                  "requestedApproval",
                  "publishedId",
                  "publicUrl",
                  "approvedName",
                  "publishedName"
                ]
              }
            },
            "description": "Specifies the group of values to return. For example, you may want to retrieve only the names and IDs of the templates."
          },
          {
            "name": "pg[sortBy]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The value that will be used to sort returned entities by.",
            "default": "id"
          },
          {
            "name": "pg[offset]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The value of entities you want to skip before getting entities you need.",
            "default": 0
          },
          {
            "name": "pg[sortDir]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "The sorting order. It accepts the ascending and descending direction specifiers.",
            "default": "desc"
          },
          {
            "name": "pg[limit]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The maximum entities to return.",
            "default": 10,
            "maximum": 10000
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "templates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "teamId": {
                          "type": "integer"
                        },
                        "teamName": {
                          "type": "string"
                        },
                        "organizationId": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "usedApps": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "public": {
                          "type": "boolean"
                        },
                        "published": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "approved": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "approvedId": {
                          "type": "integer"
                        },
                        "requestedApproval": {
                          "type": "boolean"
                        },
                        "publishedId": {
                          "type": "integer"
                        },
                        "publicUrl": {
                          "type": "string"
                        },
                        "approvedName": {
                          "type": "string"
                        },
                        "publishedName": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "pg": {
                    "type": "object",
                    "properties": {
                      "last": {
                        "type": "string"
                      },
                      "showLast": {
                        "type": "boolean"
                      },
                      "sortBy": {
                        "type": "string"
                      },
                      "sortDir": {
                        "type": "string"
                      },
                      "limit": {
                        "type": "integer"
                      },
                      "offset": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "example": {
                "templates": [
                  {
                    "id": 61,
                    "name": "Private",
                    "teamId": 1,
                    "description": "Template description",
                    "usedApps": ["http"],
                    "public": false,
                    "published": null,
                    "approved": null,
                    "approvedId": null,
                    "requestedApproval": false,
                    "publishedId": null,
                    "publicUrl": null,
                    "approvedName": null,
                    "publishedName": null
                  },
                  {
                    "id": 65,
                    "name": "Published",
                    "teamId": 1,
                    "description": null,
                    "usedApps": ["http"],
                    "public": true,
                    "published": "2020-12-01T14:14:53.807Z",
                    "approved": null,
                    "approvedId": null,
                    "requestedApproval": false,
                    "publishedId": 39,
                    "publicUrl": "39-published",
                    "approvedName": null,
                    "publishedName": "Published"
                  },
                  {
                    "id": 56,
                    "name": "Published, approved",
                    "teamId": 1,
                    "description": null,
                    "usedApps": ["http"],
                    "public": true,
                    "published": "2020-11-10T14:08:29.084Z",
                    "approved": "2020-12-03T09:44:55.685Z",
                    "approvedId": 35,
                    "requestedApproval": false,
                    "publishedId": null,
                    "publicUrl": "32-published-approved",
                    "approvedName": "Published, approved",
                    "publishedName": null
                  },
                  {
                    "id": 64,
                    "name": "Published, approved, waiting for approval",
                    "teamId": 1,
                    "description": null,
                    "usedApps": ["http"],
                    "public": true,
                    "published": "2020-12-01T15:18:31.790Z",
                    "approved": "2020-12-02T09:44:42.045Z",
                    "approvedId": 38,
                    "requestedApproval": true,
                    "publishedId": 40,
                    "publicUrl": "37-published-approved-waiting-for-approval",
                    "approvedName": "Published, approved, waiting for approval",
                    "publishedName": "Published, approved, waiting for approval"
                  },
                  {
                    "id": 62,
                    "name": "Published, waiting for approval",
                    "teamId": 1,
                    "description": null,
                    "usedApps": ["http"],
                    "public": true,
                    "published": "2020-11-23T12:22:36.495Z",
                    "approved": null,
                    "approvedId": null,
                    "requestedApproval": true,
                    "publishedId": 36,
                    "publicUrl": "36-published-waiting-for-approval",
                    "approvedName": null,
                    "publishedName": "Published, waiting for approval"
                  }
                ],
                "pg": {
                  "sortBy": "name",
                  "limit": 10,
                  "sortDir": "asc",
                  "offset": 0
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "templates": [
              {
                "id": 61,
                "name": "Private",
                "teamId": 1,
                "description": "Template description",
                "usedApps": ["http"],
                "public": false,
                "published": null,
                "approved": null,
                "approvedId": null,
                "requestedApproval": false,
                "publishedId": null,
                "publicUrl": null,
                "approvedName": null,
                "publishedName": null
              },
              {
                "id": 65,
                "name": "Published",
                "teamId": 1,
                "description": null,
                "usedApps": ["http"],
                "public": true,
                "published": "2020-12-01T14:14:53.807Z",
                "approved": null,
                "approvedId": null,
                "requestedApproval": false,
                "publishedId": 39,
                "publicUrl": "39-published",
                "approvedName": null,
                "publishedName": "Published"
              },
              {
                "id": 56,
                "name": "Published, approved",
                "teamId": 1,
                "description": null,
                "usedApps": ["http"],
                "public": true,
                "published": "2020-11-10T14:08:29.084Z",
                "approved": "2020-12-03T09:44:55.685Z",
                "approvedId": 35,
                "requestedApproval": false,
                "publishedId": null,
                "publicUrl": "32-published-approved",
                "approvedName": "Published, approved",
                "publishedName": null
              },
              {
                "id": 64,
                "name": "Published, approved, waiting for approval",
                "teamId": 1,
                "description": null,
                "usedApps": ["http"],
                "public": true,
                "published": "2020-12-01T15:18:31.790Z",
                "approved": "2020-12-02T09:44:42.045Z",
                "approvedId": 38,
                "requestedApproval": true,
                "publishedId": 40,
                "publicUrl": "37-published-approved-waiting-for-approval",
                "approvedName": "Published, approved, waiting for approval",
                "publishedName": "Published, approved, waiting for approval"
              },
              {
                "id": 62,
                "name": "Published, waiting for approval",
                "teamId": 1,
                "description": null,
                "usedApps": ["http"],
                "public": true,
                "published": "2020-11-23T12:22:36.495Z",
                "approved": null,
                "approvedId": null,
                "requestedApproval": true,
                "publishedId": 36,
                "publicUrl": "36-published-waiting-for-approval",
                "approvedName": null,
                "publishedName": "Published, waiting for approval"
              }
            ],
            "pg": {
              "sortBy": "name",
              "limit": 10,
              "sortDir": "asc",
              "offset": 0
            }
          },
          "parameters": {
            "teamId": 1,
            "public": true,
            "usedApps[]": ["http"]
          },
          "path": "/templates"
        }
      }
    },
    "templates-post": {
      "endpointKey": "templates-post",
      "path": "/templates",
      "method": "post",
      "x-published": true,
      "tags": ["Templates"],
      "summary": "Create template",
      "description": "Creates a new template with data passed in the request body. In the response, it returns all details of the created template.",
      "security": [
        {
          "token": ["templates:write"]
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "teamId": {
                  "type": "integer",
                  "description": "The unique numeric ID of the team in which the template will be created."
                },
                "language": {
                  "type": "string",
                  "description": "The language of the template determining in which language template details such as module names will be displayed. This property also impacts the visibility of the created template and cannot be changed later."
                },
                "blueprint": {
                  "type": "object",
                  "properties": {
                    "flow": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "mapper": {
                            "type": "object",
                            "properties": {
                              "ca": {
                                "type": "string"
                              },
                              "qs": {
                                "type": "array"
                              },
                              "url": {
                                "type": "string",
                                "format": "uri"
                              },
                              "gzip": {
                                "type": "boolean"
                              },
                              "method": {
                                "type": "string"
                              },
                              "headers": {
                                "type": "array"
                              },
                              "timeout": {
                                "type": "string"
                              },
                              "authPass": {
                                "type": "string"
                              },
                              "authUser": {
                                "type": "string"
                              },
                              "bodyType": {
                                "type": "string"
                              },
                              "shareCookies": {
                                "type": "boolean"
                              },
                              "parseResponse": {
                                "type": "boolean"
                              },
                              "followRedirect": {
                                "type": "boolean"
                              },
                              "useQuerystring": {
                                "type": "boolean"
                              },
                              "rejectUnauthorized": {
                                "type": "boolean"
                              }
                            }
                          },
                          "module": {
                            "type": "string",
                            "format": "uri"
                          },
                          "onerror": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "mapper": {
                                  "type": "object",
                                  "properties": {
                                    "count": {
                                      "type": "string",
                                      "format": "utc-millisec"
                                    },
                                    "retry": {
                                      "type": "boolean"
                                    },
                                    "interval": {
                                      "type": "string",
                                      "format": "utc-millisec"
                                    }
                                  }
                                },
                                "module": {
                                  "type": "string",
                                  "format": "uri"
                                },
                                "version": {
                                  "type": "integer"
                                },
                                "metadata": {
                                  "type": "object",
                                  "properties": {
                                    "expect": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string"
                                          },
                                          "label": {
                                            "type": "string"
                                          },
                                          "required": {
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    },
                                    "restore": {
                                      "type": "object",
                                      "properties": {
                                        "retry": {
                                          "type": "object",
                                          "properties": {
                                            "mode": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "designer": {
                                      "type": "object",
                                      "properties": {
                                        "x": {
                                          "type": "integer"
                                        },
                                        "y": {
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  }
                                },
                                "parameters": {
                                  "type": "object"
                                }
                              }
                            }
                          },
                          "version": {
                            "type": "integer"
                          },
                          "metadata": {
                            "type": "object",
                            "properties": {
                              "expect": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "restore": {
                                "type": "object",
                                "properties": {
                                  "qs": {
                                    "type": "object",
                                    "properties": {
                                      "mode": {
                                        "type": "string"
                                      },
                                      "items": {
                                        "type": "array"
                                      }
                                    }
                                  },
                                  "method": {
                                    "type": "object",
                                    "properties": {
                                      "mode": {
                                        "type": "string"
                                      },
                                      "label": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "headers": {
                                    "type": "object",
                                    "properties": {
                                      "mode": {
                                        "type": "string"
                                      },
                                      "items": {
                                        "type": "array"
                                      }
                                    }
                                  },
                                  "bodyType": {
                                    "type": "object",
                                    "properties": {
                                      "label": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "designer": {
                                "type": "object",
                                "properties": {
                                  "x": {
                                    "type": "integer"
                                  },
                                  "y": {
                                    "type": "integer"
                                  }
                                }
                              },
                              "parameters": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string"
                                    },
                                    "label": {
                                      "type": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "parameters": {
                            "type": "object",
                            "properties": {
                              "handleErrors": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    },
                    "name": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "integer"
                        },
                        "scenario": {
                          "type": "object",
                          "properties": {
                            "maxErrors": {
                              "type": "integer"
                            },
                            "autoCommit": {
                              "type": "boolean"
                            },
                            "roundtrips": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "The full blueprint of the scenario or template. It contains information about the general setup and all included apps and modules, and their settings."
                },
                "scheduling": {
                  "description": "The scheduling details of the template.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "immediately",
                        "indefinitely",
                        "once",
                        "daily",
                        "weekly",
                        "monthly",
                        "yearly"
                      ]
                    },
                    "interval": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "between": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "time": {
                      "type": "string",
                      "pattern": "^[0-2]?[0-9]:[0-5]?[0-9](:[0-5]?[0-9])?(\\\\.[0-9]+)?$"
                    },
                    "days": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 31
                      }
                    },
                    "months": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 12
                      }
                    },
                    "restrict": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "time": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "nullable": true,
                              "pattern": "^[0-2]?[0-9]:[0-5]?[0-9](:[0-5]?[0-9])?(\\\\.[0-9]+)?$"
                            }
                          },
                          "days": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "minimum": 0,
                              "maximum": 31
                            }
                          },
                          "months": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 12
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "controller": {
                  "description": "The controller of the template. This property refers to wizards that can be added to each module in the template from the Make interface. The wizards contain short instructions for other users explaining how to use the template step by step.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 120,
                      "minLength": 1
                    },
                    "description": {
                      "type": "string",
                      "maxLength": 1500,
                      "minLength": 0
                    },
                    "idSequence": {
                      "type": "integer"
                    },
                    "modules": {
                      "type": "object"
                    }
                  }
                }
              }
            },
            "example": {
              "teamId": 1,
              "language": "en",
              "blueprint": "{\"flow\":[{\"id\":1,\"module\":\"http:ActionGetFile\",\"version\":3,\"parameters\":{\"handleErrors\":false},\"mapper\":{\"url\":\"https://google.com\",\"method\":\"get\",\"shareCookies\":false},\"metadata\":{\"designer\":{\"x\":0,\"y\":0},\"parameters\":[{\"name\":\"handleErrors\",\"label\":\"Evaluate all states as errors (except for 2xx and 3xx )\",\"type\":\"boolean\",\"required\":true}],\"expect\":[{\"name\":\"url\",\"label\":\"URL\",\"type\":\"url\",\"required\":true},{\"name\":\"method\",\"label\":\"Method\",\"type\":\"hidden\"},{\"name\":\"shareCookies\",\"label\":\"Share cookies with other HTTP modules\",\"type\":\"boolean\",\"required\":true}]}}],\"metadata\":{\"version\":1,\"scenario\":{\"roundtrips\":1,\"maxErrors\":3,\"autoCommit\":true,\"autoCommitTriggerLast\":true,\"sequential\":false,\"confidential\":false,\"dataloss\":false,\"dlq\":false, \"freshVariables\": false},\"designer\":{\"orphans\":[]}}}",
              "scheduling": "{\"type\":\"indefinitely\",\"interval\":900}",
              "controller": "{\"modules\":{},\"name\":\"New template\",\"idSequence\":2}"
            }
          }
        }
      },
      "parameters": {
        "path": [],
        "query": [
          {
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "teamId",
                  "description",
                  "usedApps",
                  "public",
                  "published",
                  "approved",
                  "approvedId",
                  "requestedApproval",
                  "publishedId",
                  "publicUrl",
                  "approvedName",
                  "publishedName"
                ]
              }
            },
            "description": "Specifies the group of values to return. For example, you may want to retrieve only names and IDs of the newly created template.",
            "example": ["id", "name"]
          }
        ],
        "body": [
          {
            "name": "teamId",
            "schema": {
              "type": "integer",
              "description": "The unique numeric ID of the team in which the template will be created."
            },
            "example": 1,
            "required": false,
            "description": "The unique numeric ID of the team in which the template will be created."
          },
          {
            "name": "language",
            "schema": {
              "type": "string",
              "description": "The language of the template determining in which language template details such as module names will be displayed. This property also impacts the visibility of the created template and cannot be changed later."
            },
            "example": "en",
            "required": false,
            "description": "The language of the template determining in which language template details such as module names will be displayed. This property also impacts the visibility of the created template and cannot be changed later."
          },
          {
            "name": "blueprint",
            "schema": {
              "type": "object",
              "properties": {
                "flow": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "mapper": {
                        "type": "object",
                        "properties": {
                          "ca": {
                            "type": "string"
                          },
                          "qs": {
                            "type": "array"
                          },
                          "url": {
                            "type": "string",
                            "format": "uri"
                          },
                          "gzip": {
                            "type": "boolean"
                          },
                          "method": {
                            "type": "string"
                          },
                          "headers": {
                            "type": "array"
                          },
                          "timeout": {
                            "type": "string"
                          },
                          "authPass": {
                            "type": "string"
                          },
                          "authUser": {
                            "type": "string"
                          },
                          "bodyType": {
                            "type": "string"
                          },
                          "shareCookies": {
                            "type": "boolean"
                          },
                          "parseResponse": {
                            "type": "boolean"
                          },
                          "followRedirect": {
                            "type": "boolean"
                          },
                          "useQuerystring": {
                            "type": "boolean"
                          },
                          "rejectUnauthorized": {
                            "type": "boolean"
                          }
                        }
                      },
                      "module": {
                        "type": "string",
                        "format": "uri"
                      },
                      "onerror": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "mapper": {
                              "type": "object",
                              "properties": {
                                "count": {
                                  "type": "string",
                                  "format": "utc-millisec"
                                },
                                "retry": {
                                  "type": "boolean"
                                },
                                "interval": {
                                  "type": "string",
                                  "format": "utc-millisec"
                                }
                              }
                            },
                            "module": {
                              "type": "string",
                              "format": "uri"
                            },
                            "version": {
                              "type": "integer"
                            },
                            "metadata": {
                              "type": "object",
                              "properties": {
                                "expect": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "label": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    }
                                  }
                                },
                                "restore": {
                                  "type": "object",
                                  "properties": {
                                    "retry": {
                                      "type": "object",
                                      "properties": {
                                        "mode": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "designer": {
                                  "type": "object",
                                  "properties": {
                                    "x": {
                                      "type": "integer"
                                    },
                                    "y": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              }
                            },
                            "parameters": {
                              "type": "object"
                            }
                          }
                        }
                      },
                      "version": {
                        "type": "integer"
                      },
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "expect": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "restore": {
                            "type": "object",
                            "properties": {
                              "qs": {
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string"
                                  },
                                  "items": {
                                    "type": "array"
                                  }
                                }
                              },
                              "method": {
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string"
                                  },
                                  "label": {
                                    "type": "string"
                                  }
                                }
                              },
                              "headers": {
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string"
                                  },
                                  "items": {
                                    "type": "array"
                                  }
                                }
                              },
                              "bodyType": {
                                "type": "object",
                                "properties": {
                                  "label": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "designer": {
                            "type": "object",
                            "properties": {
                              "x": {
                                "type": "integer"
                              },
                              "y": {
                                "type": "integer"
                              }
                            }
                          },
                          "parameters": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                },
                                "required": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      },
                      "parameters": {
                        "type": "object",
                        "properties": {
                          "handleErrors": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                },
                "name": {
                  "type": "string"
                },
                "metadata": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "integer"
                    },
                    "scenario": {
                      "type": "object",
                      "properties": {
                        "maxErrors": {
                          "type": "integer"
                        },
                        "autoCommit": {
                          "type": "boolean"
                        },
                        "roundtrips": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The full blueprint of the scenario or template. It contains information about the general setup and all included apps and modules, and their settings."
            },
            "example": "{\"flow\":[{\"id\":1,\"module\":\"http:ActionGetFile\",\"version\":3,\"parameters\":{\"handleErrors\":false},\"mapper\":{\"url\":\"https://google.com\",\"method\":\"get\",\"shareCookies\":false},\"metadata\":{\"designer\":{\"x\":0,\"y\":0},\"parameters\":[{\"name\":\"handleErrors\",\"label\":\"Evaluate all states as errors (except for 2xx and 3xx )\",\"type\":\"boolean\",\"required\":true}],\"expect\":[{\"name\":\"url\",\"label\":\"URL\",\"type\":\"url\",\"required\":true},{\"name\":\"method\",\"label\":\"Method\",\"type\":\"hidden\"},{\"name\":\"shareCookies\",\"label\":\"Share cookies with other HTTP modules\",\"type\":\"boolean\",\"required\":true}]}}],\"metadata\":{\"version\":1,\"scenario\":{\"roundtrips\":1,\"maxErrors\":3,\"autoCommit\":true,\"autoCommitTriggerLast\":true,\"sequential\":false,\"confidential\":false,\"dataloss\":false,\"dlq\":false, \"freshVariables\": false},\"designer\":{\"orphans\":[]}}}",
            "required": false,
            "description": "The full blueprint of the scenario or template. It contains information about the general setup and all included apps and modules, and their settings."
          },
          {
            "name": "scheduling",
            "schema": {
              "description": "The scheduling details of the template.",
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "immediately",
                    "indefinitely",
                    "once",
                    "daily",
                    "weekly",
                    "monthly",
                    "yearly"
                  ]
                },
                "interval": {
                  "type": "integer",
                  "minimum": 0
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "between": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "time": {
                  "type": "string",
                  "pattern": "^[0-2]?[0-9]:[0-5]?[0-9](:[0-5]?[0-9])?(\\\\.[0-9]+)?$"
                },
                "days": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 31
                  }
                },
                "months": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 12
                  }
                },
                "restrict": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "nullable": true,
                          "pattern": "^[0-2]?[0-9]:[0-5]?[0-9](:[0-5]?[0-9])?(\\\\.[0-9]+)?$"
                        }
                      },
                      "days": {
                        "type": "array",
                        "items": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 31
                        }
                      },
                      "months": {
                        "type": "array",
                        "items": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 12
                        }
                      }
                    }
                  }
                }
              }
            },
            "example": "{\"type\":\"indefinitely\",\"interval\":900}",
            "required": false,
            "description": "The scheduling details of the template."
          },
          {
            "name": "controller",
            "schema": {
              "description": "The controller of the template. This property refers to wizards that can be added to each module in the template from the Make interface. The wizards contain short instructions for other users explaining how to use the template step by step.",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 120,
                  "minLength": 1
                },
                "description": {
                  "type": "string",
                  "maxLength": 1500,
                  "minLength": 0
                },
                "idSequence": {
                  "type": "integer"
                },
                "modules": {
                  "type": "object"
                }
              }
            },
            "example": "{\"modules\":{},\"name\":\"New template\",\"idSequence\":2}",
            "required": false,
            "description": "The controller of the template. This property refers to wizards that can be added to each module in the template from the Make interface. The wizards contain short instructions for other users explaining how to use the template step by step."
          }
        ]
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "template": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "teamId": {
                        "type": "integer"
                      },
                      "teamName": {
                        "type": "string"
                      },
                      "organizationId": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "usedApps": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "public": {
                        "type": "boolean"
                      },
                      "published": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "approved": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "approvedId": {
                        "type": "integer"
                      },
                      "requestedApproval": {
                        "type": "boolean"
                      },
                      "publishedId": {
                        "type": "integer"
                      },
                      "publicUrl": {
                        "type": "string"
                      },
                      "approvedName": {
                        "type": "string"
                      },
                      "publishedName": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "example": {
                "template": {
                  "id": 67,
                  "name": "New template",
                  "teamId": 1,
                  "description": null,
                  "usedApps": ["http"],
                  "public": false,
                  "published": null,
                  "approved": null,
                  "approvedId": null,
                  "requestedApproval": false,
                  "publishedId": null,
                  "publicUrl": null,
                  "approvedName": null,
                  "publishedName": null
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "template": {
              "id": 67,
              "name": "New template",
              "teamId": 1,
              "description": null,
              "usedApps": ["http"],
              "public": false,
              "published": null,
              "approved": null,
              "approvedId": null,
              "requestedApproval": false,
              "publishedId": null,
              "publicUrl": null,
              "approvedName": null,
              "publishedName": null
            }
          },
          "requestBody": {
            "teamId": 1,
            "language": "en",
            "blueprint": "{\"flow\":[{\"id\":1,\"module\":\"http:ActionGetFile\",\"version\":3,\"parameters\":{\"handleErrors\":false},\"mapper\":{\"url\":\"https://google.com\",\"method\":\"get\",\"shareCookies\":false},\"metadata\":{\"designer\":{\"x\":0,\"y\":0},\"parameters\":[{\"name\":\"handleErrors\",\"label\":\"Evaluate all states as errors (except for 2xx and 3xx )\",\"type\":\"boolean\",\"required\":true}],\"expect\":[{\"name\":\"url\",\"label\":\"URL\",\"type\":\"url\",\"required\":true},{\"name\":\"method\",\"label\":\"Method\",\"type\":\"hidden\"},{\"name\":\"shareCookies\",\"label\":\"Share cookies with other HTTP modules\",\"type\":\"boolean\",\"required\":true}]}}],\"metadata\":{\"version\":1,\"scenario\":{\"roundtrips\":1,\"maxErrors\":3,\"autoCommit\":true,\"autoCommitTriggerLast\":true,\"sequential\":false,\"confidential\":false,\"dataloss\":false,\"dlq\":false, \"freshVariables\": false},\"designer\":{\"orphans\":[]}}}",
            "scheduling": "{\"type\":\"indefinitely\",\"interval\":900}",
            "controller": "{\"modules\":{},\"name\":\"New template\",\"idSequence\":2}"
          },
          "parameters": {
            "cols[]": ["id", "name"]
          },
          "path": "/templates"
        }
      }
    },
    "templates-templateId-get": {
      "endpointKey": "templates-templateId-get",
      "path": "/templates/{templateId}",
      "method": "get",
      "x-published": true,
      "tags": ["Templates"],
      "summary": "Get template details",
      "description": "Retrieves details of a template with a given ID.",
      "security": [
        {
          "token": ["templates:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "templateId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The unique ID of the private template. It can be retrieved from the [List templates](/templates-get) endpoint.",
            "example": 164
          }
        ],
        "query": [
          {
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "teamId",
                  "description",
                  "usedApps",
                  "public",
                  "published",
                  "approved",
                  "approvedId",
                  "requestedApproval",
                  "publishedId",
                  "publicUrl",
                  "approvedName",
                  "publishedName"
                ]
              }
            },
            "description": "Specifies the group of values to return. For example, you may want to retrieve only the ID and name of the template.",
            "examples": {
              "id-name": {
                "summary": "Return ID and name",
                "value": ["id", "name"]
              },
              "all-columns": {
                "summary": "Return all details",
                "value": [
                  "id",
                  "name",
                  "teamId",
                  "description",
                  "usedApps",
                  "public",
                  "published",
                  "approved",
                  "approvedId",
                  "requestedApproval",
                  "publishedId",
                  "publicUrl",
                  "approvedName",
                  "publishedName"
                ]
              }
            }
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "template": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "teamId": {
                        "type": "integer"
                      },
                      "teamName": {
                        "type": "string"
                      },
                      "organizationId": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "usedApps": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "public": {
                        "type": "boolean"
                      },
                      "published": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "approved": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "approvedId": {
                        "type": "integer"
                      },
                      "requestedApproval": {
                        "type": "boolean"
                      },
                      "publishedId": {
                        "type": "integer"
                      },
                      "publicUrl": {
                        "type": "string"
                      },
                      "approvedName": {
                        "type": "string"
                      },
                      "publishedName": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "examples": {
                "id-name": {
                  "summary": "Return ID and name",
                  "description": "Returns ID and name of the template",
                  "value": {
                    "template": {
                      "id": 164,
                      "name": "Published, approved, waiting for approval"
                    }
                  }
                },
                "all-columns": {
                  "summary": "Return all details",
                  "description": "Returns all details of the template",
                  "value": {
                    "template": {
                      "id": 164,
                      "name": "Published, approved, waiting for approval",
                      "teamId": 1,
                      "description": null,
                      "usedApps": ["http"],
                      "public": true,
                      "published": "2020-12-01T15:18:31.790Z",
                      "approved": "2020-12-02T09:44:42.045Z",
                      "approvedId": 38,
                      "requestedApproval": true,
                      "publishedId": 40,
                      "publicUrl": "37-published-approved-waiting-for-approval",
                      "approvedName": "Published, approved, waiting for approval",
                      "publishedName": "Published, approved, waiting for approval"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "id-name": {
          "summary": "Return ID and name",
          "response": {
            "template": {
              "id": 164,
              "name": "Published, approved, waiting for approval"
            }
          },
          "description": "Returns ID and name of the template",
          "parameters": {
            "cols[]": ["id", "name"]
          },
          "path": "/templates/164"
        },
        "all-columns": {
          "summary": "Return all details",
          "response": {
            "template": {
              "id": 164,
              "name": "Published, approved, waiting for approval",
              "teamId": 1,
              "description": null,
              "usedApps": ["http"],
              "public": true,
              "published": "2020-12-01T15:18:31.790Z",
              "approved": "2020-12-02T09:44:42.045Z",
              "approvedId": 38,
              "requestedApproval": true,
              "publishedId": 40,
              "publicUrl": "37-published-approved-waiting-for-approval",
              "approvedName": "Published, approved, waiting for approval",
              "publishedName": "Published, approved, waiting for approval"
            }
          },
          "description": "Returns all details of the template",
          "parameters": {
            "cols[]": [
              "id",
              "name",
              "teamId",
              "description",
              "usedApps",
              "public",
              "published",
              "approved",
              "approvedId",
              "requestedApproval",
              "publishedId",
              "publicUrl",
              "approvedName",
              "publishedName"
            ]
          },
          "path": "/templates/164"
        }
      }
    },
    "templates-templateId-patch": {
      "endpointKey": "templates-templateId-patch",
      "path": "/templates/{templateId}",
      "method": "patch",
      "x-published": true,
      "tags": ["Templates"],
      "summary": "Update template",
      "description": "Updates a template with a given ID by passing new values in the request body. Any property that is not provided will be left unchanged. In the response, it returns all details of the updated template including properties that were not changed.",
      "security": [
        {
          "token": ["templates:write"]
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The new name of the template. The name does not need to be unique."
                },
                "blueprint": {
                  "type": "object",
                  "properties": {
                    "flow": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "mapper": {
                            "type": "object",
                            "properties": {
                              "ca": {
                                "type": "string"
                              },
                              "qs": {
                                "type": "array"
                              },
                              "url": {
                                "type": "string",
                                "format": "uri"
                              },
                              "gzip": {
                                "type": "boolean"
                              },
                              "method": {
                                "type": "string"
                              },
                              "headers": {
                                "type": "array"
                              },
                              "timeout": {
                                "type": "string"
                              },
                              "authPass": {
                                "type": "string"
                              },
                              "authUser": {
                                "type": "string"
                              },
                              "bodyType": {
                                "type": "string"
                              },
                              "shareCookies": {
                                "type": "boolean"
                              },
                              "parseResponse": {
                                "type": "boolean"
                              },
                              "followRedirect": {
                                "type": "boolean"
                              },
                              "useQuerystring": {
                                "type": "boolean"
                              },
                              "rejectUnauthorized": {
                                "type": "boolean"
                              }
                            }
                          },
                          "module": {
                            "type": "string",
                            "format": "uri"
                          },
                          "onerror": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "mapper": {
                                  "type": "object",
                                  "properties": {
                                    "count": {
                                      "type": "string",
                                      "format": "utc-millisec"
                                    },
                                    "retry": {
                                      "type": "boolean"
                                    },
                                    "interval": {
                                      "type": "string",
                                      "format": "utc-millisec"
                                    }
                                  }
                                },
                                "module": {
                                  "type": "string",
                                  "format": "uri"
                                },
                                "version": {
                                  "type": "integer"
                                },
                                "metadata": {
                                  "type": "object",
                                  "properties": {
                                    "expect": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string"
                                          },
                                          "label": {
                                            "type": "string"
                                          },
                                          "required": {
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    },
                                    "restore": {
                                      "type": "object",
                                      "properties": {
                                        "retry": {
                                          "type": "object",
                                          "properties": {
                                            "mode": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "designer": {
                                      "type": "object",
                                      "properties": {
                                        "x": {
                                          "type": "integer"
                                        },
                                        "y": {
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  }
                                },
                                "parameters": {
                                  "type": "object"
                                }
                              }
                            }
                          },
                          "version": {
                            "type": "integer"
                          },
                          "metadata": {
                            "type": "object",
                            "properties": {
                              "expect": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "restore": {
                                "type": "object",
                                "properties": {
                                  "qs": {
                                    "type": "object",
                                    "properties": {
                                      "mode": {
                                        "type": "string"
                                      },
                                      "items": {
                                        "type": "array"
                                      }
                                    }
                                  },
                                  "method": {
                                    "type": "object",
                                    "properties": {
                                      "mode": {
                                        "type": "string"
                                      },
                                      "label": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "headers": {
                                    "type": "object",
                                    "properties": {
                                      "mode": {
                                        "type": "string"
                                      },
                                      "items": {
                                        "type": "array"
                                      }
                                    }
                                  },
                                  "bodyType": {
                                    "type": "object",
                                    "properties": {
                                      "label": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "designer": {
                                "type": "object",
                                "properties": {
                                  "x": {
                                    "type": "integer"
                                  },
                                  "y": {
                                    "type": "integer"
                                  }
                                }
                              },
                              "parameters": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string"
                                    },
                                    "label": {
                                      "type": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "parameters": {
                            "type": "object",
                            "properties": {
                              "handleErrors": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    },
                    "name": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "integer"
                        },
                        "scenario": {
                          "type": "object",
                          "properties": {
                            "maxErrors": {
                              "type": "integer"
                            },
                            "autoCommit": {
                              "type": "boolean"
                            },
                            "roundtrips": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "The full blueprint of the template. It contains information about the general setup and all included apps and modules, and their settings."
                },
                "scheduling": {
                  "description": "The scheduling details of the template.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "immediately",
                        "indefinitely",
                        "once",
                        "daily",
                        "weekly",
                        "monthly",
                        "yearly"
                      ]
                    },
                    "interval": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "between": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "time": {
                      "type": "string",
                      "pattern": "^[0-2]?[0-9]:[0-5]?[0-9](:[0-5]?[0-9])?(\\\\.[0-9]+)?$"
                    },
                    "days": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 31
                      }
                    },
                    "months": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 12
                      }
                    },
                    "restrict": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "time": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "nullable": true,
                              "pattern": "^[0-2]?[0-9]:[0-5]?[0-9](:[0-5]?[0-9])?(\\\\.[0-9]+)?$"
                            }
                          },
                          "days": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "minimum": 0,
                              "maximum": 31
                            }
                          },
                          "months": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 12
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "controller": {
                  "description": "The controller of the template. This property refers to wizards that can be added to each module in the template from the Make interface. The wizards contain short instructions for other users explaining how to use the template step by step.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 120,
                      "minLength": 1
                    },
                    "description": {
                      "type": "string",
                      "maxLength": 1500,
                      "minLength": 0
                    },
                    "idSequence": {
                      "type": "integer"
                    },
                    "modules": {
                      "type": "object"
                    }
                  }
                }
              }
            },
            "example": {
              "name": "Renamed template",
              "blueprint": "{\"flow\":[{\"id\":1,\"module\":\"http:ActionGetFile\",\"version\":3,\"parameters\":{\"handleErrors\":false},\"mapper\":{\"url\":\"https://google.com\",\"method\":\"get\",\"shareCookies\":false},\"metadata\":{\"designer\":{\"x\":0,\"y\":0},\"parameters\":[{\"name\":\"handleErrors\",\"label\":\"Evaluate all states as errors (except for 2xx and 3xx )\",\"type\":\"boolean\",\"required\":true}],\"expect\":[{\"name\":\"url\",\"label\":\"URL\",\"type\":\"url\",\"required\":true},{\"name\":\"method\",\"label\":\"Method\",\"type\":\"hidden\"},{\"name\":\"shareCookies\",\"label\":\"Share cookies with other HTTP modules\",\"type\":\"boolean\",\"required\":true}]}}],\"metadata\":{\"version\":1,\"scenario\":{\"roundtrips\":1,\"maxErrors\":3,\"autoCommit\":true,\"autoCommitTriggerLast\":true,\"sequential\":false,\"confidential\":false,\"dataloss\":false,\"dlq\":false,\"freshVariables\": false},\"designer\":{\"orphans\":[]}}}",
              "scheduling": "{\"type\":\"indefinitely\",\"interval\":900}",
              "controller": "{\"modules\":{},\"name\":\"New template\",\"idSequence\":2}"
            }
          }
        }
      },
      "parameters": {
        "path": [
          {
            "name": "templateId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The unique ID of the private template. It can be retrieved from the [List templates](/templates-get) endpoint.",
            "example": 164
          }
        ],
        "query": [
          {
            "name": "templatePublicId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The unique ID of the public version of the approved template. It can be retrieved from the [List templates](/templates-get) endpoint as one of the following IDs: `publishedId` for all published templates that are waiting for approval or not, or `approvedId` for approved templates.",
            "example": 18
          },
          {
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "teamId",
                  "description",
                  "usedApps",
                  "public",
                  "published",
                  "approved",
                  "approvedId",
                  "requestedApproval",
                  "publishedId",
                  "publicUrl",
                  "approvedName",
                  "publishedName"
                ]
              }
            },
            "description": "Specifies the group of values to return. For example, you may want to retrieve only the description of the template.",
            "example": ["description"]
          }
        ],
        "body": [
          {
            "name": "name",
            "schema": {
              "type": "string",
              "description": "The new name of the template. The name does not need to be unique."
            },
            "example": "Renamed template",
            "required": false,
            "description": "The new name of the template. The name does not need to be unique."
          },
          {
            "name": "blueprint",
            "schema": {
              "type": "object",
              "properties": {
                "flow": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "mapper": {
                        "type": "object",
                        "properties": {
                          "ca": {
                            "type": "string"
                          },
                          "qs": {
                            "type": "array"
                          },
                          "url": {
                            "type": "string",
                            "format": "uri"
                          },
                          "gzip": {
                            "type": "boolean"
                          },
                          "method": {
                            "type": "string"
                          },
                          "headers": {
                            "type": "array"
                          },
                          "timeout": {
                            "type": "string"
                          },
                          "authPass": {
                            "type": "string"
                          },
                          "authUser": {
                            "type": "string"
                          },
                          "bodyType": {
                            "type": "string"
                          },
                          "shareCookies": {
                            "type": "boolean"
                          },
                          "parseResponse": {
                            "type": "boolean"
                          },
                          "followRedirect": {
                            "type": "boolean"
                          },
                          "useQuerystring": {
                            "type": "boolean"
                          },
                          "rejectUnauthorized": {
                            "type": "boolean"
                          }
                        }
                      },
                      "module": {
                        "type": "string",
                        "format": "uri"
                      },
                      "onerror": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "mapper": {
                              "type": "object",
                              "properties": {
                                "count": {
                                  "type": "string",
                                  "format": "utc-millisec"
                                },
                                "retry": {
                                  "type": "boolean"
                                },
                                "interval": {
                                  "type": "string",
                                  "format": "utc-millisec"
                                }
                              }
                            },
                            "module": {
                              "type": "string",
                              "format": "uri"
                            },
                            "version": {
                              "type": "integer"
                            },
                            "metadata": {
                              "type": "object",
                              "properties": {
                                "expect": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "label": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    }
                                  }
                                },
                                "restore": {
                                  "type": "object",
                                  "properties": {
                                    "retry": {
                                      "type": "object",
                                      "properties": {
                                        "mode": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "designer": {
                                  "type": "object",
                                  "properties": {
                                    "x": {
                                      "type": "integer"
                                    },
                                    "y": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              }
                            },
                            "parameters": {
                              "type": "object"
                            }
                          }
                        }
                      },
                      "version": {
                        "type": "integer"
                      },
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "expect": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "restore": {
                            "type": "object",
                            "properties": {
                              "qs": {
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string"
                                  },
                                  "items": {
                                    "type": "array"
                                  }
                                }
                              },
                              "method": {
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string"
                                  },
                                  "label": {
                                    "type": "string"
                                  }
                                }
                              },
                              "headers": {
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string"
                                  },
                                  "items": {
                                    "type": "array"
                                  }
                                }
                              },
                              "bodyType": {
                                "type": "object",
                                "properties": {
                                  "label": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "designer": {
                            "type": "object",
                            "properties": {
                              "x": {
                                "type": "integer"
                              },
                              "y": {
                                "type": "integer"
                              }
                            }
                          },
                          "parameters": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                },
                                "required": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      },
                      "parameters": {
                        "type": "object",
                        "properties": {
                          "handleErrors": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                },
                "name": {
                  "type": "string"
                },
                "metadata": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "integer"
                    },
                    "scenario": {
                      "type": "object",
                      "properties": {
                        "maxErrors": {
                          "type": "integer"
                        },
                        "autoCommit": {
                          "type": "boolean"
                        },
                        "roundtrips": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The full blueprint of the template. It contains information about the general setup and all included apps and modules, and their settings."
            },
            "example": "{\"flow\":[{\"id\":1,\"module\":\"http:ActionGetFile\",\"version\":3,\"parameters\":{\"handleErrors\":false},\"mapper\":{\"url\":\"https://google.com\",\"method\":\"get\",\"shareCookies\":false},\"metadata\":{\"designer\":{\"x\":0,\"y\":0},\"parameters\":[{\"name\":\"handleErrors\",\"label\":\"Evaluate all states as errors (except for 2xx and 3xx )\",\"type\":\"boolean\",\"required\":true}],\"expect\":[{\"name\":\"url\",\"label\":\"URL\",\"type\":\"url\",\"required\":true},{\"name\":\"method\",\"label\":\"Method\",\"type\":\"hidden\"},{\"name\":\"shareCookies\",\"label\":\"Share cookies with other HTTP modules\",\"type\":\"boolean\",\"required\":true}]}}],\"metadata\":{\"version\":1,\"scenario\":{\"roundtrips\":1,\"maxErrors\":3,\"autoCommit\":true,\"autoCommitTriggerLast\":true,\"sequential\":false,\"confidential\":false,\"dataloss\":false,\"dlq\":false,\"freshVariables\": false},\"designer\":{\"orphans\":[]}}}",
            "required": false,
            "description": "The full blueprint of the template. It contains information about the general setup and all included apps and modules, and their settings."
          },
          {
            "name": "scheduling",
            "schema": {
              "description": "The scheduling details of the template.",
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "immediately",
                    "indefinitely",
                    "once",
                    "daily",
                    "weekly",
                    "monthly",
                    "yearly"
                  ]
                },
                "interval": {
                  "type": "integer",
                  "minimum": 0
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "between": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "time": {
                  "type": "string",
                  "pattern": "^[0-2]?[0-9]:[0-5]?[0-9](:[0-5]?[0-9])?(\\\\.[0-9]+)?$"
                },
                "days": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 31
                  }
                },
                "months": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 12
                  }
                },
                "restrict": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "nullable": true,
                          "pattern": "^[0-2]?[0-9]:[0-5]?[0-9](:[0-5]?[0-9])?(\\\\.[0-9]+)?$"
                        }
                      },
                      "days": {
                        "type": "array",
                        "items": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 31
                        }
                      },
                      "months": {
                        "type": "array",
                        "items": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 12
                        }
                      }
                    }
                  }
                }
              }
            },
            "example": "{\"type\":\"indefinitely\",\"interval\":900}",
            "required": false,
            "description": "The scheduling details of the template."
          },
          {
            "name": "controller",
            "schema": {
              "description": "The controller of the template. This property refers to wizards that can be added to each module in the template from the Make interface. The wizards contain short instructions for other users explaining how to use the template step by step.",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 120,
                  "minLength": 1
                },
                "description": {
                  "type": "string",
                  "maxLength": 1500,
                  "minLength": 0
                },
                "idSequence": {
                  "type": "integer"
                },
                "modules": {
                  "type": "object"
                }
              }
            },
            "example": "{\"modules\":{},\"name\":\"New template\",\"idSequence\":2}",
            "required": false,
            "description": "The controller of the template. This property refers to wizards that can be added to each module in the template from the Make interface. The wizards contain short instructions for other users explaining how to use the template step by step."
          }
        ]
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "teamId": {
                          "type": "integer"
                        },
                        "teamName": {
                          "type": "string"
                        },
                        "organizationId": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "usedApps": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "public": {
                          "type": "boolean"
                        },
                        "published": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "approved": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "approvedId": {
                          "type": "integer"
                        },
                        "requestedApproval": {
                          "type": "boolean"
                        },
                        "publishedId": {
                          "type": "integer"
                        },
                        "publicUrl": {
                          "type": "string"
                        },
                        "approvedName": {
                          "type": "string"
                        },
                        "publishedName": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "template": [
                  {
                    "id": 164,
                    "name": "Renamed template",
                    "teamId": 1,
                    "description": null,
                    "usedApps": ["http"],
                    "public": false,
                    "published": null,
                    "approved": null,
                    "approvedId": null,
                    "requestedApproval": false,
                    "publishedId": null,
                    "publicUrl": null,
                    "approvedName": null,
                    "publishedName": null
                  }
                ]
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "template": [
              {
                "id": 164,
                "name": "Renamed template",
                "teamId": 1,
                "description": null,
                "usedApps": ["http"],
                "public": false,
                "published": null,
                "approved": null,
                "approvedId": null,
                "requestedApproval": false,
                "publishedId": null,
                "publicUrl": null,
                "approvedName": null,
                "publishedName": null
              }
            ]
          },
          "requestBody": {
            "name": "Renamed template",
            "blueprint": "{\"flow\":[{\"id\":1,\"module\":\"http:ActionGetFile\",\"version\":3,\"parameters\":{\"handleErrors\":false},\"mapper\":{\"url\":\"https://google.com\",\"method\":\"get\",\"shareCookies\":false},\"metadata\":{\"designer\":{\"x\":0,\"y\":0},\"parameters\":[{\"name\":\"handleErrors\",\"label\":\"Evaluate all states as errors (except for 2xx and 3xx )\",\"type\":\"boolean\",\"required\":true}],\"expect\":[{\"name\":\"url\",\"label\":\"URL\",\"type\":\"url\",\"required\":true},{\"name\":\"method\",\"label\":\"Method\",\"type\":\"hidden\"},{\"name\":\"shareCookies\",\"label\":\"Share cookies with other HTTP modules\",\"type\":\"boolean\",\"required\":true}]}}],\"metadata\":{\"version\":1,\"scenario\":{\"roundtrips\":1,\"maxErrors\":3,\"autoCommit\":true,\"autoCommitTriggerLast\":true,\"sequential\":false,\"confidential\":false,\"dataloss\":false,\"dlq\":false,\"freshVariables\": false},\"designer\":{\"orphans\":[]}}}",
            "scheduling": "{\"type\":\"indefinitely\",\"interval\":900}",
            "controller": "{\"modules\":{},\"name\":\"New template\",\"idSequence\":2}"
          },
          "parameters": {
            "templatePublicId": 18,
            "cols[]": ["description"]
          },
          "path": "/templates/164"
        }
      }
    },
    "templates-templateId-delete": {
      "endpointKey": "templates-templateId-delete",
      "path": "/templates/{templateId}",
      "method": "delete",
      "x-published": true,
      "tags": ["Templates"],
      "summary": "Delete template",
      "description": "Deletes a template with a given ID and returns the ID in the response.",
      "security": [
        {
          "token": ["templates:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "templateId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The unique ID of the private template. It can be retrieved from the [List templates](/templates-get) endpoint.",
            "example": 164
          }
        ],
        "query": [
          {
            "name": "confirmed",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Confirms the deletion of the private or published template. If the parameter is missing or it is set to `false` an error code is returned and the resource is not deleted. The public (approved) templates can only be deleted by administrators.",
            "example": true
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "template": {
                    "type": "integer"
                  }
                }
              },
              "example": {
                "template": 164
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "template": 164
          },
          "parameters": {
            "confirmed": true
          },
          "path": "/templates/164"
        }
      }
    },
    "templates-templateId-blueprint-get": {
      "endpointKey": "templates-templateId-blueprint-get",
      "path": "/templates/{templateId}/blueprint",
      "method": "get",
      "x-published": true,
      "tags": ["Templates"],
      "summary": "Get template blueprint",
      "description": "Retrieves a blueprint of a template with a given ID.",
      "security": [
        {
          "token": ["templates:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "templateId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The unique ID of the private template. It can be retrieved from the [List templates](/templates-get) endpoint.",
            "example": 164
          }
        ],
        "query": [
          {
            "name": "forUse",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "If this parameter is set to `true`, it means the blueprint should be used for creating a scenario from the template.",
            "example": true
          },
          {
            "name": "templatePublicId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The unique ID of the public version of the approved template. It can be retrieved from the [List templates](/templates-get) endpoint as one of the following IDs: `publishedId` for all published templates that are waiting for approval or not, or `approvedId` for approved templates.",
            "example": 18
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "blueprint": {
                    "type": "object",
                    "properties": {
                      "flow": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "mapper": {
                              "type": "object",
                              "properties": {
                                "ca": {
                                  "type": "string"
                                },
                                "qs": {
                                  "type": "array"
                                },
                                "url": {
                                  "type": "string",
                                  "format": "uri"
                                },
                                "gzip": {
                                  "type": "boolean"
                                },
                                "method": {
                                  "type": "string"
                                },
                                "headers": {
                                  "type": "array"
                                },
                                "timeout": {
                                  "type": "string"
                                },
                                "authPass": {
                                  "type": "string"
                                },
                                "authUser": {
                                  "type": "string"
                                },
                                "bodyType": {
                                  "type": "string"
                                },
                                "shareCookies": {
                                  "type": "boolean"
                                },
                                "parseResponse": {
                                  "type": "boolean"
                                },
                                "followRedirect": {
                                  "type": "boolean"
                                },
                                "useQuerystring": {
                                  "type": "boolean"
                                },
                                "rejectUnauthorized": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "module": {
                              "type": "string",
                              "format": "uri"
                            },
                            "onerror": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "mapper": {
                                    "type": "object",
                                    "properties": {
                                      "count": {
                                        "type": "string",
                                        "format": "utc-millisec"
                                      },
                                      "retry": {
                                        "type": "boolean"
                                      },
                                      "interval": {
                                        "type": "string",
                                        "format": "utc-millisec"
                                      }
                                    }
                                  },
                                  "module": {
                                    "type": "string",
                                    "format": "uri"
                                  },
                                  "version": {
                                    "type": "integer"
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "properties": {
                                      "expect": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string"
                                            },
                                            "label": {
                                              "type": "string"
                                            },
                                            "required": {
                                              "type": "boolean"
                                            }
                                          }
                                        }
                                      },
                                      "restore": {
                                        "type": "object",
                                        "properties": {
                                          "retry": {
                                            "type": "object",
                                            "properties": {
                                              "mode": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "designer": {
                                        "type": "object",
                                        "properties": {
                                          "x": {
                                            "type": "integer"
                                          },
                                          "y": {
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "parameters": {
                                    "type": "object"
                                  }
                                }
                              }
                            },
                            "version": {
                              "type": "integer"
                            },
                            "metadata": {
                              "type": "object",
                              "properties": {
                                "expect": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "restore": {
                                  "type": "object",
                                  "properties": {
                                    "qs": {
                                      "type": "object",
                                      "properties": {
                                        "mode": {
                                          "type": "string"
                                        },
                                        "items": {
                                          "type": "array"
                                        }
                                      }
                                    },
                                    "method": {
                                      "type": "object",
                                      "properties": {
                                        "mode": {
                                          "type": "string"
                                        },
                                        "label": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "headers": {
                                      "type": "object",
                                      "properties": {
                                        "mode": {
                                          "type": "string"
                                        },
                                        "items": {
                                          "type": "array"
                                        }
                                      }
                                    },
                                    "bodyType": {
                                      "type": "object",
                                      "properties": {
                                        "label": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "designer": {
                                  "type": "object",
                                  "properties": {
                                    "x": {
                                      "type": "integer"
                                    },
                                    "y": {
                                      "type": "integer"
                                    }
                                  }
                                },
                                "parameters": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "label": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "parameters": {
                              "type": "object",
                              "properties": {
                                "handleErrors": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "version": {
                            "type": "integer"
                          },
                          "scenario": {
                            "type": "object",
                            "properties": {
                              "maxErrors": {
                                "type": "integer"
                              },
                              "autoCommit": {
                                "type": "boolean"
                              },
                              "roundtrips": {
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "controller": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "modules": {
                        "type": "object"
                      },
                      "idSequence": {
                        "type": "integer"
                      }
                    }
                  },
                  "scheduling": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "interval": {
                        "type": "integer"
                      }
                    }
                  },
                  "language": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "blueprint": {
                  "flow": [
                    {
                      "id": 1,
                      "mapper": {
                        "url": "https://seznam.cz",
                        "method": "get",
                        "shareCookies": false
                      },
                      "module": "http:ActionGetFile",
                      "version": 3,
                      "metadata": {
                        "expect": [
                          {
                            "name": "url",
                            "type": "url",
                            "label": "URL",
                            "required": true
                          },
                          {
                            "name": "method",
                            "type": "hidden",
                            "label": "Method"
                          },
                          {
                            "name": "shareCookies",
                            "type": "boolean",
                            "label": "Share cookies with other HTTP modules",
                            "required": true
                          }
                        ],
                        "designer": {
                          "x": 0,
                          "y": 0
                        },
                        "parameters": [
                          {
                            "name": "handleErrors",
                            "type": "boolean",
                            "label": "Evaluate all states as errors (except for 2xx and 3xx )",
                            "required": true
                          }
                        ]
                      },
                      "parameters": {
                        "handleErrors": false
                      }
                    }
                  ],
                  "metadata": {
                    "version": 1,
                    "designer": {
                      "orphans": []
                    },
                    "scenario": {
                      "dlq": false,
                      "dataloss": false,
                      "maxErrors": 3,
                      "autoCommit": true,
                      "roundtrips": 1,
                      "sequential": false,
                      "confidential": false,
                      "autoCommitTriggerLast": true
                    }
                  }
                },
                "controller": {
                  "name": "Template name",
                  "modules": {},
                  "idSequence": 2
                },
                "scheduling": {
                  "type": "indefinitely",
                  "interval": 1000
                },
                "language": "en"
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "blueprint": {
              "flow": [
                {
                  "id": 1,
                  "mapper": {
                    "url": "https://seznam.cz",
                    "method": "get",
                    "shareCookies": false
                  },
                  "module": "http:ActionGetFile",
                  "version": 3,
                  "metadata": {
                    "expect": [
                      {
                        "name": "url",
                        "type": "url",
                        "label": "URL",
                        "required": true
                      },
                      {
                        "name": "method",
                        "type": "hidden",
                        "label": "Method"
                      },
                      {
                        "name": "shareCookies",
                        "type": "boolean",
                        "label": "Share cookies with other HTTP modules",
                        "required": true
                      }
                    ],
                    "designer": {
                      "x": 0,
                      "y": 0
                    },
                    "parameters": [
                      {
                        "name": "handleErrors",
                        "type": "boolean",
                        "label": "Evaluate all states as errors (except for 2xx and 3xx )",
                        "required": true
                      }
                    ]
                  },
                  "parameters": {
                    "handleErrors": false
                  }
                }
              ],
              "metadata": {
                "version": 1,
                "designer": {
                  "orphans": []
                },
                "scenario": {
                  "dlq": false,
                  "dataloss": false,
                  "maxErrors": 3,
                  "autoCommit": true,
                  "roundtrips": 1,
                  "sequential": false,
                  "confidential": false,
                  "autoCommitTriggerLast": true
                }
              }
            },
            "controller": {
              "name": "Template name",
              "modules": {},
              "idSequence": 2
            },
            "scheduling": {
              "type": "indefinitely",
              "interval": 1000
            },
            "language": "en"
          },
          "parameters": {
            "forUse": true,
            "templatePublicId": 18
          },
          "path": "/templates/164/blueprint"
        }
      }
    },
    "templates-templateId-publish-post": {
      "endpointKey": "templates-templateId-publish-post",
      "path": "/templates/{templateId}/publish",
      "method": "post",
      "x-published": true,
      "tags": ["Templates"],
      "summary": "Publish template",
      "description": "Publishes a private template with a given ID. In the response, it returns all details of the template.",
      "security": [
        {
          "token": ["templates:write"]
        }
      ],
      "requestBody": {
        "content": {}
      },
      "parameters": {
        "path": [
          {
            "name": "templateId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The unique ID of the private template. It can be retrieved from the [List templates](/templates-get) endpoint.",
            "example": 164
          }
        ],
        "query": [
          {
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "teamId",
                  "description",
                  "usedApps",
                  "public",
                  "published",
                  "approved",
                  "approvedId",
                  "requestedApproval",
                  "publishedId",
                  "publicUrl",
                  "approvedName",
                  "publishedName"
                ]
              }
            },
            "description": "Specifies the group of values to return. For example, you may want to retrieve only the name and ID of the published template.",
            "examples": {
              "id-name": {
                "summary": "id, name",
                "value": ["id", "name"]
              },
              "all-columns": {
                "summary": "All columns",
                "value": [
                  "id",
                  "name",
                  "teamId",
                  "description",
                  "usedApps",
                  "public",
                  "published",
                  "approved",
                  "approvedId",
                  "requestedApproval",
                  "publishedId",
                  "publicUrl",
                  "approvedName",
                  "publishedName"
                ]
              }
            }
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "template": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "teamId": {
                        "type": "integer"
                      },
                      "teamName": {
                        "type": "string"
                      },
                      "organizationId": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "usedApps": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "public": {
                        "type": "boolean"
                      },
                      "published": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "approved": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "approvedId": {
                        "type": "integer"
                      },
                      "requestedApproval": {
                        "type": "boolean"
                      },
                      "publishedId": {
                        "type": "integer"
                      },
                      "publicUrl": {
                        "type": "string"
                      },
                      "approvedName": {
                        "type": "string"
                      },
                      "publishedName": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "examples": {
                "all-columns": {
                  "summary": "Return all details",
                  "description": "Returns all details of the published template",
                  "value": {
                    "template": {
                      "id": 164,
                      "name": "Renamed template",
                      "teamId": 1,
                      "description": null,
                      "usedApps": ["http"],
                      "public": true,
                      "published": "2020-12-03T14:11:08.327Z",
                      "approved": null,
                      "approvedId": null,
                      "requestedApproval": false,
                      "publishedId": 48,
                      "publicUrl": "48-renamed-template",
                      "approvedName": null,
                      "publishedName": "Renamed template"
                    }
                  }
                },
                "id-name": {
                  "summary": "Return ID and name",
                  "description": "Returns only ID and name of the published template",
                  "value": {
                    "template": {
                      "id": 164,
                      "name": "Renamed template"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "all-columns": {
          "summary": "Return all details",
          "response": {
            "template": {
              "id": 164,
              "name": "Renamed template",
              "teamId": 1,
              "description": null,
              "usedApps": ["http"],
              "public": true,
              "published": "2020-12-03T14:11:08.327Z",
              "approved": null,
              "approvedId": null,
              "requestedApproval": false,
              "publishedId": 48,
              "publicUrl": "48-renamed-template",
              "approvedName": null,
              "publishedName": "Renamed template"
            }
          },
          "description": "Returns all details of the published template",
          "parameters": {
            "cols[]": [
              "id",
              "name",
              "teamId",
              "description",
              "usedApps",
              "public",
              "published",
              "approved",
              "approvedId",
              "requestedApproval",
              "publishedId",
              "publicUrl",
              "approvedName",
              "publishedName"
            ]
          },
          "path": "/templates/164/publish"
        },
        "id-name": {
          "summary": "Return ID and name",
          "response": {
            "template": {
              "id": 164,
              "name": "Renamed template"
            }
          },
          "description": "Returns only ID and name of the published template",
          "parameters": {
            "cols[]": ["id", "name"]
          },
          "path": "/templates/164/publish"
        }
      }
    },
    "templates-templateId-request-approval-post": {
      "endpointKey": "templates-templateId-request-approval-post",
      "path": "/templates/{templateId}/request-approval",
      "method": "post",
      "x-published": true,
      "tags": ["Templates"],
      "summary": "Request approval",
      "description": "Requests approval of the published template with the given IDs of its private and published versions. In the response, it returns all details of the template.",
      "security": [
        {
          "token": ["templates:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "templateId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The unique ID of the private template. It can be retrieved from the [List templates](/templates-get) endpoint.",
            "example": 164
          }
        ],
        "query": [
          {
            "name": "templatePublicId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The unique ID of the public version of the approved template. It can be retrieved from the [List templates](/templates-get) endpoint as one of the following IDs: `publishedId` for all published templates that are waiting for approval or not, or `approvedId` for approved templates.",
            "example": 18
          },
          {
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "teamId",
                  "description",
                  "usedApps",
                  "public",
                  "published",
                  "approved",
                  "approvedId",
                  "requestedApproval",
                  "publishedId",
                  "publicUrl",
                  "approvedName",
                  "publishedName"
                ]
              }
            },
            "description": "Specifies the group of values to return. For example, you may want to retrieve only the ID and name of the template you requested approval for.",
            "examples": {
              "all-columns": {
                "summary": "All columns",
                "value": [
                  "id",
                  "name",
                  "teamId",
                  "description",
                  "usedApps",
                  "public",
                  "published",
                  "approved",
                  "approvedId",
                  "requestedApproval",
                  "publishedId",
                  "publicUrl",
                  "approvedName",
                  "publishedName"
                ]
              },
              "id-name": {
                "summary": "Id, name",
                "value": ["id", "name"]
              }
            }
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "template": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "teamId": {
                        "type": "integer"
                      },
                      "teamName": {
                        "type": "string"
                      },
                      "organizationId": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "usedApps": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "public": {
                        "type": "boolean"
                      },
                      "published": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "approved": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "approvedId": {
                        "type": "integer"
                      },
                      "requestedApproval": {
                        "type": "boolean"
                      },
                      "publishedId": {
                        "type": "integer"
                      },
                      "publicUrl": {
                        "type": "string"
                      },
                      "approvedName": {
                        "type": "string"
                      },
                      "publishedName": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "examples": {
                "all-columns": {
                  "summary": "Return all details",
                  "description": "Returns all details of the template requested to be approved",
                  "value": {
                    "template": {
                      "id": 164,
                      "name": "Renamed template",
                      "teamId": 1,
                      "description": null,
                      "usedApps": ["http"],
                      "public": true,
                      "published": "2020-12-03T14:11:08.327Z",
                      "approved": null,
                      "approvedId": null,
                      "requestedApproval": true,
                      "publishedId": 48,
                      "publicUrl": "48-renamed-template",
                      "approvedName": null,
                      "publishedName": "Renamed template"
                    }
                  }
                },
                "id-name": {
                  "summary": "Return ID and name",
                  "description": "Returns only ID and name of the template requested to be approved",
                  "value": {
                    "template": {
                      "id": 164,
                      "name": "Renamed template"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "all-columns": {
          "summary": "Return all details",
          "response": {
            "template": {
              "id": 164,
              "name": "Renamed template",
              "teamId": 1,
              "description": null,
              "usedApps": ["http"],
              "public": true,
              "published": "2020-12-03T14:11:08.327Z",
              "approved": null,
              "approvedId": null,
              "requestedApproval": true,
              "publishedId": 48,
              "publicUrl": "48-renamed-template",
              "approvedName": null,
              "publishedName": "Renamed template"
            }
          },
          "description": "Returns all details of the template requested to be approved",
          "parameters": {
            "templatePublicId": 18,
            "cols[]": [
              "id",
              "name",
              "teamId",
              "description",
              "usedApps",
              "public",
              "published",
              "approved",
              "approvedId",
              "requestedApproval",
              "publishedId",
              "publicUrl",
              "approvedName",
              "publishedName"
            ]
          },
          "path": "/templates/164/request-approval"
        },
        "id-name": {
          "summary": "Return ID and name",
          "response": {
            "template": {
              "id": 164,
              "name": "Renamed template"
            }
          },
          "description": "Returns only ID and name of the template requested to be approved",
          "parameters": {
            "templatePublicId": 18,
            "cols[]": ["id", "name"]
          },
          "path": "/templates/164/request-approval"
        }
      }
    },
    "templates-public-get": {
      "endpointKey": "templates-public-get",
      "path": "/templates/public",
      "method": "get",
      "x-published": true,
      "tags": ["Templates > Public"],
      "summary": "List public (approved) templates",
      "description": "Retrieves a collection of all public (approved) templates that are available for anyone. Returned templates are sorted by usage in descending order.",
      "security": [
        {
          "token": ["templates:read"]
        }
      ],
      "parameters": {
        "path": [],
        "query": [
          {
            "name": "includeEn",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "If this parameter is set to `true`, it means English templates should be included in the response. This is relevant only if the user's language is not English.",
            "example": true
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The name of the template. This parameter allows limiting returned results to the template(s) with the given name.",
            "example": "my first template"
          },
          {
            "name": "usedApps[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": ["http"],
            "description": "The array with the text IDs of the apps used in the templates. This parameter allows you to get only the templates containing specific apps."
          },
          {
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "description",
                  "url",
                  "usedApps",
                  "usage"
                ]
              }
            },
            "description": "Specifies the group of values to return. For example, you may want to retrieve only the names and IDs of the public templates."
          },
          {
            "name": "pg[sortBy]",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The value that will be used to sort returned entities by.",
            "default": "usage"
          },
          {
            "name": "pg[offset]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The value of entities you want to skip before getting entities you need.",
            "default": 0
          },
          {
            "name": "pg[sortDir]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "The sorting order. It accepts the ascending and descending direction specifiers.",
            "default": "desc"
          },
          {
            "name": "pg[limit]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The maximum entities to return.",
            "default": 100,
            "maximum": 10000
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "templatesPublic": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        },
                        "usedApps": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "usage": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "pg": {
                    "type": "object",
                    "properties": {
                      "last": {
                        "type": "string"
                      },
                      "showLast": {
                        "type": "boolean"
                      },
                      "sortBy": {
                        "type": "string"
                      },
                      "sortDir": {
                        "type": "string"
                      },
                      "limit": {
                        "type": "integer"
                      },
                      "offset": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "example": {
                "templatesPublic": [
                  {
                    "id": 13,
                    "name": "Http template example",
                    "description": null,
                    "url": "13-http-template-example",
                    "usedApps": ["http"],
                    "usage": 321
                  },
                  {
                    "id": 17,
                    "name": "Multiple apps template example",
                    "description": null,
                    "url": "16-multiple-apps-template-example",
                    "usedApps": ["discord", "http", "tools", "util", "gmail"],
                    "usage": 52
                  }
                ],
                "pg": {
                  "sortBy": "usage",
                  "limit": 100,
                  "sortDir": "desc",
                  "offset": 0
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "templatesPublic": [
              {
                "id": 13,
                "name": "Http template example",
                "description": null,
                "url": "13-http-template-example",
                "usedApps": ["http"],
                "usage": 321
              },
              {
                "id": 17,
                "name": "Multiple apps template example",
                "description": null,
                "url": "16-multiple-apps-template-example",
                "usedApps": ["discord", "http", "tools", "util", "gmail"],
                "usage": 52
              }
            ],
            "pg": {
              "sortBy": "usage",
              "limit": 100,
              "sortDir": "desc",
              "offset": 0
            }
          },
          "parameters": {
            "includeEn": true,
            "name": "my first template",
            "usedApps[]": ["http"]
          },
          "path": "/templates/public"
        }
      }
    },
    "templates-public-templateUrl-get": {
      "endpointKey": "templates-public-templateUrl-get",
      "path": "/templates/public/{templateUrl}",
      "method": "get",
      "x-published": true,
      "tags": ["Templates > Public"],
      "summary": "Get public (approved) template details",
      "description": "Retrieves details of a public (approved) template with a given `publicUrl`.",
      "security": [
        {
          "token": ["templates:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "templateUrl",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The unique URL of the public (approved) template consisting of the template ID and name. It can be retrieved from the [List templates](/templates-get) endpoint.",
            "example": "16-multiple-apps-template-example"
          }
        ],
        "query": [
          {
            "name": "templatePublicId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The unique ID of the public version of the approved template. It can be retrieved from the [List templates](/templates-get) endpoint as one of the following IDs: `publishedId` for all published templates that are waiting for approval or not, or `approvedId` for approved templates.",
            "example": 18
          },
          {
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "description",
                  "url",
                  "usedApps",
                  "usage"
                ]
              }
            },
            "description": "Specifies the group of values to return. For example, you may want to retrieve only information about the apps used in the template."
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "templatePublic": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      },
                      "usedApps": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "usage": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "example": {
                "templatePublic": {
                  "id": 18,
                  "name": "Multiple apps template example",
                  "description": null,
                  "url": "16-multiple-apps-template-example",
                  "usedApps": ["discord", "http", "tools", "util", "gmail"],
                  "usage": 52
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "templatePublic": {
              "id": 18,
              "name": "Multiple apps template example",
              "description": null,
              "url": "16-multiple-apps-template-example",
              "usedApps": ["discord", "http", "tools", "util", "gmail"],
              "usage": 52
            }
          },
          "parameters": {
            "templatePublicId": 18
          },
          "path": "/templates/public/16-multiple-apps-template-example"
        }
      }
    },
    "templates-public-templateUrl-blueprint-get": {
      "endpointKey": "templates-public-templateUrl-blueprint-get",
      "path": "/templates/public/{templateUrl}/blueprint",
      "method": "get",
      "x-published": true,
      "tags": ["Templates > Public"],
      "summary": "Get public (approved) template blueprint",
      "description": "Retrieves a blueprint of a public (approved) template with a given `publicUrl`.",
      "security": [
        {
          "token": ["templates:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "templateUrl",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The unique URL of the public (approved) template consisting of the template ID and name. It can be retrieved from the [List templates](/templates-get) endpoint.",
            "example": "16-multiple-apps-template-example"
          }
        ],
        "query": [
          {
            "name": "templatePublicId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The unique ID of the public version of the approved template. It can be retrieved from the [List templates](/templates-get) endpoint as one of the following IDs: `publishedId` for all published templates that are waiting for approval or not, or `approvedId` for approved templates.",
            "example": 18
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "blueprint": {
                    "type": "object",
                    "properties": {
                      "flow": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "mapper": {
                              "type": "object",
                              "properties": {
                                "ca": {
                                  "type": "string"
                                },
                                "qs": {
                                  "type": "array"
                                },
                                "url": {
                                  "type": "string",
                                  "format": "uri"
                                },
                                "gzip": {
                                  "type": "boolean"
                                },
                                "method": {
                                  "type": "string"
                                },
                                "headers": {
                                  "type": "array"
                                },
                                "timeout": {
                                  "type": "string"
                                },
                                "authPass": {
                                  "type": "string"
                                },
                                "authUser": {
                                  "type": "string"
                                },
                                "bodyType": {
                                  "type": "string"
                                },
                                "shareCookies": {
                                  "type": "boolean"
                                },
                                "parseResponse": {
                                  "type": "boolean"
                                },
                                "followRedirect": {
                                  "type": "boolean"
                                },
                                "useQuerystring": {
                                  "type": "boolean"
                                },
                                "rejectUnauthorized": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "module": {
                              "type": "string",
                              "format": "uri"
                            },
                            "onerror": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "mapper": {
                                    "type": "object",
                                    "properties": {
                                      "count": {
                                        "type": "string",
                                        "format": "utc-millisec"
                                      },
                                      "retry": {
                                        "type": "boolean"
                                      },
                                      "interval": {
                                        "type": "string",
                                        "format": "utc-millisec"
                                      }
                                    }
                                  },
                                  "module": {
                                    "type": "string",
                                    "format": "uri"
                                  },
                                  "version": {
                                    "type": "integer"
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "properties": {
                                      "expect": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string"
                                            },
                                            "label": {
                                              "type": "string"
                                            },
                                            "required": {
                                              "type": "boolean"
                                            }
                                          }
                                        }
                                      },
                                      "restore": {
                                        "type": "object",
                                        "properties": {
                                          "retry": {
                                            "type": "object",
                                            "properties": {
                                              "mode": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "designer": {
                                        "type": "object",
                                        "properties": {
                                          "x": {
                                            "type": "integer"
                                          },
                                          "y": {
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "parameters": {
                                    "type": "object"
                                  }
                                }
                              }
                            },
                            "version": {
                              "type": "integer"
                            },
                            "metadata": {
                              "type": "object",
                              "properties": {
                                "expect": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "restore": {
                                  "type": "object",
                                  "properties": {
                                    "qs": {
                                      "type": "object",
                                      "properties": {
                                        "mode": {
                                          "type": "string"
                                        },
                                        "items": {
                                          "type": "array"
                                        }
                                      }
                                    },
                                    "method": {
                                      "type": "object",
                                      "properties": {
                                        "mode": {
                                          "type": "string"
                                        },
                                        "label": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "headers": {
                                      "type": "object",
                                      "properties": {
                                        "mode": {
                                          "type": "string"
                                        },
                                        "items": {
                                          "type": "array"
                                        }
                                      }
                                    },
                                    "bodyType": {
                                      "type": "object",
                                      "properties": {
                                        "label": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "designer": {
                                  "type": "object",
                                  "properties": {
                                    "x": {
                                      "type": "integer"
                                    },
                                    "y": {
                                      "type": "integer"
                                    }
                                  }
                                },
                                "parameters": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "label": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "parameters": {
                              "type": "object",
                              "properties": {
                                "handleErrors": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "version": {
                            "type": "integer"
                          },
                          "scenario": {
                            "type": "object",
                            "properties": {
                              "maxErrors": {
                                "type": "integer"
                              },
                              "autoCommit": {
                                "type": "boolean"
                              },
                              "roundtrips": {
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "controller": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "modules": {
                        "type": "object"
                      },
                      "idSequence": {
                        "type": "integer"
                      }
                    }
                  },
                  "scheduling": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "interval": {
                        "type": "integer"
                      }
                    }
                  },
                  "language": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "blueprint": {
                  "flow": [
                    {
                      "id": 1,
                      "mapper": {
                        "url": "https://google.com",
                        "method": "get",
                        "shareCookies": false
                      },
                      "module": "http:ActionGetFile",
                      "version": 3,
                      "metadata": {
                        "expect": [
                          {
                            "name": "url",
                            "type": "url",
                            "label": "URL",
                            "required": true
                          },
                          {
                            "name": "method",
                            "type": "hidden",
                            "label": "Method"
                          },
                          {
                            "name": "shareCookies",
                            "type": "boolean",
                            "label": "Share cookies with other HTTP modules",
                            "required": true
                          }
                        ],
                        "designer": {
                          "x": 0,
                          "y": 0
                        },
                        "parameters": [
                          {
                            "name": "handleErrors",
                            "type": "boolean",
                            "label": "Evaluate all states as errors (except for 2xx and 3xx )",
                            "required": true
                          }
                        ]
                      },
                      "parameters": {
                        "handleErrors": false
                      }
                    }
                  ],
                  "metadata": {
                    "version": 1,
                    "designer": {
                      "orphans": []
                    },
                    "scenario": {
                      "dlq": false,
                      "dataloss": false,
                      "maxErrors": 3,
                      "autoCommit": true,
                      "roundtrips": 1,
                      "sequential": false,
                      "confidential": false,
                      "autoCommitTriggerLast": true,
                      "freshVariables": false
                    }
                  }
                },
                "controller": {
                  "name": "New template",
                  "modules": {},
                  "idSequence": 2
                },
                "scheduling": {
                  "type": "indefinitely",
                  "interval": 900
                },
                "language": "en"
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "blueprint": {
              "flow": [
                {
                  "id": 1,
                  "mapper": {
                    "url": "https://google.com",
                    "method": "get",
                    "shareCookies": false
                  },
                  "module": "http:ActionGetFile",
                  "version": 3,
                  "metadata": {
                    "expect": [
                      {
                        "name": "url",
                        "type": "url",
                        "label": "URL",
                        "required": true
                      },
                      {
                        "name": "method",
                        "type": "hidden",
                        "label": "Method"
                      },
                      {
                        "name": "shareCookies",
                        "type": "boolean",
                        "label": "Share cookies with other HTTP modules",
                        "required": true
                      }
                    ],
                    "designer": {
                      "x": 0,
                      "y": 0
                    },
                    "parameters": [
                      {
                        "name": "handleErrors",
                        "type": "boolean",
                        "label": "Evaluate all states as errors (except for 2xx and 3xx )",
                        "required": true
                      }
                    ]
                  },
                  "parameters": {
                    "handleErrors": false
                  }
                }
              ],
              "metadata": {
                "version": 1,
                "designer": {
                  "orphans": []
                },
                "scenario": {
                  "dlq": false,
                  "dataloss": false,
                  "maxErrors": 3,
                  "autoCommit": true,
                  "roundtrips": 1,
                  "sequential": false,
                  "confidential": false,
                  "autoCommitTriggerLast": true,
                  "freshVariables": false
                }
              }
            },
            "controller": {
              "name": "New template",
              "modules": {},
              "idSequence": 2
            },
            "scheduling": {
              "type": "indefinitely",
              "interval": 900
            },
            "language": "en"
          },
          "parameters": {
            "templatePublicId": 18
          },
          "path": "/templates/public/16-multiple-apps-template-example/blueprint"
        }
      }
    },
    "users-get": {
      "endpointKey": "users-get",
      "path": "/users",
      "method": "get",
      "x-published": true,
      "tags": ["Users"],
      "summary": "List users",
      "description": "Retrieves a collection of all users for a team or an organization with a given ID. Returned users are sorted by name in ascending order.",
      "security": [
        {
          "token": ["user:read"]
        }
      ],
      "parameters": {
        "path": [],
        "query": [
          {
            "description": "The unique ID of the organization whose users will be retrieved. If this parameter is set, the `teamId` parameter must be skipped. For each request either `teamId` or `organizationId` must be defined.",
            "name": "organizationId",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The unique ID of the team whose users will be retrieved. If this parameter is set, the `organizationId` parameter must be skipped. For each request either `teamId` or `organizationId` must be defined.",
            "name": "teamId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "description": "Optional filter parameter.",
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional filter parameter.",
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cols[]",
            "in": "query",
            "description": "An array of columns that should be returned from the API. Can be used to save bandwidth when not all properties are needed.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "email",
                  "language",
                  "timezoneId",
                  "localeId",
                  "countryId",
                  "features",
                  "avatar",
                  "lastLogin"
                ]
              }
            },
            "default": [
              "id",
              "name",
              "email",
              "language",
              "timezoneId",
              "localeId",
              "countryId",
              "features",
              "avatar",
              "lastLogin"
            ]
          },
          {
            "name": "pg[sortBy]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["name"]
            },
            "description": "The value that will be used to sort returned entities by.",
            "default": "name"
          },
          {
            "default": "asc",
            "name": "pg[sortDir]",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "The sorting order. It accepts the ascending and descending direction specifiers."
          },
          {
            "name": "pg[offset]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The value of entities you want to skip before getting entities you need.",
            "default": 0
          },
          {
            "default": 10,
            "maximum": 10000,
            "name": "pg[limit]",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The value of maximum entities to return."
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "users": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string",
                          "format": "email"
                        },
                        "language": {
                          "type": "string"
                        },
                        "timezoneId": {
                          "type": "integer"
                        },
                        "localeId": {
                          "type": "integer"
                        },
                        "countryId": {
                          "type": "integer"
                        },
                        "features": {
                          "type": "object",
                          "properties": {
                            "allow_apps": {
                              "type": "boolean"
                            }
                          }
                        },
                        "avatar": {
                          "type": "string",
                          "format": "uri"
                        },
                        "timezone": {
                          "type": "string"
                        },
                        "locale": {
                          "type": "string"
                        },
                        "emailNotifications": {
                          "type": "null"
                        },
                        "usersAdminsRoleId": {
                          "type": "integer"
                        },
                        "hasPassword": {
                          "type": "boolean"
                        },
                        "tfaEnabled": {
                          "type": "boolean"
                        },
                        "forceSetPassword": {
                          "type": "boolean"
                        },
                        "userOrganizationRoles": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "usersRoleId": {
                                "type": "integer"
                              },
                              "userId": {
                                "type": "integer"
                              },
                              "organizationId": {
                                "type": "integer"
                              },
                              "invitation": {
                                "type": "null"
                              }
                            }
                          }
                        },
                        "userTeamRoles": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "usersRoleId": {
                                "type": "integer"
                              },
                              "userId": {
                                "type": "integer"
                              },
                              "teamId": {
                                "type": "integer"
                              },
                              "changeable": {
                                "type": "boolean"
                              }
                            }
                          }
                        },
                        "lastlogin": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  },
                  "pg": {
                    "type": "object",
                    "properties": {
                      "last": {
                        "type": "string",
                        "description": "Shown only when using the `last` based pagination."
                      },
                      "showLast": {
                        "type": "boolean",
                        "description": "Shown only when using the `last` based pagination."
                      },
                      "sortBy": {
                        "type": "string"
                      },
                      "sortDir": {
                        "type": "string"
                      },
                      "limit": {
                        "type": "integer"
                      },
                      "offset": {
                        "type": "integer",
                        "description": "Shown only when using the `offset` based pagination."
                      }
                    }
                  },
                  "membershipPromises": {
                    "type": "array",
                    "description": "Works only on Cloud Instances",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "legacyUserId": {
                          "type": "number"
                        },
                        "organizationRoleId": {
                          "type": "number"
                        },
                        "teamRoleId": {
                          "type": "number"
                        },
                        "organizationId": {
                          "type": "number"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "legacyEmail": {
                          "type": "string"
                        },
                        "legacyName": {
                          "type": "string"
                        },
                        "avatar": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "users": [
                  {
                    "id": 1,
                    "name": "Administrator",
                    "email": "admin@make.cloud",
                    "language": "en",
                    "timezoneId": 113,
                    "localeId": 18,
                    "countryId": 202,
                    "features": {},
                    "avatar": "https://secure.gravatar.com/avatar/6b1a74d20d925c12a73af32bf0dd7164.jpg?d=mm",
                    "lastLogin": "2022-04-04T10:23:34.347Z"
                  }
                ],
                "pg": {
                  "sortBy": "name",
                  "sortDir": "desc",
                  "offset": 0,
                  "limit": 10
                },
                "membershipPromises": [
                  {
                    "id": 1,
                    "legacyUserId": 238,
                    "organizationRoleId": 11,
                    "teamRoleId": 1,
                    "organizationId": 666,
                    "createdAt": "2022-01-01T12:00:00.000Z",
                    "legacyEmail": "user@example.com",
                    "legacyName": "User Example",
                    "avatar": "https://secure.gravatar.com/avatar/6b1a74d20d925c12a73af32bf0dd7164.jpg?d=mm"
                  }
                ]
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "users": [
              {
                "id": 1,
                "name": "Administrator",
                "email": "admin@make.cloud",
                "language": "en",
                "timezoneId": 113,
                "localeId": 18,
                "countryId": 202,
                "features": {},
                "avatar": "https://secure.gravatar.com/avatar/6b1a74d20d925c12a73af32bf0dd7164.jpg?d=mm",
                "lastLogin": "2022-04-04T10:23:34.347Z"
              }
            ],
            "pg": {
              "sortBy": "name",
              "sortDir": "desc",
              "offset": 0,
              "limit": 10
            },
            "membershipPromises": [
              {
                "id": 1,
                "legacyUserId": 238,
                "organizationRoleId": 11,
                "teamRoleId": 1,
                "organizationId": 666,
                "createdAt": "2022-01-01T12:00:00.000Z",
                "legacyEmail": "user@example.com",
                "legacyName": "User Example",
                "avatar": "https://secure.gravatar.com/avatar/6b1a74d20d925c12a73af32bf0dd7164.jpg?d=mm"
              }
            ]
          },
          "parameters": {
            "teamId": 1
          },
          "path": "/users"
        }
      }
    },
    "users-userId-patch": {
      "endpointKey": "users-userId-patch",
      "path": "/users/{userId}",
      "method": "patch",
      "x-published": true,
      "tags": ["Users"],
      "summary": "Update user",
      "description": "Updates a user with a given ID by passing new data in the request body. Any property that is not provided will be left unchanged. As the response, it returns all details of the updated user including properties that were not changed.",
      "security": [
        {
          "token": ["user:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "required": true,
            "name": "userId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "The unique ID of the user. It can be retrieved from the [List users](/users-get) endpoint.",
            "example": 1
          }
        ],
        "query": [],
        "body": [
          {
            "name": "name",
            "schema": {
              "type": "string",
              "description": "The name of the user. The name must be at most 250 characters long and does not need to be unique."
            },
            "example": "admin",
            "required": false,
            "description": "The name of the user. The name must be at most 250 characters long and does not need to be unique."
          },
          {
            "name": "language",
            "schema": {
              "type": "string",
              "description": "The standardized language code. It sets the Make environment language."
            },
            "example": "en",
            "required": false,
            "description": "The standardized language code. It sets the Make environment language."
          },
          {
            "name": "timezoneId",
            "schema": {
              "type": "integer",
              "description": "The timezone ID corresponding to the local time. The list of all timezones can be retrieved from the `GET /enums/timezones` endpoint."
            },
            "example": 113,
            "required": false,
            "description": "The timezone ID corresponding to the local time. The list of all timezones can be retrieved from the `GET /enums/timezones` endpoint."
          },
          {
            "name": "localeId",
            "schema": {
              "type": "integer",
              "description": "The location ID. It sets the Make environment date formats, hour formats, decimal separators, etc. The list of all locales can be retrieved from the `GET /enums/locales` endpoint."
            },
            "example": 18,
            "required": false,
            "description": "The location ID. It sets the Make environment date formats, hour formats, decimal separators, etc. The list of all locales can be retrieved from the `GET /enums/locales` endpoint."
          },
          {
            "name": "countryId",
            "schema": {
              "type": "integer",
              "description": "The country ID. It sets the region of use."
            },
            "example": 1,
            "required": false,
            "description": "The country ID. It sets the region of use."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the user. The name must be at most 250 characters long and does not need to be unique."
                },
                "language": {
                  "type": "string",
                  "description": "The standardized language code. It sets the Make environment language."
                },
                "timezoneId": {
                  "type": "integer",
                  "description": "The timezone ID corresponding to the local time. The list of all timezones can be retrieved from the `GET /enums/timezones` endpoint."
                },
                "localeId": {
                  "type": "integer",
                  "description": "The location ID. It sets the Make environment date formats, hour formats, decimal separators, etc. The list of all locales can be retrieved from the `GET /enums/locales` endpoint."
                },
                "countryId": {
                  "type": "integer",
                  "description": "The country ID. It sets the region of use."
                }
              }
            },
            "example": {
              "name": "admin",
              "language": "en",
              "localeId": 18,
              "timezoneId": 113,
              "countryId": 1
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string",
                        "format": "email"
                      },
                      "language": {
                        "type": "string"
                      },
                      "timezoneId": {
                        "type": "integer"
                      },
                      "localeId": {
                        "type": "integer"
                      },
                      "countryId": {
                        "type": "integer"
                      },
                      "features": {
                        "type": "object",
                        "properties": {
                          "allow_apps": {
                            "type": "boolean"
                          }
                        }
                      },
                      "avatar": {
                        "type": "string",
                        "format": "uri"
                      },
                      "timezone": {
                        "type": "string"
                      },
                      "locale": {
                        "type": "string"
                      },
                      "emailNotifications": {
                        "type": "null"
                      },
                      "usersAdminsRoleId": {
                        "type": "integer"
                      },
                      "hasPassword": {
                        "type": "boolean"
                      },
                      "tfaEnabled": {
                        "type": "boolean"
                      },
                      "forceSetPassword": {
                        "type": "boolean"
                      },
                      "userOrganizationRoles": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "usersRoleId": {
                              "type": "integer"
                            },
                            "userId": {
                              "type": "integer"
                            },
                            "organizationId": {
                              "type": "integer"
                            },
                            "invitation": {
                              "type": "null"
                            }
                          }
                        }
                      },
                      "userTeamRoles": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "usersRoleId": {
                              "type": "integer"
                            },
                            "userId": {
                              "type": "integer"
                            },
                            "teamId": {
                              "type": "integer"
                            },
                            "changeable": {
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "lastlogin": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              },
              "example": {
                "user": {
                  "id": 1,
                  "name": "Administrator",
                  "email": "admin@make.cloud",
                  "language": "en",
                  "timezoneId": 113,
                  "localeId": 18,
                  "countryId": 202,
                  "features": {},
                  "avatar": "https://secure.gravatar.com/avatar/6b1a74d20d925c12a73af32bf0dd7164.jpg?d=mm",
                  "lastLogin": "2022-04-04T10:23:34.347Z"
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "user": {
              "id": 1,
              "name": "Administrator",
              "email": "admin@make.cloud",
              "language": "en",
              "timezoneId": 113,
              "localeId": 18,
              "countryId": 202,
              "features": {},
              "avatar": "https://secure.gravatar.com/avatar/6b1a74d20d925c12a73af32bf0dd7164.jpg?d=mm",
              "lastLogin": "2022-04-04T10:23:34.347Z"
            }
          },
          "requestBody": {
            "name": "admin",
            "language": "en",
            "localeId": 18,
            "timezoneId": 113,
            "countryId": 1
          },
          "path": "/users/1"
        }
      }
    },
    "users-userId-attributes-email-put": {
      "endpointKey": "users-userId-attributes-email-put",
      "path": "/users/{userId}/attributes/email",
      "method": "put",
      "x-published": true,
      "tags": ["Users"],
      "summary": "Update user email",
      "description": "Updates an email for a user with a given ID by passing new data in the request body. It replaces the entire resource with the new values. In the response, it returns the confirmation if the email was changed.",
      "security": [
        {
          "token": ["user:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "required": true,
            "name": "userId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "The unique ID of the user. It can be retrieved from the [List users](/users-get) endpoint.",
            "example": 1
          }
        ],
        "query": [],
        "body": [
          {
            "name": "email",
            "schema": {
              "type": "string",
              "format": "email",
              "description": "The new user email address."
            },
            "example": "aaa@bbbccc.com",
            "required": true,
            "description": "The new user email address."
          },
          {
            "name": "password",
            "schema": {
              "type": "string",
              "format": "password",
              "description": "The current user password."
            },
            "example": "123456Ab-",
            "required": true,
            "description": "The current user password."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "The new user email address."
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "description": "The current user password."
                }
              },
              "required": ["email", "password"]
            },
            "example": {
              "email": "aaa@bbbccc.com",
              "password": "123456Ab-"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "changed": {
                    "type": "boolean"
                  },
                  "emailSent": {
                    "type": "boolean"
                  }
                }
              },
              "example": {
                "changed": false,
                "emailSent": true
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "changed": false,
            "emailSent": true
          },
          "requestBody": {
            "email": "aaa@bbbccc.com",
            "password": "123456Ab-"
          },
          "path": "/users/1/attributes/email"
        }
      }
    },
    "users-userId-attributes-password-put": {
      "endpointKey": "users-userId-attributes-password-put",
      "path": "/users/{userId}/attributes/password",
      "method": "put",
      "x-published": true,
      "tags": ["Users"],
      "summary": "Update user password",
      "description": "Updates a password for a user with a given ID by passing new data in the request body. It replaces the entire resource with the new values. In the response, it returns the confirmation if the password was changed. This endpoint corresponds to changing a password in the user profile when the user is logged in to the Make interface.",
      "security": [
        {
          "token": ["user:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "required": true,
            "name": "userId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "The unique ID of the user. It can be retrieved from the [List users](/users-get) endpoint.",
            "example": 1
          }
        ],
        "query": [],
        "body": [
          {
            "name": "currentPassword",
            "schema": {
              "type": "string",
              "format": "password",
              "description": "The current user password."
            },
            "example": "123456Ab.",
            "required": true,
            "description": "The current user password."
          },
          {
            "name": "newPassword1",
            "schema": {
              "type": "string",
              "format": "password",
              "description": "The new user password. The password must be at least 9 characters long and must contain at least one uppercase letter, at least one number, and at least one special character."
            },
            "example": "123456Ab-",
            "required": true,
            "description": "The new user password. The password must be at least 9 characters long and must contain at least one uppercase letter, at least one number, and at least one special character."
          },
          {
            "name": "newPassword2",
            "schema": {
              "type": "string",
              "format": "password",
              "description": "The new user password for confirmation. This password must be the same as the password in the `newPassword1` property."
            },
            "example": "123456Ab-",
            "required": true,
            "description": "The new user password for confirmation. This password must be the same as the password in the `newPassword1` property."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "currentPassword": {
                  "type": "string",
                  "format": "password",
                  "description": "The current user password."
                },
                "newPassword1": {
                  "type": "string",
                  "format": "password",
                  "description": "The new user password. The password must be at least 9 characters long and must contain at least one uppercase letter, at least one number, and at least one special character."
                },
                "newPassword2": {
                  "type": "string",
                  "format": "password",
                  "description": "The new user password for confirmation. This password must be the same as the password in the `newPassword1` property."
                }
              },
              "required": ["currentPassword", "newPassword1", "newPassword2"]
            },
            "example": {
              "currentPassword": "123456Ab.",
              "newPassword1": "123456Ab-",
              "newPassword2": "123456Ab-"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "changed": {
                    "type": "boolean"
                  }
                }
              },
              "example": {
                "changed": true
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "changed": true
          },
          "requestBody": {
            "currentPassword": "123456Ab.",
            "newPassword1": "123456Ab-",
            "newPassword2": "123456Ab-"
          },
          "path": "/users/1/attributes/password"
        }
      }
    },
    "users-password-reset-demand-post": {
      "endpointKey": "users-password-reset-demand-post",
      "path": "/users/password-reset-demand",
      "method": "post",
      "x-published": true,
      "tags": ["Users"],
      "summary": "Send password reset demand",
      "description": "Sends password reset demand for a user with an email passed in the request body. This endpoint corresponds to the **Lost password** function on the login page in the Make interface. In the response, it returns the confirmation if the demand was sent successfully.",
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "The email of the user for who the password should be reset."
                }
              },
              "required": ["email"]
            },
            "example": {
              "email": "ee@eee.com"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ok": {
                    "type": "integer"
                  }
                }
              },
              "example": {
                "ok": 1
              }
            }
          }
        }
      },
      "parameters": {
        "body": [
          {
            "name": "email",
            "schema": {
              "type": "string",
              "format": "email",
              "description": "The email of the user for who the password should be reset."
            },
            "example": "ee@eee.com",
            "required": true,
            "description": "The email of the user for who the password should be reset."
          }
        ]
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "ok": 1
          },
          "requestBody": {
            "email": "ee@eee.com"
          },
          "path": "/users/password-reset-demand"
        }
      }
    },
    "users-password-reset-get": {
      "endpointKey": "users-password-reset-get",
      "path": "/users/password-reset",
      "method": "get",
      "x-published": true,
      "tags": ["Users"],
      "summary": "Set session for resetting lost password",
      "description": "Checks a hash and sets a session for the [Reset lost password](/users-password-reset-post) endpoint. This endpoint corresponds to clicking the **Reset password** link in the **Password reset** email.",
      "parameters": {
        "path": [],
        "query": [
          {
            "name": "hash",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The unique hash of the password reset session.",
            "example": "fab680b60044adb766128e713e44e15b"
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ok": {
                    "type": "integer"
                  }
                }
              },
              "example": {
                "ok": 1
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "ok": 1
          },
          "parameters": {
            "hash": "fab680b60044adb766128e713e44e15b"
          },
          "path": "/users/password-reset"
        }
      }
    },
    "users-password-reset-post": {
      "endpointKey": "users-password-reset-post",
      "path": "/users/password-reset",
      "method": "post",
      "x-published": true,
      "tags": ["Users"],
      "summary": "Reset lost password",
      "description": "Updates a password for a user based on the session created when calling the [Prepare session for password reset](/users-password-reset-get) endpoint. This endpoint corresponds to setting a new password on the **Lost password** page in the Make interface.",
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "newPassword1": {
                  "type": "string",
                  "description": "The new user password."
                },
                "newPassword2": {
                  "type": "string",
                  "description": "This password must be the same as the password in the `newPassword1` property."
                }
              },
              "required": ["newPassword1", "newPassword2"]
            },
            "example": {
              "newPassword1": "Aa123456.",
              "newPassword2": "Aa123456."
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ok": {
                    "type": "integer"
                  }
                }
              },
              "example": {
                "ok": 1
              }
            }
          }
        }
      },
      "parameters": {
        "body": [
          {
            "name": "newPassword1",
            "schema": {
              "type": "string",
              "description": "The new user password."
            },
            "example": "Aa123456.",
            "required": true,
            "description": "The new user password."
          },
          {
            "name": "newPassword2",
            "schema": {
              "type": "string",
              "description": "This password must be the same as the password in the `newPassword1` property."
            },
            "example": "Aa123456.",
            "required": true,
            "description": "This password must be the same as the password in the `newPassword1` property."
          }
        ]
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "ok": 1
          },
          "requestBody": {
            "newPassword1": "Aa123456.",
            "newPassword2": "Aa123456."
          },
          "path": "/users/password-reset"
        }
      }
    },
    "users-me-get": {
      "endpointKey": "users-me-get",
      "path": "/users/me",
      "method": "get",
      "x-published": true,
      "tags": ["Users > Me"],
      "summary": "Current user data",
      "description": "Retrieves data about the authenticated user. Refer to the `cols[]` parameter accepted values to get more information about the currently authenticated user.",
      "parameters": {
        "path": [],
        "query": [
          {
            "name": "includeInvitedOrg",
            "description": "Set this parameter to `true` if you want to get also the user roles in organizations with pending invitation. The default value is `false`.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "examples": {
              "all-cols": {
                "value": true
              }
            }
          },
          {
            "description": "Specifies columns that are returned in the response. Use the `cols[]` parameter for every column that you want to return in the response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get both `key1` and `key2` columns in the response.\n\n[Check the \"Filtering\" section for a full example.](https://www.make.com/en/api-documentation/filtering)",
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "email",
                  "language",
                  "timezoneId",
                  "localeId",
                  "countryId",
                  "features",
                  "avatar",
                  "timezone",
                  "locale",
                  "emailNotifications",
                  "usersAdminsRoleId",
                  "userOrganizationRoles",
                  "userTeamRoles",
                  "forceSetPassword",
                  "hasPassword",
                  "tfaEnabled",
                  "isAffiliatePartner"
                ]
              }
            },
            "examples": {
              "all-cols": {
                "value": [
                  "id",
                  "name",
                  "email",
                  "language",
                  "timezoneId",
                  "localeId",
                  "countryId",
                  "features",
                  "avatar",
                  "timezone",
                  "locale",
                  "emailNotifications",
                  "usersAdminsRoleId",
                  "userOrganizationRoles",
                  "userTeamRoles",
                  "forceSetPassword",
                  "hasPassword",
                  "tfaEnabled",
                  "isAffiliatePartner"
                ]
              }
            }
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "authUser": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string",
                        "format": "email"
                      },
                      "language": {
                        "type": "string"
                      },
                      "timezoneId": {
                        "type": "integer"
                      },
                      "localeId": {
                        "type": "integer"
                      },
                      "countryId": {
                        "type": "integer"
                      },
                      "features": {
                        "type": "object",
                        "properties": {
                          "allow_apps": {
                            "type": "boolean"
                          }
                        }
                      },
                      "avatar": {
                        "type": "string",
                        "format": "uri"
                      },
                      "timezone": {
                        "type": "string"
                      },
                      "locale": {
                        "type": "string"
                      },
                      "emailNotifications": {
                        "type": "null"
                      },
                      "usersAdminsRoleId": {
                        "type": "integer"
                      },
                      "hasPassword": {
                        "type": "boolean"
                      },
                      "tfaEnabled": {
                        "type": "boolean"
                      },
                      "forceSetPassword": {
                        "type": "boolean"
                      },
                      "userOrganizationRoles": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "usersRoleId": {
                              "type": "integer"
                            },
                            "userId": {
                              "type": "integer"
                            },
                            "organizationId": {
                              "type": "integer"
                            },
                            "invitation": {
                              "type": "null"
                            }
                          }
                        }
                      },
                      "userTeamRoles": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "usersRoleId": {
                              "type": "integer"
                            },
                            "userId": {
                              "type": "integer"
                            },
                            "teamId": {
                              "type": "integer"
                            },
                            "changeable": {
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "lastlogin": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              },
              "examples": {
                "default-cols": {
                  "summary": "Current user",
                  "description": "Get information about the currently authenticated user.",
                  "value": {
                    "authUser": {
                      "id": 1,
                      "name": "Martin",
                      "email": "admin@make.cloud",
                      "language": "en",
                      "timezoneId": 113,
                      "localeId": 18,
                      "countryId": 1,
                      "features": {
                        "allow_apps": true
                      },
                      "avatar": "https://secure.gravatar.com/avatar/6b1a74d20d925c12a73af32bf0dd7164.jpg?d=mm",
                      "timezone": "Europe/Prague",
                      "locale": "cs",
                      "emailNotifications": null
                    }
                  }
                },
                "all-cols": {
                  "summary": "Get all information",
                  "description": "Get all available information about the currently authenticated user.",
                  "value": {
                    "authUser": {
                      "id": 1,
                      "name": "Martin",
                      "email": "admin@make.cloud",
                      "language": "en",
                      "timezoneId": 113,
                      "localeId": 18,
                      "countryId": 1,
                      "features": {
                        "allow_apps": true
                      },
                      "avatar": "https://secure.gravatar.com/avatar/6b1a74d20d925c12a73af32bf0dd7164.jpg?d=mm",
                      "timezone": "Europe/Prague",
                      "locale": "cs",
                      "emailNotifications": null,
                      "usersAdminsRoleId": 1,
                      "hasPassword": true,
                      "tfaEnabled": false,
                      "forceSetPassword": false,
                      "userOrganizationRoles": [
                        {
                          "usersRoleId": 11,
                          "userId": 1,
                          "organizationId": 1,
                          "invitation": null
                        },
                        {
                          "usersRoleId": 11,
                          "userId": 1,
                          "organizationId": 3,
                          "invitation": null
                        }
                      ],
                      "userTeamRoles": [
                        {
                          "usersRoleId": 1,
                          "userId": 1,
                          "teamId": 1,
                          "changeable": false
                        },
                        {
                          "usersRoleId": 1,
                          "userId": 1,
                          "teamId": 2,
                          "changeable": false
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "default-cols": {
          "summary": "Current user",
          "response": {
            "authUser": {
              "id": 1,
              "name": "Martin",
              "email": "admin@make.cloud",
              "language": "en",
              "timezoneId": 113,
              "localeId": 18,
              "countryId": 1,
              "features": {
                "allow_apps": true
              },
              "avatar": "https://secure.gravatar.com/avatar/6b1a74d20d925c12a73af32bf0dd7164.jpg?d=mm",
              "timezone": "Europe/Prague",
              "locale": "cs",
              "emailNotifications": null
            }
          },
          "description": "Get information about the currently authenticated user.",
          "parameters": {},
          "path": "/users/me"
        },
        "all-cols": {
          "summary": "Get all information",
          "response": {
            "authUser": {
              "id": 1,
              "name": "Martin",
              "email": "admin@make.cloud",
              "language": "en",
              "timezoneId": 113,
              "localeId": 18,
              "countryId": 1,
              "features": {
                "allow_apps": true
              },
              "avatar": "https://secure.gravatar.com/avatar/6b1a74d20d925c12a73af32bf0dd7164.jpg?d=mm",
              "timezone": "Europe/Prague",
              "locale": "cs",
              "emailNotifications": null,
              "usersAdminsRoleId": 1,
              "hasPassword": true,
              "tfaEnabled": false,
              "forceSetPassword": false,
              "userOrganizationRoles": [
                {
                  "usersRoleId": 11,
                  "userId": 1,
                  "organizationId": 1,
                  "invitation": null
                },
                {
                  "usersRoleId": 11,
                  "userId": 1,
                  "organizationId": 3,
                  "invitation": null
                }
              ],
              "userTeamRoles": [
                {
                  "usersRoleId": 1,
                  "userId": 1,
                  "teamId": 1,
                  "changeable": false
                },
                {
                  "usersRoleId": 1,
                  "userId": 1,
                  "teamId": 2,
                  "changeable": false
                }
              ]
            }
          },
          "description": "Get all available information about the currently authenticated user.",
          "parameters": {
            "includeInvitedOrg": true,
            "cols[]": [
              "id",
              "name",
              "email",
              "language",
              "timezoneId",
              "localeId",
              "countryId",
              "features",
              "avatar",
              "timezone",
              "locale",
              "emailNotifications",
              "usersAdminsRoleId",
              "userOrganizationRoles",
              "userTeamRoles",
              "forceSetPassword",
              "hasPassword",
              "tfaEnabled",
              "isAffiliatePartner"
            ]
          },
          "path": "/users/me"
        }
      }
    },
    "users-me-organization-invitations-get": {
      "endpointKey": "users-me-organization-invitations-get",
      "path": "/users/me/organization-invitations",
      "method": "get",
      "x-published": true,
      "tags": ["Users > Me"],
      "summary": "User Organization invitations",
      "description": "Retrieves organization invitations of the currently authenticated user.",
      "security": [
        {
          "token": ["user:read"]
        }
      ],
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userOrganizationInvitations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "hash": {
                          "type": "string"
                        },
                        "invitation": {
                          "type": "string"
                        },
                        "usersRoleId": {
                          "type": "integer"
                        },
                        "organizationId": {
                          "type": "integer"
                        },
                        "organizationName": {
                          "type": "string"
                        },
                        "zone": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "userOrganizationInvitations": [
                  {
                    "hash": "e99ca895-4c54-4d13-b83a-8ab37c35f17a",
                    "organizationId": 10,
                    "organizationName": "Organization 10",
                    "usersRoleId": 12,
                    "invitation": "pending"
                  },
                  {
                    "hash": "5cd8b8c3-cb5c-4bd8-8d31-4b92fcdc7768",
                    "organizationId": 13,
                    "organizationName": "Organization 13",
                    "usersRoleId": 12,
                    "invitation": "expired"
                  }
                ]
              }
            }
          }
        }
      },
      "parameters": {
        "body": []
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "userOrganizationInvitations": [
              {
                "hash": "e99ca895-4c54-4d13-b83a-8ab37c35f17a",
                "organizationId": 10,
                "organizationName": "Organization 10",
                "usersRoleId": 12,
                "invitation": "pending"
              },
              {
                "hash": "5cd8b8c3-cb5c-4bd8-8d31-4b92fcdc7768",
                "organizationId": 13,
                "organizationName": "Organization 13",
                "usersRoleId": 12,
                "invitation": "expired"
              }
            ]
          },
          "path": "/users/me/organization-invitations"
        }
      }
    },
    "users-me-api-tokens-get": {
      "endpointKey": "users-me-api-tokens-get",
      "path": "/users/me/api-tokens",
      "method": "get",
      "x-published": true,
      "tags": ["Users > API Tokens"],
      "summary": "List users API tokens",
      "description": "Gets the API tokens of the currently authenticated user.",
      "security": [
        {
          "token": ["user:read"]
        }
      ],
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiTokens": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string"
                        },
                        "scope": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "uri"
                          }
                        },
                        "created": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "label": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "apiTokens": [
                  {
                    "token": "2544847b-****-****-****-************",
                    "scope": ["apps:write"],
                    "created": "2019-11-05T09:22:31.249Z",
                    "label": "token dva write"
                  },
                  {
                    "token": "40aff759-****-****-****-************",
                    "scope": ["apps:read"],
                    "created": "2019-11-05T09:22:22.615Z",
                    "label": "token one read"
                  }
                ]
              }
            }
          }
        }
      },
      "parameters": {
        "body": []
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "apiTokens": [
              {
                "token": "2544847b-****-****-****-************",
                "scope": ["apps:write"],
                "created": "2019-11-05T09:22:31.249Z",
                "label": "token dva write"
              },
              {
                "token": "40aff759-****-****-****-************",
                "scope": ["apps:read"],
                "created": "2019-11-05T09:22:22.615Z",
                "label": "token one read"
              }
            ]
          },
          "path": "/users/me/api-tokens"
        }
      }
    },
    "users-me-api-tokens-post": {
      "endpointKey": "users-me-api-tokens-post",
      "path": "/users/me/api-tokens",
      "method": "post",
      "x-published": true,
      "tags": ["Users > Me > API Tokens"],
      "summary": "Create new API token",
      "description": "Create a new API token for the currently authenticated user. Specify the API token scopes in the `scope` array parameter.",
      "security": [
        {
          "token": ["user:write"]
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "description": "The API token label visible in the Make user profile."
                },
                "scope": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  },
                  "description": "The API scopes provided to the API token. The API scopes determine the scope of operations that you can do with the API token.\n\nCheck the list of all existing Make API scopes with the API call `GET /enums/user-api-tokes-scopes`."
                }
              },
              "required": ["label", "scope"]
            },
            "example": {
              "label": "example token",
              "scope": ["apps:read", "apps:write"]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiToken": {
                    "type": "object",
                    "properties": {
                      "token": {
                        "type": "string"
                      },
                      "scope": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "created": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "label": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "example": {
                "apiToken": {
                  "token": "7615989d-d213-48dc-b625-27133ae3f1a8",
                  "scope": ["apps:read", "apps:write"],
                  "created": "2019-11-06T14:37:51.493Z",
                  "label": "example token"
                }
              }
            }
          }
        }
      },
      "parameters": {
        "body": [
          {
            "name": "label",
            "schema": {
              "type": "string",
              "description": "The API token label visible in the Make user profile."
            },
            "example": "example token",
            "required": true,
            "description": "The API token label visible in the Make user profile."
          },
          {
            "name": "scope",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "description": "The API scopes provided to the API token. The API scopes determine the scope of operations that you can do with the API token.\n\nCheck the list of all existing Make API scopes with the API call `GET /enums/user-api-tokes-scopes`."
            },
            "example": ["apps:read", "apps:write"],
            "required": true,
            "description": "The API scopes provided to the API token. The API scopes determine the scope of operations that you can do with the API token.\n\nCheck the list of all existing Make API scopes with the API call `GET /enums/user-api-tokes-scopes`."
          }
        ]
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "apiToken": {
              "token": "7615989d-d213-48dc-b625-27133ae3f1a8",
              "scope": ["apps:read", "apps:write"],
              "created": "2019-11-06T14:37:51.493Z",
              "label": "example token"
            }
          },
          "requestBody": {
            "label": "example token",
            "scope": ["apps:read", "apps:write"]
          },
          "path": "/users/me/api-tokens"
        }
      }
    },
    "users-me-api-tokens-timestamp-delete": {
      "endpointKey": "users-me-api-tokens-timestamp-delete",
      "path": "/users/me/api-tokens/{timestamp}",
      "method": "delete",
      "x-published": true,
      "tags": ["Users > API Tokens"],
      "summary": "Delete API token",
      "description": "Deletes currently authenticated user's API token with the specified creation timestamp. Get the API token creation timestamp with the API call `GET /users/me/api-tokens` in the parameter value `created`. Copy the timestamp string to the API call path to delete the API token.",
      "security": [
        {
          "token": ["user:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "timestamp",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": true,
            "description": "The timestamp of the moment when you created the API key in the ISO 8601 compliant format.",
            "example": "2020-03-27T05:53:27.368Z"
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiToken": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "example": {
                "apiToken": "2020-03-27T05:53:27.368Z"
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "apiToken": "2020-03-27T05:53:27.368Z"
          },
          "path": "/users/me/api-tokens/2020-03-27T05:53:27.368Z"
        }
      }
    },
    "users-userId-user-team-roles-get": {
      "endpointKey": "users-userId-user-team-roles-get",
      "path": "/users/{userId}/user-team-roles",
      "method": "get",
      "x-published": true,
      "tags": ["Users > User team roles"],
      "summary": "List user roles",
      "description": "Gets team roles of the user with the specified `userId`. The response contains user's team role ID for all teams the user is part of. Get the mapping of the `userRoleId` and the user role `name` with the API call `GET /users/roles`.",
      "security": [
        {
          "token": ["user:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "userId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the user.",
            "example": 111
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userTeamRoles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "usersRoleId": {
                          "type": "integer"
                        },
                        "userId": {
                          "type": "integer"
                        },
                        "teamId": {
                          "type": "integer"
                        },
                        "changeable": {
                          "type": "boolean"
                        },
                        "ssoPending": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "userTeamRoles": [
                  {
                    "usersRoleId": 3,
                    "userId": 13,
                    "teamId": 1,
                    "changeable": true
                  },
                  {
                    "usersRoleId": 1,
                    "userId": 13,
                    "teamId": 21,
                    "changeable": true
                  }
                ]
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "userTeamRoles": [
              {
                "usersRoleId": 3,
                "userId": 13,
                "teamId": 1,
                "changeable": true
              },
              {
                "usersRoleId": 1,
                "userId": 13,
                "teamId": 21,
                "changeable": true
              }
            ]
          },
          "path": "/users/111/user-team-roles"
        }
      }
    },
    "users-userId-user-team-roles-teamId-get": {
      "endpointKey": "users-userId-user-team-roles-teamId-get",
      "path": "/users/{userId}/user-team-roles/{teamId}",
      "method": "get",
      "x-published": true,
      "tags": ["Users > User team roles"],
      "summary": "Get user team role detail",
      "description": "Gets user role detail in the team with the specified `teamId`. Get the mapping of the `userRoleId` and the user role `name` with the API call `GET /users/roles`.",
      "security": [
        {
          "token": ["user:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "userId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the user.",
            "example": 111
          },
          {
            "name": "teamId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the team.",
            "example": 22
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userTeamRole": {
                    "type": "object",
                    "properties": {
                      "usersRoleId": {
                        "type": "integer"
                      },
                      "userId": {
                        "type": "integer"
                      },
                      "teamId": {
                        "type": "integer"
                      },
                      "changeable": {
                        "type": "boolean"
                      },
                      "ssoPending": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "example": {
                "userTeamRole": {
                  "usersRoleId": 3,
                  "userId": 13,
                  "teamId": 1,
                  "changeable": true
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "userTeamRole": {
              "usersRoleId": 3,
              "userId": 13,
              "teamId": 1,
              "changeable": true
            }
          },
          "path": "/users/111/user-team-roles/22"
        }
      }
    },
    "users-userId-user-team-roles-teamId-post": {
      "endpointKey": "users-userId-user-team-roles-teamId-post",
      "path": "/users/{userId}/user-team-roles/{teamId}",
      "method": "post",
      "x-published": true,
      "tags": ["Users > User team roles"],
      "summary": "Update user role",
      "description": "Updates the user role in the team with the specified `teamId`. Get the mapping of the `userRoleId` and the user role `name` with the API call `GET /users/roles`.",
      "security": [
        {
          "token": ["user:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "userId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the user.",
            "example": 111
          },
          {
            "name": "teamId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the team.",
            "example": 22
          }
        ],
        "query": [],
        "body": [
          {
            "name": "usersRoleId",
            "schema": {
              "type": "integer",
              "description": "The ID of the user role. Check the `GET /users/roles` API call for the available `usersRoleId` values."
            },
            "example": 3,
            "required": false,
            "description": "The ID of the user role. Check the `GET /users/roles` API call for the available `usersRoleId` values."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "usersRoleId": {
                  "type": "integer",
                  "description": "The ID of the user role. Check the `GET /users/roles` API call for the available `usersRoleId` values."
                }
              }
            },
            "example": {
              "usersRoleId": 3
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userTeamRole": {
                    "type": "object",
                    "properties": {
                      "usersRoleId": {
                        "type": "integer"
                      },
                      "userId": {
                        "type": "integer"
                      },
                      "teamId": {
                        "type": "integer"
                      },
                      "changeable": {
                        "type": "boolean"
                      },
                      "ssoPending": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "example": {
                "userTeamRole": {
                  "usersRoleId": 3,
                  "userId": 13,
                  "teamId": 1,
                  "changeable": true
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "userTeamRole": {
              "usersRoleId": 3,
              "userId": 13,
              "teamId": 1,
              "changeable": true
            }
          },
          "requestBody": {
            "usersRoleId": 3
          },
          "path": "/users/111/user-team-roles/22"
        }
      }
    },
    "users-userId-user-team-notifications-teamId-get": {
      "endpointKey": "users-userId-user-team-notifications-teamId-get",
      "path": "/users/{userId}/user-team-notifications/{teamId}",
      "method": "get",
      "x-published": true,
      "tags": ["Users > User team notifications"],
      "summary": "List user team notification settings",
      "description": "Gets settings for user notifications for a user specified by the `userId` and a team specified by the `teamId`. Get the mapping of the `notificationId` and the team notification setting type with the API call `GET /enums/user-email-notifications`.",
      "security": [
        {
          "token": ["user:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "userId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "example": 3,
            "description": "The ID of the user."
          },
          {
            "name": "teamId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "example": 3,
            "description": "The ID of the team."
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userTeamNotifications": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "integer"
                        },
                        "teamId": {
                          "type": "integer"
                        },
                        "notificationId": {
                          "type": "integer"
                        },
                        "enabled": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "userTeamNotifications": [
                  {
                    "userId": 3,
                    "teamId": 3,
                    "notificationId": 1,
                    "enabled": true
                  },
                  {
                    "userId": 3,
                    "teamId": 3,
                    "notificationId": 2,
                    "enabled": false
                  },
                  {
                    "userId": 3,
                    "teamId": 3,
                    "notificationId": 6,
                    "enabled": true
                  }
                ]
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "userTeamNotifications": [
              {
                "userId": 3,
                "teamId": 3,
                "notificationId": 1,
                "enabled": true
              },
              {
                "userId": 3,
                "teamId": 3,
                "notificationId": 2,
                "enabled": false
              },
              {
                "userId": 3,
                "teamId": 3,
                "notificationId": 6,
                "enabled": true
              }
            ]
          },
          "path": "/users/3/user-team-notifications/3"
        }
      }
    },
    "users-userId-user-team-notifications-teamId-notificationId-get": {
      "endpointKey": "users-userId-user-team-notifications-teamId-notificationId-get",
      "path": "/users/{userId}/user-team-notifications/{teamId}/{notificationId}",
      "method": "get",
      "x-published": true,
      "tags": ["Users > User team notifications"],
      "summary": "Check user's notification settings",
      "description": "Checks team notification settings for specific user, team and notification type with the specified `userId`, `teamId` and `notificationId`. Get the mapping of the `notificationId` and the team notification setting type with the API call `GET /enums/user-email-notifications`.",
      "security": [
        {
          "token": ["user:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "userId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "example": 1,
            "description": "The ID of the user."
          },
          {
            "name": "teamId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "example": 1,
            "description": "The ID of the team."
          },
          {
            "name": "notificationId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "example": 6,
            "description": "The ID of the notification type. Get the mapping of the `notificationId` and the team notification setting type with the API call `GET /enums/user-email-notifications`."
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userTeamNotification": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "integer"
                      },
                      "teamId": {
                        "type": "integer"
                      },
                      "notificationId": {
                        "type": "integer"
                      },
                      "enabled": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "example": {
                "userTeamNotification": {
                  "userId": 1,
                  "teamId": 1,
                  "notificationId": 6,
                  "enabled": true
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "userTeamNotification": {
              "userId": 1,
              "teamId": 1,
              "notificationId": 6,
              "enabled": true
            }
          },
          "path": "/users/1/user-team-notifications/1/6"
        }
      }
    },
    "users-userId-user-team-notifications-teamId-notificationId-put": {
      "endpointKey": "users-userId-user-team-notifications-teamId-notificationId-put",
      "path": "/users/{userId}/user-team-notifications/{teamId}/{notificationId}",
      "method": "put",
      "x-published": true,
      "tags": ["Users > User team notifications"],
      "summary": "Update user's notification settings",
      "description": "Updates team notification settings for the user specified with the `userId`, `teamId` and `notificationId`. Get the mapping of the `notificationId` and the team notification setting type with the API call `GET /enums/user-email-notifications`.",
      "security": [
        {
          "token": ["user:write"]
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Enables or disables team notification type for the user."
                }
              }
            },
            "example": {
              "enabled": true
            }
          }
        }
      },
      "parameters": {
        "path": [
          {
            "name": "userId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": 1,
            "description": "The ID of the user."
          },
          {
            "name": "teamId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": 1,
            "description": "The ID of the team."
          },
          {
            "name": "notificationId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": 6,
            "description": "The ID of the notification type. Get the mapping of the `notificationId` and the team notification setting type with the API call `GET /enums/user-email-notifications`."
          }
        ],
        "query": [],
        "body": [
          {
            "name": "enabled",
            "schema": {
              "type": "boolean",
              "description": "Enables or disables team notification type for the user."
            },
            "example": true,
            "required": false,
            "description": "Enables or disables team notification type for the user."
          }
        ]
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userTeamNotification": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "integer"
                      },
                      "teamId": {
                        "type": "integer"
                      },
                      "notificationId": {
                        "type": "integer"
                      },
                      "enabled": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "example": {
                "userTeamNotification": {
                  "userId": 1,
                  "teamId": 1,
                  "notificationId": 6,
                  "enabled": true
                }
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "userTeamNotification": {
              "userId": 1,
              "teamId": 1,
              "notificationId": 6,
              "enabled": true
            }
          },
          "requestBody": {
            "enabled": true
          },
          "path": "/users/1/user-team-notifications/1/6"
        }
      }
    },
    "users-roles-get": {
      "endpointKey": "users-roles-get",
      "path": "/users/roles",
      "method": "get",
      "x-published": true,
      "tags": ["Users > Roles"],
      "summary": "User role definitions",
      "description": "Gets list of all existing user role names and IDs. Set the user roles in an organization with the `POST /users/{userId}/user-organization-roles/{organizationId}` API call. Use the `POST /users/{userId}/user-team-roles/{teamId}` API call to set user roles in a team.",
      "security": [
        {
          "token": ["user:read"]
        }
      ],
      "parameters": {
        "path": [],
        "query": [
          {
            "description": "Specifies columns that are returned in the response. Use the `cols[]` parameter for every column that you want to return in the response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get both `key1` and `key2` columns in the response.\n\n[Check the \"Filtering\" section for a full example.](https://www.make.com/en/api-documentation/filtering)",
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["id", "name", "subsidiary", "category", "permissions"]
              }
            },
            "examples": {
              "all-cols": {
                "value": ["id", "name", "subsidiary", "category", "permissions"]
              }
            }
          },
          {
            "name": "category",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["organization", "team"]
            },
            "example": "team",
            "description": "Set this parameter to `organization` or `team` to get user roles in an organization or in a team."
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "usersRoles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "subsidiary": {
                          "type": "boolean"
                        },
                        "category": {
                          "type": "string"
                        },
                        "permissions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "list": {
                  "summary": "List all user roles",
                  "description": "Get all existing user role IDs and the corresponding role names.",
                  "value": {
                    "usersRoles": [
                      {
                        "id": 1,
                        "name": "Team Admin"
                      },
                      {
                        "id": 3,
                        "name": "Team Member"
                      },
                      {
                        "id": 4,
                        "name": "Team Monitoring"
                      },
                      {
                        "id": 6,
                        "name": "Team Operator"
                      },
                      {
                        "id": 11,
                        "name": "Owner"
                      },
                      {
                        "id": 12,
                        "name": "Admin"
                      },
                      {
                        "id": 13,
                        "name": "Member"
                      },
                      {
                        "id": 14,
                        "name": "Accountant"
                      }
                    ]
                  }
                },
                "all-cols": {
                  "summary": "List all columns",
                  "description": "Get all existing user role IDs and the corresponding role names. The response contains all columns available in the endpoint.",
                  "value": {
                    "usersRoles": [
                      {
                        "id": 1,
                        "name": "Team Admin",
                        "subsidiary": true,
                        "category": "team",
                        "permissions": [
                          "account add",
                          "account delete",
                          "account edit",
                          "accounts get",
                          "datastore add",
                          "datastore delete",
                          "datastore edit",
                          "datastores get",
                          "datastore view",
                          "device add",
                          "device delete",
                          "device edit",
                          "devices get",
                          "dlq edit",
                          "dlq view",
                          "function add",
                          "function delete",
                          "function edit",
                          "functions get",
                          "hook add",
                          "hook delete",
                          "hook edit",
                          "hooks get",
                          "key add",
                          "key delete",
                          "key edit",
                          "keys get",
                          "scenario add",
                          "scenario delete",
                          "scenario edit",
                          "scenario logs get",
                          "scenario notifications",
                          "scenario reset counters",
                          "scenario scheduling",
                          "scenarios get",
                          "scenario start",
                          "scenario stop",
                          "scenario verify",
                          "scenario view",
                          "storage edit",
                          "storage view",
                          "team delete",
                          "team edit",
                          "team user add and edit",
                          "team view",
                          "template add",
                          "template delete",
                          "template edit",
                          "templates get",
                          "template view",
                          "udt add",
                          "udt delete",
                          "udt edit",
                          "udts get"
                        ]
                      },
                      {
                        "id": 3,
                        "name": "Team Member",
                        "subsidiary": true,
                        "category": "team",
                        "permissions": [
                          "account add",
                          "account delete",
                          "account edit",
                          "accounts get",
                          "datastore add",
                          "datastore delete",
                          "datastore edit",
                          "datastores get",
                          "datastore view",
                          "device add",
                          "device delete",
                          "device edit",
                          "devices get",
                          "dlq edit",
                          "dlq view",
                          "function add",
                          "function delete",
                          "function edit",
                          "functions get",
                          "hook add",
                          "hook delete",
                          "hook edit",
                          "hooks get",
                          "key add",
                          "key delete",
                          "key edit",
                          "keys get",
                          "scenario add",
                          "scenario delete",
                          "scenario edit",
                          "scenario logs get",
                          "scenario notifications",
                          "scenario reset counters",
                          "scenario scheduling",
                          "scenarios get",
                          "scenario start",
                          "scenario stop",
                          "scenario verify",
                          "scenario view",
                          "storage edit",
                          "storage view",
                          "team edit",
                          "team view",
                          "template add",
                          "template delete",
                          "template edit",
                          "templates get",
                          "template view",
                          "udt add",
                          "udt delete",
                          "udt edit",
                          "udts get"
                        ]
                      },
                      {
                        "id": 4,
                        "name": "Team Monitoring",
                        "subsidiary": true,
                        "category": "team",
                        "permissions": [
                          "dlq view",
                          "scenario logs get",
                          "scenario notifications",
                          "scenario reset counters",
                          "scenarios get",
                          "scenario view",
                          "team view",
                          "templates get",
                          "template view"
                        ]
                      },
                      {
                        "id": 6,
                        "name": "Team Operator",
                        "subsidiary": true,
                        "category": "team",
                        "permissions": [
                          "accounts get",
                          "datastores get",
                          "datastore view",
                          "devices get",
                          "dlq view",
                          "functions get",
                          "hooks get",
                          "keys get",
                          "scenario logs get",
                          "scenario notifications",
                          "scenario reset counters",
                          "scenario scheduling",
                          "scenarios get",
                          "scenario start",
                          "scenario stop",
                          "scenario verify",
                          "scenario view",
                          "storage view",
                          "team view",
                          "templates get",
                          "template view",
                          "udts get"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "list": {
          "summary": "List all user roles",
          "response": {
            "usersRoles": [
              {
                "id": 1,
                "name": "Team Admin"
              },
              {
                "id": 3,
                "name": "Team Member"
              },
              {
                "id": 4,
                "name": "Team Monitoring"
              },
              {
                "id": 6,
                "name": "Team Operator"
              },
              {
                "id": 11,
                "name": "Owner"
              },
              {
                "id": 12,
                "name": "Admin"
              },
              {
                "id": 13,
                "name": "Member"
              },
              {
                "id": 14,
                "name": "Accountant"
              }
            ]
          },
          "description": "Get all existing user role IDs and the corresponding role names.",
          "parameters": {
            "category": "team"
          },
          "path": "/users/roles"
        },
        "all-cols": {
          "summary": "List all columns",
          "response": {
            "usersRoles": [
              {
                "id": 1,
                "name": "Team Admin",
                "subsidiary": true,
                "category": "team",
                "permissions": [
                  "account add",
                  "account delete",
                  "account edit",
                  "accounts get",
                  "datastore add",
                  "datastore delete",
                  "datastore edit",
                  "datastores get",
                  "datastore view",
                  "device add",
                  "device delete",
                  "device edit",
                  "devices get",
                  "dlq edit",
                  "dlq view",
                  "function add",
                  "function delete",
                  "function edit",
                  "functions get",
                  "hook add",
                  "hook delete",
                  "hook edit",
                  "hooks get",
                  "key add",
                  "key delete",
                  "key edit",
                  "keys get",
                  "scenario add",
                  "scenario delete",
                  "scenario edit",
                  "scenario logs get",
                  "scenario notifications",
                  "scenario reset counters",
                  "scenario scheduling",
                  "scenarios get",
                  "scenario start",
                  "scenario stop",
                  "scenario verify",
                  "scenario view",
                  "storage edit",
                  "storage view",
                  "team delete",
                  "team edit",
                  "team user add and edit",
                  "team view",
                  "template add",
                  "template delete",
                  "template edit",
                  "templates get",
                  "template view",
                  "udt add",
                  "udt delete",
                  "udt edit",
                  "udts get"
                ]
              },
              {
                "id": 3,
                "name": "Team Member",
                "subsidiary": true,
                "category": "team",
                "permissions": [
                  "account add",
                  "account delete",
                  "account edit",
                  "accounts get",
                  "datastore add",
                  "datastore delete",
                  "datastore edit",
                  "datastores get",
                  "datastore view",
                  "device add",
                  "device delete",
                  "device edit",
                  "devices get",
                  "dlq edit",
                  "dlq view",
                  "function add",
                  "function delete",
                  "function edit",
                  "functions get",
                  "hook add",
                  "hook delete",
                  "hook edit",
                  "hooks get",
                  "key add",
                  "key delete",
                  "key edit",
                  "keys get",
                  "scenario add",
                  "scenario delete",
                  "scenario edit",
                  "scenario logs get",
                  "scenario notifications",
                  "scenario reset counters",
                  "scenario scheduling",
                  "scenarios get",
                  "scenario start",
                  "scenario stop",
                  "scenario verify",
                  "scenario view",
                  "storage edit",
                  "storage view",
                  "team edit",
                  "team view",
                  "template add",
                  "template delete",
                  "template edit",
                  "templates get",
                  "template view",
                  "udt add",
                  "udt delete",
                  "udt edit",
                  "udts get"
                ]
              },
              {
                "id": 4,
                "name": "Team Monitoring",
                "subsidiary": true,
                "category": "team",
                "permissions": [
                  "dlq view",
                  "scenario logs get",
                  "scenario notifications",
                  "scenario reset counters",
                  "scenarios get",
                  "scenario view",
                  "team view",
                  "templates get",
                  "template view"
                ]
              },
              {
                "id": 6,
                "name": "Team Operator",
                "subsidiary": true,
                "category": "team",
                "permissions": [
                  "accounts get",
                  "datastores get",
                  "datastore view",
                  "devices get",
                  "dlq view",
                  "functions get",
                  "hooks get",
                  "keys get",
                  "scenario logs get",
                  "scenario notifications",
                  "scenario reset counters",
                  "scenario scheduling",
                  "scenarios get",
                  "scenario start",
                  "scenario stop",
                  "scenario verify",
                  "scenario view",
                  "storage view",
                  "team view",
                  "templates get",
                  "template view",
                  "udts get"
                ]
              }
            ]
          },
          "description": "Get all existing user role IDs and the corresponding role names. The response contains all columns available in the endpoint.",
          "parameters": {
            "category": "team",
            "cols[]": ["id", "name", "subsidiary", "category", "permissions"]
          },
          "path": "/users/roles"
        }
      }
    },
    "users-userId-user-organization-roles-get": {
      "endpointKey": "users-userId-user-organization-roles-get",
      "path": "/users/{userId}/user-organization-roles",
      "method": "get",
      "x-published": true,
      "tags": ["Users > User organization roles"],
      "summary": "List user roles in an organization",
      "description": "Gets list of all users and their roles in the organization with the specified `organizationId`. Get all user role IDs with the API call `GET /users/roles`.",
      "security": [
        {
          "token": ["user:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "userId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the user.",
            "example": 111
          }
        ],
        "query": [
          {
            "description": "Specifies columns that are returned in the response. Use the `cols[]` parameter for every column that you want to return in the response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get both `key1` and `key2` columns in the response.\n\n[Check the \"Filtering\" section for a full example.](https://www.make.com/en/api-documentation/filtering)",
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "userId",
                  "organizationId",
                  "usersRoleId",
                  "invitation",
                  "organizationTeamsCount",
                  "joinedTeamsCount"
                ]
              }
            },
            "examples": {
              "all-cols": {
                "value": [
                  "userId",
                  "organizationId",
                  "usersRoleId",
                  "invitation",
                  "organizationTeamsCount",
                  "joinedTeamsCount"
                ]
              }
            }
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userOrganizationRoles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "integer"
                        },
                        "organizationId": {
                          "type": "integer"
                        },
                        "usersRoleId": {
                          "type": "integer"
                        },
                        "invitation": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "default-cols": {
                  "summary": "Get user roles",
                  "description": "List all users in the organization and their organization roles.",
                  "value": {
                    "userOrganizationRoles": [
                      {
                        "userId": 1,
                        "organizationId": 1,
                        "usersRoleId": 11,
                        "invitation": null
                      },
                      {
                        "userId": 1,
                        "organizationId": 2,
                        "usersRoleId": 11,
                        "invitation": null
                      }
                    ]
                  }
                },
                "all-cols": {
                  "summary": "Get all columns",
                  "description": "List all users in the organization and their organization roles. The example response contains all available columns.",
                  "value": {
                    "userOrganizationRoles": [
                      {
                        "userId": 1,
                        "organizationId": 1,
                        "usersRoleId": 11,
                        "invitation": null,
                        "organizationTeamsCount": 8,
                        "joinedTeamsCount": 7
                      },
                      {
                        "userId": 1,
                        "organizationId": 2,
                        "usersRoleId": 11,
                        "invitation": null,
                        "organizationTeamsCount": 2,
                        "joinedTeamsCount": 2
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "default-cols": {
          "summary": "Get user roles",
          "response": {
            "userOrganizationRoles": [
              {
                "userId": 1,
                "organizationId": 1,
                "usersRoleId": 11,
                "invitation": null
              },
              {
                "userId": 1,
                "organizationId": 2,
                "usersRoleId": 11,
                "invitation": null
              }
            ]
          },
          "description": "List all users in the organization and their organization roles.",
          "parameters": {},
          "path": "/users/111/user-organization-roles"
        },
        "all-cols": {
          "summary": "Get all columns",
          "response": {
            "userOrganizationRoles": [
              {
                "userId": 1,
                "organizationId": 1,
                "usersRoleId": 11,
                "invitation": null,
                "organizationTeamsCount": 8,
                "joinedTeamsCount": 7
              },
              {
                "userId": 1,
                "organizationId": 2,
                "usersRoleId": 11,
                "invitation": null,
                "organizationTeamsCount": 2,
                "joinedTeamsCount": 2
              }
            ]
          },
          "description": "List all users in the organization and their organization roles. The example response contains all available columns.",
          "parameters": {
            "cols[]": [
              "userId",
              "organizationId",
              "usersRoleId",
              "invitation",
              "organizationTeamsCount",
              "joinedTeamsCount"
            ]
          },
          "path": "/users/111/user-organization-roles"
        }
      }
    },
    "users-userId-user-organization-roles-organizationId-get": {
      "endpointKey": "users-userId-user-organization-roles-organizationId-get",
      "path": "/users/{userId}/user-organization-roles/{organizationId}",
      "method": "get",
      "x-published": true,
      "tags": ["Users > User organization roles"],
      "summary": "Get user organization role details",
      "description": "Gets information about user role in an organization with the specified `userId` and `organizationId`. Get all user role IDs with the API call `GET /users/roles`.",
      "security": [
        {
          "token": ["user:read"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "userId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": 254,
            "description": "The ID of the user"
          },
          {
            "name": "organizationId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": 11,
            "description": "The ID of the organization"
          }
        ],
        "query": [
          {
            "description": "Specifies columns that are returned in the response. Use the `cols[]` parameter for every column that you want to return in the response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get both `key1` and `key2` columns in the response.\n\n[Check the \"Filtering\" section for a full example.](https://www.make.com/en/api-documentation/filtering)",
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "userId",
                  "organizationId",
                  "userRoleId",
                  "invitation",
                  "organizationTeamsCount",
                  "joinedTeamsCount"
                ]
              }
            },
            "examples": {
              "all-cols": {
                "value": [
                  "userId",
                  "organizationId",
                  "userRoleId",
                  "invitation",
                  "organizationTeamsCount",
                  "joinedTeamsCount"
                ]
              }
            }
          }
        ],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userOrganizationRole": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "integer"
                      },
                      "organizationId": {
                        "type": "integer"
                      },
                      "usersRoleId": {
                        "type": "integer"
                      },
                      "invitation": {
                        "type": "null"
                      },
                      "organizationTeamsCount": {
                        "type": "integer"
                      },
                      "joinedTeamsCount": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "examples": {
                "default-cols": {
                  "summary": "Get user role detail",
                  "description": "Get the user role in the organization.",
                  "value": {
                    "userOrganizationRole": {
                      "userId": 254,
                      "organizationId": 11,
                      "usersRoleId": 11,
                      "invitation": null
                    }
                  }
                },
                "all-cols": {
                  "summary": "Get all columns",
                  "description": "Get all available columns of the user role in the organization.",
                  "value": {
                    "userOrganizationRole": {
                      "userId": 254,
                      "organizationId": 11,
                      "usersRoleId": 11,
                      "invitation": null,
                      "organizationTeamsCount": 2,
                      "joinedTeamsCount": 2
                    }
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "default-cols": {
          "summary": "Get user role detail",
          "response": {
            "userOrganizationRole": {
              "userId": 254,
              "organizationId": 11,
              "usersRoleId": 11,
              "invitation": null
            }
          },
          "description": "Get the user role in the organization.",
          "parameters": {},
          "path": "/users/254/user-organization-roles/11"
        },
        "all-cols": {
          "summary": "Get all columns",
          "response": {
            "userOrganizationRole": {
              "userId": 254,
              "organizationId": 11,
              "usersRoleId": 11,
              "invitation": null,
              "organizationTeamsCount": 2,
              "joinedTeamsCount": 2
            }
          },
          "description": "Get all available columns of the user role in the organization.",
          "parameters": {
            "cols[]": [
              "userId",
              "organizationId",
              "userRoleId",
              "invitation",
              "organizationTeamsCount",
              "joinedTeamsCount"
            ]
          },
          "path": "/users/254/user-organization-roles/11"
        }
      }
    },
    "users-userId-user-organization-roles-organizationId-post": {
      "endpointKey": "users-userId-user-organization-roles-organizationId-post",
      "path": "/users/{userId}/user-organization-roles/{organizationId}",
      "method": "post",
      "x-published": true,
      "tags": ["Users > User organization roles"],
      "summary": "Update user role",
      "description": "Updates the specified user role in the organization. Only organization owners and admins can change the user organization roles. Refer to the Make Help center for a breakdown of the user [role permissions](https://www.make.com/en/help/access-management/organizations#organization-roles).\n\nSpecify the ID of the new role for the user in the request body. Get all available user role IDs and the corresponding user role names with the API call `GET /users/roles`.\n\nYou cannot change the organization \"Owner\" with this endpoint. Use the API call to [transfer organization ownership](https://www.make.com/en/api-documentation/organizations-organizationId-user-organization-roles-transfer-post) instead.\n\nIf you send an empty request body, the user with the specified `userId` will be removed from the organization.",
      "security": [
        {
          "token": ["user:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "userId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "example": 5,
            "description": "The ID of the user."
          },
          {
            "name": "organizationId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "example": 22,
            "description": "The ID of the organization."
          }
        ],
        "query": [
          {
            "description": "Specifies columns that are returned in the response. Use the `cols[]` parameter for every column that you want to return in the response. For example `GET /endpoint?cols[]=key1&cols[]=key2` to get both `key1` and `key2` columns in the response.\n\n[Check the \"Filtering\" section for a full example.](https://www.make.com/en/api-documentation/filtering)",
            "name": "cols[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "userId",
                  "organizationId",
                  "usersRoleId",
                  "invitation",
                  "organizationTeamsCount",
                  "joinedTeamsCount"
                ]
              }
            },
            "examples": {
              "all-cols": {
                "value": [
                  "userId",
                  "organizationId",
                  "usersRoleId",
                  "invitation",
                  "organizationTeamsCount",
                  "joinedTeamsCount"
                ]
              }
            }
          },
          {
            "name": "confirmed",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "examples": {
              "remove-user": {
                "value": true
              }
            },
            "description": "Use this parameter when you are removing a user from an organization. Set this parameter to `true` is you want to delete the user's connections from the organization with the parameter `deleteConnections`."
          },
          {
            "name": "deleteConnections",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "examples": {
              "remove-user": {
                "value": true
              }
            },
            "description": "Set this parameter to `true` if you are removing a user from an organization to delete also the user's connections. If you set this parameter to `false`, the API call won't delete the user's connections."
          }
        ],
        "body": [
          {
            "name": "usersRoleId",
            "schema": {
              "type": "integer",
              "description": "The ID of the user role. Check the `GET /users/roles` API call for the available `usersRoleId` values."
            },
            "example": 12,
            "required": false,
            "description": "The ID of the user role. Check the `GET /users/roles` API call for the available `usersRoleId` values."
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "usersRoleId": {
                  "type": "integer",
                  "description": "The ID of the user role. Check the `GET /users/roles` API call for the available `usersRoleId` values."
                }
              }
            },
            "examples": {
              "set-user-role": {
                "summary": "Set user role",
                "description": "Set the user role in the organization. Get all user role IDs with the API call `GET /users/roles`.",
                "value": {
                  "usersRoleId": 12
                }
              },
              "all-cols": {
                "summary": "Set user data all cols",
                "description": "Set user role in the organization. The response returns all available columns for the user role in the organization.",
                "value": {
                  "usersRoleId": 12
                }
              },
              "remove-user": {
                "summary": "Remove user from organization",
                "description": "To remove a user from the organization send empty request body.",
                "value": ""
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userOrganizationRole": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "integer"
                      },
                      "organizationId": {
                        "type": "integer"
                      },
                      "usersRoleId": {
                        "type": "integer"
                      },
                      "invitation": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "examples": {
                "set-user-role": {
                  "value": {
                    "userOrganizationRole": {
                      "userId": 5,
                      "organizationId": 22,
                      "usersRoleId": 12,
                      "invitation": null
                    }
                  }
                },
                "all-cols": {
                  "value": {
                    "userOrganizationRole": {
                      "userId": 5,
                      "organizationId": 22,
                      "usersRoleId": 12,
                      "invitation": null,
                      "organizationTeamsCount": 2,
                      "joinedTeamsCount": 2
                    }
                  }
                },
                "remove-user": {
                  "value": {
                    "userOrganizationRole": {
                      "userId": 5,
                      "organizationId": 22,
                      "usersRoleId": null,
                      "invitation": null
                    }
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "set-user-role": {
          "summary": "Set user role",
          "response": {
            "userOrganizationRole": {
              "userId": 5,
              "organizationId": 22,
              "usersRoleId": 12,
              "invitation": null
            }
          },
          "description": "Set the user role in the organization. Get all user role IDs with the API call `GET /users/roles`.",
          "requestBody": {
            "usersRoleId": 12
          },
          "parameters": {},
          "path": "/users/5/user-organization-roles/22"
        },
        "all-cols": {
          "summary": "Set user data all cols",
          "response": {
            "userOrganizationRole": {
              "userId": 5,
              "organizationId": 22,
              "usersRoleId": 12,
              "invitation": null,
              "organizationTeamsCount": 2,
              "joinedTeamsCount": 2
            }
          },
          "description": "Set user role in the organization. The response returns all available columns for the user role in the organization.",
          "requestBody": {
            "usersRoleId": 12
          },
          "parameters": {
            "cols[]": [
              "userId",
              "organizationId",
              "usersRoleId",
              "invitation",
              "organizationTeamsCount",
              "joinedTeamsCount"
            ]
          },
          "path": "/users/5/user-organization-roles/22"
        },
        "remove-user": {
          "summary": "Remove user from organization",
          "response": {
            "userOrganizationRole": {
              "userId": 5,
              "organizationId": 22,
              "usersRoleId": null,
              "invitation": null
            }
          },
          "description": "To remove a user from the organization send empty request body.",
          "parameters": {
            "confirmed": true,
            "deleteConnections": true
          },
          "path": "/users/5/user-organization-roles/22"
        }
      }
    },
    "users-userId-user-organization-roles-organizationId-transfer-post": {
      "endpointKey": "users-userId-user-organization-roles-organizationId-transfer-post",
      "path": "/users/{userId}/user-organization-roles/{organizationId}/transfer",
      "method": "post",
      "x-published": true,
      "tags": ["Users > User organization roles"],
      "summary": "Transfer organization ownership",
      "description": "Transfer organization ownership to the user with the specified `userId`. Only organization owner can transfer their ownership to another user.",
      "security": [
        {
          "token": ["user:write"]
        }
      ],
      "parameters": {
        "path": [
          {
            "name": "userId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the user.",
            "example": 111
          },
          {
            "name": "organizationId",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the organization.",
            "example": 11
          }
        ],
        "query": [],
        "body": []
      },
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userOrganizationRoles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "integer"
                        },
                        "organizationId": {
                          "type": "integer"
                        },
                        "usersRoleId": {
                          "type": "integer"
                        },
                        "invitation": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "userOrganizationRoles": [
                  {
                    "userId": 111,
                    "organizationId": 11,
                    "usersRoleId": 11,
                    "invitation": null
                  },
                  {
                    "userId": 1,
                    "organizationId": 11,
                    "usersRoleId": 12,
                    "invitation": null
                  }
                ]
              }
            }
          }
        }
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "userOrganizationRoles": [
              {
                "userId": 111,
                "organizationId": 11,
                "usersRoleId": 11,
                "invitation": null
              },
              {
                "userId": 1,
                "organizationId": 11,
                "usersRoleId": 12,
                "invitation": null
              }
            ]
          },
          "path": "/users/111/user-organization-roles/11/transfer"
        }
      }
    },
    "users-unread-notifications-get": {
      "endpointKey": "users-unread-notifications-get",
      "path": "/users/unread-notifications",
      "method": "get",
      "x-published": true,
      "tags": ["Users > Unread notifications"],
      "summary": "Unread notifications",
      "description": "Gets the number of unread notifications for the currently authenticated user.",
      "security": [
        {
          "token": ["user:read"]
        }
      ],
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userUnreadNotifications": {
                    "type": "integer"
                  },
                  "userZoneUnreadNotifications": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "zoneId": {
                          "type": "integer"
                        },
                        "unreadNotifications": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "userUnreadNotifications": 2
              }
            }
          }
        }
      },
      "parameters": {
        "body": []
      },
      "examples": {
        "default": {
          "summary": "Default",
          "response": {
            "userUnreadNotifications": 2
          },
          "path": "/users/unread-notifications"
        }
      }
    }
  },
  "introduction": [
    {
      "isDirectory": true,
      "path": "fundamentals",
      "content": "### <!-- {#fundamentals .as-label .intro-theme-heading} --> Fundamentals\n\nThe Make REST API allows using HTTP requests to access Make data and control the Make platform without opening its graphical interface. This allows you to embed Make features into your software, add features on top of the platform, and automate your tasks that you perform in Make. To use the Make API, you need an Make account. Once logged in, you can [generate an authentication token](#authentication-token) and [start making calls to the API](#getting-started).\n\nThe API allows you to interact with multiple [Make resources](#api-resources). This documentation covers the following API resources:\n\n*   [Connections](#connections)\n*   [Data stores](#data-stores)\n*   [Data structures](#data-structures)\n*   [Hooks](#hooks)\n*   [Notifications](#notifications)\n*   [Organizations](#organizations)\n*   [Scenarios](#scenarios)\n*   [Scenarios folders](#scenarios-folders)\n*   [Teams](#teams)\n*   [Templates](#templates)\n*   [Users](#users)\n\nThe following API resources are fully functional, but are not covered in this documentation yet:\n\n*   Custom apps\n*   Devices\n*   Keys\n",
      "contentWithoutLinks": "### <!-- {#fundamentals .as-label .intro-theme-heading} --> Fundamentals\n\nThe Make REST API allows using HTTP requests to access Make data and control the Make platform without opening its graphical interface. This allows you to embed Make features into your software, add features on top of the platform, and automate your tasks that you perform in Make. To use the Make API, you need an Make account. Once logged in, you can generate an authentication token and start making calls to the API.\n\nThe API allows you to interact with multiple Make resources. This documentation covers the following API resources:\n\n*   Connections\n*   Data stores\n*   Data structures\n*   Hooks\n*   Notifications\n*   Organizations\n*   Scenarios\n*   Scenarios folders\n*   Teams\n*   Templates\n*   Users\n\nThe following API resources are fully functional, but are not covered in this documentation yet:\n\n*   Custom apps\n*   Devices\n*   Keys\n",
      "label": " Fundamentals",
      "files": [
        {
          "isDirectory": false,
          "path": "api-structure",
          "contentWithoutLinks": "#### <!-- {#make-api-strucure .as-label } -->  Make API structure\n\nThe root URL of the Make API consists of three parts and looks as follows:\n`{environment_url}/api/v2/{api_endpoint}`\n\n**Environment URL**\nThe environment of Make you work in. This can be the link to your private instance of Make, for example, `https://development.make.cloud`, or the link to Make (with or without the zone, depending on a specific endpoint), for example, `https://eu1.make.com`.\n\n<div class=\"alert alert-warning\">\n  Always use HTTPS in your API requests.\n</div>   \n\n**API version**\nThe version of the API preceded by `/api/`\n\n**Endpoint** **(with or without parameters)**\nEach endpoint represents a resource that you can work with. Endpoints contain required and/or optional parameters. The resources are described in detail in Make resources.",
          "label": "  Make API structure",
          "content": "#### <!-- {#make-api-strucure .as-label } -->  Make API structure\n\nThe root URL of the Make API consists of three parts and looks as follows:\n`{environment_url}/api/v2/{api_endpoint}`\n\n**Environment URL**\nThe environment of Make you work in. This can be the link to your private instance of Make, for example, `https://development.make.cloud`, or the link to Make (with or without the zone, depending on a specific endpoint), for example, `https://eu1.make.com`.\n\n<div class=\"alert alert-warning\">\n  Always use HTTPS in your API requests.\n</div>   \n\n**API version**\nThe version of the API preceded by `/api/`\n\n**Endpoint** **(with or without parameters)**\nEach endpoint represents a resource that you can work with. Endpoints contain required and/or optional parameters. The resources are described in detail in [Make resources](#api-resources)."
        },
        {
          "isDirectory": false,
          "path": "http-methods",
          "contentWithoutLinks": "#### <!-- {#http-methods .as-label } -->  HTTP methods\n\nMake API uses standard HTTP methods to interact with endpoints. The following table lists the available HTTP methods and shows examples of endpoints these methods can be used with.\n\n<div class=\"card table\">\n  <table class=\"table\">\n    <thead>\n      <tr>\n        <th><strong>HTTP&#160;method</strong></th>\n        <th><strong>Description</strong></th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <pre class=\"method-get\">GET</pre>\n        </td>\n        <td>\n          <p>Retrieves a resource representation without modifying it.</p>\n          <em>Example:</em><br>\n          <a href=\"#scenarios-get\"><code>/scenarios</code></a><br>\n          <em>returns all available Make scenarios</em>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <pre class=\"method-post\">POST</pre>\n        </td>\n        <td>\n          <p>Creates a resource.</p>\n          <em>Example:</em><br>\n          <a href=\"#scenarios-post\"><code>/scenarios</code></a><br>\n          <em>creates a scenario</em>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <pre class=\"method-put\">PUT</pre>\n        </td>\n        <td>\n          <p>Updates a resource. If the resource does not exist yet, this method creates it.</p>\n          <em>Example:</em><br>\n          <a href=\"#scenarios-scenarioId-data-put\"><code>/scenarios/{scenarioId}/data</code></a><br>\n          <em>sets module data for a scenario with a given ID</em>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <pre class=\"method-patch\">PATCH</pre>\n        </td>\n        <td>\n          <p>Makes a partial update on a resource. Does not replace the entire resource.</p>\n          <em>Example:</em><br>\n          <a href=\"#scenarios-scenarioId-patch\"><code>/scenarios/{scenarioId}</code></a><br>\n          <em>updates properties (for example, scheduling or blueprint) of the scenario with a given ID</em>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <pre class=\"method-delete\">DELETE</pre>\n        </td>\n        <td>\n          <p>Removes a resource.</p>\n          <em>Example:</em><br>\n          <a href=\"#scenarios-scenarioId-delete\"><code>/scenarios/{scenarioId}</code></a><br>\n          <em>deletes the scenario with a given ID</em>\n          </td>\n      </tr>\n    </tbody>\n  </table>\n</div>",
          "label": "  HTTP methods",
          "content": "#### <!-- {#http-methods .as-label } -->  HTTP methods\n\nMake API uses standard HTTP methods to interact with endpoints. The following table lists the available HTTP methods and shows examples of endpoints these methods can be used with.\n\n<div class=\"card table\">\n  <table class=\"table\">\n    <thead>\n      <tr>\n        <th><strong>HTTP&#160;method</strong></th>\n        <th><strong>Description</strong></th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <pre class=\"method-get\">GET</pre>\n        </td>\n        <td>\n          <p>Retrieves a resource representation without modifying it.</p>\n          <em>Example:</em><br>\n          <a href=\"#scenarios-get\"><code>/scenarios</code></a><br>\n          <em>returns all available Make scenarios</em>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <pre class=\"method-post\">POST</pre>\n        </td>\n        <td>\n          <p>Creates a resource.</p>\n          <em>Example:</em><br>\n          <a href=\"#scenarios-post\"><code>/scenarios</code></a><br>\n          <em>creates a scenario</em>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <pre class=\"method-put\">PUT</pre>\n        </td>\n        <td>\n          <p>Updates a resource. If the resource does not exist yet, this method creates it.</p>\n          <em>Example:</em><br>\n          <a href=\"#scenarios-scenarioId-data-put\"><code>/scenarios/{scenarioId}/data</code></a><br>\n          <em>sets module data for a scenario with a given ID</em>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <pre class=\"method-patch\">PATCH</pre>\n        </td>\n        <td>\n          <p>Makes a partial update on a resource. Does not replace the entire resource.</p>\n          <em>Example:</em><br>\n          <a href=\"#scenarios-scenarioId-patch\"><code>/scenarios/{scenarioId}</code></a><br>\n          <em>updates properties (for example, scheduling or blueprint) of the scenario with a given ID</em>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <pre class=\"method-delete\">DELETE</pre>\n        </td>\n        <td>\n          <p>Removes a resource.</p>\n          <em>Example:</em><br>\n          <a href=\"#scenarios-scenarioId-delete\"><code>/scenarios/{scenarioId}</code></a><br>\n          <em>deletes the scenario with a given ID</em>\n          </td>\n      </tr>\n    </tbody>\n  </table>\n</div>"
        },
        {
          "isDirectory": false,
          "path": "rate-limiting",
          "contentWithoutLinks": "#### <!-- {#rate-limiting .as-label } -->  Rate limiting\n\nMake API limits the number of requests you can send to the Make API. Make sets the rate limits based on your organization plan:\n\n* **Core:** 60 per minute\n* **Pro:** 120 per minute\n* **Teams:** 240 per minute\n* **Enterprise:** 1 000 per minute\n\nIf you exceed your rate limit, you get `error 429` with the message: `Requests limit for organization exceeded, please try again later.`\n\nRead more about Make pricing.\n\n<div class=\"alert alert-info\">\nYou can check your organization API rate limit with the API call <code>GET {base-url}/organizations/{organizationId}</code>. In the API call response, the <code>license</code> object contains the property <code>apiLimit</code> with your organization's rate limit.\n\nCheck the organization detail API endpoint documentation.\n</div>\n",
          "label": "  Rate limiting",
          "content": "#### <!-- {#rate-limiting .as-label } -->  Rate limiting\n\nMake API limits the number of requests you can send to the Make API. Make sets the rate limits based on your organization plan:\n\n* **Core:** 60 per minute\n* **Pro:** 120 per minute\n* **Teams:** 240 per minute\n* **Enterprise:** 1 000 per minute\n\nIf you exceed your rate limit, you get `error 429` with the message: `Requests limit for organization exceeded, please try again later.`\n\n[Read more about Make pricing](https://www.make.com/en/help/general/pricing-parameters).\n\n<div class=\"alert alert-info\">\nYou can check your organization API rate limit with the API call <code>GET {base-url}/organizations/{organizationId}</code>. In the API call response, the <code>license</code> object contains the property <code>apiLimit</code> with your organization's rate limit.\n\n[Check the organization detail API endpoint documentation](#organizations-organizationId-get).\n</div>\n"
        }
      ]
    },
    {
      "isDirectory": false,
      "path": "getting-started",
      "contentWithoutLinks": "### <!-- {#getting-started } --> Getting started\n\nThis start guide will take you through making your first request to the Make API.\n\n*Example:*\n*Let's imagine that you would like to list all data stores available in your team. Your team ID is 35. Returned data should be ordered in descending order.*\n\nTo make your first API call, you need to perform the following actions:\n\n<div class=\"card card--light mb-4\">\n  <small class=\"py-1 px-3 fw-bold\">How to:</small>\n  <div class=\"card-body bg-white\">\n    <ol>\n      <li>\n        <p><strong>Create an authentication token</strong>. The token gives you access to Make API resources depending on your <a href=\"#authentication-scopes\">Make role and assigned scopes</a>. You must include the token in the <strong>Authorization</strong> header of all requests. Add the word <strong>Token</strong> and a space before the token itself:<br>\n          <code>'Authorization: Token {Your authentication token}'</code></p>\n      </li>\n      <li>\n        <p><strong>Choose the</strong> <a href=\"#api-resources\">endpoint</a> <strong> that corresponds to the resource you want to interact with.</strong> For this example, you need the <code>/data-stores</code> endpoint. The endpoint requires the <strong>teamId</strong> query parameter. Place the parameter after the question mark in the endpoint URL. To filter results, you also need the <a href=\"#pagination-sorting-filtering\">parameter for ordering data</a>â<strong>pg[sortDir]</strong>:<br>\n          <code>{environment_url}/api/v2/data-stores?teamId={teamId}&amp;pg%5BsortDir%5D=asc</code></p>\n        <div class=\"alert alert-warning\">\n          The environment URL refers to the Make platform you interact with.\n        </div>\n      </li>\n      <li>\n        <p><strong>Prepare the full request and send it.</strong> In this case, use cURL to making the request. You want to retrieve data without modifying itâuse the <strong>GET</strong> method. Letâs put elements from the previous steps together.</p>\n        <div class=\"alert alert-warning\">\n          The following request example contains a sample authentication token. Don't use it in your requests. <a href=\"#authentication-token\">Generate your own token</a>.\n        </div>\n        <p>Always include a request body in POST, PUT, or PATCH requests.</p>\n      </li>\n      <li>\n        <p><strong>Evaluate the response.</strong> The API returns <code>200 OK</code> and a list of all data stores for the specified team. If your request failed, you receive an error code. Refer to <a href=\"#troubleshooting\">Troubleshooting and error handling</a> to troubleshoot the issue.</p>\n      </li>\n    </ol>\n  </div>\n</div>\n\n<div class=\"card card--dark card--snippet card--request mb-3\" data-move-right=\"request\">\n<div class=\"card-header\">\n<div class=\"card-title\">Request</div>\n</div>\n<div class=\"card-body\">\n<pre><code class=\"hljs bash\">curl --location \\\n--request GET '<span class=\"hljs-string\">https://eu1.make.com/api/v2/data-stores?teamId=35&pg%5BsortDir%5D=asc</span>' \\\n--header '<span class=\"hljs-string\">Content-Type: application/json</span>' \\\n--header '<span class=\"hljs-string\">Authorization: Token 93dc8837-2911-4711-a766-59c1167a974d</span>'</code></pre>\n</div>\n</div>\n\n<div class=\"card card--light card--snippet card--response\" data-move-right=\"response\">\n<div class=\"card-header\">\n<div class=\"card-title\">Response</div>\n</div>\n<div class=\"card-body\">\n<pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-attr\">\"dataStores\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    {\n      <span class=\"hljs-attr\">\"id\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">15043</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">\"name\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"Old data store\"</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">\"records\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">10</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">\"size\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"620\"</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">\"maxSize\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"1048576\"</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">\"teamId\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">35</span>\n    },\n    {\n      <span class=\"hljs-attr\">\"id\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">13433</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">\"name\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"New data store\"</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">\"records\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">1</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">\"size\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"48\"</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">\"maxSize\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"1048576\"</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">\"teamId\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">35</span>\n    }\n  ],\n  <span class=\"hljs-attr\">\"pg\"</span>: {\n    <span class=\"hljs-attr\">\"sortBy\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"name\"</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">\"limit\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">10000</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">\"sortDir\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"asc\"</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">\"offset\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span>\n  }\n<span class=\"hljs-punctuation\">}</span></code></pre>\n</div>\n</div>\n",
      "label": " Getting started",
      "content": "### <!-- {#getting-started } --> Getting started\n\nThis start guide will take you through making your first request to the Make API.\n\n*Example:*\n*Let's imagine that you would like to list all data stores available in your team. Your team ID is 35. Returned data should be ordered in descending order.*\n\nTo make your first API call, you need to perform the following actions:\n\n<div class=\"card card--light mb-4\">\n  <small class=\"py-1 px-3 fw-bold\">How to:</small>\n  <div class=\"card-body bg-white\">\n    <ol>\n      <li>\n        <p><strong>Create an authentication token</strong>. The token gives you access to Make API resources depending on your <a href=\"#authentication-scopes\">Make role and assigned scopes</a>. You must include the token in the <strong>Authorization</strong> header of all requests. Add the word <strong>Token</strong> and a space before the token itself:<br>\n          <code>'Authorization: Token {Your authentication token}'</code></p>\n      </li>\n      <li>\n        <p><strong>Choose the</strong> <a href=\"#api-resources\">endpoint</a> <strong> that corresponds to the resource you want to interact with.</strong> For this example, you need the <code>/data-stores</code> endpoint. The endpoint requires the <strong>teamId</strong> query parameter. Place the parameter after the question mark in the endpoint URL. To filter results, you also need the <a href=\"#pagination-sorting-filtering\">parameter for ordering data</a>â<strong>pg[sortDir]</strong>:<br>\n          <code>{environment_url}/api/v2/data-stores?teamId={teamId}&amp;pg%5BsortDir%5D=asc</code></p>\n        <div class=\"alert alert-warning\">\n          The environment URL refers to the Make platform you interact with.\n        </div>\n      </li>\n      <li>\n        <p><strong>Prepare the full request and send it.</strong> In this case, use cURL to making the request. You want to retrieve data without modifying itâuse the <strong>GET</strong> method. Letâs put elements from the previous steps together.</p>\n        <div class=\"alert alert-warning\">\n          The following request example contains a sample authentication token. Don't use it in your requests. <a href=\"#authentication-token\">Generate your own token</a>.\n        </div>\n        <p>Always include a request body in POST, PUT, or PATCH requests.</p>\n      </li>\n      <li>\n        <p><strong>Evaluate the response.</strong> The API returns <code>200 OK</code> and a list of all data stores for the specified team. If your request failed, you receive an error code. Refer to <a href=\"#troubleshooting\">Troubleshooting and error handling</a> to troubleshoot the issue.</p>\n      </li>\n    </ol>\n  </div>\n</div>\n\n<div class=\"card card--dark card--snippet card--request mb-3\" data-move-right=\"request\">\n<div class=\"card-header\">\n<div class=\"card-title\">Request</div>\n</div>\n<div class=\"card-body\">\n<pre><code class=\"hljs bash\">curl --location \\\n--request GET '<span class=\"hljs-string\">https://eu1.make.com/api/v2/data-stores?teamId=35&pg%5BsortDir%5D=asc</span>' \\\n--header '<span class=\"hljs-string\">Content-Type: application/json</span>' \\\n--header '<span class=\"hljs-string\">Authorization: Token 93dc8837-2911-4711-a766-59c1167a974d</span>'</code></pre>\n</div>\n</div>\n\n<div class=\"card card--light card--snippet card--response\" data-move-right=\"response\">\n<div class=\"card-header\">\n<div class=\"card-title\">Response</div>\n</div>\n<div class=\"card-body\">\n<pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-attr\">\"dataStores\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    {\n      <span class=\"hljs-attr\">\"id\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">15043</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">\"name\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"Old data store\"</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">\"records\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">10</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">\"size\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"620\"</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">\"maxSize\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"1048576\"</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">\"teamId\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">35</span>\n    },\n    {\n      <span class=\"hljs-attr\">\"id\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">13433</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">\"name\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"New data store\"</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">\"records\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">1</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">\"size\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"48\"</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">\"maxSize\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"1048576\"</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">\"teamId\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">35</span>\n    }\n  ],\n  <span class=\"hljs-attr\">\"pg\"</span>: {\n    <span class=\"hljs-attr\">\"sortBy\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"name\"</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">\"limit\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">10000</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">\"sortDir\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"asc\"</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">\"offset\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span>\n  }\n<span class=\"hljs-punctuation\">}</span></code></pre>\n</div>\n</div>\n"
    },
    {
      "isDirectory": true,
      "path": "authentication",
      "content": "### <!-- {#authentication } --> Authentication\n",
      "contentWithoutLinks": "### <!-- {#authentication } --> Authentication\n",
      "label": " Authentication",
      "files": [
        {
          "isDirectory": false,
          "path": "authentication-scopes",
          "contentWithoutLinks": "#### <!-- {#authentication-scopes .as-label } --> Make roles and API scopes\n\nAccessibility of Make API endpoints differs depending on the Make platform you use. On Make and our hosted cloud version, regular users cannot access the administration interface. Administration API resources are meant only for internal Make administrators. \n\nIn the on-premise version, any user with a platform administration role assigned can access the administration interface. These users can also access API endpoints that are meant for administrators.\n\nAccess to the Make API resources depends also on the scopes assigned to the authentication token. Some resources require more than one scope. There are two types of scopes-**read** and **write**.\n\n**Read scope** `:read`\nAllows you to use the GET method with endpoints, usually to get a list of resources or a resource detail. No modification is allowed.\n\n**Write scope** `:write`\nAllows you to use the POST, PUT, PATCH, or DELETE methods with endpoints to create, modify, or remove resources.\n\n<div class=\"alert alert-warning\">\n  Even if you are not the administrator, you can assign to your token the scopes meant for administrators. However, if you try to access the admin resources as a regular user, you will receive the <code>403 Access denied</code> error in response.\n</div>\n\n##### <!-- {.mt-5} --> Administration scopes (only for administrators of Make White Label platforms)\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#administration-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"administration-clps\"><strong>Administration</strong></a>\n\n<ul class=\"collapse\" id=\"administration-clps\">\n  <li><strong>admin:read</strong>\n    <ul>\n      <li>Allows getting all resources and information available only to administrators â all resources that are available in the administration interface, such as collections of all created users, templates, scenarios, and custom and native apps for the whole platform and all their details.</li>\n    </ul>\n  </li>\n  <li><strong>admin:write</strong>\n    <ul>\n      <li>Allows performing all actions available only to administrators â all actions that can be performed in the administration interface, such as creating organizations, deleting approved templates, reviewing custom apps, creating and deleting new users, overwriting scenarios and templates settings.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#native-apps-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"native-apps-clps\"><strong>Native apps</strong></a>\n\n<ul class=\"collapse\" id=\"native-apps-clps\">\n  <li><strong>apps:read</strong>\n    <ul>\n      <li>Allows getting a collection of all native apps.</li>\n      <li>Allows getting details of a native app.</li>\n    </ul>\n  </li>\n  <li><strong>apps:write</strong>\n    <ul>\n      <li>Allows updating a native app.</li>\n      <li>Allows deleting a native app.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#system-settings-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"system-settings-clps\"><strong>System settings</strong></a>\n\n<ul class=\"collapse\" id=\"system-settings-clps\">\n  <li><strong>system:read</strong>\n    <ul>\n      <li>Allows reading the Make platform settings.</li>\n    </ul>\n  </li>\n  <li><strong>system:write</strong>\n    <ul>\n      <li>Allows modifying the Make platform settings.</li>\n    </ul>\n  </li>\n</ul>\n\n##### <!-- {.mt-5} --> Standard user scopes (for all users of Make platforms)\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#connections-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"connections-clps\"><strong>Connections</strong></a>\n\n<ul class=\"collapse\" id=\"connections-clps\">\n  <li><strong>connections:read</strong>\n    <ul>\n      <li>Allows retrieving connections for a given team.</li>\n      <li>Allows getting details of a connection.</li>\n    </ul>\n  </li>\n  <li><strong>connections:write</strong>\n    <ul>\n      <li>Allows creating new connections.</li>\n      <li>Allows updating connections.</li>\n      <li>Allows deleting connections.</li>\n      <li>Allows setting data for connections.</li>\n      <li>Allows verifying connections.</li>\n      <li>Allows checking if a connection scope is limited.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#custom-property-structures-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"custom-property-structures-clps\"><strong>Custom property structures</strong></a>\n\n<ul class=\"collapse\" id=\"custom-property-structures-clps\">\n  <li><strong>custom-property-structures:read</strong>\n    <ul>\n      <li>Allows retrieving the list of custom properties structures in the organization.</li>\n      <li>Allows getting custom properties items.</li>\n    </ul>\n  </li>\n  <li><strong>custom-property-structures:write</strong>\n    <ul>\n      <li>Allows creating custom properties structures.</li>\n      <li>Allows creating custom property structure items.</li>\n      <li>Allows updating custom property structure items.</li>\n      <li>Allows deleting custom property structure items.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#data-stores-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"data-stores-clps\"><strong>Data stores</strong></a>\n\n<ul class=\"collapse\" id=\"data-stores-clps\">\n  <li><strong>datastores:read</strong>\n    <ul>\n      <li>Allows getting all data stores for a given team.</li>\n      <li>Allows getting records from a data store.</li>\n    </ul>\n  </li>\n  <li><strong>datastores:write</strong>\n    <ul>\n      <li>Allows creating new data store.</li>\n      <li>Allows updating data stores.</li>\n      <li>Allows deleting data store.</li>\n      <li>Allows modifying the records of a data store.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#devices-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"devices-clps\"><strong>Devices</strong></a>\n\n<ul class=\"collapse\" id=\"devices-clps\">\n  <li><strong>devices:read</strong>\n    <ul>\n      <li>Allows retrieving all devices for a given team.</li>\n      <li>Allows getting details of a device.</li>\n    </ul>\n  </li>\n  <li><strong>devices:write</strong>\n    <ul>\n      <li>Allows creating new devices.</li>\n      <li>Allows updating devices.</li>\n      <li>Allows deleting devices.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#incomplete-executions-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"incomplete-executions-clps\"><strong>Incomplete executions</strong></a>\n\n<ul class=\"collapse\" id=\"incomplete-executions-clps\">\n  <li><strong>dlqs:read</strong>\n    <ul>\n      <li>Allows getting all incomplete executions of a given scenario.</li>\n      <li>Allows getting details of an incomplete execution.</li>\n      <li>Allows getting bundles, blueprints, and logs of an incomplete execution.</li>\n    </ul>\n  </li>\n  <li><strong>dlqs:write</strong>\n    <ul>\n      <li>Allows updating incomplete executions.</li>\n      <li>Allows deleting incomplete executions.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#custom-functions-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"custom-functions-clps\"><strong>Custom functions</strong></a>\n\n<ul class=\"collapse\" id=\"custom-functions-clps\">\n  <li><strong>functions:read</strong>\n    <ul>\n      <li>Allows getting data about the custom functions which belong to the team.</li>\n      <li>Allows getting the history of updates to the custom functions.</li>\n    </ul>\n  </li>\n  <li><strong>functions:write</strong>\n    <ul>\n      <li>Allows creating custom functions.</li>\n      <li>Allows updating custom functions.</li>\n      <li>Allows deleting custom functions.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#hooks-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"hooks-clps\"><strong>Hooks</strong></a>\n\n<ul class=\"collapse\" id=\"hooks-clps\">\n  <li><strong>hooks:read</strong>\n    <ul>\n      <li>Allows getting all hooks (mailhooks and webhooks) for a given team.</li>\n      <li>Allows getting hook requests.</li>\n      <li>Allows checking if a hook is active.</li>\n    </ul>\n  </li>\n  <li><strong>hooks:write</strong>\n    <ul>\n      <li>Allows creating new hooks.</li>\n      <li>Allows updating hooks.</li>\n      <li>Allows deleting hooks.</li>\n      <li>Allows enabling or disabling hooks.</li>\n      <li>Allows starting or stopping the automatic determination of a data structure for a hook.</li>\n      <li>Allows setting data for hooks.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#keys-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"keys-clps\"><strong>Keys</strong></a>\n\n<ul class=\"collapse\" id=\"keys-clps\">\n  <li><strong>keys:read</strong>\n    <ul>\n      <li>Allows getting all keys for a given team.</li>\n      <li>Allows getting key types.</li>\n    </ul>\n  </li>\n  <li><strong>keys:write</strong>\n    <ul>\n      <li>Allows creating new keys.</li>\n      <li>Allows updating keys.</li>\n      <li>Allows deleting keys.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#notifications-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"notifications-clps\"><strong>Notifications</strong></a>\n\n<ul class=\"collapse\" id=\"notifications-clps\">\n  <li><strong>notifications:read</strong>\n    <ul>\n      <li>Allows getting all notifications for a given user.</li>\n      <li>Allows getting details of a notification.</li>\n    </ul>\n  </li>\n  <li><strong>notifications:write</strong>\n    <ul>\n      <li>Allows marking notifications as read.</li>\n      <li>Allows deleting notifications.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#organizations-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"organizations-clps\"><strong>Organizations</strong></a>\n\n<ul class=\"collapse\" id=\"organizations-clps\">\n  <li><strong>organizations:read</strong>\n    <ul>\n      <li>Allows getting all organizations to which the authenticated user belongs.</li>\n      <li>Allows getting installed apps, invitations, user roles, and basic details of organizations.</li>\n    </ul>\n  </li>\n  <li><strong>organizations:write</strong>\n    <ul>\n      <li>Allows creating new organizations (only for admins).</li>\n      <li>Allows updating organizations.</li>\n      <li>Allows deleting organizations.</li>\n      <li>Allows accepting invitations to organizations.</li>\n      <li>Allows adding members to organizations.</li>\n    </ul>\n  </li>\n  <li><strong>organizations-variables:read</strong>\n    <ul>\n      <li>Allows getting data of organization variables to which the authenticated user belongs.</li>\n      <li>Allows getting the history of updates of custom organization variables.</li>\n    </ul>\n  </li>\n  <li><strong>organizations-variables:write</strong>\n    <ul>\n      <li>Allows creating custom organization variables.</li>\n      <li>Allows updating custom organization variables.</li>\n      <li>Allows deleting custom organization variables.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#scenarios-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"scenarios-clps\"><strong>Scenarios</strong></a>\n\n<ul class=\"collapse\" id=\"scenarios-clps\">\n  <li><strong>scenarios:read</strong>\n    <ul>\n      <li>Allows getting all scenarios for a given team or organization.</li>\n      <li>Allows getting details of a scenario.</li>\n      <li>Allows getting properties of triggers included in scenarios.</li>\n      <li>Allows getting scenario blueprints.</li>\n      <li>Allows getting blueprint versions.</li>\n      <li>Allows getting scenario logs.</li>\n      <li>Allows getting scenario folders.</li>\n      <li>Allows inspecting scenario interface.</li>\n       <li>Allows retrieving custom scenario properties data.</li>\n    </ul>\n  </li>\n  <li><strong>scenarios:write</strong>\n    <ul>\n      <li>Allows creating new scenarios and scenario folders.</li>\n      <li>Allows updating scenarios and scenario folder.</li>\n      <li>Allows cloning scenarios.</li>\n      <li>Allows verifying whether module settings are set or not.</li>\n      <li>Allows activating and deactivating scenarios.</li>\n      <li>Allows deleting scenarios and scenario folders.</li>\n      <li>Allows updating scenario interface.</li>\n      <li>Allows adding custom scenario properties data.</li>\n      <li>Allows updating custom scenario properties data.</li>\n      <li>Allows deleting custom scenario properties data.</li>\n    </ul>\n  </li>\n  <li><strong>scenarios:run</strong>\n    <ul>\n      <li>Allows running scenarios with the API.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#custom-apps-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"custom-apps-clps\"><strong>Custom apps</strong></a>\n\n<ul class=\"collapse\" id=\"custom-apps-clps\">\n  <li><strong>sdk-apps:read</strong>\n    <ul>\n      <li>Allows getting all custom apps for the authenticated user.</li>\n      <li>Allows getting information from specific configuration sections of a custom app.</li>\n      <li>Allows getting invitation details for an app.</li>\n    </ul>\n  </li>\n  <li><strong>sdk-apps:write</strong>\n    <ul>\n      <li>Allows creating custom apps.</li>\n      <li>Allows managing configuration of custom apps.</li>\n      <li>Allows cloning custom apps.</li>\n      <li>Allows requesting review of custom apps.</li>\n      <li>Allows rolling back changes made in custom apps.</li>\n      <li>Allows uninstalling custom apps from organizations.</li>\n      <li>Allows deleting custom apps.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#teams-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"teams-clps\"><strong>Teams</strong></a>\n\n<ul class=\"collapse\" id=\"teams-clps\">\n  <li><strong>teams:read</strong>\n    <ul>\n      <li>Allows getting all teams that belong to a given organization.</li>\n      <li>Allows getting details of a team.</li>\n      <li>Allows getting all team roles.</li>\n      <li>Allows getting details of a team role.</li>\n    </ul>\n  </li>\n  <li><strong>teams:write</strong>\n    <ul>\n      <li>Allows creating new teams.</li>\n      <li>Allows updating teams.</li>\n      <li>Allows deleting teams.</li>\n    </ul>\n  </li>\n  <li><strong>teams-variables:read</strong>\n    <ul>\n      <li>Allows getting data of team variables to which the authenticated user belongs.</li>\n      <li>Allows getting the history of updates of custom team variables.</li>\n    </ul>\n  </li>\n  <li><strong>team-variables:write</strong>\n    <ul>\n      <li>Allows creating custom team variables.</li>\n      <li>Allows updating custom team variables.</li>\n      <li>Allows deleting custom team variables.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#templates-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"templates-clps\"><strong>Templates</strong></a>\n\n<ul class=\"collapse\" id=\"templates-clps\">\n  <li><strong>templates:read</strong>\n    <ul>\n      <li>Allows retrieving all private templates for a given team.</li>\n      <li>Allows getting all public templates.</li>\n      <li>Allows getting private or public template details.</li>\n      <li>Allows getting private or public template blueprints.</li>\n    </ul>\n  </li>\n  <li><strong>templates:write</strong>\n    <ul>\n      <li>Allows creating new templates.</li>\n      <li>Allows updating templates.</li>\n      <li>Allows deleting templates.</li>\n      <li>Allows publishing private templates.</li>\n      <li>Allows requesting approval of published templates.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#data-structures-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"data-structures-clps\"><strong>Data structures</strong></a>\n\n<ul class=\"collapse\" id=\"data-structures-clps\">\n  <li><strong>udts:read</strong>\n    <ul>\n      <li>Allows retrieving all data structures for a given team.</li>\n    </ul>\n  </li>\n  <li><strong>udts:write</strong>\n    <ul>\n      <li>Allows creating new data structures.</li>\n      <li>Allows updating data structures.</li>\n      <li>Allows deleting data structures.</li>\n      <li>Allows cloning data structures.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#users-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"users-clps\"><strong>Users</strong></a>\n\n<ul class=\"collapse\" id=\"users-clps\">\n  <li><strong>user:read</strong>\n    <ul>\n      <li>Allows getting all users who belong to a given team or organization.</li>\n      <li>Allows getting API authentication tokens assigned to the currently authenticated user.</li>\n      <li>Allows getting organization invitations assigned to the currently authenticated user.</li>\n      <li>Allows getting organization invitations assigned to a user.</li>\n      <li>Allows getting organization and team roles that can be assigned to any user.</li>\n      <li>Allows getting a number of unread notifications for the currently authenticated user.</li>\n      <li>Allows getting organizations invitations for a user.</li>\n      <li>Allows getting details of an invitation to an organization for a user.</li>\n      <li>Allows getting details of a notification assigned to a user in a given team.</li>\n      <li>Allows getting team roles of a user.</li>\n    </ul>\n  </li>\n  <li><strong>user:write</strong>\n    <ul>\n      <li>Allows setting a user role for a given team.</li>\n      <li>Allows setting a user role in a given organization.</li>\n      <li>Allows transferring organization ownership to a user.</li>\n      <li>Allows updating a notification for a user in a given team.</li>\n      <li>Allows creating a new API authentication token for a currently authenticated user.</li>\n      <li>Allows deleting an API authentication token identified by timestamp for a currently authenticated user.</li>\n      <li>Allows deleting an account of a currently authenticated user.</li>\n      <li>Allows updating details of a user.</li>\n    </ul>\n  </li>\n</ul>\n",
          "label": " Make roles and API scopes",
          "content": "#### <!-- {#authentication-scopes .as-label } --> Make roles and API scopes\n\nAccessibility of Make API endpoints differs depending on the Make platform you use. On Make and our hosted cloud version, regular users cannot access the administration interface. Administration API resources are meant only for internal Make administrators. \n\nIn the on-premise version, any user with a platform administration role assigned can access the administration interface. These users can also access API endpoints that are meant for administrators.\n\nAccess to the Make API resources depends also on the scopes assigned to the authentication token. Some resources require more than one scope. There are two types of scopes-**read** and **write**.\n\n**Read scope** `:read`\nAllows you to use the GET method with endpoints, usually to get a list of resources or a resource detail. No modification is allowed.\n\n**Write scope** `:write`\nAllows you to use the POST, PUT, PATCH, or DELETE methods with endpoints to create, modify, or remove resources.\n\n<div class=\"alert alert-warning\">\n  Even if you are not the administrator, you can assign to your token the scopes meant for administrators. However, if you try to access the admin resources as a regular user, you will receive the <code>403 Access denied</code> error in response.\n</div>\n\n##### <!-- {.mt-5} --> Administration scopes (only for administrators of Make White Label platforms)\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#administration-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"administration-clps\"><strong>Administration</strong></a>\n\n<ul class=\"collapse\" id=\"administration-clps\">\n  <li><strong>admin:read</strong>\n    <ul>\n      <li>Allows getting all resources and information available only to administrators â all resources that are available in the administration interface, such as collections of all created users, templates, scenarios, and custom and native apps for the whole platform and all their details.</li>\n    </ul>\n  </li>\n  <li><strong>admin:write</strong>\n    <ul>\n      <li>Allows performing all actions available only to administrators â all actions that can be performed in the administration interface, such as creating organizations, deleting approved templates, reviewing custom apps, creating and deleting new users, overwriting scenarios and templates settings.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#native-apps-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"native-apps-clps\"><strong>Native apps</strong></a>\n\n<ul class=\"collapse\" id=\"native-apps-clps\">\n  <li><strong>apps:read</strong>\n    <ul>\n      <li>Allows getting a collection of all native apps.</li>\n      <li>Allows getting details of a native app.</li>\n    </ul>\n  </li>\n  <li><strong>apps:write</strong>\n    <ul>\n      <li>Allows updating a native app.</li>\n      <li>Allows deleting a native app.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#system-settings-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"system-settings-clps\"><strong>System settings</strong></a>\n\n<ul class=\"collapse\" id=\"system-settings-clps\">\n  <li><strong>system:read</strong>\n    <ul>\n      <li>Allows reading the Make platform settings.</li>\n    </ul>\n  </li>\n  <li><strong>system:write</strong>\n    <ul>\n      <li>Allows modifying the Make platform settings.</li>\n    </ul>\n  </li>\n</ul>\n\n##### <!-- {.mt-5} --> Standard user scopes (for all users of Make platforms)\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#connections-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"connections-clps\"><strong>Connections</strong></a>\n\n<ul class=\"collapse\" id=\"connections-clps\">\n  <li><strong>connections:read</strong>\n    <ul>\n      <li>Allows retrieving connections for a given team.</li>\n      <li>Allows getting details of a connection.</li>\n    </ul>\n  </li>\n  <li><strong>connections:write</strong>\n    <ul>\n      <li>Allows creating new connections.</li>\n      <li>Allows updating connections.</li>\n      <li>Allows deleting connections.</li>\n      <li>Allows setting data for connections.</li>\n      <li>Allows verifying connections.</li>\n      <li>Allows checking if a connection scope is limited.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#custom-property-structures-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"custom-property-structures-clps\"><strong>Custom property structures</strong></a>\n\n<ul class=\"collapse\" id=\"custom-property-structures-clps\">\n  <li><strong>custom-property-structures:read</strong>\n    <ul>\n      <li>Allows retrieving the list of custom properties structures in the organization.</li>\n      <li>Allows getting custom properties items.</li>\n    </ul>\n  </li>\n  <li><strong>custom-property-structures:write</strong>\n    <ul>\n      <li>Allows creating custom properties structures.</li>\n      <li>Allows creating custom property structure items.</li>\n      <li>Allows updating custom property structure items.</li>\n      <li>Allows deleting custom property structure items.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#data-stores-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"data-stores-clps\"><strong>Data stores</strong></a>\n\n<ul class=\"collapse\" id=\"data-stores-clps\">\n  <li><strong>datastores:read</strong>\n    <ul>\n      <li>Allows getting all data stores for a given team.</li>\n      <li>Allows getting records from a data store.</li>\n    </ul>\n  </li>\n  <li><strong>datastores:write</strong>\n    <ul>\n      <li>Allows creating new data store.</li>\n      <li>Allows updating data stores.</li>\n      <li>Allows deleting data store.</li>\n      <li>Allows modifying the records of a data store.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#devices-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"devices-clps\"><strong>Devices</strong></a>\n\n<ul class=\"collapse\" id=\"devices-clps\">\n  <li><strong>devices:read</strong>\n    <ul>\n      <li>Allows retrieving all devices for a given team.</li>\n      <li>Allows getting details of a device.</li>\n    </ul>\n  </li>\n  <li><strong>devices:write</strong>\n    <ul>\n      <li>Allows creating new devices.</li>\n      <li>Allows updating devices.</li>\n      <li>Allows deleting devices.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#incomplete-executions-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"incomplete-executions-clps\"><strong>Incomplete executions</strong></a>\n\n<ul class=\"collapse\" id=\"incomplete-executions-clps\">\n  <li><strong>dlqs:read</strong>\n    <ul>\n      <li>Allows getting all incomplete executions of a given scenario.</li>\n      <li>Allows getting details of an incomplete execution.</li>\n      <li>Allows getting bundles, blueprints, and logs of an incomplete execution.</li>\n    </ul>\n  </li>\n  <li><strong>dlqs:write</strong>\n    <ul>\n      <li>Allows updating incomplete executions.</li>\n      <li>Allows deleting incomplete executions.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#custom-functions-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"custom-functions-clps\"><strong>Custom functions</strong></a>\n\n<ul class=\"collapse\" id=\"custom-functions-clps\">\n  <li><strong>functions:read</strong>\n    <ul>\n      <li>Allows getting data about the custom functions which belong to the team.</li>\n      <li>Allows getting the history of updates to the custom functions.</li>\n    </ul>\n  </li>\n  <li><strong>functions:write</strong>\n    <ul>\n      <li>Allows creating custom functions.</li>\n      <li>Allows updating custom functions.</li>\n      <li>Allows deleting custom functions.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#hooks-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"hooks-clps\"><strong>Hooks</strong></a>\n\n<ul class=\"collapse\" id=\"hooks-clps\">\n  <li><strong>hooks:read</strong>\n    <ul>\n      <li>Allows getting all hooks (mailhooks and webhooks) for a given team.</li>\n      <li>Allows getting hook requests.</li>\n      <li>Allows checking if a hook is active.</li>\n    </ul>\n  </li>\n  <li><strong>hooks:write</strong>\n    <ul>\n      <li>Allows creating new hooks.</li>\n      <li>Allows updating hooks.</li>\n      <li>Allows deleting hooks.</li>\n      <li>Allows enabling or disabling hooks.</li>\n      <li>Allows starting or stopping the automatic determination of a data structure for a hook.</li>\n      <li>Allows setting data for hooks.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#keys-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"keys-clps\"><strong>Keys</strong></a>\n\n<ul class=\"collapse\" id=\"keys-clps\">\n  <li><strong>keys:read</strong>\n    <ul>\n      <li>Allows getting all keys for a given team.</li>\n      <li>Allows getting key types.</li>\n    </ul>\n  </li>\n  <li><strong>keys:write</strong>\n    <ul>\n      <li>Allows creating new keys.</li>\n      <li>Allows updating keys.</li>\n      <li>Allows deleting keys.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#notifications-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"notifications-clps\"><strong>Notifications</strong></a>\n\n<ul class=\"collapse\" id=\"notifications-clps\">\n  <li><strong>notifications:read</strong>\n    <ul>\n      <li>Allows getting all notifications for a given user.</li>\n      <li>Allows getting details of a notification.</li>\n    </ul>\n  </li>\n  <li><strong>notifications:write</strong>\n    <ul>\n      <li>Allows marking notifications as read.</li>\n      <li>Allows deleting notifications.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#organizations-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"organizations-clps\"><strong>Organizations</strong></a>\n\n<ul class=\"collapse\" id=\"organizations-clps\">\n  <li><strong>organizations:read</strong>\n    <ul>\n      <li>Allows getting all organizations to which the authenticated user belongs.</li>\n      <li>Allows getting installed apps, invitations, user roles, and basic details of organizations.</li>\n    </ul>\n  </li>\n  <li><strong>organizations:write</strong>\n    <ul>\n      <li>Allows creating new organizations (only for admins).</li>\n      <li>Allows updating organizations.</li>\n      <li>Allows deleting organizations.</li>\n      <li>Allows accepting invitations to organizations.</li>\n      <li>Allows adding members to organizations.</li>\n    </ul>\n  </li>\n  <li><strong>organizations-variables:read</strong>\n    <ul>\n      <li>Allows getting data of organization variables to which the authenticated user belongs.</li>\n      <li>Allows getting the history of updates of custom organization variables.</li>\n    </ul>\n  </li>\n  <li><strong>organizations-variables:write</strong>\n    <ul>\n      <li>Allows creating custom organization variables.</li>\n      <li>Allows updating custom organization variables.</li>\n      <li>Allows deleting custom organization variables.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#scenarios-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"scenarios-clps\"><strong>Scenarios</strong></a>\n\n<ul class=\"collapse\" id=\"scenarios-clps\">\n  <li><strong>scenarios:read</strong>\n    <ul>\n      <li>Allows getting all scenarios for a given team or organization.</li>\n      <li>Allows getting details of a scenario.</li>\n      <li>Allows getting properties of triggers included in scenarios.</li>\n      <li>Allows getting scenario blueprints.</li>\n      <li>Allows getting blueprint versions.</li>\n      <li>Allows getting scenario logs.</li>\n      <li>Allows getting scenario folders.</li>\n      <li>Allows inspecting scenario interface.</li>\n       <li>Allows retrieving custom scenario properties data.</li>\n    </ul>\n  </li>\n  <li><strong>scenarios:write</strong>\n    <ul>\n      <li>Allows creating new scenarios and scenario folders.</li>\n      <li>Allows updating scenarios and scenario folder.</li>\n      <li>Allows cloning scenarios.</li>\n      <li>Allows verifying whether module settings are set or not.</li>\n      <li>Allows activating and deactivating scenarios.</li>\n      <li>Allows deleting scenarios and scenario folders.</li>\n      <li>Allows updating scenario interface.</li>\n      <li>Allows adding custom scenario properties data.</li>\n      <li>Allows updating custom scenario properties data.</li>\n      <li>Allows deleting custom scenario properties data.</li>\n    </ul>\n  </li>\n  <li><strong>scenarios:run</strong>\n    <ul>\n      <li>Allows running scenarios with the API.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#custom-apps-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"custom-apps-clps\"><strong>Custom apps</strong></a>\n\n<ul class=\"collapse\" id=\"custom-apps-clps\">\n  <li><strong>sdk-apps:read</strong>\n    <ul>\n      <li>Allows getting all custom apps for the authenticated user.</li>\n      <li>Allows getting information from specific configuration sections of a custom app.</li>\n      <li>Allows getting invitation details for an app.</li>\n    </ul>\n  </li>\n  <li><strong>sdk-apps:write</strong>\n    <ul>\n      <li>Allows creating custom apps.</li>\n      <li>Allows managing configuration of custom apps.</li>\n      <li>Allows cloning custom apps.</li>\n      <li>Allows requesting review of custom apps.</li>\n      <li>Allows rolling back changes made in custom apps.</li>\n      <li>Allows uninstalling custom apps from organizations.</li>\n      <li>Allows deleting custom apps.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#teams-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"teams-clps\"><strong>Teams</strong></a>\n\n<ul class=\"collapse\" id=\"teams-clps\">\n  <li><strong>teams:read</strong>\n    <ul>\n      <li>Allows getting all teams that belong to a given organization.</li>\n      <li>Allows getting details of a team.</li>\n      <li>Allows getting all team roles.</li>\n      <li>Allows getting details of a team role.</li>\n    </ul>\n  </li>\n  <li><strong>teams:write</strong>\n    <ul>\n      <li>Allows creating new teams.</li>\n      <li>Allows updating teams.</li>\n      <li>Allows deleting teams.</li>\n    </ul>\n  </li>\n  <li><strong>teams-variables:read</strong>\n    <ul>\n      <li>Allows getting data of team variables to which the authenticated user belongs.</li>\n      <li>Allows getting the history of updates of custom team variables.</li>\n    </ul>\n  </li>\n  <li><strong>team-variables:write</strong>\n    <ul>\n      <li>Allows creating custom team variables.</li>\n      <li>Allows updating custom team variables.</li>\n      <li>Allows deleting custom team variables.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#templates-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"templates-clps\"><strong>Templates</strong></a>\n\n<ul class=\"collapse\" id=\"templates-clps\">\n  <li><strong>templates:read</strong>\n    <ul>\n      <li>Allows retrieving all private templates for a given team.</li>\n      <li>Allows getting all public templates.</li>\n      <li>Allows getting private or public template details.</li>\n      <li>Allows getting private or public template blueprints.</li>\n    </ul>\n  </li>\n  <li><strong>templates:write</strong>\n    <ul>\n      <li>Allows creating new templates.</li>\n      <li>Allows updating templates.</li>\n      <li>Allows deleting templates.</li>\n      <li>Allows publishing private templates.</li>\n      <li>Allows requesting approval of published templates.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#data-structures-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"data-structures-clps\"><strong>Data structures</strong></a>\n\n<ul class=\"collapse\" id=\"data-structures-clps\">\n  <li><strong>udts:read</strong>\n    <ul>\n      <li>Allows retrieving all data structures for a given team.</li>\n    </ul>\n  </li>\n  <li><strong>udts:write</strong>\n    <ul>\n      <li>Allows creating new data structures.</li>\n      <li>Allows updating data structures.</li>\n      <li>Allows deleting data structures.</li>\n      <li>Allows cloning data structures.</li>\n    </ul>\n  </li>\n</ul>\n\n<a class=\"collapsible-link\" data-bs-toggle=\"collapse\" href=\"#users-clps\" role=\"button\" aria-expanded=\"false\" aria-controls=\"users-clps\"><strong>Users</strong></a>\n\n<ul class=\"collapse\" id=\"users-clps\">\n  <li><strong>user:read</strong>\n    <ul>\n      <li>Allows getting all users who belong to a given team or organization.</li>\n      <li>Allows getting API authentication tokens assigned to the currently authenticated user.</li>\n      <li>Allows getting organization invitations assigned to the currently authenticated user.</li>\n      <li>Allows getting organization invitations assigned to a user.</li>\n      <li>Allows getting organization and team roles that can be assigned to any user.</li>\n      <li>Allows getting a number of unread notifications for the currently authenticated user.</li>\n      <li>Allows getting organizations invitations for a user.</li>\n      <li>Allows getting details of an invitation to an organization for a user.</li>\n      <li>Allows getting details of a notification assigned to a user in a given team.</li>\n      <li>Allows getting team roles of a user.</li>\n    </ul>\n  </li>\n  <li><strong>user:write</strong>\n    <ul>\n      <li>Allows setting a user role for a given team.</li>\n      <li>Allows setting a user role in a given organization.</li>\n      <li>Allows transferring organization ownership to a user.</li>\n      <li>Allows updating a notification for a user in a given team.</li>\n      <li>Allows creating a new API authentication token for a currently authenticated user.</li>\n      <li>Allows deleting an API authentication token identified by timestamp for a currently authenticated user.</li>\n      <li>Allows deleting an account of a currently authenticated user.</li>\n      <li>Allows updating details of a user.</li>\n    </ul>\n  </li>\n</ul>\n"
        },
        {
          "isDirectory": false,
          "path": "authentication-token",
          "contentWithoutLinks": "#### <!-- {#authentication-token } --> Generating authentication token\n\nMake API uses authentication tokens to authenticate requests. You must include your authentication token in the headers of all requests that you send to the API.\n\nGenerate and manage API tokens from your profile in the Make interface.\n\n<div class=\"alert alert-warning\">\n  If you have access to multiple Make environments, generate separate tokens for each of them.\n</div>\n\n<div class=\"card card--light mb-4\">\n  <small class=\"py-1 px-3 fw-bold\">How to:</small>\n  <div class=\"card-body bg-white\">\n    <ol>\n      <li class=\"mb-2\">Sign in to Make and click your avatar at the bottom-left corner of the page.</li>\n      <li class=\"mb-2\">Click <strong>Profile</strong>.</li>\n      <li class=\"mb-3\">Open the <strong>API</strong> tab.<br>\n      <img class=\"img-fluid mt-1\" src=\"/en/api-documentation/assets/sites/api-documentation/img/intro-steps-1.png\" alt=\"Choose API\"></li>\n      <li class=\"mb-3\">Click <strong>Add token</strong>.<br>\n        <img class=\"img-fluid mt-1\" src=\"/en/api-documentation/assets/sites/api-documentation/img/intro-steps-2.png\" alt=\"Add token\"></li>\n      <li class=\"mb-2\">In the <strong>Add token</strong> dialog, do the following:\n          <br><em>Label</em> â type a custom name for your token that will help you recognize what the token is used for\n          <br><em>Scopes</em> â select the scopes you need for working with API resources. For more information about scopes, refer to <a href=\"#authentication-scopes\">Make roles and API scopes</a>.\n      </li>\n      <li>Click <strong>Save</strong>.</li>\n    </ol>\n  </div>\n</div>\n\nMake generates your token. Copy it and store it in a safe place.\n\n**Do not share your token with anyone! <!-- {.text-danger} -->**\n\n<div class=\"alert alert-danger\">\n  Once you leave the <strong>Profile</strong> section, parts of your token will be hidden for security reasons. You won't be able to see or copy your token again.\n</div>\n\nWith an active token, you are ready to make API calls. For more details, refer to the Getting started section.\n",
          "label": " Generating authentication token",
          "content": "#### <!-- {#authentication-token } --> Generating authentication token\n\nMake API uses authentication tokens to authenticate requests. You must include your authentication token in the headers of all requests that you send to the API.\n\nGenerate and manage API tokens from your profile in the Make interface.\n\n<div class=\"alert alert-warning\">\n  If you have access to multiple Make environments, generate separate tokens for each of them.\n</div>\n\n<div class=\"card card--light mb-4\">\n  <small class=\"py-1 px-3 fw-bold\">How to:</small>\n  <div class=\"card-body bg-white\">\n    <ol>\n      <li class=\"mb-2\">Sign in to Make and click your avatar at the bottom-left corner of the page.</li>\n      <li class=\"mb-2\">Click <strong>Profile</strong>.</li>\n      <li class=\"mb-3\">Open the <strong>API</strong> tab.<br>\n      <img class=\"img-fluid mt-1\" src=\"/en/api-documentation/assets/sites/api-documentation/img/intro-steps-1.png\" alt=\"Choose API\"></li>\n      <li class=\"mb-3\">Click <strong>Add token</strong>.<br>\n        <img class=\"img-fluid mt-1\" src=\"/en/api-documentation/assets/sites/api-documentation/img/intro-steps-2.png\" alt=\"Add token\"></li>\n      <li class=\"mb-2\">In the <strong>Add token</strong> dialog, do the following:\n          <br><em>Label</em> â type a custom name for your token that will help you recognize what the token is used for\n          <br><em>Scopes</em> â select the scopes you need for working with API resources. For more information about scopes, refer to <a href=\"#authentication-scopes\">Make roles and API scopes</a>.\n      </li>\n      <li>Click <strong>Save</strong>.</li>\n    </ol>\n  </div>\n</div>\n\nMake generates your token. Copy it and store it in a safe place.\n\n**Do not share your token with anyone! <!-- {.text-danger} -->**\n\n<div class=\"alert alert-danger\">\n  Once you leave the <strong>Profile</strong> section, parts of your token will be hidden for security reasons. You won't be able to see or copy your token again.\n</div>\n\nWith an active token, you are ready to make API calls. For more details, refer to the [Getting started](#getting-started) section.\n"
        },
        {
          "isDirectory": false,
          "path": "authentication-managing",
          "contentWithoutLinks": "#### <!-- {#authentication-managing } --> Managing authentication token\n\nAfter you generate your authentication token and open the API tab in your profile again, you can no longer change the token or the scopes assigned to the token. You can only view the initial part of the token value and view the scopes. \n\nTo manage your tokens:\n\n<div class=\"card card--light mb-4\">\n  <small class=\"py-1 px-3 fw-bold\">How to:</small>\n  <div class=\"card-body bg-white\">\n    <ol>\n      <li class=\"mb-2\"><strong>Sign in</strong> to Make Make click your avatar at the bottom-left corner of the page.</li>\n      <li class=\"mb-2\">Click <strong>Profile</strong>.</li>\n      <li class=\"mb-2\">Open the <strong>API</strong> tab.</li>\n      <li class=\"mb-2\">Click one of the following buttons:<br>\n        <strong>Show scopes</strong> â to see scopes that are assigned to the token.\n        <br><strong>Delete</strong> â to permanently remove the token.\n      </li>\n      <li>Click <strong>Save</strong>.</li>\n    </ol>\n  </div>\n</div>\n\nSince editing the token is not possible, you can always delete the old token and replace it with a new one. You will need to do this if you decide to add or remove scopes from your authentication token.\n",
          "label": " Managing authentication token",
          "content": "#### <!-- {#authentication-managing } --> Managing authentication token\n\nAfter you [generate your authentication token](#authentication-token) and open the API tab in your profile again, you can no longer change the token or the scopes assigned to the token. You can only view the initial part of the token value and view the scopes. \n\nTo manage your tokens:\n\n<div class=\"card card--light mb-4\">\n  <small class=\"py-1 px-3 fw-bold\">How to:</small>\n  <div class=\"card-body bg-white\">\n    <ol>\n      <li class=\"mb-2\"><strong>Sign in</strong> to Make Make click your avatar at the bottom-left corner of the page.</li>\n      <li class=\"mb-2\">Click <strong>Profile</strong>.</li>\n      <li class=\"mb-2\">Open the <strong>API</strong> tab.</li>\n      <li class=\"mb-2\">Click one of the following buttons:<br>\n        <strong>Show scopes</strong> â to see scopes that are assigned to the token.\n        <br><strong>Delete</strong> â to permanently remove the token.\n      </li>\n      <li>Click <strong>Save</strong>.</li>\n    </ol>\n  </div>\n</div>\n\nSince editing the token is not possible, you can always delete the old token and replace it with a new one. You will need to do this if you decide to add or remove scopes from your authentication token.\n"
        }
      ]
    },
    {
      "isDirectory": true,
      "path": "pagination-sorting-filtering",
      "content": "### <!-- {#pagination-sorting-filtering } --> Pagination, sorting and filtering\n\nThe majority of responses containing a collection of resources are paginated. Pagination limits the number of returned results per request to avoid delays in receiving a response and prevent overloading with results. Thanks to pagination, the API can run at its best performance.\n\nYou set pagination, sorting, and filtering parameters in query parameters. Separate multiple query parameters using the & symbol. The order of the parameters does not matter.\n\n<div class=\"alert alert-warning\">\n  Pagination and filtering parameters contain square brackets - <code>[</code>Â andÂ <code>]</code>. Always encode them in URLs.\n</div>\n",
      "contentWithoutLinks": "### <!-- {#pagination-sorting-filtering } --> Pagination, sorting and filtering\n\nThe majority of responses containing a collection of resources are paginated. Pagination limits the number of returned results per request to avoid delays in receiving a response and prevent overloading with results. Thanks to pagination, the API can run at its best performance.\n\nYou set pagination, sorting, and filtering parameters in query parameters. Separate multiple query parameters using the & symbol. The order of the parameters does not matter.\n\n<div class=\"alert alert-warning\">\n  Pagination and filtering parameters contain square brackets - <code>[</code>Â andÂ <code>]</code>. Always encode them in URLs.\n</div>\n",
      "label": " Pagination, sorting and filtering",
      "files": [
        {
          "isDirectory": false,
          "path": "pagination-and-sorting",
          "contentWithoutLinks": "#### <!-- {#pagination-sorting-filtering } --> Pagination and sorting\n\n**pg[limit]**\nDefines the maximum number of results to return. For example, `pg[limit]=100`. The default value varies with different resources.\n\n**pg[offset]**\nDefines the number of results you want to skip before getting the results you need. For example, `pg[offset]=10`. The default value for most endpoints is  `0`.\n\n**pg[sortBy]**\nDefines the property by which to sort results. For example, `pg[sortBy]=id`. By default, results are usually sorted by `name` or `id`.\n\n**pg[sortDir]**\nDefines the sorting order. Use `asc` for ascending order, use `desc` for descending order. The default ordering direction is usually ascending.\n\n*Example*\n*Letâs say we want to retrieve data stores that belong to the team with ID 212.*\n\n<div class=\"card card--light mb-4\">\n  <small class=\"py-1 px-3 fw-bold\">How to:</small>\n  <div class=\"card-body bg-white\">\n    <ol>\n      <li class=\"mb-3\">\n        The request URL with the default pagination settings looks as follows:<br>\n        <code>{base_url}/api/v2/data-stores?teamId=212</code>\n      </li>\n      <li class=\"mb-3\">\n        <strong>Add the pagination parameters</strong><br>\n        In this case, we want to skip the first 10 results, limit the results to 50 data stores and sort them in ascending order. Use the following query parameters:<br>\n        <code>&amp;pg%5Boffset%5D=10&amp;pg%5BsortDir%5D=asc&amp;pg%5Blimit%5D=50</code>\n      </li>\n      <li>\n        The full request URL looks like this:<br>\n        <code>{base_url}/data-stores?teamId=212&amp;pg%5Boffset%5D=10&amp;pg%5BsortDir%5D=asc&amp;pg%5Blimit%5D=50</code>\n      </li>\n    </ol>\n\n  </div>\n</div>\n",
          "label": " Pagination and sorting",
          "content": "#### <!-- {#pagination-sorting-filtering } --> Pagination and sorting\n\n**pg[limit]**\nDefines the maximum number of results to return. For example, `pg[limit]=100`. The default value varies with different resources.\n\n**pg[offset]**\nDefines the number of results you want to skip before getting the results you need. For example, `pg[offset]=10`. The default value for most endpoints is  `0`.\n\n**pg[sortBy]**\nDefines the property by which to sort results. For example, `pg[sortBy]=id`. By default, results are usually sorted by `name` or `id`.\n\n**pg[sortDir]**\nDefines the sorting order. Use `asc` for ascending order, use `desc` for descending order. The default ordering direction is usually ascending.\n\n*Example*\n*Letâs say we want to retrieve data stores that belong to the team with ID 212.*\n\n<div class=\"card card--light mb-4\">\n  <small class=\"py-1 px-3 fw-bold\">How to:</small>\n  <div class=\"card-body bg-white\">\n    <ol>\n      <li class=\"mb-3\">\n        The request URL with the default pagination settings looks as follows:<br>\n        <code>{base_url}/api/v2/data-stores?teamId=212</code>\n      </li>\n      <li class=\"mb-3\">\n        <strong>Add the pagination parameters</strong><br>\n        In this case, we want to skip the first 10 results, limit the results to 50 data stores and sort them in ascending order. Use the following query parameters:<br>\n        <code>&amp;pg%5Boffset%5D=10&amp;pg%5BsortDir%5D=asc&amp;pg%5Blimit%5D=50</code>\n      </li>\n      <li>\n        The full request URL looks like this:<br>\n        <code>{base_url}/data-stores?teamId=212&amp;pg%5Boffset%5D=10&amp;pg%5BsortDir%5D=asc&amp;pg%5Blimit%5D=50</code>\n      </li>\n    </ol>\n\n  </div>\n</div>\n"
        },
        {
          "isDirectory": false,
          "path": "filtering",
          "contentWithoutLinks": "#### <!-- {#pagination-sorting-filtering } --> Filtering\n\nUse the `cols[]` parameter to select values you want in the response. You can also use the `cols[]` parameter to get values that the endpoint does not return by default. The set of available filtering values is different for each endpoint. Check the example API call responses to see what data you can get from the API call.\n\nSpecify the `cols[]` parameter multiple times in the API call to get multiple values from the endpoint. You can put numbers in the brackets to specify order in which you want to list the values in the API call response.\n\n*Example: Get only the name, id and teams in the specified organization. List the data in order: name, id, teams.*\n\n<div class=\"card card--light mb-4\">\n  <small class=\"py-1 px-3 fw-bold\">How to:</small>\n  <div class=\"card-body bg-white\">\n    <ol>\n      <li class=\"mb-3\">\n        The request URL snippet to get the <code>name</code>, <code>id</code> and <code>teams</code> values of the specified organization, in the specified order, looks like this:\n        <code>/organizations/{organizationId}?cols[1]=id&cols[2]=name&cols[3]=teams</code>\n      </li>\n      <li>\n        <strong>After encoding the square brackets</strong> you get the following request URL. The <code>organizationId</code> in our test case is 8013:<br>\n        <code>/organizations/8013?cols%5B1%5D=id&cols%5B2%5D=name&cols%5B3%5D=teams</code>\n      </li>\n      <li>\n        The full request looks like this:<br>\n        <code>GET {base-url}/organizations/8013?cols%5B1%5D=id&cols%5B2%5D=name&cols%5B3%5D=teams</code>\n      </li>\n    </ol>\n  </div>\n</div>\n\nSome endpoints have specific filtering parameters. For example, in the `/templates` endpoint you can use the `usedApps[]` parameter. The `usedApps[]` parameter allows you to get only the templates containing specific apps.\n",
          "label": " Filtering",
          "content": "#### <!-- {#pagination-sorting-filtering } --> Filtering\n\nUse the `cols[]` parameter to select values you want in the response. You can also use the `cols[]` parameter to get values that the endpoint does not return by default. The set of available filtering values is different for each endpoint. Check the example API call responses to see what data you can get from the API call.\n\nSpecify the `cols[]` parameter multiple times in the API call to get multiple values from the endpoint. You can put numbers in the brackets to specify order in which you want to list the values in the API call response.\n\n*Example: Get only the name, id and teams in the specified organization. List the data in order: name, id, teams.*\n\n<div class=\"card card--light mb-4\">\n  <small class=\"py-1 px-3 fw-bold\">How to:</small>\n  <div class=\"card-body bg-white\">\n    <ol>\n      <li class=\"mb-3\">\n        The request URL snippet to get the <code>name</code>, <code>id</code> and <code>teams</code> values of the specified organization, in the specified order, looks like this:\n        <code>/organizations/{organizationId}?cols[1]=id&cols[2]=name&cols[3]=teams</code>\n      </li>\n      <li>\n        <strong>After encoding the square brackets</strong> you get the following request URL. The <code>organizationId</code> in our test case is 8013:<br>\n        <code>/organizations/8013?cols%5B1%5D=id&cols%5B2%5D=name&cols%5B3%5D=teams</code>\n      </li>\n      <li>\n        The full request looks like this:<br>\n        <code>GET {base-url}/organizations/8013?cols%5B1%5D=id&cols%5B2%5D=name&cols%5B3%5D=teams</code>\n      </li>\n    </ol>\n  </div>\n</div>\n\nSome endpoints have specific filtering parameters. For example, in the `/templates` endpoint you can use the `usedApps[]` parameter. The `usedApps[]` parameter allows you to get only the templates containing specific apps.\n"
        }
      ]
    },
    {
      "isDirectory": true,
      "path": "troubleshooting",
      "content": "### <!-- {#troubleshooting } --> Troubleshooting and error handling\n",
      "contentWithoutLinks": "### <!-- {#troubleshooting } --> Troubleshooting and error handling\n",
      "label": " Troubleshooting and error handling",
      "files": [
        {
          "isDirectory": false,
          "path": "http-status-codes",
          "contentWithoutLinks": "#### <!-- {#http-status-codes .as-label } --> HTTP status codes of errors\n\nThis article describes the most frequent error codes returned by the Make API. If you need help resolving common issues related to the Make API, refer to the Troubleshooting section. If your request is incorrect, in the response, you can find the details of the error that should help you to troubleshoot. All Make API errors have the same schema. Below you can see the example of a response for the request with the incorrect parameter. This can happen, for example, when you request a resource you do not have access to:\n\n<p class=\"fst-italic mb-0\">Example:</p>\n<div class=\"card card--blank\">\n  <div class=\"card-body p-0\">\n    <pre class=\"hljs__wrapper\"><code class=\"hljs json\"><span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-attr\">\"detail\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"Access denied.\"</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">\"message\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"Permission denied\"</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">\"code\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"SC403\"</span><span class=\"hljs-punctuation\">,</span>\n<span class=\"hljs-punctuation\">}</span></code></pre>\n  </div>\n</div>\n\n##### Standard error responses\n\n<div itemscope itemtype=\"https://schema.org/FAQPage\">\n  <div class=\"card table\">\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th><strong class=\"text-nowrap\">HTTP status</strong></th>\n          <th><strong>Explanation</strong></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong>400</strong><br>Bad request</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>The server could not understand the request due to invalid syntax. This could happen, for example, due to the invalid data type and prohibited data duplication. Below you can find examples of more specific error messages related to some features:</p>\n              <p><strong>Connections</strong></p>\n              <ul>\n                <li>Invalid connection type </li>\n                <li>Invalid scope </li>\n                <li>Common data must be a&nbsp;collection </li>\n              </ul>\n              <p><strong>Data stores and data structures</strong></p>\n              <ul>\n                <li>teamId validation failed </li>\n              </ul>\n              <p><strong>Devices</strong></p>\n              <ul>\n                <li>Unknown identifier format </li>\n                <li>Some of the incoming messages could not be deleted because they are being processed right now </li>\n                <li>Some of the outgoing messages could not be deleted because they are being processed right now </li>\n                <li>Some of the executions could not be deleted because they are being processed right now </li>\n              </ul>\n              <p><strong>DLQS</strong></p>\n              <ul>\n                <li>Some of the executions could not be deleted because they are being processed right now </li>\n              </ul>\n              <p><strong>Hooks</strong></p>\n              <ul>\n                <li>Missing value of required parameter </li>\n              </ul>\n              <p><strong>Keys</strong></p>\n              <ul>\n                <li>Invalid input file </li>\n                <li>File is too big </li>\n                <li>File is not a&nbsp;valid primary key </li>\n                <li>File is not a&nbsp;valid certificate </li>\n              </ul>\n              <p><strong>Notifications</strong></p>\n              <ul>\n                <li>User has no organization in the zone </li>\n              </ul>\n              <p><strong>Scenarios</strong></p>\n              <ul>\n                <li>teamId and organizationId cannot be used together </li>\n                <li>Missing required parameter teamId or organizationId </li>\n                <li>Invalid key, not parsable to integer </li>\n              </ul>\n              <p><strong>Templates</strong></p>\n              <ul>\n                <li>Validation failed for templateUrl unknown format </li>\n              </ul>\n              <p><strong>Apps</strong></p>\n              <ul>\n                <li>Invalid response from the repository </li>\n                <li>Failed to attach to the pap installation </li>\n                <li>Failed to finish installation </li>\n                <li>App uninstallation failed </li>\n                <li>Invalid install specification </li>\n                <li>Install file of the pap is not valid </li>\n              </ul>\n            </div>\n          </td>\n        </tr>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong>403</strong><br>Forbidden</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>You do not have access rights to the content which means that your request was unauthorized.</p>\n            </div>\n          </td>\n        </tr>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong>404</strong><br>Not Found</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>The server cannot find the requested resource (probably it does not exist) even if the endpoint is valid. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client.</p>\n              <p>This code may appear, for example, when you try to get details of the nonexistent/removed scenario, team, template, user, organization or app.</p>\n            </div>\n          </td>\n        </tr>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong>413</strong><br>Payload Too Large</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>The request entity exceeded the limits set on the server. Below you can find examples of more specific error messages related to the Apps feature:</p>\n              <p><strong>Apps</strong></p>\n              <ul>\n                <li>Failed to save image. Invalid upload</li>\n                <li>Failed to save image. Image is too big</li>\n                <li> Commit message is too big</li>\n              </ul>\n            </div>\n          </td>\n        </tr>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong>424</strong><br>Failed Dependency</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>The request failed due to failure of a previous request. Below you can find examples of more specific error messages related to the Connections and Apps features:</p>\n              <p><strong>Connections</strong></p>\n              <ul>\n                <li>Connection action crashed</li>\n                <li>Connection action timed out</li>\n              </ul>\n              <p><strong>Apps</strong></p>\n              <ul>\n                <li>Failed to load manifest for app</li>\n                <li>Remote procedure crashed</li>\n                <li>Remote procedure timed out</li>\n              </ul>\n            </div>\n          </td>\n        </tr>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong>429</strong><br>Too many requests</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>You have exceeded the rate limit of API requests for your organization. Wait for one minute for the limit period to reset. Check the <a href=\"#rate-limiting\">API rate limiting section</a> for more information.</p>\n            </div>\n          </td>\n        </tr>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong>503</strong><br>Service Unavailable</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>A dependency is currently unavailable. This error code may appear, for example, in relation to unavailable dependencies for DLQs, scenarios or teams.</p>\n            </div>\n          </td>\n        </tr>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong>304</strong><br>Account Does Not Exist</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>This error appears when the account does not exist or it was not found.</p>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n##### Custom error codes\n\n  <div class=\"card table\">\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th><strong class=\"text-nowrap\">HTTP status</strong></th>\n          <th><strong>Explanation</strong></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong><br>IM001</strong><br>Access Denied</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>This error code indicates the lack of rights to perform specific actions. Below you can find examples of more specific error messages related to the Apps feature:</p>\n              <p><strong>Users</strong></p>\n              <ul>\n                <li>The user cannot change the password</li>\n                <li>The user cannot change the email</li>\n              </ul>\n              <p><strong>Apps</strong></p>\n              <ul>\n                <li> Cannot disapprove app</li>\n              </ul>\n            </div>\n          </td>\n        </tr>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong>IM002</strong><br>Insufficient Rights</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>This error appears when you do not have sufficient rights to interact with the resource.</p>\n            </div>\n          </td>\n        </tr>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong>IM003</strong><br> Storage Not Enough Space</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>This error appears when limit of data stores storage is exceeded.</p>\n            </div>\n          </td>\n        </tr>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong>IM004</strong><br> Confirmation Required</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>This error appears when the removal process of the key in the data stores is not confirmed.</p>\n            </div>\n          </td>\n        </tr>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong>IM005</strong><br> Invalid Input Parameters</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>This error appears when you use invalid parameters in a request. Below you can find examples of more specific error messages related to some features:</p>\n              <p><strong>Hooks</strong></p>\n              <ul>\n                <li>Invalid hook type</li>\n              </ul>\n              <p><strong>Connections</strong></p>\n              <ul>\n                <li>There is nothing to configure in this connection</li>\n              </ul>\n              <p><strong>Users</strong></p>\n              <ul>\n                <li>\n                  The user cannot be part of any organization\n                </li>\n              </ul>\n              <p><strong>Custom functions</strong></p>\n                <ul>\n                  <li>\n                  Your custom function's code has a syntax error or uses a JavaScript feature that Make doesn't support. Check the <a href=\"https://www.make.com/en/help/functions/custom-functions#limitations-of-custom-functions\">custom functions limitations</a> in the Make Help center.\n                  </li>\n                  <li>\n                  The custom function's name in the custom function's code and in the <code>name</code> field don't match.\n                  </li>\n                  <li>\n                  The custom function's name is the same as a JavaScript reserved word. A custom function cannot have the same name as a JavaScript reserved word. Check the <a href=\"https://www.w3schools.com/js/js_reserved.asp\">list of JavaScript reserved words.</a>\n                  </li>\n                </ul>\n            </div>\n          </td>\n        </tr>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong>IM011</strong><br> Entity Limit Exceeded</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>This error appears when you exceed the limit for password change attempts.</p>\n          </td>\n        </tr>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong>IM016</strong><br> Action is not possible due to dependencies </p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>This error appears when you don't fulfill requirements to execute the API call. For example: </p>\n              <p><strong>Scenario inputs</strong></p>\n              <ul>\n                <li>If you have required scenario inputs you have to set the scenario scheduling to <strong>On demand</strong>.</li>\n              </ul>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <p itemprop=\"name\"><strong>IM102</strong><br> Invalid Credentials</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>This error appears when you use the invalid password.</p>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n",
          "label": " HTTP status codes of errors",
          "content": "#### <!-- {#http-status-codes .as-label } --> HTTP status codes of errors\n\nThis article describes the most frequent error codes returned by the Make API. If you need help resolving common issues related to the Make API, refer to the [Troubleshooting](#common-issues) section. If your request is incorrect, in the response, you can find the details of the error that should help you to troubleshoot. All Make API errors have the same schema. Below you can see the example of a response for the request with the incorrect parameter. This can happen, for example, when you request a resource you do not have access to:\n\n<p class=\"fst-italic mb-0\">Example:</p>\n<div class=\"card card--blank\">\n  <div class=\"card-body p-0\">\n    <pre class=\"hljs__wrapper\"><code class=\"hljs json\"><span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-attr\">\"detail\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"Access denied.\"</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">\"message\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"Permission denied\"</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">\"code\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"SC403\"</span><span class=\"hljs-punctuation\">,</span>\n<span class=\"hljs-punctuation\">}</span></code></pre>\n  </div>\n</div>\n\n##### Standard error responses\n\n<div itemscope itemtype=\"https://schema.org/FAQPage\">\n  <div class=\"card table\">\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th><strong class=\"text-nowrap\">HTTP status</strong></th>\n          <th><strong>Explanation</strong></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong>400</strong><br>Bad request</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>The server could not understand the request due to invalid syntax. This could happen, for example, due to the invalid data type and prohibited data duplication. Below you can find examples of more specific error messages related to some features:</p>\n              <p><strong>Connections</strong></p>\n              <ul>\n                <li>Invalid connection type </li>\n                <li>Invalid scope </li>\n                <li>Common data must be a&nbsp;collection </li>\n              </ul>\n              <p><strong>Data stores and data structures</strong></p>\n              <ul>\n                <li>teamId validation failed </li>\n              </ul>\n              <p><strong>Devices</strong></p>\n              <ul>\n                <li>Unknown identifier format </li>\n                <li>Some of the incoming messages could not be deleted because they are being processed right now </li>\n                <li>Some of the outgoing messages could not be deleted because they are being processed right now </li>\n                <li>Some of the executions could not be deleted because they are being processed right now </li>\n              </ul>\n              <p><strong>DLQS</strong></p>\n              <ul>\n                <li>Some of the executions could not be deleted because they are being processed right now </li>\n              </ul>\n              <p><strong>Hooks</strong></p>\n              <ul>\n                <li>Missing value of required parameter </li>\n              </ul>\n              <p><strong>Keys</strong></p>\n              <ul>\n                <li>Invalid input file </li>\n                <li>File is too big </li>\n                <li>File is not a&nbsp;valid primary key </li>\n                <li>File is not a&nbsp;valid certificate </li>\n              </ul>\n              <p><strong>Notifications</strong></p>\n              <ul>\n                <li>User has no organization in the zone </li>\n              </ul>\n              <p><strong>Scenarios</strong></p>\n              <ul>\n                <li>teamId and organizationId cannot be used together </li>\n                <li>Missing required parameter teamId or organizationId </li>\n                <li>Invalid key, not parsable to integer </li>\n              </ul>\n              <p><strong>Templates</strong></p>\n              <ul>\n                <li>Validation failed for templateUrl unknown format </li>\n              </ul>\n              <p><strong>Apps</strong></p>\n              <ul>\n                <li>Invalid response from the repository </li>\n                <li>Failed to attach to the pap installation </li>\n                <li>Failed to finish installation </li>\n                <li>App uninstallation failed </li>\n                <li>Invalid install specification </li>\n                <li>Install file of the pap is not valid </li>\n              </ul>\n            </div>\n          </td>\n        </tr>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong>403</strong><br>Forbidden</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>You do not have access rights to the content which means that your request was unauthorized.</p>\n            </div>\n          </td>\n        </tr>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong>404</strong><br>Not Found</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>The server cannot find the requested resource (probably it does not exist) even if the endpoint is valid. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client.</p>\n              <p>This code may appear, for example, when you try to get details of the nonexistent/removed scenario, team, template, user, organization or app.</p>\n            </div>\n          </td>\n        </tr>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong>413</strong><br>Payload Too Large</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>The request entity exceeded the limits set on the server. Below you can find examples of more specific error messages related to the Apps feature:</p>\n              <p><strong>Apps</strong></p>\n              <ul>\n                <li>Failed to save image. Invalid upload</li>\n                <li>Failed to save image. Image is too big</li>\n                <li> Commit message is too big</li>\n              </ul>\n            </div>\n          </td>\n        </tr>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong>424</strong><br>Failed Dependency</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>The request failed due to failure of a previous request. Below you can find examples of more specific error messages related to the Connections and Apps features:</p>\n              <p><strong>Connections</strong></p>\n              <ul>\n                <li>Connection action crashed</li>\n                <li>Connection action timed out</li>\n              </ul>\n              <p><strong>Apps</strong></p>\n              <ul>\n                <li>Failed to load manifest for app</li>\n                <li>Remote procedure crashed</li>\n                <li>Remote procedure timed out</li>\n              </ul>\n            </div>\n          </td>\n        </tr>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong>429</strong><br>Too many requests</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>You have exceeded the rate limit of API requests for your organization. Wait for one minute for the limit period to reset. Check the <a href=\"#rate-limiting\">API rate limiting section</a> for more information.</p>\n            </div>\n          </td>\n        </tr>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong>503</strong><br>Service Unavailable</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>A dependency is currently unavailable. This error code may appear, for example, in relation to unavailable dependencies for DLQs, scenarios or teams.</p>\n            </div>\n          </td>\n        </tr>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong>304</strong><br>Account Does Not Exist</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>This error appears when the account does not exist or it was not found.</p>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n##### Custom error codes\n\n  <div class=\"card table\">\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th><strong class=\"text-nowrap\">HTTP status</strong></th>\n          <th><strong>Explanation</strong></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong><br>IM001</strong><br>Access Denied</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>This error code indicates the lack of rights to perform specific actions. Below you can find examples of more specific error messages related to the Apps feature:</p>\n              <p><strong>Users</strong></p>\n              <ul>\n                <li>The user cannot change the password</li>\n                <li>The user cannot change the email</li>\n              </ul>\n              <p><strong>Apps</strong></p>\n              <ul>\n                <li> Cannot disapprove app</li>\n              </ul>\n            </div>\n          </td>\n        </tr>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong>IM002</strong><br>Insufficient Rights</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>This error appears when you do not have sufficient rights to interact with the resource.</p>\n            </div>\n          </td>\n        </tr>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong>IM003</strong><br> Storage Not Enough Space</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>This error appears when limit of data stores storage is exceeded.</p>\n            </div>\n          </td>\n        </tr>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong>IM004</strong><br> Confirmation Required</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>This error appears when the removal process of the key in the data stores is not confirmed.</p>\n            </div>\n          </td>\n        </tr>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong>IM005</strong><br> Invalid Input Parameters</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>This error appears when you use invalid parameters in a request. Below you can find examples of more specific error messages related to some features:</p>\n              <p><strong>Hooks</strong></p>\n              <ul>\n                <li>Invalid hook type</li>\n              </ul>\n              <p><strong>Connections</strong></p>\n              <ul>\n                <li>There is nothing to configure in this connection</li>\n              </ul>\n              <p><strong>Users</strong></p>\n              <ul>\n                <li>\n                  The user cannot be part of any organization\n                </li>\n              </ul>\n              <p><strong>Custom functions</strong></p>\n                <ul>\n                  <li>\n                  Your custom function's code has a syntax error or uses a JavaScript feature that Make doesn't support. Check the <a href=\"https://www.make.com/en/help/functions/custom-functions#limitations-of-custom-functions\">custom functions limitations</a> in the Make Help center.\n                  </li>\n                  <li>\n                  The custom function's name in the custom function's code and in the <code>name</code> field don't match.\n                  </li>\n                  <li>\n                  The custom function's name is the same as a JavaScript reserved word. A custom function cannot have the same name as a JavaScript reserved word. Check the <a href=\"https://www.w3schools.com/js/js_reserved.asp\">list of JavaScript reserved words.</a>\n                  </li>\n                </ul>\n            </div>\n          </td>\n        </tr>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong>IM011</strong><br> Entity Limit Exceeded</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>This error appears when you exceed the limit for password change attempts.</p>\n          </td>\n        </tr>\n        <tr itemscope itemprop=\"mainEntity\" itemtype=\"https://schema.org/Question\">\n          <td>\n            <p itemprop=\"name\"><strong>IM016</strong><br> Action is not possible due to dependencies </p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>This error appears when you don't fulfill requirements to execute the API call. For example: </p>\n              <p><strong>Scenario inputs</strong></p>\n              <ul>\n                <li>If you have required scenario inputs you have to set the scenario scheduling to <strong>On demand</strong>.</li>\n              </ul>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <p itemprop=\"name\"><strong>IM102</strong><br> Invalid Credentials</p>\n          </td>\n          <td itemscope itemprop=\"acceptedAnswer\" itemtype=\"https://schema.org/Answer\">\n            <div itemprop=\"text\">\n              <p>This error appears when you use the invalid password.</p>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n"
        },
        {
          "isDirectory": false,
          "path": "common-issues",
          "contentWithoutLinks": "#### <!-- {#common-issues } --> Troubleshooting\n\nThis section describes most common mistakes that result in API-related problems, such as receiving `Access denied` or `Not found` errors. You can also refer to the HTTP status codes of errors for more details.\n\n<dl>\n  <dt>Using HTTP instead of HTTPS in the URL</dt>\n  <dd>Use HTTPS at the beginning of the URL in your request. This is required for security reasons.</dd>\n\n  <dt>Using an incorrect environment</dt>\n  <dd>If you have access to more than one Make environment, ensure that you use the correct environment in the URL and that you use a valid authentication token generated for this specific environment.</dd>\n\n  <dt>Using an incorrect endpoint</dt>\n  <dd>Ensure there are no empty or white spaces in the endpoint URL and that there are no backslash symbols at the end of the URL after the endpoint name.</dd>\n\n  <dt>Missing authentication details or using incorrect authentication details</dt>\n  <dd>Ensure that you are using the correct authentication details. To make a successful request, you need to have the correct <a href=\"#authentication-managing\">authentication token</a> with the correct scopes assigned to it.\n    <div class=\"alert alert-warning\">Note that you need a separate token for each Make environment.</div>\n  </dd>\n\n  <dt>Missing access to the requested resource</dt>\n  <dd>Ensure that scopes assigned to your authentication token correspond to the requested resource.\n    <div class=\"alert alert-warning\">Note that you cannot access administrator resources if you are a regular Make user.</div>\n  </dd>\n\n  <dt>Missing required parameters or using invalid or improperly formatted parameters</dt>\n  <dd>Many endpoints require at least one mandatory parameter. Often it is the <strong>teamId</strong> or an ID of the specific resource. Do not forget to add the required parameters to the request. Also, note that query, path, and pagination parameters need to be properly formatted. The first query parameter should start with a question mark. Separate parameters with the ampersand symbol. Some special characters, for example, in the <a href=\"#pagination-sorting-filtering\">pagination</a> parameters, need to be encoded when used in URLs.</dd>\n\n  <dt>Sending an invalid or improperly formatted request body</dt>\n  <dd>The structure of the API request body must conform to the JSON schema standard. You can use JSON validators available on the internet to validate your request body before sending it.</dd>\n</dl>\n\n<div class=\"alert alert-info\">\n  If your issue is not mentioned in the table above and the <a href=\"#http-status-codes\">error code and message</a> do not indicate how to resolve the issue, please contact us via the help form at <a href=\"https://www.make.com/en/help\">Make Help center</a>. Include a detailed description of the problem, the full request, and the error code and error message that you received.\n</div>\n",
          "label": " Troubleshooting",
          "content": "#### <!-- {#common-issues } --> Troubleshooting\n\nThis section describes most common mistakes that result in API-related problems, such as receiving `Access denied` or `Not found` errors. You can also refer to the [HTTP status codes of errors](#http-status-codes) for more details.\n\n<dl>\n  <dt>Using HTTP instead of HTTPS in the URL</dt>\n  <dd>Use HTTPS at the beginning of the URL in your request. This is required for security reasons.</dd>\n\n  <dt>Using an incorrect environment</dt>\n  <dd>If you have access to more than one Make environment, ensure that you use the correct environment in the URL and that you use a valid authentication token generated for this specific environment.</dd>\n\n  <dt>Using an incorrect endpoint</dt>\n  <dd>Ensure there are no empty or white spaces in the endpoint URL and that there are no backslash symbols at the end of the URL after the endpoint name.</dd>\n\n  <dt>Missing authentication details or using incorrect authentication details</dt>\n  <dd>Ensure that you are using the correct authentication details. To make a successful request, you need to have the correct <a href=\"#authentication-managing\">authentication token</a> with the correct scopes assigned to it.\n    <div class=\"alert alert-warning\">Note that you need a separate token for each Make environment.</div>\n  </dd>\n\n  <dt>Missing access to the requested resource</dt>\n  <dd>Ensure that scopes assigned to your authentication token correspond to the requested resource.\n    <div class=\"alert alert-warning\">Note that you cannot access administrator resources if you are a regular Make user.</div>\n  </dd>\n\n  <dt>Missing required parameters or using invalid or improperly formatted parameters</dt>\n  <dd>Many endpoints require at least one mandatory parameter. Often it is the <strong>teamId</strong> or an ID of the specific resource. Do not forget to add the required parameters to the request. Also, note that query, path, and pagination parameters need to be properly formatted. The first query parameter should start with a question mark. Separate parameters with the ampersand symbol. Some special characters, for example, in the <a href=\"#pagination-sorting-filtering\">pagination</a> parameters, need to be encoded when used in URLs.</dd>\n\n  <dt>Sending an invalid or improperly formatted request body</dt>\n  <dd>The structure of the API request body must conform to the JSON schema standard. You can use JSON validators available on the internet to validate your request body before sending it.</dd>\n</dl>\n\n<div class=\"alert alert-info\">\n  If your issue is not mentioned in the table above and the <a href=\"#http-status-codes\">error code and message</a> do not indicate how to resolve the issue, please contact us via the help form at <a href=\"https://www.make.com/en/help\">Make Help center</a>. Include a detailed description of the problem, the full request, and the error code and error message that you received.\n</div>\n"
        }
      ]
    },
    {
      "isDirectory": false,
      "path": "api-resources",
      "contentWithoutLinks": "### <!-- {#api-resources } --> Resources\n\nAPI resources are grouped into sections corresponding with Make features and components.\n\nEach endpoint resource contains the following details:\n\n#### <!-- {.h5 .as-label .mt-4 .mb-3} --> Methods and endpoints\n\nMethods define the allowed interaction and endpoints define how to access the resource â what URI should be used to interact with a resource.\n*Example:* `GET /data-stores`\n\n#### <!-- {.h5 .as-label .mt-4 .mb-3} --> Required scopes\n\nDefines what resources you are allowed to interact with based on scopes you selected when generating your API access token.\n*Example:* `datastores:write`\n\n#### <!-- {.h5 .as-label .mt-4 .mb-3} --> Resource description\n\nDescribes the expected outcome when using an endpoint, and what Make features the resource relates to.\n\n#### <!-- {.h5 .as-label .mt-4 .mb-3} --> Parameters\n\nThese are options you can include with a request to modify the response. Each parameter specifies whether it is required or not. Parameters are divided into two main groups:\n\n*   **Path parameters** â path parameters are always required. They are used to identify or specify the resource (usually by indicating its ID) and they should be placed inside the endpoint URI. Example: `/data-stores/54`\n*   **Query parameters** â query parameters are often optional. They can be used to specify the resource but they are usually used as parameters to sort or filter resources. They are placed at the end of the endpoint URI, after a question mark. Separate multiple parameters with an ampersand symbol. If a parameter contains square brackets, encode them. Example: `/data-stores?teamId=123&pg%5Boffset%5D=10`\n*   **Request body** â for some endpoints (mainly connected with the POST, PUT, or PATCH HTTP methods), you can also see the Request body section in the endpoint details. This section contains the description of the payload properties that are needed to modify the resource.\n\n    <p class=\"fst-italic mb-0\">Example:</p>\n    <pre class=\"mb-0 card card--blank\"><code class=\"hljs json\"><span class=\"hljs-punctuation\">{</span>\n      <span class=\"hljs-attr\">\"name\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"Customers\"</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">\"teamId\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">123</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">\"datastructureId\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">178</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">\"maxSizeMB\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-punctuation\">}</span></code></pre>\n\n#### <!-- {.h5 .as-label .mt-4 .mb-3} --> Request examples\n\nThese are request samples that show how to make a request to the endpoint. They consist of the request URL and authentication token (if needed) and other elements required to make a request in the selected language. Example of request for creating a data store:\n\n#### <!-- {.h5 .as-label .mt-4 .mb-3} --> Response examples\n\nThese are response samples you would receive when calling the request in real life. The outcome strictly depends on the request sample. The response schema contains all possible elements available in the response. Each response has its status code. Example of created data store:\n\n<div class=\"card card--dark card--snippet card--request mb-3\" data-move-right=\"request\">\n<div class=\"card-header\">\n<div class=\"card-title\">Request</div>\n</div>\n<div class=\"card-body\">\n<pre><code class=\"hljs bash\">curl -X POST <span class=\"hljs-string\">https://eu1.make.dev/api/v2/data-stores</span> \\\n--header '<span class=\"hljs-string\">Content-Type: application/json</span>' \\\n--header '<span class=\"hljs-string\">Authorization: Token 93dc8837-2911-4711-a766-59c1167a974d</span>' \\\n-d '<span class=\"hljs-string\">{\"name\":\"Customers\",\"teamId\":123,\"datastructureId\":1234,\"maxSizeMB\":1}</span>'</code></pre>\n</div>\n</div>\n\n<div class=\"card card--light card--snippet card--response\" data-move-right=\"response\">\n<div class=\"card-header\">\n<div class=\"card-title\">Response</div>\n</div>\n<div class=\"card-body\">\n<pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-attr\">\"dataStore\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">\"id\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">20024</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">\"name\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"Customers\"</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">\"teamId\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"123\"</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">\"datastructureId\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">1234</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">\"records\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">\"size\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"0\"</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">\"maxSize\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"1048576\"</span>\n  <span class=\"hljs-punctuation\">}</span>\n<span class=\"hljs-punctuation\">}</span></code></pre>\n</div>\n</div>\n",
      "label": " Resources",
      "content": "### <!-- {#api-resources } --> Resources\n\nAPI resources are grouped into sections corresponding with Make features and components.\n\nEach endpoint resource contains the following details:\n\n#### <!-- {.h5 .as-label .mt-4 .mb-3} --> Methods and endpoints\n\n[Methods](#fundamentals) define the allowed interaction and endpoints define how to access the resource â what URI should be used to interact with a resource.\n*Example:* `GET /data-stores`\n\n#### <!-- {.h5 .as-label .mt-4 .mb-3} --> Required scopes\n\nDefines what resources you are allowed to interact with based on scopes you selected when generating your [API access token](#authentication-token).\n*Example:* `datastores:write`\n\n#### <!-- {.h5 .as-label .mt-4 .mb-3} --> Resource description\n\nDescribes the expected outcome when using an endpoint, and what Make features the resource relates to.\n\n#### <!-- {.h5 .as-label .mt-4 .mb-3} --> Parameters\n\nThese are options you can include with a request to modify the response. Each parameter specifies whether it is required or not. Parameters are divided into two main groups:\n\n*   **Path parameters** â path parameters are always required. They are used to identify or specify the resource (usually by indicating its ID) and they should be placed inside the endpoint URI. Example: `/data-stores/54`\n*   **Query parameters** â query parameters are often optional. They can be used to specify the resource but they are usually used as [parameters to sort or filter resources](#pagination-sorting-filtering). They are placed at the end of the endpoint URI, after a question mark. Separate multiple parameters with an ampersand symbol. If a parameter contains square brackets, encode them. Example: `/data-stores?teamId=123&pg%5Boffset%5D=10`\n*   **Request body** â for some endpoints (mainly connected with the POST, PUT, or PATCH HTTP methods), you can also see the Request body section in the endpoint details. This section contains the description of the payload properties that are needed to modify the resource.\n\n    <p class=\"fst-italic mb-0\">Example:</p>\n    <pre class=\"mb-0 card card--blank\"><code class=\"hljs json\"><span class=\"hljs-punctuation\">{</span>\n      <span class=\"hljs-attr\">\"name\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"Customers\"</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">\"teamId\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">123</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">\"datastructureId\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">178</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">\"maxSizeMB\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-punctuation\">}</span></code></pre>\n\n#### <!-- {.h5 .as-label .mt-4 .mb-3} --> Request examples\n\nThese are request samples that show how to make a request to the endpoint. They consist of the request URL and authentication token (if needed) and other elements required to make a request in the selected language. Example of request for creating a data store:\n\n#### <!-- {.h5 .as-label .mt-4 .mb-3} --> Response examples\n\nThese are response samples you would receive when calling the request in real life. The outcome strictly depends on the request sample. The response schema contains all possible elements available in the response. Each response has its [status code](#http-status-codes). Example of created data store:\n\n<div class=\"card card--dark card--snippet card--request mb-3\" data-move-right=\"request\">\n<div class=\"card-header\">\n<div class=\"card-title\">Request</div>\n</div>\n<div class=\"card-body\">\n<pre><code class=\"hljs bash\">curl -X POST <span class=\"hljs-string\">https://eu1.make.dev/api/v2/data-stores</span> \\\n--header '<span class=\"hljs-string\">Content-Type: application/json</span>' \\\n--header '<span class=\"hljs-string\">Authorization: Token 93dc8837-2911-4711-a766-59c1167a974d</span>' \\\n-d '<span class=\"hljs-string\">{\"name\":\"Customers\",\"teamId\":123,\"datastructureId\":1234,\"maxSizeMB\":1}</span>'</code></pre>\n</div>\n</div>\n\n<div class=\"card card--light card--snippet card--response\" data-move-right=\"response\">\n<div class=\"card-header\">\n<div class=\"card-title\">Response</div>\n</div>\n<div class=\"card-body\">\n<pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-attr\">\"dataStore\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">\"id\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">20024</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">\"name\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"Customers\"</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">\"teamId\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"123\"</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">\"datastructureId\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">1234</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">\"records\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">\"size\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"0\"</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">\"maxSize\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"1048576\"</span>\n  <span class=\"hljs-punctuation\">}</span>\n<span class=\"hljs-punctuation\">}</span></code></pre>\n</div>\n</div>\n"
    }
  ]
}
