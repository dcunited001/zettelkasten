:PROPERTIES:
:ID:       302ce2e4-1d46-4b7f-ae45-334d1932ad0b
:END:
#+TITLE: PlantUML: Convert to drawio
#+CATEGORY: slips
#+TAGS:

* Roam

* Docs

* Overview

** Tools

[[https://github.com/doubleSlashde/plantuml2drawio][doubleSlashde/plantuml2drawio]] Hopefully, this permits reasonable editing of a
graph on Draw.io, which does handle both the spatial & logical aspects of a
graph

Draw.io

+ There's a feature to "convert", but the =*.puml= files get converted into a
  useless SVG that AFAIK is just rendered on the backend with the =plantuml.jar=.

StarUML

+ TLDR: Vendor lock-in. Why make it easy for people to work with an endless
  primordial soup of combinatorially enumerated formats when they could just use
  the GUI to begin with?
+ I'm _not_ interested in code generation. Not. My. First. Rodeo. It works for
  early design work, maybe. But quickly, it becomes apparent that Code-to-UML
  conversion is far more valuable.

Misc graphical PlantUML editors

+ PlantUML is kinda an extension of the graphviz format. It has no concept of a
  spatial graph. Only a logical graph. You will basically find no graphical
  editor (unless first-party) that coordinates the bidirectional data-flow of a
  spatial graph.

Inkscape:

+ editing the =svg= produced by =plantuml= is difficult because the XML
  produced didn't expect you to do that.
+ The objects are reasonably grouped and, for objects contained in nodes, it's
  fairly straightforward to operate on them.
+ However, all the x/y coordinates for edges (arrows) are separately reified, so
  you need to move/delete nodes, then identify the arrows from a list.

* [[https://github.com/doubleSlashde/plantuml2drawio][doubleSlashde/plantuml2drawio]]

#+begin_src shell
git clone https://github.com/doubleSlashde/plantuml2drawio
cd plantuml2drawio
echo 'layout uv' > .envrc
direnv allow
source $VIRTUAL_ENV/bin/activate

# minimal deps (nice)
uv pip install -r requirements.txt
uv pip install -e .
mkdir -p puml/out
$puml=package-dependencies.puml
cp /data/org/roam/slips/img/frc/$puml puml

p2d-cli --input puml/$puml --output puml/out/$puml.drawio
#+end_src

unfortunately... it only supports [[https://github.com/doubleSlashde/plantuml2drawio/blob/main/src/plantuml2drawio/processors/activity_processor.py][activity diagrams]] for now, but the package is
relatively new.
