:PROPERTIES:
:ID:       dc0857c8-0fd2-431b-bda4-49dc3913054e
:END:
#+TITLE: Guix on NixOS: Updating Guix
#+CATEGORY: slips
#+TAGS:

* Roam
+ [[id:b82627bf-a0de-45c5-8ff4-229936549942][Guix]]
+ [[id:2049060e-6755-4a64-b295-F7B563B41505][NixOS]]

* Notes
Moved here to avoid detracting from other misc issues in [[id:f02112b7-890c-4d98-81c9-41613e64aff7][Guix on NixOS]]

** Updating =/home/$USER/.config/guix/current=

Running =guix pull= shows

#+begin_example
Migrating profile generations to '/var/guix/profiles/per-user/dc'...
guix pull: error: symlink: File exists: "/var/guix/profiles/per-user/dc/current-guix"
#+end_example

If you manually decouple the links in the =/var/guix/profiles/per-user/dc=,
whether =current-guix= or the previous profile generations, it starts to update,
but verifies 100,000+ commits and fails again.

+ This happens unless =GUIX_PROFILE=/gnu/store/...= points to an explicit path.
+ If it points to a symbolic link, then the values added into =PATH= do also point
  to symbolic links.

#+begin_src shell
readlink -f `which guix`
#+end_src

#+RESULTS:
: /gnu/store/afx9ja86843il23hwp7bd51rii2lhyav-guix-command

For some reason, this profile points to a =guix-command= that can't properly
identify its git history.

#+begin_src shell
ref=$(guix --version | head -n1 | cut -f4- -d' ')
# https://codeberg.org/guix/guix/commit/$ref points to a recent revision
#+end_src

Even though it's inside a =/gnu/store/...= location and is constructed from a
reasonably current =$ref=, it validates the entireity of git history during its
update

Root's =guix --version=  points to =ref=e94260852b67fcad6f7f32c1944718a8d08a494d= or
this revision [[https://codeberg.org/guix/guix/commit/e94260852b67fcad6f7f32c1944718a8d08a494d][here]]. I had tested this once, but this is close to the commit nix
was building from (a revision after the recent CVE fix)

*** Fix

1. Open a fresh bash profile
2. Update =$HOME/.config/guix/base-channels.scm= if you usually source this
   instead of =$HOME/.config/guix/channels.scm=.
   - For me, after updates, I write the results of =guix describe
     --format=channels > $HOME/.config/guix/channels.scm= to lock updates.
   - This encourages reuse of hard-linkable profiles and makes it easier to
     reason about which parts of the store may be updated, if you don't update
     all profiles at the same time. It also "hints" =guix gc= a bit so
     =guile-ares-rs= can reuse its consolidated channels specification.
3. Do not set the =GUIX_PROFILE=$HOME/.config/guix/current= variable
4. Instead, only =source $HOME/.config/guix/current/etc/profile= which uses a
   value to an explicit =/gnu/store= location.
5. Delete the =$HOME/.config/current=
6. Check which links are listed in =/gnu/var/guix/profiles/per-user/$USER/=.
   Though that path usually begins with =/var/guix=, I get the same problem either
   way.
7. Run =guix pull -C $HOME/.config/guix/base-channels.scm=. It now completes.
   - Otherwise it would complain about a link that alread exists at
     =/gnu/var/guix/profiles/per-user/$USER/=

Running =guix pull -C $channels= but without removing the
=$HOME/.config/guix/current= symlink shows:

#+begin_src shell
guix pull -C $HOME/.config/guix/current
#+end_src

#+begin_example
Migrating profile generations to '/var/guix/profiles/per-user/dc'...
guix pull: error: symlink: File exists: "/var/guix/profiles/per-user/dc/current-guix"
#+end_example

*** Test

1. Open a fresh bash profile. Evaluate =GUIX_PROFILE=$HOME/.config/guix/current=
   and =source $GUIX_PROFILE/etc/profile=
2. Write =guix describe --format=channels > $HOME/.config/guix/channels.scm=
3. Verify that =$HOME/.config/guix/current= and =readlink -f
   $HOME/.config/guix/current= point to correct, extant locations.
4. Running =guix pull -C ~/.config/guix/{base-,}channels.scm= would now succeed
   - I think it succeeds even without having sourced the profile
   - Within 24 hours or maybe after =guix gc= it fails again. This occurs
     sporadically with/out =guix= and even when new commits are introduced.
5. Pulling a guix profile using =guix package -P $profile= with or without an
   explicit =-C $channels= specification will succeed sometimes (see below)

If I do not use a fresh bash profile for this, the channels content is
incorrect. Here, for root:

#+begin_src shell :results output code :wrap example scheme
guix describe --format=channels
#+end_src

#+begin_example scheme
(list (channel
        (name 'guix)
        (url "https://git.guix.gnu.org/guix.git")
        (branch "master")
        (commit
          "e94260852b67fcad6f7f32c1944718a8d08a494d")
        (introduction
          (make-channel-introduction
            "9edb3f66fd807b096b48283debdcddccfea34bad"
            (openpgp-fingerprint
              "BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA")))))
#+end_example

And after relogin:

#+begin_example scheme
(list (channel
        (name 'guix)
        (url "https://codeberg.org/guix/guix-mirror.git")
        (branch "master")
        (commit
          "43bb79fc29e7f4f2ea06be138df195609b11ea97")
        (introduction
          (make-channel-introduction
            "9edb3f66fd807b096b48283debdcddccfea34bad"
            (openpgp-fingerprint
              "BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA"))))
      (channel
        (name 'nonguix)
        (url "https://gitlab.com/nonguix/nonguix")
        (branch "master")
        (commit
          "60ffd0353e70d5e371c4bfe2201c9d08c1c05e18")
        (introduction
          (make-channel-introduction
            "897c1a470da759236cc11798f4e0a5f7d4d59fbc"
            (openpgp-fingerprint
              "2A39 3FFF 68F4 EF7A 3D29  12AF 6F51 20A0 22FB B2D5")))))
#+end_example

running =guix pull -C $channels= in a fresh bash session succeeds

#+begin_example shell
guix pull -C ~/.config/guix/base-channels.scm
# Updating channel 'guix' from Git repository at 'https://codeberg.org/guix/guix.git'...
# guix pull: warning: pulled channel 'guix' from a mirror of https://git.guix.gnu.org/guix.git, which might be stale
# Updating channel 'sops-guix' from Git repository at 'https://github.com/fishinthecalculator/sops-guix'...
# Updating channel 'gocix' from Git repository at 'https://github.com/fishinthecalculator/gocix'...
# Updating channel 'nonguix' from Git repository at 'https://gitlab.com/nonguix/nonguix'...
# Updating channel 'rde' from Git repository at 'https://git.sr.ht/~abcdw/rde'...
# Building from these channels:
#   guix      https://codeberg.org/guix/guix.git	43bb79f
#   sops-guix https://github.com/fishinthecalculator/sops-guix	120f621
#   gocix     https://github.com/fishinthecalculator/gocix	faaaf6d
#   nonguix   https://gitlab.com/nonguix/nonguix	60ffd03
#   rde       https://git.sr.ht/~abcdw/rde	b89e78b
# Computing Guix derivation for 'x86_64-linux'... /
# nothing to be done
#+end_example

As it should, it fails without =-C $channels=

#+begin_example shell
guix pull
# Updating channel 'rde' from Git repository at 'https://git.sr.ht/~abcdw/rde'...
# guix pull: error: aborting update of channel 'rde' to commit 875df3f327113977b288bb87f086a475c004e172, which is not a descendant of b89e78b863c214b74751352e0e659a5e1d6c955d
# hint: Use `--allow-downgrades' to force this downgrade.
#+end_example

**** Comparing =guix describe=

For my user, the order is changed up and the commits are different.

#+begin_example shell
guix describe --format=json \
| jq -r '
sort_by(.name)
| map([.name,.commit])
| map("\(.[0]): \(.[1])")
| join("\n")'
#+end_example

After starting a new shell, i compared the hashes again. These are the results,
which no longer depend on order or un/setting =GUIX_PROFILE=.

|-----------+----------------+-----------+--------------+---------|
| desc      | without =source= | channel   | after =source= | desc    |
|-----------+----------------+-----------+--------------+---------|
|           | faaaf6d99      | gocix     | faaaf6d99    |         |
| yesterday | [[https://codeberg.org/guix/guix/commit/43bb79fc2][43bb79fc2]]      | guix      | 43bb79fc2    | CURRENT |
|           | 60ffd0353      | nonguix   | 60ffd0353    |         |
|           | b89e78b86      | rde       | b89e78b86    |         |
|           | 120f62197      | sops-guix | 120f62197    |         |
|-----------+----------------+-----------+--------------+---------|

***** ugh (in which this is confusing as hell)

This is wrong, i redid it above...

Comparing the results of =guix describe=

- _without_ =unset GUIX_PROFILE; source ~/.config/guix/current/etc/profile=
  - it's correct
- _with_ =unset GUIX_PROFILE; source ~/.config/guix/current/etc/profile=
  - it is incorrect.
  - same results when setting =GUIX_PROFILE=~/.config/guix/current=

|-----------+----------------+-----------+--------------+---------------|
| desc      | without =source= | channel   | after =source= | desc          |
|-----------+----------------+-----------+--------------+---------------|
|           | faaaf6d99      | gocix     | 91396b91     |               |
| yesterday | [[https://codeberg.org/guix/guix/commit/43bb79fc2][43bb79fc2]]      | guix      | [[https://codeberg.org/guix/guix/commit/ac9c4da05][ac9c4da0]]     | two weeks ago |
|           | 60ffd0353      | nonguix   | 94395742     |               |
|           | b89e78b86      | rde       | 875df3f3     |               |
|           | 120f62197      | sops-guix | 120f6219     |               |
|-----------+----------------+-----------+--------------+---------------|
and for =which guix=... (this incorrect)

|--------------------------+----------------------------------------+----------------------------------------------------+-----------------------------------------|
|                          | no =source=                              | ~GUIX_PROFILE=$HOME/.config/guix/current~ and =source= | ~unset GUIX_PROFILE~ and =source=           |
|--------------------------+----------------------------------------+----------------------------------------------------+-----------------------------------------|
| ~which guix~               | ~/home/dc/.config/guix/current/bin/guix~ | ~/home/dc/.config/guix/current/bin/guix~             | ~/gnu/store/afx9ja86...-guix-command~     |
| ~readlink `which guix`~    | ~/gnu/store/izh2w8s4...-guix-command~    | ~/gnu/store/izh2w8s4...-guix-command~                | ~/gnu/store/ykc2if2n...-profile/bin/guix~ |
| ~readlink -f `which guix`~ | ~/gnu/store/izh2w8s4...-guix-command~    | ~/gnu/store/izh2w8s4...-guix-command~                | ~/gnu/store/ykc2if2n...-profile/bin/guix~ |
** Background on Guix updates (for nixpkgs issue)
*** Updating =$HOME/.config/guix/current=

I need to file an issue with =nixos/nixpkgs=, but I haven't had time. I need to
fix the locale, so this is the best time to type it out.

For now, I need a service to help manage updates, but =guix pull= functionality is
basically broken on Nix for some reason. There are automated GC services and
IIRC, what =<nixpkgs/nixos>= provides should also keep the current guix for user &
root.

*$HOME/.config/guix/current/etc/profile:*

#+begin_example shell
# Source this file to define all the relevant environment variables in Bash
# for this profile.  You may want to define the 'GUIX_PROFILE' environment
# variable to point to the "visible" name of the profile, like this:
#
#  GUIX_PROFILE=/path/to/profile ; \
#  source /path/to/profile/etc/profile
#
# When GUIX_PROFILE is undefined, the various environment variables refer
# to this specific profile generation.

export PATH="${GUIX_PROFILE:-/gnu/store/ijnsp0239xqi00kqwngp6abypij9rvh1-profile}/bin${PATH:+:}$PATH"
#+end_example

**** Testing

Below, setting =GUIX_PROFILE= before sourcing changes whether the value is a
symlink or =/gnu/store/ijnsp0239xqi00kqwngp6abypij9rvh1-profile=

#+begin_src shell
readlink ~/.config/guix/current
readlink -f ~/.config/guix/current
#+end_src

#+RESULTS:
| /gnu/var/guix/profiles/per-user/dc/current-guix     | I haven't tried this one |
| /gnu/store/ijnsp0239xqi00kqwngp6abypij9rvh1-profile |                          |

***** PROFILES

In separate alacritty terminals, record =env= to be diffed...

I'm mocking this out to script it =Makefile= and later, a systemd service. For
that, I may need to check environment consistency again. I'm not 100% sure
whether I'd need a login session there (or a profile reset).

env | sort | grep -ve 'GPG_.*' \
| grep -ve 'ALACRITTY_.*' \ |
| grep -ve 'HL_.*=' \       |


****** =alacritty= vs =alacritty -e /bin/bash=

#+begin_example bash
tmp=$(mktemp -d); echo $tmp | wl-copy
regexp='^(XDG_|SHELL|.*PATH=)'
env | sort | grep -E "$regexp" | tr ':' '\n' > $tmp/alacritty.zsh.env
#+end_example

=alacritty -e bash=

#+begin_example bash
regexp='^(XDG_|SHELL|.*PATH=)'
env | sort | grep -E "$regexp" | tr ':' '\n' > $tmp/alacritty.bash.env
#+end_example

I still have some bits of =.bash_profile= coming through

#+begin_src shell :results output code :wrap example diff
tmp=/tmp/tmp.iLPPmCM4xc
diff $tmp/alacritty.zsh.env \
     $tmp/alacritty.bash.env
echo
#+end_src

#+RESULTS:
#+begin_example diff
74,75c74
< PATH=/home/dc/.local/bin
< /run/wrappers/bin
---
> PATH=/run/wrappers/bin
202,205c201
< XDG_DATA_DIRS=/nix/store/h68xkz0qxsc8fc1g0iykwk05mrvk314n-wofi-1.4.1/share
< /nix/store/x0x7k51kfxnd6v0cyxln73pqzq2lmcl8-gsettings-desktop-schemas-48.0/share/gsettings-schemas/gsettings-desktop-schemas-48.0
< /nix/store/6x7s7vfydrik42pk4599sm1jcqxmi1qp-gtk+3-3.24.49/share/gsettings-schemas/gtk+3-3.24.49
< /home/dc/.local/share/flatpak/exports/share
---
> XDG_DATA_DIRS=/home/dc/.local/share/flatpak/exports/share

#+end_example



#+begin_example bash
tmp=/tmp/tmp.iLPPmCM4xc
GUIX_PROFILE=~/.config/guix/current # the usual method
source ~/.config/guix/current/etc/profile
# env | sort | grep -ve 'GPG_.*' \
# | grep -ve 'ALACRITTY_.*' \
# | grep -ve 'HL_.*=' \
# > $tmp/alacritty-source-guix-current-without-GUIX_PROFILE.env
#+end_example

****** Session2

Here, do NOT set =GUIX_PROFILE=

#+begin_example bash
tmp=/tmp/tmp.iLPPmCM4xc
source ~/.config/guix/current/etc/profile
env | sort | grep -ve 'GPG_.*' \
| grep -ve 'ALACRITTY_.*' \
| grep -ve 'HL_.*=' \
> sort > $tmp/alacritty-source-guix-current.env
#+end_example

****** Session3

This is identical to =alacritty.env= (... inherited)

#+begin_example bash
tmp=/tmp/tmp.iLPPmCM4xc
bash -c 'env | sort
env | sort | grep -ve "GPG_.*" \
| grep -ve "ALACRITTY_.*" \
| grep -ve "HL_.*="'
> $tmp/bash-c.env
#+end_example

****** Session4

Started with =alacritty -e bash= via =wofi=

****** Emacs



***** Diffing the profiles

#+begin_src shell :results output code :wrap example diff
tmp=/tmp/tmp.iLPPmCM4xc
diff $tmp/alacritty.zsh-then-bash-c.env \
     $tmp/alacritty.bash.env
echo
#+end_src

#+RESULTS:
#+begin_example diff
10a11
> __ETC_PROFILE_DONE=1
12,13c13
< GDK_PIXBUF_MODULE_FILE=/nix/store/9gwwn0yb3zj0vr1rn6ix2bia57ahksry-librsvg-2.60.0/lib/gdk-pixbuf-2.0/2.10.0/loaders.cache
< GIO_EXTRA_MODULES=/nix/store/k0aav37j1al112q7x4da8labihpfa7b4-dconf-0.40.0-lib/lib/gio/modules:/nix/store/k0aav37j1al112q7x4da8labihpfa7b4-dconf-0.40.0-lib/lib/gio/modules:/nix/store/cdnw3l72138rsz42d82wkzfzkgpv6adr-gvfs-1.57.2/lib/gio/modules:/nix/store/k0aav37j1al112q7x4da8labihpfa7b4-dconf-0.40.0-lib/lib/gio/modules
---
> GIO_EXTRA_MODULES=/nix/store/cdnw3l72138rsz42d82wkzfzkgpv6adr-gvfs-1.57.2/lib/gio/modules:/nix/store/k0aav37j1al112q7x4da8labihpfa7b4-dconf-0.40.0-lib/lib/gio/modules
49c49
< PATH=/home/dc/.local/bin:/run/wrappers/bin:/home/dc/.config/guix/current/bin:/home/dc/.guix-home/profile/bin:/home/dc/.guix-profile/bin:/home/dc/.local/share/flatpak/exports/bin:/var/lib/flatpak/exports/bin:/home/dc/.nix-profile/bin:/home/dc/.local/state/nix/profile/bin:/home/dc/.local/state/nix/profile/bin:/etc/profiles/per-user/dc/bin:/nix/var/nix/profiles/default/bin:/run/current-system/sw/bin:/nix/store/m10ngkbjxbj0lqdq6rsyys9h2gj1f27d-util-linux-2.41-bin/bin:/nix/store/bflsjj2cndl8fz690nx8aigf2x3q16d4-newt-0.52.24/bin:/nix/store/7x3jv5lbhc836hczmx642jg8gwwsyvf6-libnotify-0.8.6/bin:/nix/store/0nxvi9r5ymdlr2p24rjj9qzyms72zld1-bash-interactive-5.2p37/bin:/nix/store/ymmaa926pv3f3wlgpw9y1aygdvqi1m7j-systemd-257.6/bin:/nix/store/avhdfiwxm991wgmcgvmhmvgvwn9gavq6-python3-3.12.11-env/bin:/nix/store/gwk546kxw024v371l34sw11zvzqrxhdv-dmenu-5.3/bin:/nix/store/m10ngkbjxbj0lqdq6rsyys9h2gj1f27d-util-linux-2.41-bin/bin:/nix/store/bflsjj2cndl8fz690nx8aigf2x3q16d4-newt-0.52.24/bin:/nix/store/7x3jv5lbhc836hczmx642jg8gwwsyvf6-libnotify-0.8.6/bin:/nix/store/0nxvi9r5ymdlr2p24rjj9qzyms72zld1-bash-interactive-5.2p37/bin:/nix/store/ymmaa926pv3f3wlgpw9y1aygdvqi1m7j-systemd-257.6/bin:/nix/store/avhdfiwxm991wgmcgvmhmvgvwn9gavq6-python3-3.12.11-env/bin:/nix/store/gwk546kxw024v371l34sw11zvzqrxhdv-dmenu-5.3/bin:/nix/store/2gkh9v7wrzjq6ws312c6z6ajwnjvwcmb-binutils-wrapper-2.44/bin:/nix/store/xizrx0pmgjbsx6miwk352nf77jw2rb60-hyprland-qtutils-0.1.4/bin:/nix/store/7gspl5402q53m36mavbq3rxxlh70kqfv-pciutils-3.13.0/bin:/nix/store/9aanvmg69mvcs192ikk7rvs3gw1rgy37-pkgconf-wrapper-2.4.3/bin
---
> PATH=/run/wrappers/bin:/home/dc/.config/guix/current/bin:/home/dc/.guix-home/profile/bin:/home/dc/.guix-profile/bin:/home/dc/.local/share/flatpak/exports/bin:/var/lib/flatpak/exports/bin:/home/dc/.nix-profile/bin:/home/dc/.local/state/nix/profile/bin:/home/dc/.local/state/nix/profile/bin:/etc/profiles/per-user/dc/bin:/nix/var/nix/profiles/default/bin:/run/current-system/sw/bin:/nix/store/m10ngkbjxbj0lqdq6rsyys9h2gj1f27d-util-linux-2.41-bin/bin:/nix/store/bflsjj2cndl8fz690nx8aigf2x3q16d4-newt-0.52.24/bin:/nix/store/7x3jv5lbhc836hczmx642jg8gwwsyvf6-libnotify-0.8.6/bin:/nix/store/0nxvi9r5ymdlr2p24rjj9qzyms72zld1-bash-interactive-5.2p37/bin:/nix/store/ymmaa926pv3f3wlgpw9y1aygdvqi1m7j-systemd-257.6/bin:/nix/store/avhdfiwxm991wgmcgvmhmvgvwn9gavq6-python3-3.12.11-env/bin:/nix/store/gwk546kxw024v371l34sw11zvzqrxhdv-dmenu-5.3/bin:/nix/store/m10ngkbjxbj0lqdq6rsyys9h2gj1f27d-util-linux-2.41-bin/bin:/nix/store/bflsjj2cndl8fz690nx8aigf2x3q16d4-newt-0.52.24/bin:/nix/store/7x3jv5lbhc836hczmx642jg8gwwsyvf6-libnotify-0.8.6/bin:/nix/store/0nxvi9r5ymdlr2p24rjj9qzyms72zld1-bash-interactive-5.2p37/bin:/nix/store/ymmaa926pv3f3wlgpw9y1aygdvqi1m7j-systemd-257.6/bin:/nix/store/avhdfiwxm991wgmcgvmhmvgvwn9gavq6-python3-3.12.11-env/bin:/nix/store/gwk546kxw024v371l34sw11zvzqrxhdv-dmenu-5.3/bin:/nix/store/2gkh9v7wrzjq6ws312c6z6ajwnjvwcmb-binutils-wrapper-2.44/bin:/nix/store/xizrx0pmgjbsx6miwk352nf77jw2rb60-hyprland-qtutils-0.1.4/bin:/nix/store/7gspl5402q53m36mavbq3rxxlh70kqfv-pciutils-3.13.0/bin:/nix/store/9aanvmg69mvcs192ikk7rvs3gw1rgy37-pkgconf-wrapper-2.4.3/bin
61c61
< SHLVL=2
---
> SHLVL=1
74c74
< WINDOWID=94419569518512
---
> WINDOWID=94064047253520
83c83
< XDG_DATA_DIRS=/nix/store/h68xkz0qxsc8fc1g0iykwk05mrvk314n-wofi-1.4.1/share:/nix/store/x0x7k51kfxnd6v0cyxln73pqzq2lmcl8-gsettings-desktop-schemas-48.0/share/gsettings-schemas/gsettings-desktop-schemas-48.0:/nix/store/6x7s7vfydrik42pk4599sm1jcqxmi1qp-gtk+3-3.24.49/share/gsettings-schemas/gtk+3-3.24.49:/home/dc/.local/share/flatpak/exports/share:/nix/store/vqlrn4r4pvgfwv2yqcc0n985974y3hrb-desktops/share:/home/dc/.config/guix/current/share:/home/dc/.guix-home/profile/share:/home/dc/.guix-profile/share:/home/dc/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/home/dc/.nix-profile/share:/home/dc/.local/state/nix/profile/share:/home/dc/.local/state/nix/profile/share:/etc/profiles/per-user/dc/share:/nix/var/nix/profiles/default/share:/run/current-system/sw/share
---
> XDG_DATA_DIRS=/home/dc/.local/share/flatpak/exports/share:/nix/store/vqlrn4r4pvgfwv2yqcc0n985974y3hrb-desktops/share:/home/dc/.config/guix/current/share:/home/dc/.guix-home/profile/share:/home/dc/.guix-profile/share:/home/dc/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/home/dc/.nix-profile/share:/home/dc/.local/state/nix/profile/share:/home/dc/.local/state/nix/profile/share:/etc/profiles/per-user/dc/share:/nix/var/nix/profiles/default/share:/run/current-system/sw/share

#+end_example


#+begin_src shell :results output code :wrap example diff
tmp=/tmp/tmp.iLPPmCM4xc
diff $tmp/alacritty.zsh.env \
     $tmp/alacritty.zsh.source-guix-current.env
echo
#+end_src

#+RESULTS:
#+begin_example diff
1,3c1,3
< ALACRITTY_LOG=/tmp/Alacritty-419567.log
< ALACRITTY_SOCKET=/run/user/1000/Alacritty-wayland-1-419567.sock
< ALACRITTY_WINDOW_ID=94420517477600
---
> ALACRITTY_LOG=/tmp/Alacritty-420326.log
> ALACRITTY_SOCKET=/run/user/1000/Alacritty-wayland-1-420326.sock
> ALACRITTY_WINDOW_ID=94127447088352
17c17
< GPG_TTY=/dev/pts/6
---
> GPG_TTY=/dev/pts/8
21c21
< HL_INITIAL_WORKSPACE_TOKEN=2e40f673-6eb4-443a-be59-6d9f349e8f7e
---
> HL_INITIAL_WORKSPACE_TOKEN=54334c31-5016-4811-b973-279fa90482e4
54c54
< PATH=/home/dc/.local/bin:/run/wrappers/bin:/home/dc/.config/guix/current/bin:/home/dc/.guix-home/profile/bin:/home/dc/.guix-profile/bin:/home/dc/.local/share/flatpak/exports/bin:/var/lib/flatpak/exports/bin:/home/dc/.nix-profile/bin:/home/dc/.local/state/nix/profile/bin:/home/dc/.local/state/nix/profile/bin:/etc/profiles/per-user/dc/bin:/nix/var/nix/profiles/default/bin:/run/current-system/sw/bin:/nix/store/m10ngkbjxbj0lqdq6rsyys9h2gj1f27d-util-linux-2.41-bin/bin:/nix/store/bflsjj2cndl8fz690nx8aigf2x3q16d4-newt-0.52.24/bin:/nix/store/7x3jv5lbhc836hczmx642jg8gwwsyvf6-libnotify-0.8.6/bin:/nix/store/0nxvi9r5ymdlr2p24rjj9qzyms72zld1-bash-interactive-5.2p37/bin:/nix/store/ymmaa926pv3f3wlgpw9y1aygdvqi1m7j-systemd-257.6/bin:/nix/store/avhdfiwxm991wgmcgvmhmvgvwn9gavq6-python3-3.12.11-env/bin:/nix/store/gwk546kxw024v371l34sw11zvzqrxhdv-dmenu-5.3/bin:/nix/store/m10ngkbjxbj0lqdq6rsyys9h2gj1f27d-util-linux-2.41-bin/bin:/nix/store/bflsjj2cndl8fz690nx8aigf2x3q16d4-newt-0.52.24/bin:/nix/store/7x3jv5lbhc836hczmx642jg8gwwsyvf6-libnotify-0.8.6/bin:/nix/store/0nxvi9r5ymdlr2p24rjj9qzyms72zld1-bash-interactive-5.2p37/bin:/nix/store/ymmaa926pv3f3wlgpw9y1aygdvqi1m7j-systemd-257.6/bin:/nix/store/avhdfiwxm991wgmcgvmhmvgvwn9gavq6-python3-3.12.11-env/bin:/nix/store/gwk546kxw024v371l34sw11zvzqrxhdv-dmenu-5.3/bin:/nix/store/2gkh9v7wrzjq6ws312c6z6ajwnjvwcmb-binutils-wrapper-2.44/bin:/nix/store/xizrx0pmgjbsx6miwk352nf77jw2rb60-hyprland-qtutils-0.1.4/bin:/nix/store/7gspl5402q53m36mavbq3rxxlh70kqfv-pciutils-3.13.0/bin:/nix/store/9aanvmg69mvcs192ikk7rvs3gw1rgy37-pkgconf-wrapper-2.4.3/bin
---
> PATH=/home/dc/.config/guix/current/etc/profile/bin:/home/dc/.local/bin:/run/wrappers/bin:/home/dc/.config/guix/current/bin:/home/dc/.guix-home/profile/bin:/home/dc/.guix-profile/bin:/home/dc/.local/share/flatpak/exports/bin:/var/lib/flatpak/exports/bin:/home/dc/.nix-profile/bin:/home/dc/.local/state/nix/profile/bin:/home/dc/.local/state/nix/profile/bin:/etc/profiles/per-user/dc/bin:/nix/var/nix/profiles/default/bin:/run/current-system/sw/bin:/nix/store/m10ngkbjxbj0lqdq6rsyys9h2gj1f27d-util-linux-2.41-bin/bin:/nix/store/bflsjj2cndl8fz690nx8aigf2x3q16d4-newt-0.52.24/bin:/nix/store/7x3jv5lbhc836hczmx642jg8gwwsyvf6-libnotify-0.8.6/bin:/nix/store/0nxvi9r5ymdlr2p24rjj9qzyms72zld1-bash-interactive-5.2p37/bin:/nix/store/ymmaa926pv3f3wlgpw9y1aygdvqi1m7j-systemd-257.6/bin:/nix/store/avhdfiwxm991wgmcgvmhmvgvwn9gavq6-python3-3.12.11-env/bin:/nix/store/gwk546kxw024v371l34sw11zvzqrxhdv-dmenu-5.3/bin:/nix/store/m10ngkbjxbj0lqdq6rsyys9h2gj1f27d-util-linux-2.41-bin/bin:/nix/store/bflsjj2cndl8fz690nx8aigf2x3q16d4-newt-0.52.24/bin:/nix/store/7x3jv5lbhc836hczmx642jg8gwwsyvf6-libnotify-0.8.6/bin:/nix/store/0nxvi9r5ymdlr2p24rjj9qzyms72zld1-bash-interactive-5.2p37/bin:/nix/store/ymmaa926pv3f3wlgpw9y1aygdvqi1m7j-systemd-257.6/bin:/nix/store/avhdfiwxm991wgmcgvmhmvgvwn9gavq6-python3-3.12.11-env/bin:/nix/store/gwk546kxw024v371l34sw11zvzqrxhdv-dmenu-5.3/bin:/nix/store/2gkh9v7wrzjq6ws312c6z6ajwnjvwcmb-binutils-wrapper-2.44/bin:/nix/store/xizrx0pmgjbsx6miwk352nf77jw2rb60-hyprland-qtutils-0.1.4/bin:/nix/store/7gspl5402q53m36mavbq3rxxlh70kqfv-pciutils-3.13.0/bin:/nix/store/9aanvmg69mvcs192ikk7rvs3gw1rgy37-pkgconf-wrapper-2.4.3/bin
79c79
< WINDOWID=94420517477600
---
> WINDOWID=94127447088352
#+end_example


#+begin_src shell :results output code :wrap example diff
tmp=/tmp/tmp.iLPPmCM4xc
diff $tmp/alacritty.zsh.source-guix-current.env \
     $tmp/alacritty.zsh.source-guix-current-without-GUIX_PROFILE.env
echo
#+end_src

#+begin_src shell :results output code :wrap example diff
tmp=/tmp/tmp.iLPPmCM4xc
diff $tmp/bash-c.env alacritty-source-guix-current.env
echo
#+end_src

#+begin_src shell :results output code :wrap example diff
tmp=/tmp/tmp.iLPPmCM4xc
diff $tmp/bash-c.env alacritty-source-guix-current-without-GUIX_PROFILE.env
echo
#+end_src

*** The TLDR Here

Early on when the main profile is being updated, Guix errors out when it finds
there's a symlink that already exists: =/var/guix/profiles/per-user/current-guix=.
It's not able to infer this exists.

File trees are below that show Guix GC roots and the layout on my file system

**** Updating the current guix
I had to "hack" this a bit to bootstrap the user's current Guix

+ When installing NixOS and setting up guix/emacs, the =guix= binary would fail to
  update, as it tried to fetch the entire commit history.
  - The only way I could get =.config/guix/current= set up was to ask the Nix =guix=
    to install a profile at that location.
  - I couldn't determine whether this profile is equivalent to what Guix System
    installs... but it did work.
  - This new profile created via =guix package -P $HOME/.config/guix/current=
    updates fine until later it refuses when hitting the same problem.
+ I have a custom partition for the =/gnu/store= and I added =/gnu/var= to keep it
  the entire Guix contained. There's a symlink from =/var/guix -> /gnu/var/guix=.
  That may not be equivalent/sufficient for guix.
+ I retried a more standard configuration without symlinks or alternate paths
  - I tried installing Guix multiple times, even deleting/recreating the btrfs
    subvolume.
  - IIRC I even reinstalled NixOS. I needed to anyways: I had created btrfs
    subvolumes created under the wrong subvolume (I wanted any detachable
    component to be under).
+ I tried ensuring state of services would reset after updating the NixOS
  configuration: if I changed details of =config.guix. configured =/var/guix=

**** Root Updates

+ I also configured this for =root=. the =guix-daemon= processes launched are
  definitely =nix= binaries (another potential problem if there's drift as
  profiles become out of sync).
  - The build daemons evaluate serialized scheme delivered to them, so /I think/
    it's okay if they aren't in the same profile ....
  - it's not ideal though... I should've just installed guix via their
    installer, but I wouldn't get the "efficient configuration of service
    automation" from =<nixpkgs/nixos>... This is a primary reason I'm using
    NixOS or Guix System.
  - I'm not 100% clear on implications/differences for installing Guix's
    distributed nix (as the =.tar.gz= which unpacks). I do know that =/gnu/store= is
    a [[https://codeberg.org/guix/guix/src/branch/master/configure.ac#L49-L54][./configure.ac param]], though. It has some implications for subsitutes,
    which I'm just now seeing: see line [[https://codeberg.org/guix/guix/src/branch/master/configure.ac#L299-L306][L#299-L306]]. I had otherwise considered
    building the installable =.tar.gz= to deploy onto the NixOS.

**** Btrfs

#+begin_src shell
btrfs subvolume list /
#+end_src

#+begin_example
ID 256 gen 83866 top level 5 path @
ID 257 gen 85383 top level 5 path @nix
ID 258 gen 85459 top level 5 path @var
ID 259 gen 85459 top level 5 path @log
ID 260 gen 85377 top level 5 path @tmp
ID 261 gen 85308 top level 5 path @cache
ID 262 gen 78 top level 256 path srv
ID 263 gen 78 top level 258 path @var/lib/portables
ID 264 gen 78 top level 258 path @var/lib/machines
ID 265 gen 85437 top level 256 path tmp
ID 267 gen 85290 top level 5 path @guix
#+end_example

**** Guix

#+begin_src shell
tree -d /var/guix
#+end_src

#+begin_example
/var/guix
├── daemon-socket
├── db
├── gcroots
│   ├── auto
│   │   ├── 2ydzg59y5mz5hghfmhkrzglik1kwwx5n -> /var/guix/profiles/per-user/root/current-guix-1-link
│   │   ├── 5y70y1in3dv9x2980s3k1cqa6bw4a9pb -> /home/dc/.dotfiles/.doom.d/.guix-profile-4-link
│   │   ├── 7rjdqk3z3c4jvsqzmhadzja0gmfjdryf -> /var/guix/profiles/per-user/dc/current-guix-4-link
│   │   ├── 905dlwvvl8037b413vmmzbj17wzhycvy -> /var/guix/profiles/per-user/dc/current-guix-6-link
│   │   ├── adin1sqb5ry73g1f6bsbqc1rlw1q0rgy -> /home/dc/.dotfiles/.doom.d/.guix-profile-3-link
│   │   ├── awn0jmhvqggpgqh8bc43hgnpbn5ssbv0 -> /home/dc/.dotfiles/.doom.d/.guix-profile-2-link
│   │   ├── fn53mkf2ign7cgcgmznpiwc5x2ly8h7j -> /home/dc/.dotfiles/.doom.d/.guix-profile-5-link
│   │   ├── gav6imdxamg2zng9sjywn3l49pyybg8q -> /var/guix/profiles/per-user/dc/current-guix-1-link
│   │   ├── k3a3ilqj77mi9382hq8i9wfxmd8krx3p -> /var/guix/profiles/per-user/dc/current-guix-5-link
│   │   └── rbb5q8i25gjl69lw5n8pj78kdzqapr6x -> /home/dc/.dotfiles/.doom.d/.guix-profile-1-link
│   └── profiles -> /gnu/var/guix/profiles
├── profiles
│   └── per-user
│       ├── dc
│       │   ├── current-guix -> current-guix-1-link
│       │   ├── current-guix-1-link -> /gnu/store/ijnsp0239xqi00kqwngp6abypij9rvh1-profile
│       │   ├── current-guix-4-link -> /gnu/store/wph6x9p5kqsry8nb14gi8vbbpzkhxv2a-profile
│       │   ├── current-guix-5-link -> /gnu/store/acfnv6iga300zqr66rkbwyy8awhhvc0y-profile
│       │   ├── current-guix-6-link -> /gnu/store/4jp0wv65h0vwbghlmn4pp2apd4b2f9a9-profile
│       │   ├── guix-profile -> guix-profile-3-link
│       │   ├── guix-profile-2-link -> /gnu/store/00qz6hjy51r54ai6rd558nmp3xb15w6j-profile
│       │   └── guix-profile-3-link -> /gnu/store/b0a5qw9aqv1gbdyfprlr6f901rfly0hr-profile
│       └── root
│           ├── current-guix -> current-guix-1-link
│           └── current-guix-1-link -> /gnu/store/prmplx86sxn5cb38nah57rpckxh4jhbq-profile
├── substitute
│   └── cache
│       ├── 4refhwxbjmeua2kwg2nmzhv4dg4d3dorpjefq7kiciw2pfhaf26a
│       ├── kzwjeblndsbkjzmjailrt4bnhguil7tqjmewzcyw22hgajbhfy3q
│       └── qyv76pf7kxlagcjija7xnvmaigp4okfrqqnl75nhldw5lhy7ibza
├── temproots
└── userpool
#+end_example

*** Locale

In Emacs, I'm getting prompted to select for an encoding system.

+ It's likely the =glib= is starting to drift between =nix= and =guix=. These issues
  can be strange.
+ If an binary with an older =glib= version tries to integrate with newer dynamic (from
  disk or in RAM) tries to link

This is mostly something to watch out for, even when running Nix profiles on a
foreign distro.

+ It's easier to manage with a more limited set of nix paths, but could be seen
  when running builds of old flakes in dev projects without updating.
+ locking glib versions can lead to cache-miss on ... well pretty much every
  single c-program you'd compile. so, for nix/guix, you'd like to keep it in
  sync. not every minor version is problematic, but... you can't know without
  =®f<éá>%#¹61^¹^åf·åéµ˛¤ßçëí®ïhñß= ... or staying in-tune with specific
  updates.
+ Encoding was necessary for minimizing program size & bounding compute costs,
  which was way more important early on. Since then (I think), it's been
  necessary to stage updates as hardware limitations were relaxed or changes
  were necessary. It's interesting, but I've never properly looked into it...
+ There must have been an unprecedented amount of cooperation to ensure personal
  computing could be universal (from open source & vendors). It's easily
  forgotten how much effort that represents.

| From uwsm-activated emacs       | Alacritty                       | Alacritty + Guix Current        |
|---------------------------------+---------------------------------+---------------------------------|
| LANG=en_US.UTF-8                | LANG=en_US.UTF-8                | LANG=en_US.UTF-8                |
| LC_CTYPE="en_US.UTF-8"          | LC_CTYPE="en_US.UTF-8"          | LC_CTYPE="en_US.UTF-8"          |
| LC_NUMERIC="en_US.UTF-8"        | LC_NUMERIC="en_US.UTF-8"        | LC_NUMERIC="en_US.UTF-8"        |
| LC_TIME="en_US.UTF-8"           | LC_TIME="en_US.UTF-8"           | LC_TIME="en_US.UTF-8"           |
| LC_COLLATE="en_US.UTF-8"        | LC_COLLATE="en_US.UTF-8"        | LC_COLLATE="en_US.UTF-8"        |
| LC_MONETARY="en_US.UTF-8"       | LC_MONETARY="en_US.UTF-8"       | LC_MONETARY="en_US.UTF-8"       |
| LC_MESSAGES="en_US.UTF-8"       | LC_MESSAGES="en_US.UTF-8"       | LC_MESSAGES="en_US.UTF-8"       |
| LC_PAPER="en_US.UTF-8"          | LC_PAPER="en_US.UTF-8"          | LC_PAPER="en_US.UTF-8"          |
| LC_NAME="en_US.UTF-8"           | LC_NAME="en_US.UTF-8"           | LC_NAME="en_US.UTF-8"           |
| LC_ADDRESS="en_US.UTF-8"        | LC_ADDRESS="en_US.UTF-8"        | LC_ADDRESS="en_US.UTF-8"        |
| LC_TELEPHONE="en_US.UTF-8"      | LC_TELEPHONE="en_US.UTF-8"      | LC_TELEPHONE="en_US.UTF-8"      |
| LC_MEASUREMENT="en_US.UTF-8"    | LC_MEASUREMENT="en_US.UTF-8"    | LC_MEASUREMENT="en_US.UTF-8"    |
| LC_IDENTIFICATION="en_US.UTF-8" | LC_IDENTIFICATION="en_US.UTF-8" | LC_IDENTIFICATION="en_US.UTF-8" |
| LC_ALL=                         | LC_ALL=                         | LC_ALL=                         |

In order to keep =glib= compatibility in sync, the guix profile for my Doom Emacs
installation needs to be updated frequently.

+ It shouldn't be huge problem -- emacs mostly shells out and read in content
  ... it doesn't care about the programs it's calling.
+ It would mostly affect string-references in-memory in C-programs linked
  against =glib=, in socket communication with other programs.
+ Most other interfaces across which information is exchanged -- terminal
  (comint-mode), network, file-system -- they expect ... well idk, but there'd
  be way more dysfunction if those were a problem.

**** Emacs

Specific Errors from my undo cache (from pasting embark output into files;
almost 100% sure)

#+begin_example
Error while executing "zstd -c -q -d < /home/dc/.emacs.doom/.local/cache/undo-tree-hist/.50bddc55cc71276fb2cee7b43852259e586e5102.~undo-tree~.zst"
#+end_example

#+begin_quote
\10000460 (2097456, #o10000460, #x200130) point=544 of 1018 (53%) column=41
\10000444 (2097444, #o10000444, #x200124) point=562 of 1018 (55%) column=59 Hscroll=58
#+end_quote


#+begin_example
These default coding systems were tried to safely encode the following
problematic characters in the buffer �-F� *temp*�:�-A
  Coding System           Pos  Codepoint  Char
  utf-8-unix            96762  #x200130   \10000460
                       105292  #x200130   \10000460
                       114087  #x200130   \10000460
                       121432  #x20012F   \10000457
                       124954  #x20012F   \10000457
                          ...

However, each of them encountered characters it couldn�-F�t encode safely:�-A
  utf-8-unix cannot safely encode these: \10000460 \10000460 \10000460 \10000457 \10000457 \10000457 \10000444 \10000444 \10000444 \10000444 \10000444 ...
#+end_example

...

#+begin_example
             position: 148 of 148 (99%), column: 0
            character: \10000444 (displayed as \10000444) (codepoint 2097444, #o10000444, #x200124)
              charset: gb18030 (GB18030)
code point in charset: 0x8431C232
               syntax: w which means: word
             category: L:Strong L2R, b:Arabic
             to input: type "C-x 8 RET 200124"
          buffer code: #xF8 #x88 #x80 #x84 #xA4
            file code: not encodable by coding system utf-8-unix
              display: composed to form "..." (see below)

Composed by the rule:
(TAB ?... TAB)
The component character(s) are displayed by these fonts (glyph codes):
 ...: -- no font --
See the variable ‘reference-point-alist’ for the meaning of the rule.

Character code properties: customize what to show
  general-category: Cn (Other, Not Assigned)
  decomposition: (2097444) (....)

There is an overlay here:
 From 148 to 149
  face                 hl-line
  priority             -50
  window               nil


There are text properties here:
  composition          (4 1 [9 2097444 9])
  fontified            t
  rear-nonsticky       t
  ws-butler-chg        chg

[back]
#+end_example

#+begin_src js
#+end_src

#+RESULTS:
