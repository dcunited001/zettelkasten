:PROPERTIES:
:ID:       334d88d8-a18d-4df8-8f74-f75f801ed13a
:END:
#+TITLE:     BTRFS: Setup external storage for docker/steam/guix
#+AUTHOR:    David Conner
#+EMAIL:     noreply@te.xel.io
#+DESCRIPTION: notes

mise:

- french: setting/placement
- japanese: a store

** Setup

after creating the auxilliary btrfs disk, create the btrfs subvolumes

#+begin_example sh
# get permissions right (pretty much everything is sudo)
mkdir -p /mise/@

mount -t btrfs -o rw,noatime,compress=zstd:3,ssd,discard=async,space_cache,autodefrag,subvol=/ /dev/sda8 /mise/

btrfs subvolume create /mise/@
btrfs subvolume create /mise/@docker
btrfs subvolume create /mise/@containerd
btrfs subvolume create /mise/@gnu
btrfs subvolume create /mise/@steam
btrfs subvolume create /mise/@virt
#+end_example

create temporary mounts to contain docker/containerd files

#+begin_example
mkdir -p /mnt/mise/docker
mkdir -p /mnt/mise/containerd

mount -t btrfs -o rw,noatime,compress=zstd:3,ssd,discard=async,space_cache,autodefrag,subvol=/@docker /dev/sda8 /mnt/docker
mount -t btrfs -o rw,noatime,compress=zstd:3,ssd,discard=async,space_cache,autodefrag,subvol=/@containerd /dev/sda8 /mnt/containerd
#+end_example

after installing docker/containerd, start them once to create the files

#+begin_example sh
systemctl start docker.service
systemctl stop docker.service
systemctl stop docker.socket

systemctl start containerd.service
systemctl stop containerd.servicE
#+end_example

Move the files into the temp mounts, then remove the original dirs & temp mounts

#+begin_example sh
sh -c "mv /var/lib/docker/* /mnt/mise/docker/"
sh -c "mv /var/lib/containerd/* /mnt/mise/containerd/"
rm -rf /var/lib/docker
rm -rf /var/lib/containerd
umount /mnt/mise/containerd
umount /mnt/mise/docker
#+end_example

check =/etc/mtab= to update =/etc/fstab=

#+begin_example sh
UUID=1234-4321 /mise          btrfs    subvol=/@,defaults,noatime,space_cache,autodefrag,compress=zstd,discard=a
sync,ssd 0 0
UUID=1234-4321 /mise/steam    btrfs    subvol=/@steam,defaults,noatime,space_cache,autodefrag,compress=zstd,disc
ard=async,ssd 0 0
UUID=1234-4321 /gnu          btrfs    subvol=/@gnu,defaults,noatime,space_cache,autodefrag,compress=zstd,discard
=async,ssd 0 0
UUID=1234-4321 /var/lib/docker          ext4    subvol=/@docker,defaults,noatime,space_cache,autodefrag,compress
=zstd,discard=async,ssd 0 0
UUID=1234-4321 /var/lib/containerd          ext4    subvol=/@containerd,defaults,noatime,space_cache,autodefrag,
compress=zstd,discard=async,ssd 0 0
#+end_example

cross your fingers and when you restart, you won't have to chroot... you should be able to start docker/containerd

#+begin_example sh
systemctl start docker.service
systemctl start containerd.service
#+end_example

**** TODO consider linking some =/etc/...= configs to =/mise/etc= configs
**** TODO reinstall guix and use the /mise store

** Motivation

My arch install was crashing ... broken wayland connections, usually leading to kernal crashes ... no vtty's ...

I needed to free up space. I wanted VM's, docker images and guix packages to be on a new drive. And i thought: "why not store them on a partition with compression......"

So I touched my guix store. 

Do not touch =/gnu/store= or try to delete it ... under no circumstances can you cross that bridge unless you can issue commands to =rm= which can be authorized to the GUIX namespace.

In other words, you'll have to defuse a few traps to get around the restrictions:

+ even if you booted from an ISO (which is where I was)
+ even if you snapshotted the files (i think)
+ even if you've copied the files to another disk/partition
+ even if you've chrooted

... One does not simply move their Guix =/gnu/store= without using the CLI tool, unless you plan on deleting partitions. Even if you
plan on setting up file paths on a new partition to match ... i'm not sure the links are preserved 100%.

It is designed this way for security purposes ... so it's a feature. It makes it difficult to circumvent the hashing of guix packages.
