:PROPERTIES:
:ID:       0919995a-6913-44c9-beef-0ab9af14a065
:END:
#+TITLE: FRC: Setup VSCode in WPILib
#+CATEGORY: slips
#+TAGS:

* Roam
+ [[id:c75cd36b-4d43-42e6-806e-450433a0c3f9][FRC]]
+ [[id:18d07822-9dda-4430-85a1-f7eb39f40429][VSCode]]

* Docs
* Resources

* Linux Install

WPILib maintains multiple versions of VSCode

** Path

There are 11 desktop files. Just fix PATH (no need to undo/persist desktop
changes)

** Desktop Files

desktop files are installed to =~/.local/share/applications=

+ Either =.profile= needs =PATH= to contain =~/wpilib/2025/tools= or it needs to be
  shimmed into the desktop files. (Trying to avoid logout)
+ Add wrapper scripts to =~/bin= that export path (easier)
+ There's a typo in the main VS Code desktop file: =WPIcal.sh= -> =wpical.sh=
  - all in all, the packaging and Linux support is very good. It doesn't run on
    guix/nix, but what does?

#+begin_example conf
Exec=/bin/sh -c 'export PATH=/home/myuser/wpilib/2025/tools:\\$PATH && /home/myuser/wpilib/2025/tools/AdvantageScope.sh'
#+end_example

+ This really won't be robust unless all processes stem from the same profile.
  (i.e. ... change =.profile=)
  VSCode usually resets the profile (I had tried it awhile back, but it
  empties out a lot of environment variables and makes it difficult to
  maintain various consistent profiles; it also interacts strangely with
  pyenv, etc...; this is actually "correct")

* Java

** WPI Lib

*** TODO Add vendordeps

** Metaprogramming

*** Proto gen

** Gradle

** Lombok

+ [[https://docs.freefair.io/gradle-plugins/current/reference/#_lombok][docs]]
+ [[https://github.com/folio-org/mod-tags/blob/master/lombok.config][example config]]

Adds getters/setters, requires adding plugin to =build.gradle=:

#+begin_src gradle
plugins {
    // ...
    id: "io.freefair.lombok" version "8.13.1"
}
#+end_src

*** [[https://projectlombok.org/features/][Annotations]]

+ val/var :: type inference
+ @NonNull :: auto-nullcheck
+ @Getter/@Setter :: req. prefix for =m_*=
+ @Value :: immutable

*** Notes

+ Helpful, but can cause as many problems as it fixes. also, it's 3+ imports on
  average (requires config change to avoid).
+ Fairly confined to Gradle (as far as potential version compat. issues go)
+ If sources are linked in javadoc, there should be options to generate the
  annotated code (though it probably removes annotations) ... hopefully it
  doesn't come to that.


* VSCode
:PROPERTIES:
:header-args:shell+: :dir (expand-file-name "wpilib/2025/vscode/VSCode-linux-x64/data" (getenv "HOME"))
:END:
In =/home/myuser/wpilib/2025/vscode/VSCode-linux-x64/data=


** Extension Structure

*** Issues
+ The extension assumes that =./gradlew= is at the root of the currently opened
  VSCode workspace.
*** Schema

+ [[https://github.com/wpilibsuite/vscode-wpilib/blob/main/vscode-wpilib/resources/vendorschema.json][vendorschema.json]]
+ [[https://github.com/wpilibsuite/vscode-wpilib/blob/main/vscode-wpilib/resources/wpilibschema.json][wpilibschema.json]]

*** Configuration

Code for =.wpilib/wpilib_preferences.json= is here in [[https://github.com/wpilibsuite/vscode-wpilib/blob/ab3a347c94ec18d1ee5189b0583ed92843d00a19/vscode-wpilib/src/preferences.ts#L35][src/preferences.ts]].

+ These settings come up frequently in the VSCode extension. They stand
  alongside the VSCode user/workspace settings, but
+ These are preferences that need to persist across editors.
  - The gradle tasks may parse through the =vendordeps= json, connecting those
    settings to the actual build.
  - Gradle can also =jsonSlurp= the =wpilib_preferences.json= (in theory).
  - [[https://github.com/wpilibsuite/allwpilib/blob/fb399eef3dc4ef41d3c99966c0182ad194c0a817/wpilibjExamples/build.gradle#L68-L77][./wpilibjExamples/build.gradle]] parses JSON definitions for tasks that need
    to be added to the gradle build.
  - These are the same templates that the VSCode editor will build.

**** Vendor Deps

*** Project Updater

+ [[https://github.com/wpilibsuite/vscode-wpilib/blob/ab3a347c94ec18d1ee5189b0583ed92843d00a19/vscode-wpilib/src/shared/generator.ts#L383-L403][setDesktopEnabled in ./src/shared/generator.ts]] just does a regexp replace for
  =build.gradle= which ensures =def includeDesktopSupport = true=, so this wasn't as
  opaque as it first seemed (I think...)

**** Failed project upgrade

I downloaded a project made with =projectYear= set to =2025beta=. I made a few
changes to =build.gradle=, but some =classpath= issues with =wpilibj2= were failing
most gradle tasks. I had skipped the project import bc i wasn't sure what it'd do. I
guess I should clone again and see...

I upgraded the vendordeps using the VSCode command.

+ I fixed the =build.gradle= reference to a previous =GradioRIO= and rebuilt
+ unsure whether I need to reload the vendor deps here)

#+begin_example diff
-    id "edu.wpi.first.GradleRIO" version "2025.1.1-beta-1"
+    id "edu.wpi.first.GradleRIO" version "2025.3.2"
#+end_example

The deps had a few issues, but the UI had resolved these.
  - remove maven repository with =uri= where I was getting =401=
+ There were a few other issues with =build.gradle=
  - =compileJava.finalizedBy checkAkitInstall= idk what this does, but i'm
    probably loading more java than just this.
  - =annotationProcessor "org.littletonrobotics.akit.junction:junction-autolog:$akitJson.version"=
    - needed to be changed to
      =org.littletonrobotics.akit.junction:junction-autolog:$akitJson.version=

#+begin_example diff
-    "projectYear": "2025beta",
-    "teamNumber": 1234
+    "projectYear": "2025",
+    "teamNumber": 4321
#+end_example

I ran =Install Tools For Gradle IO=, but it still didn't fix the =classpath= issues.
After typing in an import, =edu.wpi.first.wpilibj2= where still recognized by
Java's LSP in the project, so I searched for =edu.wpi.first= in the gradle build,
where I found the problem

#+begin_example diff
-configurations.all {
-    exclude group: "edu.wpi.first.wpilibj"
-}
#+end_example

After removing this, I find upgrading to =com.ctre.phoenix6= ummm... wasn't
sufficient lol.

**** Migrate Phoenix6 Swerve Drive



***** Changes to CTRE Swerve API

No idea what I'm doing here, so compilation problems are the least of my
worries. (not running this code, except on simulator)

#+begin_quote
NOTE: not completed
#+end_quote


***** Changes to Units functionality

Relavent commits (circa v2025.3.2) from =magit git-log search=

| [[https://github.com/wpilibsuite/allwpilib/commit/dd6c830768][dd6c830768]] | [[https://github.com/wpilibsuite/allwpilib/commit/3dee19a435][3dee19a435]] | [[https://github.com/wpilibsuite/allwpilib/commit/ba37e7eb3c][ba37e7eb3c]] | [[https://github.com/wpilibsuite/allwpilib/commit/07192285f6][07192285f6]] | [[https://github.com/wpilibsuite/allwpilib/commit/13626063dc][13626063dc]] | [[https://github.com/wpilibsuite/allwpilib/commit/e52f400687][e52f400687]] | [[https://github.com/wpilibsuite/allwpilib/commit/fe49cbe429][fe49cbe429]] | [[https://github.com/wpilibsuite/allwpilib/commit/f9b3efb712][f9b3efb712]] | [[https://github.com/wpilibsuite/allwpilib/commit/544553a58f][544553a58f]] | [[https://github.com/wpilibsuite/allwpilib/commit/49e3e4a0be][49e3e4a0be]] | [[https://github.com/wpilibsuite/allwpilib/commit/6ef5b85758][6ef5b85758]] |



** Extensions

These extensions are added

#+begin_src shell
cat extensions/extensions.json | jq -r 'map(.identifier.id) | join("\n")'
#+end_src

#+RESULTS:
| ms-vscode.cpptools             |
| redhat.java                    |
| vscjava.vscode-java-debug      |
| vscjava.vscode-java-dependency |
| ms-python.python               |
| ms-python.debugpy              |
| ms-python.vscode-pylance       |
| ms-python.isort                |
| ms-python.black-formatter      |
| wpilibsuite.vscode-wpilib      |

Added

+ Docker
+ Dev Containers
+ Lombok Annotations
+ YAML
+ vscode-proto3

** Java

+ java.eclipse.downloadSources :: maybe
+ editor.formatOnSave :: well maybe

*** Commands

+ M-S-h :: references-view.showCallHierarchy: either inline or in the side thingy

** Config

*** Diff

#+name: getConfig
#+begin_src shell :results output verbatim code :wrap example json
cat user-data/User/settings.json | jq -r '.'
#+end_src

#+name: initConfig
#+call: getConfig() :cache yes

#+RESULTS[b95db5712dfb04050122570bb17c14aa84bfa879]: initConfig
#+begin_example json
{
  "java.jdt.ls.java.home": "/home/dc/wpilib/2025/jdk",
  "extensions.autoUpdate": false,
  "extensions.autoCheckUpdates": false,
  "extensions.ignoreRecommendations": true,
  "update.mode": "none",
  "update.showReleaseNotes": false,
  "java.completion.matchCase": "off",
  "terminal.integrated.env.linux": {
    "JAVA_HOME": "/home/dc/wpilib/2025/jdk",
    "PATH": "/home/dc/wpilib/2025/jdk/bin:${env:PATH}"
  },
  "java.configuration.runtimes": [
    {
      "name": "JavaSE-17",
      "path": "/home/dc/wpilib/2025/jdk",
      "default": true
    }
  ]
}
#+end_example

#+name: configJava
#+call: getConfig() :cache yes

#+RESULTS[b95db5712dfb04050122570bb17c14aa84bfa879]: configJava
#+begin_example json
{
  "java.jdt.ls.java.home": "/home/dc/wpilib/2025/jdk",
  "extensions.ignoreRecommendations": true,
  "update.mode": "none",
  "update.showReleaseNotes": false,
  "java.completion.matchCase": "off",
  "terminal.integrated.env.linux": {
    "JAVA_HOME": "/home/dc/wpilib/2025/jdk",
    "PATH": "/home/dc/wpilib/2025/jdk/bin:${env:PATH}"
  },
  "java.configuration.runtimes": [
    {
      "name": "JavaSE-17",
      "path": "/home/dc/wpilib/2025/jdk",
      "default": true
    }
  ],
  "extensions.autoCheckUpdates": false,
  "workbench.settings.editor": "json",
  "java.dependency.showMembers": true,
  "java.codeGeneration.generateComments": true,
  "java.codeGeneration.useBlocks": true,
  "java.saveActions.organizeImports": true,
  "java.quickfix.showAt": "problem",
  "java.implementationCodeLens": "all"
}
#+end_example

I don't want to disable anything I won't learn about.

#+name: diffConfigs
#+begin_src shell :results output verbatim code :var c1=initConfig c2=configJava :wrap example diff
diff <(echo -e "$c1") <(echo -e "$c2")
#+end_src

#+RESULTS: diffConfigs
#+begin_example diff
3,4d2
<   "extensions.autoUpdate": false,
<   "extensions.autoCheckUpdates": false,
19c17,25
<   ]
---
>   ],
>   "extensions.autoCheckUpdates": false,
>   "workbench.settings.editor": "json",
>   "java.dependency.showMembers": true,
>   "java.codeGeneration.generateComments": true,
>   "java.codeGeneration.useBlocks": true,
>   "java.saveActions.organizeImports": true,
>   "java.quickfix.showAt": "problem",
>   "java.implementationCodeLens": "all"
#+end_example

#+name: configDelays
#+call: getConfig() :results output silent code :wrap example json

#+name: diff2
#+call: diffConfigs(c1=configJava, c2=configDelays) :results output verbatim code :wrap example diff

#+RESULTS: diff2
#+begin_example diff
25c25,31
<   "java.implementationCodeLens": "all"
---
>   "java.implementationCodeLens": "all",
>   "redhat.telemetry.enabled": false,
>   "editor.hover.hidingDelay": 50,
>   "editor.hover.delay": 750,
>   "editor.occurrencesHighlightDelay": 500,
>   "editor.quickSuggestionsDelay": 300,
>   "files.autoSaveDelay": 3000
#+end_example
