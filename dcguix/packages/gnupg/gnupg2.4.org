:PROPERTIES:
:ID:       50a2e45f-bf2a-456b-a583-a958243b6ef6
:END:
#+title: DC Guix: GnuPG 2.4 Guix

* GnuPG 2.3.8 notes

2.3.8 was less widely used. I thought I placed notes on upgrading this package
somewhere. Keeping for the notes on versions/deps.

|--------------------+------+--------------+--------------|
|                    | pkg? | guix version | req. version |
|--------------------+------+--------------+--------------|
| gnutls             | x    |        3.7.7 |          3.0 |
| libassuan          | x    |        2.5.5 |          2.5 |
| libgcrypt          | x    |       1.10.1 |        1.9.1 |
| libgpg-error       | x    |              |              |
| libksba            | x    |        1.6.3 |        1.3.4 |
| npth               | x    |          1.6 |          1.2 |
| openldap (libldap) |      |              |              |
| pcsc-lite          | x    |              |              |
| readline           | x    |              |              |
| sqlite             | x    |       3.42.0 |         3.27 |
| zlib               | x    |              |              |
|--------------------+------+--------------+--------------|

Other deps

|-------------------------+------+--------------+--------------|
|                         | pkg? | guix version | req. version |
|-------------------------+------+--------------+--------------|
| bzip2?                  | ?    |        1.0.8 |        >1.0? |
| pinentry? (runtime dep) | ?    |              |              |
| tpm2-tss                | O    |      >2.4.0? |        3.0.3 |
| libusb                  | x    |       1.0.25 |          1.0 |
|-------------------------+------+--------------+--------------|

+ TPM2 support may be complicated (build outputs may suffice)

LDAP: may cause problems? maybe?

+ [[https://dev.gnupg.org/source/gnupg/browse/master/configure.ac;gnupg-2.3.8$1216-1247][configure.ac: L1216-1247]]
  - The =AC_DEFINE= for LDAP
+ [[https://dev.gnupg.org/source/gnupg/browse/master/configure.ac;gnupg-2.3.8$1104-1111][configure.ac: L1104-1111]]
  - Must check for network library requirements before doing link tests
    for ldap, for example. If ldap libs are static (or dynamic and without
    ELF runtime link paths), then link will fail and LDAP support won't
    be detected.

+ patches:
  - these are fine. common/homedir.c last changed in 2016
  - patch-paths: fix scdaemon references to pcscd dylib path

+ --enable-maintainer-mode?

#+begin_src scheme
(define-public libgpg-error1.46
  (package
    (inherit libgpg-error)
    (name "libgpg-error1.46")
    (version "1.46")
    (source
     (origin
       (method url-fetch)
       (uri (string-append "mirror://gnupg/libgpg-error/libgpg-error-"
                           version ".tar.bz2"))
       (sha256
        (base32
         "1396h4f9z9awzkkyb6iwspy2rmxb8nr47pj8fzrmxgkb4ij1mqdp"))))))


(define-public gnupg2.4
  (package
    (inherit gnupg)
    (name "gnupg2.4")
    (version "2.4.5")
    (source (origin
              (method url-fetch)
              (uri (string-append "mirror://gnupg/gnupg/gnupg-" version
                                  ".tar.bz2"))
              (patches (search-patches "gnupg-default-pinentry.patch"))
              (sha256
               (base32
                "0xs2yjb2yy39r2vvq57achznqhwpmx2dhd3d6df67cbcs1spv3zn"))))
    (inputs
     (modify-inputs (package-inputs gnupg)
       (delete "libgpg-error")
       (append
        ;; libldap
        libgpg-error1.46
        bzip2
        libusb)))
    (arguments
     (substitute-keyword-arguments
         (package-arguments gnupg)

       ;; the readme instructs to run ../configure from the build directory
       ;; now. this requires setting #out-of-source?
       ((#:out-of-source? _ #f) #t)
       ((#:phases phases)
        #~(modify-phases #$phases
            ;; these test files aren't in the ./build directory and now need
            ;; to be patched separately, otherwise neither substitute* nor
            ;; mkstemp! can find the files.
            (add-after 'patch-paths 'patch-test-source-paths
              (lambda _
                (substitute*
                    '("../gnupg-2.4.5/tests/cms/inittests"
                      "../gnupg-2.4.5/tests/pkits/inittests"
                      "../gnupg-2.4.5/tests/pkits/common.sh")
                  (("/bin/pwd") (string-append #$output "/bin/pwd")))
                (substitute*
                    "../gnupg-2.4.5/common/t-exectool.c"
                  (("/bin/cat") (string-append #$output "/bin/cat"))
                  (("/bin/true") (string-append #$output "/bin/true"))
                  (("/bin/false") (string-append #$output "/bin/false")))))
            (replace 'patch-test-paths
              (lambda _
                (substitute*
                    '("tests/Makefile"
                      "tests/cms/Makefile"
                      "tests/pkits/Makefile")
                  (("/bin/pwd") (string-append #$output "/bin/pwd")))
                ))))))))

;; upgraded to get gpg-card and potentially fix some issues. they're fixed
;; and if the tests are passing ... then you can roll your own crypto?

(define-public gnupg2.3
  (package
    (inherit gnupg)
    (name "gnupg2.3")
    (version "2.3.8")
    (source (origin
              (method url-fetch)
              (uri (string-append "mirror://gnupg/gnupg/gnupg-" version
                                  ".tar.bz2"))
              (patches (search-patches "gnupg-default-pinentry.patch"))
              (sha256
               (base32
                "1vb99657wxbizdskw0pxh0m568805ql1llpg23xn38kxwm07l2sl"))))
    (inputs
     (modify-inputs (package-inputs gnupg)
       (append
        ;; libldap
        bzip2
        libusb)))
    (arguments
     (substitute-keyword-arguments
         (package-arguments gnupg)
       ((#:phases phases)
        #~(modify-phases #$phases
            (replace 'patch-test-paths
              (lambda _
                (substitute*
                    '("tests/Makefile"
                      "tests/cms/inittests"
                      "tests/cms/Makefile"
                      "tests/pkits/inittests"
                      "tests/pkits/common.sh"
                      "tests/pkits/Makefile")
                  ;; (("/bin/pwd") (which "pwd"))
                  (("/bin/pwd") (string-append #$output "/bin/pwd")))
                (substitute* "common/t-exectool.c"
                  ;; (("/bin/cat") (which "cat"))
                  ;; (("/bin/true") (which "true"))
                  ;; (("/bin/false") (which "false"))
                  (("/bin/cat") (string-append #$output "/bin/cat"))
                  (("/bin/true") (string-append #$output "/bin/true"))
                  (("/bin/false") (string-append #$output "/bin/false")))))))))))
#+end_src
