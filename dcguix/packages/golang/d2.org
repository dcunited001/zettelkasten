:PROPERTIES:
:ID:       6e7c5ec5-4f35-4b59-99c1-0266026512dc
:END:
#+TITLE: DC Guix: Golang D2
#+CATEGORY: dcguix
#+TAGS:

* Roam
+ [[id:b82627bf-a0de-45c5-8ff4-229936549942][Guix]]
+ [[id:abd2d6e9-fe5b-4ba4-8533-0e5a3d174743][Golang]]
+ [[id:bd7dd6c8-7035-4e7a-b730-0d7f9c61ef9f][DC Guix]]

* Package

Not sure whether i did much more than simple =guix import golang=... but it's
breaking guix search.

#+begin_src scheme
(define-module (ellipsis packages wip golang)
  #:use-module ((guix licenses) #:prefix license:)
  #:use-module (guix gexp)
  #:use-module (guix utils)
  #:use-module (guix download)
  #:use-module (guix git-download)
  #:use-module (guix packages)
  #:use-module (guix build-system go)

  #:use-module (gnu packages base)
  #:use-module (gnu packages golang)
  #:use-module (gnu packages tls)
  #:use-module (gnu packages security-token)
  ;; #:use-module (gnu packages gcc)

  #:use-module (srfi srfi-1))

(define-public go-oss-terrastruct-com-d2
  (package
    (name "go-oss-terrastruct-com-d2")
    (version "0.6.5")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/terrastruct/d2")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "17gcgw0gbbyksw5fcbdvzsnpdn6j6c4163z3d70fjqq8j8b1sin8"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go 1.22
      #:import-path "oss.terrastruct.com/d2"))
    (propagated-inputs `
     (("go-oss-terrastruct-com-util-go" ,go-oss-terrastruct-com-util-go)
      ("go-nhooyr-io-websocket" ,go-nhooyr-io-websocket)
      ("go-gonum-org-v1-plot" ,go-gonum-org-v1-plot)
      ("go-golang-org-x-xerrors" ,go-golang-org-x-xerrors)
      ("go-golang-org-x-tools" ,go-golang-org-x-tools)
      ("go-golang-org-x-text" ,go-golang-org-x-text)
      ("go-golang-org-x-net" ,go-golang-org-x-net)
      ("go-golang-org-x-image" ,go-golang-org-x-image)
      ("go-go-uber-org-multierr" ,go-go-uber-org-multierr)
      ("go-github-com-yuin-goldmark" ,go-github-com-yuin-goldmark)
      ("go-github-com-stretchr-testify" ,go-github-com-stretchr-testify)
      ("go-github-com-spf13-pflag" ,go-github-com-spf13-pflag)
      ("go-github-com-rivo-uniseg" ,go-github-com-rivo-uniseg)
      ("go-github-com-playwright-community-playwright-go"
       ,go-github-com-playwright-community-playwright-go)
      ("go-github-com-mazznoer-csscolorparser" ,go-github-com-mazznoer-csscolorparser)
      ("go-github-com-lucasb-eyer-go-colorful" ,go-github-com-lucasb-eyer-go-colorful)
      ("go-github-com-jung-kurt-gofpdf" ,go-github-com-jung-kurt-gofpdf)
      ("go-github-com-golang-freetype" ,go-github-com-golang-freetype)
      ("go-github-com-fsnotify-fsnotify" ,go-github-com-fsnotify-fsnotify)
      ("go-github-com-ericpauley-go-quantize" ,go-github-com-ericpauley-go-quantize)
      ("go-github-com-dsoprea-go-png-image-structure-v2"
       ,go-github-com-dsoprea-go-png-image-structure-v2)
      ("go-github-com-dsoprea-go-exif-v3" ,go-github-com-dsoprea-go-exif-v3)
      ("go-github-com-dop251-goja" ,go-github-com-dop251-goja)
      ("go-github-com-alecthomas-chroma-v2" ,go-github-com-alecthomas-chroma-v2)
      ("go-github-com-puerkitobio-goquery" ,go-github-com-puerkitobio-goquery)
      ("go-cdr-dev-slog" ,go-cdr-dev-slog)))
    (home-page "https://oss.terrastruct.com/d2")
    (synopsis "Table of Contents")
    (description
     "The most convenient way to use D2 is to just run it as a CLI executable to
produce SVGs from @@code{.d2} files.")
    (license license:mpl2.0)))

#+end_src


#+begin_src scheme
(define go-github-com-wader-fq--packages
  `("go-gopkg-in-yaml-v3"
    "go-golang-org-x-text"
    "go-golang-org-x-net"
    "go-golang-org-x-exp"
    "go-golang-org-x-crypto"
    "go-github-com-pmezard-go-difflib"
    "go-github-com-mitchellh-mapstructure"
    "go-github-com-mitchellh-copystructure"
    "go-github-com-gopacket-gopacket"
    "go-github-com-gomarkdown-markdown"
    "go-github-com-golang-snappy"
    "go-github-com-creasty-defaults"
    "go-github-com-burntsushi-toml"
    "go-github-com-wader-readline"
    "go-github-com-wader-gojq"))

;; ;; https://github.com/wader/fq/blob/master/go.mod

(define-public go-github-com-wader-fq
  (package
    (name "go-github-com-wader-fq")
    (version "0.9.0")
    (source
     (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/wader/fq")
             (commit (string-append "v" version))))
       (file-name (git-file-name name version))
       (sha256
        (base32 "0cfg93dd2xyd8pbx4nik1083w90gd8mpc0vwcjf07jsv2m1s6552"))))
    (build-system go-build-system)
    (arguments
     (list
      #:go 1.18
      #:import-path "github.com/wader/fq"))
    (propagated-inputs `(("go-gopkg-in-yaml-v3" ,go-gopkg-in-yaml-v3)
                         ("go-golang-org-x-text" ,go-golang-org-x-text)
                         ("go-golang-org-x-net" ,go-golang-org-x-net)
                         ("go-golang-org-x-exp" ,go-golang-org-x-exp)
                         ("go-golang-org-x-crypto" ,go-golang-org-x-crypto)
                         ("go-github-com-pmezard-go-difflib" ,go-github-com-pmezard-go-difflib)
                         ("go-github-com-mitchellh-mapstructure" ,go-github-com-mitchellh-mapstructure)
                         ("go-github-com-mitchellh-copystructure" ,go-github-com-mitchellh-copystructure)
                         ("go-github-com-gopacket-gopacket" ,go-github-com-gopacket-gopacket)
                         ("go-github-com-gomarkdown-markdown" ,go-github-com-gomarkdown-markdown)
                         ("go-github-com-golang-snappy" ,go-github-com-golang-snappy)
                         ("go-github-com-creasty-defaults" ,go-github-com-creasty-defaults)
                         ("go-github-com-burntsushi-toml" ,go-github-com-burntsushi-toml)
                         ("go-github-com-wader-readline" ,go-github-com-wader-readline)
                         ("go-github-com-wader-gojq" ,go-github-com-wader-gojq)))
    (home-page "https://github.com/wader/fq")
    (synopsis "fq")
    (description "Tool, language and decoders for working with binary data.")
    (license license:expat)))
#+end_src

