#+TITLE:     Firefox SQLite Schemas
#+AUTHOR:    David Conner
#+EMAIL:     aionfork@gmail.com
#+DESCRIPTION: notes

* FF Vars                                                          :noexport:

Clone [[https://gitlab.com/Screwtapello/sqlite-schema-diagram][Screwtapello/sqlite-schema-diagram]] to =/tmp/=

#+begin_src emacs-lisp
;(setq-local firefox-profile "foobar-baz.default")
(setq-local firefox-profile "6p7m7bga.default-release")

#+end_src

#+name: firefoxProfile
#+begin_src emacs-lisp :results value silent
"6p7m7bga.default-release"
#+end_src

#+name: ffroot
#+begin_src emacs-lisp
(expand-file-name ".mozilla/firefox" (getenv "HOME"))
#+end_src

#+name: sqliteSchemaTool
#+begin_src emacs-lisp
"/tmp/sqlite-schema-diagram"
#+end_src

#+name: ffdbfiles
#+headers: :results output table :var ffroot=ffroot ffprofile=firefoxProfile
#+begin_src bash
ffprofile=$ffroot/$ffprofile
find $ffprofile -name "*.sqlite" ! -wholename '*+++*' ! -wholename '*idb*' \
    | sed -e 's/\/home.*default-release\///g' \
    | sort
#+end_src

#+RESULTS: ffdbfiles
| content-prefs.sqlite        |
| cookies.sqlite              |
| credentialstate.sqlite      |
| domain_to_categories.sqlite |
| favicons.sqlite             |
| formhistory.sqlite          |
| permissions.sqlite          |
| places.sqlite               |
| protections.sqlite          |
| storage/ls-archive.sqlite   |
| storage.sqlite              |
| storage-sync-v2.sqlite      |
| weave/bookmarks.sqlite      |
| webappsstore.sqlite         |

#+name: ffSchemaDiagram
#+headers: :var ffroot=ffroot ffprofile=firefoxProfile ffdb="bookmarks.sqlite" sqltool=sqliteSchemaTool
#+begin_src sh :results output file link
## (f-dirname "/tmp/bookmarks.svg")
ffprofile=$ffroot/$ffprofile

# TODO: two of these are located in a subdirectory
#
# - the produced files should be relative to that
#
# - each database requires rendering the schema to a file relative to that
dbDot="${ffprofile}/$ffdb.dot"
dbDiagram="${ffprofile}/$ffdb.png"
# dbSql="${ffprofile}/$ffdb.sql"

sqlite3 "$ffprofile/$ffdb" -init "$sqltool/sqlite-schema-diagram.sql" "" > $dbDot 2>/dev/null
dot -Tsvg -Kdot -G"rankdir='LR'" $dbDot > $dbDiagram

# cat $dbDiagram
# echo $dbDiagram

output="img/firefox-$(basename $dbDiagram)"
cp $dbDiagram $output
echo -n $output
#+end_src

#+RESULTS: ffSchemaDiagram
[[file:img/firefox-bookmarks.sqlite.svg]]

* Firefox

** Schemas

*** bookmarks.sqlite

The =bookmarks.sqlite= database returns an empty result for me.

#+name: ffBookmarks
#+call: ffSchemaDiagram(ffdb="bookmarks.sqlite") :results output file link :exports both

#+RESULTS: ffBookmarks
[[file:img/firefox-bookmarks.sqlite.svg]]

*** content-prefs.sqlite

#+name: ffContentPrefs
#+call: ffSchemaDiagram(ffdb="content-prefs.sqlite") :results output file link :exports both

#+RESULTS: ffContentPrefs
[[file:img/firefox-content-prefs.sqlite.svg]]

*** cookies.sqlite

#+name: ffCookies
#+call: ffSchemaDiagram(ffdb="cookies.sqlite") :results output file link :exports both

#+RESULTS: ffCookies
[[file:img/firefox-cookies.sqlite.svg]]

*** credentialstate.sqlite

#+name: ffCredentialState
#+call: ffSchemaDiagram(ffdb="credentialstate.sqlite") :results output file link :exports both

#+RESULTS: ffCredentialState
[[file:img/firefox-credentialstate.sqlite.svg]]

*** domain_to_categories.sqlite

#+name: ffDomainToCategories
#+call: ffSchemaDiagram(ffdb="domain_to_categories.sqlite") :results output file link :exports both

#+RESULTS: ffDomainToCategories
[[file:img/firefox-domain_to_categories.sqlite.svg]]

*** favicons.sqlite

#+name: ffFavicons
#+call: ffSchemaDiagram(ffdb="favicons.sqlite") :results output file link :exports both

#+RESULTS: ffFavicons
[[file:img/firefox-favicons.sqlite.svg]]

*** formhistory.sqlite

#+name: ffFormHistory
#+call: ffSchemaDiagram(ffdb="formhistory.sqlite") :results output file link :exports both

#+RESULTS: ffFormHistory
[[file:img/firefox-formhistory.sqlite.svg]]

*** strorage/ls-archive.sqlite

#+name: ffLsArchive
#+call: ffSchemaDiagram(ffdb="storage/ls-archive.sqlite") :results output file link :exports both

#+RESULTS: ffLsArchive
[[file:img/firefox-ls-archive.sqlite.svg]]

*** permissions.sqlite

#+name: ffPermissions
#+call: ffSchemaDiagram(ffdb="permissions.sqlite") :results output file link :exports both

#+RESULTS: ffPermissions
[[file:img/firefox-permissions.sqlite.svg]]

*** places.sqlite

#+name: ffPlaces
#+call: ffSchemaDiagram(ffdb="places.sqlite") :results output file link :exports both

#+RESULTS: ffPlaces
[[file:img/firefox-places.sqlite.svg]]

*** protections.sqlite

#+name: ffProtections
#+call: ffSchemaDiagram(ffdb="protections.sqlite") :results output file link :exports both

#+RESULTS: ffProtections
[[file:img/firefox-protections.sqlite.svg]]

*** storage.sqlite

#+name: ffStorage
#+call: ffSchemaDiagram(ffdb="storage.sqlite") :results output file link :exports both

#+RESULTS: ffStorage
[[file:img/firefox-storage.sqlite.svg]]

*** storage-sync-v2.sqlite

#+name: ffStorageSyncV2
#+call: ffSchemaDiagram(ffdb="storage-sync-v2.sqlite") :results output file link :exports both

#+RESULTS: ffStorageSyncV2
[[file:img/firefox-storage-sync-v2.sqlite.svg]]

*** webappsstore.sqlite

#+name: ffWebAppsStore
#+call: ffSchemaDiagram(ffdb="webappsstore.sqlite") :results output file link :exports both

#+RESULTS: ffWebAppsStore
[[file:img/firefox-webappsstore.sqlite.svg]]
