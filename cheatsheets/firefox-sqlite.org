:PROPERTIES:
:ID:       c13684bd-77e7-46c6-98c6-a6486c2232d8
:END:
#+TITLE:     Firefox SQLite Schemas
#+AUTHOR:    David Conner
#+EMAIL:     aionfork@gmail.com
#+DESCRIPTION: notes

* FF Vars                                                          :noexport:

Clone [[https://gitlab.com/Screwtapello/sqlite-schema-diagram][Screwtapello/sqlite-schema-diagram]] to =/tmp/=

#+begin_src emacs-lisp
(setq-local firefox-profile "foobar-baz.default")
#+end_src

#+name: firefoxProfile
#+begin_src emacs-lisp :results value silent
;; OOOOF (one of the +rare?+ times i meant to NOT commit something)
;;
;; - and my firefox did immediately crash on restart
;;
;; - firefox/chrome make this a bit hard get via scripting ... for a reason!

"foobar-baz.default"
#+end_src

#+name: ffroot
#+begin_src emacs-lisp
(expand-file-name ".mozilla/firefox" (getenv "HOME"))
#+end_src

#+name: sqliteSchemaTool
#+begin_src emacs-lisp
"/tmp/sqlite-schema-diagram"
#+end_src

#+name: ffdbfiles
#+headers: :results output table :var ffroot=ffroot ffprofile=firefoxProfile
#+begin_src bash
ffprofile=$ffroot/$ffprofile
find $ffprofile -name "*.sqlite" ! -wholename '*+++*' ! -wholename '*idb*' \
    | sed -e 's/\/home.*default-release\///g' \
    | sort
#+end_src

#+RESULTS: ffdbfiles
| content-prefs.sqlite        |
| cookies.sqlite              |
| credentialstate.sqlite      |
| domain_to_categories.sqlite |
| favicons.sqlite             |
| formhistory.sqlite          |
| permissions.sqlite          |
| places.sqlite               |
| protections.sqlite          |
| storage/ls-archive.sqlite   |
| storage.sqlite              |
| storage-sync-v2.sqlite      |
| weave/bookmarks.sqlite      |
| webappsstore.sqlite         |

#+name: ffSchemaDiagram
#+headers: :var ffroot=ffroot ffprofile=firefoxProfile ffdb="bookmarks.sqlite" sqltool=sqliteSchemaTool
#+begin_src sh :results output file link
## (f-dirname "/tmp/bookmarks.svg")
ffprofile=$ffroot/$ffprofile

diagramType=png

dbDot="${ffprofile}/$ffdb.dot"
dbDiagram="${ffprofile}/$ffdb.$diagramType"
# dbSql="${ffprofile}/$ffdb.sql"

sqlite3 "$ffprofile/$ffdb" -init "$sqltool/sqlite-schema-diagram.sql" "" > $dbDot 2>/dev/null
dot -T${diagramType} -Kdot -G"rankdir='LR'" $dbDot > $dbDiagram

output="img/firefox-$(basename $dbDiagram)"
cp $dbDiagram $output
echo -n $output
#+end_src

#+RESULTS: ffSchemaDiagram
[[file:img/firefox-bookmarks.sqlite.svg]]

* Firefox

** Schemas

*** bookmarks.sqlite

The =bookmarks.sqlite= database returns an empty result for me.

#+name: ffBookmarks
#+call: ffSchemaDiagram(ffdb="bookmarks.sqlite") :results output file link :exports both

#+RESULTS: ffBookmarks
[[file:img/firefox-bookmarks.sqlite.png]]

[[file:img/firefox-bookmarks.sqlite.png]]

*** content-prefs.sqlite

#+name: ffContentPrefs
#+call: ffSchemaDiagram(ffdb="content-prefs.sqlite") :results output file link :exports both

#+RESULTS: ffContentPrefs
[[file:img/firefox-content-prefs.sqlite.png]]

[[file:img/firefox-content-prefs.sqlite.png]]

*** cookies.sqlite

#+name: ffCookies
#+call: ffSchemaDiagram(ffdb="cookies.sqlite") :results output file link :exports both

#+RESULTS: ffCookies
[[file:img/firefox-cookies.sqlite.png]]

[[file:img/firefox-cookies.sqlite.png]]

*** credentialstate.sqlite

#+name: ffCredentialState
#+call: ffSchemaDiagram(ffdb="credentialstate.sqlite") :results output file link :exports both

#+RESULTS: ffCredentialState
[[file:img/firefox-credentialstate.sqlite.png]]

[[file:img/firefox-credentialstate.sqlite.png]]

*** domain_to_categories.sqlite

#+name: ffDomainToCategories
#+call: ffSchemaDiagram(ffdb="domain_to_categories.sqlite") :results output file link :exports both

#+RESULTS: ffDomainToCategories
[[file:img/firefox-domain_to_categories.sqlite.png]]

*** favicons.sqlite

#+name: ffFavicons
#+call: ffSchemaDiagram(ffdb="favicons.sqlite") :results output file link :exports both

#+RESULTS: ffFavicons
[[file:img/firefox-favicons.sqlite.png]]

*** formhistory.sqlite

#+name: ffFormHistory
#+call: ffSchemaDiagram(ffdb="formhistory.sqlite") :results output file link :exports both

#+RESULTS: ffFormHistory
[[file:img/firefox-formhistory.sqlite.png]]

*** storage/ls-archive.sqlite

#+name: ffLsArchive
#+call: ffSchemaDiagram(ffdb="storage/ls-archive.sqlite") :results output file link :exports both

#+RESULTS: ffLsArchive
[[file:img/firefox-ls-archive.sqlite.png]]

*** permissions.sqlite

#+name: ffPermissions
#+call: ffSchemaDiagram(ffdb="permissions.sqlite") :results output file link :exports both

#+RESULTS: ffPermissions
[[file:img/firefox-permissions.sqlite.png]]

*** places.sqlite

#+name: ffPlaces
#+call: ffSchemaDiagram(ffdb="places.sqlite") :results output file link :exports both

#+RESULTS: ffPlaces
[[file:img/firefox-places.sqlite.png]]

*** protections.sqlite

#+name: ffProtections
#+call: ffSchemaDiagram(ffdb="protections.sqlite") :results output file link :exports both

#+RESULTS: ffProtections
[[file:img/firefox-protections.sqlite.png]]

*** storage.sqlite

#+name: ffStorage
#+call: ffSchemaDiagram(ffdb="storage.sqlite") :results output file link :exports both

#+RESULTS: ffStorage
[[file:img/firefox-storage.sqlite.png]]

*** storage-sync-v2.sqlite

#+name: ffStorageSyncV2
#+call: ffSchemaDiagram(ffdb="storage-sync-v2.sqlite") :results output file link :exports both

#+RESULTS: ffStorageSyncV2
[[file:img/firefox-storage-sync-v2.sqlite.png]]

*** webappsstore.sqlite

#+name: ffWebAppsStore
#+call: ffSchemaDiagram(ffdb="webappsstore.sqlite") :results output file link :exports both

#+RESULTS: ffWebAppsStore
[[file:img/firefox-webappsstore.sqlite.png]]

** Extension Schemas

*** ¯\_(ツ)_/¯.sqlite

The schema for the =ffMozExtension=

# +name: ffMozExtension
# +call: ffSchemaDiagram(ffdb="storage/default/moz-extension/idb/bpla.sqlite") :results output file link :exports both

#+RESULTS: ffMozExtension
[[file:img/firefox-bpla.sqlite.png]]

And the actual schema:

#+begin_src sh :results output code :wrap src sql :var firefoxProfile=firefoxProfile
ffExtensionDb='moz-extension+++ ... /idb/ ... bpla.sqlite'
ffdb=~/.mozilla/firefox/$firefoxProfile/storage/default/$ffExtensionDb.sqlite
sqlite3 $ffdb '.schema'
#+end_src

#+RESULTS:
#+begin_src sql
CREATE TABLE database( name TEXT PRIMARY KEY, origin TEXT NOT NULL, version INTEGER NOT NULL DEFAULT 0, last_vacuum_time INTEGER NOT NULL DEFAULT 0, last_analyze_time INTEGER NOT NULL DEFAULT 0, last_vacuum_size INTEGER NOT NULL DEFAULT 0) WITHOUT ROWID;
CREATE TABLE object_store( id INTEGER PRIMARY KEY, auto_increment INTEGER NOT NULL DEFAULT 0, name TEXT NOT NULL, key_path TEXT);
CREATE TABLE object_store_index( id INTEGER PRIMARY KEY, object_store_id INTEGER NOT NULL, name TEXT NOT NULL, key_path TEXT NOT NULL, unique_index INTEGER NOT NULL, multientry INTEGER NOT NULL, locale TEXT, is_auto_locale BOOLEAN NOT NULL, FOREIGN KEY (object_store_id) REFERENCES object_store(id) );
CREATE TABLE object_data( object_store_id INTEGER NOT NULL, key BLOB NOT NULL, index_data_values BLOB DEFAULT NULL, file_ids TEXT, data BLOB NOT NULL, PRIMARY KEY (object_store_id, key), FOREIGN KEY (object_store_id) REFERENCES object_store(id) ) WITHOUT ROWID;
CREATE TABLE index_data( index_id INTEGER NOT NULL, value BLOB NOT NULL, object_data_key BLOB NOT NULL, object_store_id INTEGER NOT NULL, value_locale BLOB, PRIMARY KEY (index_id, value, object_data_key), FOREIGN KEY (index_id) REFERENCES object_store_index(id) , FOREIGN KEY (object_store_id, object_data_key) REFERENCES object_data(object_store_id, key) ) WITHOUT ROWID;
CREATE TABLE unique_index_data( index_id INTEGER NOT NULL, value BLOB NOT NULL, object_store_id INTEGER NOT NULL, object_data_key BLOB NOT NULL, value_locale BLOB, PRIMARY KEY (index_id, value), FOREIGN KEY (index_id) REFERENCES object_store_index(id) , FOREIGN KEY (object_store_id, object_data_key) REFERENCES object_data(object_store_id, key) ) WITHOUT ROWID;
CREATE TABLE file (id INTEGER PRIMARY KEY, refcount INTEGER NOT NULL);
CREATE INDEX index_data_value_locale_index ON index_data (index_id, value_locale, object_data_key, value) WHERE value_locale IS NOT NULL;
CREATE INDEX unique_index_data_value_locale_index ON unique_index_data (index_id, value_locale, object_data_key, value) WHERE value_locale IS NOT NULL;
CREATE TRIGGER object_data_insert_trigger AFTER INSERT ON object_data FOR EACH ROW WHEN NEW.file_ids IS NOT NULL BEGIN SELECT update_refcount(NULL, NEW.file_ids); END;
CREATE TRIGGER object_data_update_trigger AFTER UPDATE OF file_ids ON object_data FOR EACH ROW WHEN OLD.file_ids IS NOT NULL OR NEW.file_ids IS NOT NULL BEGIN SELECT update_refcount(OLD.file_ids, NEW.file_ids); END;
CREATE TRIGGER object_data_delete_trigger AFTER DELETE ON object_data FOR EACH ROW WHEN OLD.file_ids IS NOT NULL BEGIN SELECT update_refcount(OLD.file_ids, NULL); END;
CREATE TRIGGER file_update_trigger AFTER UPDATE ON file FOR EACH ROW WHEN NEW.refcount = 0 BEGIN DELETE FROM file WHERE id = OLD.id; END;
#+end_src

* Cleanup                                                          :noexport:

** Accidentally Commited the FF Profile?

If you accidentally commit the firefox profile id, probably just nuke your FF
directory and resync, but you may need to backup data for FF extensions.

Find files referencing profiles:

#+begin_src sh
grep --exclude="*.json" -Ire "$ff_profile_id" ~/.mozilla/firefox
#+end_src

*** Update Profile References

Completely close firefox, update references to new profile ID, then move the
directory. Update =extensions.json= with references to the new =$ff_profile_id=

#+begin_src sh
ff_root=~/.mozilla/firefox
ff_extensions=$ff_root/$ff_profile_id/extensions.json

sed -e "s/$oldProfile/$newProfile/g" $ff_extensions > $ff_extensions.2
cp $ff_extensions.2 $ff_extensions
#+end_src

.... which was still not sufficient.

*** Update the SQLite References

Binary matches from =grep= also include some sqlite databases

|---------------------------------------------------+--------------------------------------------|
| Profile                                           | Database                                   |
|---------------------------------------------------+--------------------------------------------|
| ~/.mozilla/firefox/$ff_profile_id                 | permissions.sqlite                         |
|                                                   | places.sqlite                              |
|                                                   | favicons.sqlite                            |
|---------------------------------------------------+--------------------------------------------|
| ~/.mozilla/firefox/$ff_profile_id/storage/default | moz-extension+++ ... /idb/ ... bpla.sqlite |
|---------------------------------------------------+--------------------------------------------|

* Roam
+ [[id:38638b3e-e023-460e-9670-84776e61468e][Browser]]
+ [[id:45b0ba21-fb20-44dc-9ee9-c4fed32aba9c][Forensics]]
