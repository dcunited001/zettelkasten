:PROPERTIES:
:ID:       4a368f9b-afd4-4501-83f1-ba1a1e070f1e
:END:
#+TITLE:     Nyxt 3: Cheatsheet
#+AUTHOR:    David Conner
#+EMAIL:     aionfork@gmail.com
#+DESCRIPTION: notes

#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline
#+OPTIONS: title:nil author:nil c:nil d:(not "LOGBOOK") date:nil
#+OPTIONS: e:t email:nil f:t inline:t num:t p:nil pri:nil stat:t
#+OPTIONS: tags:t tasks:t tex:t timestamp:t todo:t |:t
#+OPTIONS: toc:2
#+SELECT_TAGS:
#+EXCLUDE_TAGS: noexport
#+KEYWORDS:
#+LANGUAGE: en


**** TODO maybe add support for the =nyxt:= url protocol, at least within emacs.

* Nyxt

** Useful Functionality

(besides the obvious)

*** The Essentials

I was going to title this section "Indoor Plumbing"

**** Hinting

Jump to hints avy-style

+ =bookmark-hint=

**** Panels

Custom side panels

+ =headings-panel=
+ =buffers-panel=

**** Navigation

next/previous-heading with =M-{= and =M-}=

+ jump-to-heading-buffers :: use =C-M-h= to jump to headers across a set (?) of buffers
+ jump-to-heading ::

**** User Scripts

The docs include examples for [[https://nyxt.atlas.engineer/documentation#user-scripts][running GreaseMonkey scripts]]

*** Extras

Some of these are good examaples of custom scripts

**** Macros

+ edit-macro :: no-code interface to record macros (or to discover function names)

**** Passthrough


Useful for games, apps or editors that have keybinding conflicts

+ =passthrough-mode= =C-M-z=

**** Cruise Control

Autoscroll the content. Keys:

+ =n= increase velocity
+ =p= decrease velocity
+ =0= zero the velocity
+ =escape= exit the mode

**** Watch Mode

Refresh page every 5 seconds.

**** [[nyxt:describe-package?package=%1Bnyxt%2Fmode%2Fprocess%3A%3Anyxt%2Fmode%2Fprocess][Process Mode]]

In addition to what's listed below, this can be used for things like:

+ watching for file-changes to a latex document you're working on in emacs.
+ running =top= to watch IPC or processes

#+begin_quote
Conditionally execute a file/directory-related action in a separate thread.

Possible applications:
- Web server.
- Live preview of documents (nyxt/mode/preview).
- Refreshing a URL at regular intervals (nyxt/mode/watch).
- Live tracking of filesystem/data in a file/directory.

The mode itself should not be used directly. Rather, it should be subclassed and
extended with custom logic.
#+end_quote

***** TODO how to use process mode while avoiding the possibility of command injection?

Generally I need to find out

**** No Script Mode

Disable javascript (needs to be disabled per-host)

** Notes

*** UI/UX

The UI/UX experience is fantastic, but regardless of how much better this UI/UX
is than most other browsers, it's not exactly going to be the next Chrome, since
it requires more foresight, knowledge, and experience to use. That said, it
would be very popular among power users.

Regardless, the major browsers just will never give you very much flexibility,
since they need their product to work for the masses. This means that, if you're
a power user, you can't have it because it hurts the monopolies' product
appeal. Many factors cause already stiffle browser evolution, but we're supposed
to use them for basically every webapp or work task.

There are problems, like:

+ Keyboard shortcuts for Firefox/Chrome extensions are so disjointed that it's
  impossible to know whether an extensions shortcuts should have a default. So
  quite often, application developers just turn them off. There aren't
  comprehensive search features and discovering whether a binding is already
  used is like prohibitively time-consuming.
+ Settings are in a common interface in the =about:x= URL's, but the information
  there doesn't link to documentation, whereas Nyxt and Emacs are
  self-documenting. Extension settings are available in a different interface.
+ Browser customization is hard and brittle, unless you use extensions. Try
  adding some personal CSS fixes (or changes) to a Domain or URL subpath ... you
  can't script it. You wouldn't do that usually, but you might want to do things
  /like that./ For example, you might want to declaratively set some
  configurations on a browser installation: custom TLS certificates are a good
  example of something you might want which need to happen at the profile level
  -- this is usually taken care of by an IT department. The profiles that Chrome
  and Firefox will sync do help with easy of configuration ... but do they
  really? People must never reinstall their programs -- it's like reinstalling
  your life. If you get efficiency from this stuff, then you just need it. Maybe
  this is a job for =ansible=? I donno.
+ Sessions are not private by default. They should always at least be in a
  container by default. You should be forced to learn the "container"
  functionality and until you do, you should be tased with login screens on your
  sites -- what was your password anyways? That's too bad. Yeh, computers are
  hard for some people: find someone to help you. The rest of us should move on
  to a culture where we have privacy or at least more visibility/consciousness
  on what data is collected.

*** Security

Most web browsers are actually terrible because the collection of protocols they
mediate their activity through make too many assumptions (that aren't made known
to most users). It takes how many popups at the bottom of a page to indicate to
users that there are these "cookie" things? And this will maybe prod them on to
complain to their smart tech-inclined friend. So it's not even that X browser is
more secure than Y browser, since all browsers expect you to do things like:

+ With some CORS limitations on XSS, connect to all
+ Default to providing dozens of fingerprintable strings.
+ Connect to a CDN that fans out its traffic to one of many possible geo-located
  IP addresses. This is done in a very non-transparent that is usually difficult
  to write firewall rules for (other than allow every outbound session to every
  domain name on 443)
+ Cookie stores from 2 years ago allow marketers to fingerprint you. There are
  supposedly controls in place to restrict cross domain cookie access ... but it
  is apparently still a problem and that only helps you on the frontend. On the
  backend your data can be relayed elsewhere.

That said, there's some obvious things that could go wrong if using Nyxt for all
your web traffic. I'm sure that the Nyxt application designers do have security
in mind because it's one of the challenges that the application has .. and I
don't know enough about Common Lisp to really say anything authoritative or
certain. Maybe I'm wrong.

But there are just some sessions/domains I plan on not connecting to and other
features I'd like to have disabled until I toggle them on. Something like
[[github:plexus/chemacs2][plexus/chemacs2]] for loading multiple profiles that are styled by theme with
separate cookie stores should be possible already -- see the config notes on and
options for running developer builds.

The command =edit-with-external-editor= requires setting =EDITOR= or the Nyxt
variable =external-editor-program=. Be careful with protocols and dynamic
functionality. I'm not sure whether user interactions restrict the callability
of this function -- or how that is limited. I'm not familiar with Common Lisp.

Also, whenever I go to enable things like [[https://www.orgroam.com/manual.html#org_002droam_002dprotocol][org-roam-protocol]] emacs, I hesitate a
bit just on the off chance that it's not a great idea.

* Keybindings

** Transforming buffers

After selecting the text, run these with =query-replace[-regexp]=. The text uses
tabs =^I= to separate most fields, so these can be used when inserting pipes for
tables. Insert =^I= with =C-q C-i= and newlines =^J= with =C-q C-j=.

+ =Binding^ICommand^IDocumentation^J= →
+ =^\(.*-map\)= → =*** \1=
+ =^\(.*\)^I\(.*\)( \(.*\) )^I\(.*\)$= → =| \1 | \2 | \3 | \4 |=

And it should be done.

** Integrating new keybindings

The "by category" section is copied to another file and exported to PDF there.

By surveying what's available early on, I hope to avoid engraining too many
usage habits from previous apps/systems. It's too easy to simply start out that
way and like Internet Buddha says, "You are the result of what you think" more
or less. So if I upregulate engrained usage habits early on, in order to change
those later, it requires quite a bit more effort.

The goal here is to condense as much information onto a single page, which
should slightly difficult to read. Why? So the brain has to choose between
remembering or exerting effort to reconstruct the meaning -- hence making it
more likely to remember, if just subconsiously. Within about =0.1s - 0.25s= of
seeing the page, I should instantly know where the information I need is. The
more of these you have, the more irritating it gets to flip pages and the less
you could carry with you. I could open them in a browser ... but then I just
tend to avoid using them (bc tabs) and it's difficult to show someone.

I like to "ontologize" large lists of function in a new application, service or
topic, by which I mean to divide into partitioned sets. Here those sets contain
things like subcommands or keybindings.

So for nyxt, I have these from some old notes:

|------+---------+-----------+-----------+------+---------|
| Move | Present | Bookmarks | Downloads | Help | Windows |
|------+---------+-----------+-----------+------+---------|
| Edit | Hint    | History   | HTTP      | Lisp | Buffers |
|------+---------+-----------+-----------+------+---------|

As for the number of categories, optimally this ranges from 8 to 12. Twelve is
really too many because the categories become disjointed and there aren't twelve
distinguishable /light/ or /bright/ highlighter colors ... so by the time you're
done marking up a cheatsheet, it's impossible to visually intuit what's what
without reading it. Dark colors turn out pretty horribly. Ideally, these colors
would be in place when you print. However, you then don't get to spend the time
deciding on the meaning/placement and this is an exercise that internalizes the
information.

From the user's perspective, the functionality of most modes enabled by default
overlaps.  These modes are fairly self-contained, so I've separated them out.

+ bookmarks-mode
+ history-mode
+ hint-mode


** By Category

#+begin_quote
Note: as much as possible, I try to reserve the super key for the window
manager, which facilitates making decisions on keybindings for multiple window
managers. It either contains the super key and is a WM keybinding or it doesn't
and it's an application keybinding.
#+end_quote

So when grouping by category, these are removed for brevity.

+ The =s= key here denotes shift. They are switched in Nyxt

In some cases, when there is only one alternative keybinding, it's in a second
column. Otherwise, it's in a pivoted summary table.

(you can pivot tables in org-mode lol)
*** bookmarks-mode-emacs-map

Prefix =C-x r=

| j | set-url-from-bookmark | Set the URL for the current buffer from a bookmark.              |
| k | delete-bookmark       | Delete bookmark(s) matching the chosen URLS-OR-BOOKMARK-ENTRIES. |
| l | bookmark-url          | Prompt for a URL to bookmark.                                    |
| M | bookmark-current-url  | Bookmark the URL of the current BUFFER.                          |
| m | bookmark-buffer-url   | Bookmark the page(s) currently opened in the existing buffers.   |

No prefix

| C-b   | list-bookmarks | List all bookmarks in a new buffer.         |
| C-m g | bookmark-hint  | Prompt for element hints and bookmark them. |

*** history-mode-emacs-map

| C-f   |           | history-forwards-maybe-query  |
| C-b   |           | history-backwards              |
| M-f   | M-s-left  | history-forwards-query         |
| M-b   | M-s-right | history-backwards-query        |
| C-M-f | C-M-right | history-forwards-all-query     |
| C-M-b | C-M-left  | history-all-query              |

Alternates for history:

| history-forwards  | M-] | M-right | button9 | M-button5 |
| history-backwards | M-[ | M-left  | button8 | M-button4 |

*** hint-mode-emacs-map

|---------+---------------+-------------+---------------------------------+-----------+------------------------------|
|         | Follow        |             | Follow (nosave buffer)          |           | Follow (new buffer)          |
|---------+---------------+-------------+---------------------------------+-----------+------------------------------|
| C-x C-w | copy-hint-url | C-M-g C-M-g | follow-hint-nosave-buffer-focus | C-u M-g g | follow-hint-new-buffer       |
| M-g M-g | follow-hint   | C-M-g g     | follow-hint-nosave-buffer       | M-g g     | follow-hint-new-buffer-focus |
|---------+---------------+-------------+---------------------------------+-----------+------------------------------|

document-mode

*** Edit

| M-w   | copy                      |
| C-w   | cut                       |
| C-x h | select-all                |
| C-y   | paste                     |
| M-y   | paste-from-clipboard-ring |

Undo/redo

| C-?   | redo                      |
| C-/   | undo                      |

=C-S-c= and =C-M-c= will run =open-inspector= if you want developer tools.

Forms

| M-i | focus-first-input-field |
| C-i | autofill                |

Misc

| C-M-l | copy-url   | Save current URL to clipboard.        |
| C-M-t | copy-title | Save current page title to clipboard. |
| M-$ | spell-check-word | Spell check a word. |

*** Move

The key =M-i= runs =focus-first-input-field=, which is helpful since many pages
don't tab right these days. This allows you to just skip to the form so you can
tab through its text boxes or form elements to your heart's content.

Useful for UI/UX is the notion of a fixed-point combinator. These are functions
that you can call recursively that deterministically produces known state. Some
examples you might only call once and any more than two or three times is not
useful. For example, paging up/down in a document should eventually produce the
known state of "showing document beginning/end".

Navigate by heading

| M-.   | t     | headings-panel          | Display a list of heading for jumping.                                       |
| C-.   | m     | jump-to-heading         | Jump to a particular heading, of type h1, h2, h3, h4, h5, or h6.             |
| C-M-. | C-M-. | jump-to-heading-buffers | Jump to a particular heading, of type h1, h2, h3, h4, h5, or h6 across a set |
| M-}   | n     | next-heading            | Scroll to the next heading of the BUFFER.                                    |
| M-{   | p     | previous-heading        | Scroll to the previous heading of the BUFFER.                                |

Navigate by search

| C-s k | remove-search-marks | Remove all search marks.                    |
| C-s s | search-buffer       | Search incrementally on the current buffer. |

Scroll

| C-n | scroll-down      |
| C-v | scroll-page-down |
| M-v | scroll-page-up   |
| M-> | scroll-to-bottom |
| M-< | scroll-to-top    |
| C-p | scroll-up        |

spell-check-mode-emacs-map

| C-r | reload-current-buffer | Reload current buffer.             |
| C-T | reopen-buffer         | Reopen queried deleted buffer(s).  |
| M-r | reload-buffers        | Prompt for BUFFERS to be reloaded. |
| C-R | reload-with-modes     | Reload buffer with modes enabled.  |


*** Help

Use =describe-bindings= to explore keybindings, but it's better to complete the tutorial or read the manual.

| f1 b | ?     | describe-bindings |
| f1 r | C-h r | manual            |
| f1 t | C-h t | tutorial          |

Nyxt uses common lisp data structures. It's like =emacs-lisp= on steroids, but
the extra categories of functionality completely change the way code is
written. See =defgeneric= and =defmethod= in [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Generic-Functions.html][Emacs: Generic Functions]] to
understand how CL's options may change how code is structured.

| f1 C | C-h C | describe-class    | Inspect a class and show it in a help buffer.                             |
| f1 c | C-h c | describe-command  | Inspect a command and show it in a help buffer.                           |
| f1 f | C-h f | describe-function | Inspect a function and show it in a help buffer.                          |
| f1 k | C-h k | describe-key      | Display binding of user-inputted keys.                                    |
| f1 p | C-h p | describe-package  | Inspect a package and show it in a help buffer.                           |
| f1 s | C-h s | describe-slot     | Inspect a slot and show it in a help buffer.                              |
| f1 v | C-h v | describe-variable | Inspect a variable and show it in a help buffer.                          |

*** Lisp

Files

| C-x C-f     | open-file                 |
| C-s-y       | list-downloads            |
| C-d         | list-downloads            |
| C-u C-x C-f | edit-with-external-editor |

Application

| C-M-Z   | passthrough-mode |
| C-g     | nothing          |
| C-x C-c | quit             |

Commands

| C-space   | M-x       | execute-command           | Execute a command by name.                       |
| C-M-space | C-M-x     | execute-extended-command  | Prompt for arguments to pass to a given COMMAND. |
| C-s-space | C-s-space | execute-predicted-command | Execute the predicted next command.              |

Prompt control

| M-o     | C-x o   | toggle-prompt-buffer-focus | Toggle b/w current buffer and prompt. |
| M-space | M-space | resume-prompt              | Query an older prompt and resume it.  |

+ M-n :: Run =repeat-key= n times
+ C-g :: Will terminate most commands/keybindings, unless mapped
+ The prompt is technically a buffer

*** Presentation

| f11          | toggle-fullscreen |
| C-x C-0      | reset-page-zoom   |
| C-x C-hyphen | unzoom-page       |
| C-x C-+      | zoom-page         |
| C-x C-=      | zoom-page         |

*** Windows

| C-x 5 0 | delete-current-window |
| C-x 5 1 | delete-window         |
| C-x 5 2 | make-window           |

*** Buffers

| C-l | set-url            | Set the URL for the current buffer, completing with history. |
| M-l | set-url-new-buffer | Prompt for a URL and set it in a new focused buffer.         |

Buffer state is managed as a tree (for a window?)

| C-t       |             | make-buffer-focus      | Switch to a new buffer.                                             |
| C-x C-b   |             | list-buffers           | Show all buffers and their interrelations.                          |
| C-x C-k   | q           | delete-current-buffer  | Delete the current buffer, and make the next buffer the current one |
| C-x k     |             | delete-buffer          | Query the buffer(s) to delete.                                      |

Switch buffers

| C-x left  | C-x C-left  | switch-buffer-previous | Switch to the previous buffer in the buffer tree. |
| C-x right | C-x C-right | switch-buffer-next     | Switch to the next buffer in the buffer tree.     |
| C-tab     |             | switch-buffer-next     | Switch to the next buffer in the buffer tree.     |
| C-x b     |             | switch-buffer          | Switch buffer using fuzzy completion.             |
| C-s-tab   | C-x C-left  | switch-buffer-previous | Switch to the previous buffer in the buffer tree. |

* Keybindings By Mode

** Emacs

*** override-map

| C-space | execute-command  | C-space | Execute a command by name. |

*** bookmarks-mode-emacs-map

| C-b     | list-bookmarks        | UNBOUND | List all bookmarks in a new buffer.                              |
| C-m g   | bookmark-hint         | C-m g   | Prompt for element hints and bookmark them.                      |
| C-x r M | bookmark-current-url  | C-x r M | Bookmark the URL of the current BUFFER.                          |
| C-x r j | set-url-from-bookmark | C-x r j | Set the URL for the current buffer from a bookmark.              |
| C-x r k | delete-bookmark       | C-x r k | Delete bookmark(s) matching the chosen URLS-OR-BOOKMARK-ENTRIES. |
| C-x r l | bookmark-url          | C-x r l | Prompt for a URL to bookmark.                                    |
| C-x r m | bookmark-buffer-url   | C-x r m | Bookmark the page(s) currently opened in the existing buffers.   |

*** history-mode-emacs-map

| C-b       | history-backwards            | C-b   | Go to parent URL of BUFFER in history.                                 |
| C-f       | history-forwards-maybe-query | C-f   | If current node has multiple children, query which one to navigate to. |
| M-[       | history-backwards            | C-b   | Go to parent URL of BUFFER in history.                                 |
| M-]       | history-forwards             | M-]   | Go forward one step/URL in BUFFER's history.                           |
| M-b       | history-backwards-query      | M-b   | Query parent URL to navigate back to.                                  |
| M-f       | history-forwards-query       | M-f   | Query forward-URL to navigate to.                                      |
| C-M-b     | history-all-query            | C-M-b | Query URL to go to, from the whole history.                            |
| C-M-f     | history-forwards-all-query   | C-M-f | Query URL to forward to, from all child branches.                      |
| C-s-H     | history-all-query            | C-M-b | Query URL to go to, from the whole history.                            |
| C-s-h     | history-all-query            | C-M-b | Query URL to go to, from the whole history.                            |
| M-left    | history-backwards            | C-b   | Go to parent URL of BUFFER in history.                                 |
| M-right   | history-forwards             | M-]   | Go forward one step/URL in BUFFER's history.                           |
| button8   | history-backwards            | C-b   | Go to parent URL of BUFFER in history.                                 |
| button9   | history-forwards             | M-]   | Go forward one step/URL in BUFFER's history.                           |
| C-M-left  | history-all-query            | C-M-b | Query URL to go to, from the whole history.                            |
| M-s-left  | history-backwards-query      | M-b   | Query parent URL to navigate back to.                                  |
| C-M-right | history-forwards-all-query   | C-M-f | Query URL to forward to, from all child branches.                      |
| M-button4 | history-backwards            | C-b   | Go to parent URL of BUFFER in history.                                 |
| M-button5 | history-forwards             | M-]   | Go forward one step/URL in BUFFER's history.                           |
| M-s-right | history-forwards-query       | M-f   | Query forward-URL to navigate to.                                      |

*** hint-mode-emacs-map

| M-g g       | follow-hint-new-buffer-focus    | M-g g       | Like `follow-hint-new-buffer', but with focus.                              |
| C-M-g g     | follow-hint-nosave-buffer       | C-M-g g     | Like `follow-hint', but open the selected hints in new `nosave-buffer's (no |
| C-x C-w     | copy-hint-url                   | C-x C-w     | Prompt for element hints and save its corresponding URLs to clipboard.      |
| M-g M-g     | follow-hint                     | M-g M-g     | Prompt for element hints and open them in the current buffer.               |
| C-u M-g g   | follow-hint-new-buffer          | C-u M-g M-g | Like `follow-hint', but open the selected hints in new buffers (no focus).  |
| C-M-g C-M-g | follow-hint-nosave-buffer-focus | C-M-g C-M-g | Like `follow-hint-nosave-buffer', but with focus.                           |
| C-u M-g M-g | follow-hint-new-buffer          | C-u M-g M-g | Like `follow-hint', but open the selected hints in new buffers (no focus).  |

*** document-mode-emacs-map

| C-.          | jump-to-heading           | m            | Jump to a particular heading, of type h1, h2, h3, h4, h5, or h6.                 |
| C-/          | undo                      | C-/          | Undo the last editing action.                                                    |
| C-?          | redo                      | C-?          | Redo the last editing action.                                                    |
| C-R          | reload-with-modes         | C-R          | Reload the BUFFER with the queried modes.                                        |
| C-g          | nothing                   | C-g          | A command that does nothing.                                                     |
| C-n          | scroll-down               | C-n          | Scroll down the current page.                                                    |
| C-p          | scroll-up                 | C-p          | Scroll up the current page.                                                      |
| C-v          | scroll-page-down          | C-v          | Scroll down by one page height.                                                  |
| C-w          | cut                       | C-w          | Cut the selected text in BUFFER.                                                 |
| C-y          | paste                     | C-y          | Paste from clipboard into active element.                                        |
| M-.          | headings-panel            | t            | Display a list of heading for jumping.                                           |
| M-<          | scroll-to-top             | M-<          | Scroll to the top of the current page.                                           |
| M->          | scroll-to-bottom          | M->          | Scroll to the bottom of the current page.                                        |
| M-i          | focus-first-input-field   | M-i          | Move the focus to the first inputtable element of BUFFER.                        |
| M-v          | scroll-page-up            | M-v          | Scroll up by one page height.                                                    |
| M-w          | copy                      | M-w          | Copy selected text to clipboard.                                                 |
| M-y          | paste-from-clipboard-ring | M-y          | Show `*browser*' clipboard ring and paste selected entry.                        |
| M-{          | previous-heading          | p            | Scroll to the previous heading of the BUFFER.                                    |
| M-}          | next-heading              | n            | Scroll to the next heading of the BUFFER.                                        |
| C-M-.        | jump-to-heading-buffers   | C-M-.        | Jump to a particular heading, of type h1, h2, h3, h4, h5, or h6 across a set     |
| C-M-Z        | passthrough-mode          | C-M-Z        | Toggle `passthrough-mode'.                                                       |
| C-M-c        | open-inspector            | C-M-c        | Open the inspector, a graphical tool to inspect and change the buffer's content. |
| C-S-c        | open-inspector            | C-M-c        | Open the inspector, a graphical tool to inspect and change the buffer's content. |
| C-x h        | select-all                | C-x h        | Select all the text in the text field.                                           |
| C-x C-+      | zoom-page                 | C-x C-+      | Zoom in the current page BUFFER.                                                 |
| C-x C-0      | reset-page-zoom           | C-x C-0      | Reset the BUFFER zoom to the `zoom-ratio-default' or RATIO.                      |
| C-x C-=      | zoom-page                 | C-x C-+      | Zoom in the current page BUFFER.                                                 |
| C-u C-x C-f  | edit-with-external-editor | C-u C-x C-f  | Edit the current input field using `external-editor-program'.                    |
| C-x C-hyphen | unzoom-page               | C-x C-hyphen | Zoom out the current page in BUFFER.                                             |

*** search-buffer-mode-emacs-map

| C-s k | remove-search-marks | C-s k | Remove all search marks.                    |
| C-s s | search-buffer       | s     | Search incrementally on the current buffer. |

*** autofill-mode-default-map

| C-i | autofill  | C-i | Fill in a field with a value from a saved list. |

*** spell-check-mode-emacs-map

| M-$ | spell-check-word  | M-$ | Spell check a word. |

*** base-mode-emacs-map

| C-T         | reopen-buffer              | C-T         | Reopen queried deleted buffer(s).                                          |
| C-d         | list-downloads             | C-d         | Display a buffer listing all downloads.                                    |
| C-l         | set-url                    | C-l         | Set the URL for the current buffer, completing with history.               |
| C-r         | reload-current-buffer      | C-r         | Reload current buffer.                                                     |
| C-t         | make-buffer-focus          | C-t         | Switch to a new buffer.                                                    |
| M-1         | repeat-key                 | M-1         | Repeat the command bound to the user-pressed keybinding TIMES times.       |
| M-2         | repeat-key                 | M-1         | Repeat the command bound to the user-pressed keybinding TIMES times.       |
| M-3         | repeat-key                 | M-1         | Repeat the command bound to the user-pressed keybinding TIMES times.       |
| M-4         | repeat-key                 | M-1         | Repeat the command bound to the user-pressed keybinding TIMES times.       |
| M-5         | repeat-key                 | M-1         | Repeat the command bound to the user-pressed keybinding TIMES times.       |
| M-6         | repeat-key                 | M-1         | Repeat the command bound to the user-pressed keybinding TIMES times.       |
| M-7         | repeat-key                 | M-1         | Repeat the command bound to the user-pressed keybinding TIMES times.       |
| M-8         | repeat-key                 | M-1         | Repeat the command bound to the user-pressed keybinding TIMES times.       |
| M-9         | repeat-key                 | M-1         | Repeat the command bound to the user-pressed keybinding TIMES times.       |
| M-l         | set-url-new-buffer         | M-l         | Prompt for a URL and set it in a new focused buffer.                       |
| M-o         | toggle-prompt-buffer-focus | C-x o       | Toggle the focus between the current buffer and the current prompt buffer. |
| M-r         | reload-buffers             | M-r         | Prompt for BUFFERS to be reloaded.                                         |
| M-x         | execute-command            | C-space     | Execute a command by name.                                                 |
| f11         | toggle-fullscreen          | f11         | Fullscreen WINDOW, or the current window, when omitted.                    |
| f1 C        | describe-class             | C-h C       | Inspect a class and show it in a help buffer.                              |
| f1 b        | describe-bindings          | ?           | Show a buffer with the list of all known bindings for the current buffer.  |
| f1 c        | describe-command           | C-h c       | Inspect a command and show it in a help buffer.                            |
| f1 f        | describe-function          | C-h f       | Inspect a function and show it in a help buffer.                           |
| f1 k        | describe-key               | C-h k       | Display binding of user-inputted keys.                                     |
| f1 p        | describe-package           | C-h p       | Inspect a package and show it in a help buffer.                            |
| f1 r        | manual                     | C-h r       | Display Nyxt manual.                                                       |
| f1 s        | describe-slot              | C-h s       | Inspect a slot and show it in a help buffer.                               |
| f1 t        | tutorial                   | C-h t       | Display Nyxt tutorial.                                                     |
| f1 v        | describe-variable          | C-h v       | Inspect a variable and show it in a help buffer.                           |
| C-M-l       | copy-url                   | C-M-l       | Save current URL to clipboard.                                             |
| C-M-t       | copy-title                 | C-M-t       | Save current page title to clipboard.                                      |
| C-M-x       | execute-extended-command   | C-M-x       | Prompt for arguments to pass to a given COMMAND.                           |
| C-h C       | describe-class             | C-h C       | Inspect a class and show it in a help buffer.                              |
| C-h b       | describe-bindings          | ?           | Show a buffer with the list of all known bindings for the current buffer.  |
| C-h c       | describe-command           | C-h c       | Inspect a command and show it in a help buffer.                            |
| C-h f       | describe-function          | C-h f       | Inspect a function and show it in a help buffer.                           |
| C-h k       | describe-key               | C-h k       | Display binding of user-inputted keys.                                     |
| C-h p       | describe-package           | C-h p       | Inspect a package and show it in a help buffer.                            |
| C-h r       | manual                     | C-h r       | Display Nyxt manual.                                                       |
| C-h s       | describe-slot              | C-h s       | Inspect a slot and show it in a help buffer.                               |
| C-h t       | tutorial                   | C-h t       | Display Nyxt tutorial.                                                     |
| C-h v       | describe-variable          | C-h v       | Inspect a variable and show it in a help buffer.                           |
| C-s-Y       | list-downloads             | C-d         | Display a buffer listing all downloads.                                    |
| C-s-y       | list-downloads             | C-d         | Display a buffer listing all downloads.                                    |
| C-tab       | switch-buffer-next         | C-x C-right | Switch to the next buffer in the buffer tree.                              |
| C-x b       | switch-buffer              | C-x b       | Switch buffer using fuzzy completion.                                      |
| C-x k       | delete-buffer              | C-x k       | Query the buffer(s) to delete.                                             |
| C-x o       | toggle-prompt-buffer-focus | C-x o       | Toggle the focus between the current buffer and the current prompt buffer. |
| C-s-tab     | switch-buffer-previous     | C-x C-left  | Switch to the previous buffer in the buffer tree.                          |
| C-space     | execute-command            | C-space     | Execute a command by name.                                                 |
| C-x 5 0     | delete-current-window      | C-x 5 0     | Delete WINDOW, or the current window, when omitted.                        |
| C-x 5 1     | delete-window              | C-x 5 1     | Delete the queried window(s).                                              |
| C-x 5 2     | make-window                | C-x 5 2     | Create a new window.                                                       |
| C-x C-b     | list-buffers               | C-x C-b     | Show all buffers and their interrelations.                                 |
| C-x C-c     | quit                       | C-x C-c     | Quit Nyxt.                                                                 |
| C-x C-f     | open-file                  | C-x C-f     | Open a file from the filesystem.                                           |
| C-x C-k     | delete-current-buffer      | q           | Delete the current buffer, and make the next buffer the current one. If no |
| M-space     | resume-prompt              | M-space     | Query an older prompt and resume it.                                       |
| C-x left    | switch-buffer-previous     | C-x C-left  | Switch to the previous buffer in the buffer tree.                          |
| C-M-space   | execute-extended-command   | C-M-x       | Prompt for arguments to pass to a given COMMAND.                           |
| C-s-space   | execute-predicted-command  | C-s-space   | Execute the predicted next command.                                        |
| C-x right   | switch-buffer-next         | C-x C-right | Switch to the next buffer in the buffer tree.                              |
| C-x C-left  | switch-buffer-previous     | C-x C-left  | Switch to the previous buffer in the buffer tree.                          |
| C-x C-right | switch-buffer-next         | C-x C-right | Switch to the next buffer in the buffer tree.                              |

** CUA

*** override-map

| C-space | execute-command | C-space | Execute a command by name. |

*** bookmarks-mode-cua-map

| C-b     | list-bookmarks        | C-b     | List all bookmarks in a new buffer.                              |
| C-d     | bookmark-current-url  | C-d     | Bookmark the URL of the current BUFFER.                          |
| C-m g   | bookmark-hint         | C-m g   | Prompt for element hints and bookmark them.                      |
| C-m k   | delete-bookmark       | C-m k   | Delete bookmark(s) matching the chosen URLS-OR-BOOKMARK-ENTRIES. |
| C-m l   | bookmark-url          | C-m l   | Prompt for a URL to bookmark.                                    |
| C-m o   | set-url-from-bookmark | C-m o   | Set the URL for the current buffer from a bookmark.              |
| C-m s   | bookmark-current-url  | C-d     | Bookmark the URL of the current BUFFER.                          |
| C-m C-s | bookmark-buffer-url   | C-m C-s | Bookmark the page(s) currently opened in the existing buffers.   |

*** history-mode-default-map

| M-[       | history-backwards          | M-[       | Go to parent URL of BUFFER in history.            |
| M-]       | history-forwards           | M-]       | Go forward one step/URL in BUFFER's history.      |
| C-s-H     | history-all-query          | C-M-left  | Query URL to go to, from the whole history.       |
| C-s-h     | history-all-query          | C-M-left  | Query URL to go to, from the whole history.       |
| M-left    | history-backwards          | M-[       | Go to parent URL of BUFFER in history.            |
| M-right   | history-forwards           | M-]       | Go forward one step/URL in BUFFER's history.      |
| button8   | history-backwards          | M-[       | Go to parent URL of BUFFER in history.            |
| button9   | history-forwards           | M-]       | Go forward one step/URL in BUFFER's history.      |
| C-M-left  | history-all-query          | C-M-left  | Query URL to go to, from the whole history.       |
| M-s-left  | history-backwards-query    | M-s-left  | Query parent URL to navigate back to.             |
| C-M-right | history-forwards-all-query | C-M-right | Query URL to forward to, from all child branches. |
| M-button4 | history-backwards          | M-[       | Go to parent URL of BUFFER in history.            |
| M-button5 | history-forwards           | M-]       | Go forward one step/URL in BUFFER's history.      |
| M-s-right | history-forwards-query     | M-s-right | Query forward-URL to navigate to.                 |

*** hint-mode-cua-map

| C-J       | follow-hint-new-buffer          | C-J       | Like `follow-hint', but open the selected hints in new buffers (no focus).  |
| C-j       | follow-hint                     | C-j       | Prompt for element hints and open them in the current buffer.               |
| C-M-j     | follow-hint-nosave-buffer-focus | C-M-j     | Like `follow-hint-nosave-buffer', but with focus.                           |
| M-c h     | copy-hint-url                   | M-c h     | Prompt for element hints and save its corresponding URLs to clipboard.      |
| C-u C-j   | follow-hint-new-buffer-focus    | C-u C-j   | Like `follow-hint-new-buffer', but with focus.                              |
| C-u C-M-j | follow-hint-nosave-buffer       | C-u C-M-j | Like `follow-hint', but open the selected hints in new `nosave-buffer's (no |

*** document-mode-cua-map

| C-+          | zoom-page                 | C-+          | Zoom in the current page BUFFER.                                                 |
| C-0          | reset-page-zoom           | C-0          | Reset the BUFFER zoom to the `zoom-ratio-default' or RATIO.                      |
| C-=          | zoom-page                 | C-+          | Zoom in the current page BUFFER.                                                 |
| C-R          | reload-with-modes         | C-R          | Reload the BUFFER with the queried modes.                                        |
| C-Z          | redo                      | C-Z          | Redo the last editing action.                                                    |
| C-a          | select-all                | C-a          | Select all the text in the text field.                                           |
| C-c          | copy                      | C-c          | Copy selected text to clipboard.                                                 |
| C-h          | jump-to-heading           | C-h          | Jump to a particular heading, of type h1, h2, h3, h4, h5, or h6.                 |
| C-p          | print-buffer              | C-p          | Print the current buffer.                                                        |
| C-v          | paste                     | C-v          | Paste from clipboard into active element.                                        |
| C-x          | cut                       | C-x          | Cut the selected text in BUFFER.                                                 |
| C-z          | undo                      | C-z          | Undo the last editing action.                                                    |
| M-.          | headings-panel            | M-.          | Display a list of heading for jumping.                                           |
| M-i          | focus-first-input-field   | M-i          | Move the focus to the first inputtable element of BUFFER.                        |
| M-v          | paste-from-clipboard-ring | M-v          | Show `*browser*' clipboard ring and paste selected entry.                        |
| M-{          | previous-heading          | M-{          | Scroll to the previous heading of the BUFFER.                                    |
| M-}          | next-heading              | M-}          | Scroll to the next heading of the BUFFER.                                        |
| end          | maybe-scroll-to-bottom    | end          | Scroll to bottom if no input element is active, forward event otherwise.         |
| C-up         | scroll-to-top             | C-up         | Scroll to the top of the current page.                                           |
| home         | maybe-scroll-to-top       | home         | Scroll to top if no input element is active, forward event otherwise.            |
| C-M-Z        | passthrough-mode          | C-M-Z        | Toggle `passthrough-mode'.                                                       |
| C-M-c        | open-inspector            | C-M-c        | Open the inspector, a graphical tool to inspect and change the buffer's content. |
| C-M-h        | jump-to-heading-buffers   | C-M-h        | Jump to a particular heading, of type h1, h2, h3, h4, h5, or h6 across a set     |
| C-S-c        | open-inspector            | C-M-c        | Open the inspector, a graphical tool to inspect and change the buffer's content. |
| C-down       | scroll-to-bottom          | C-down       | Scroll to the bottom of the current page.                                        |
| C-u C-o      | edit-with-external-editor | C-u C-o      | Edit the current input field using `external-editor-program'.                    |
| C-hyphen     | unzoom-page               | C-button5    | Zoom out the current page in BUFFER.                                             |
| keypadup     | scroll-up                 | keypadup     | Scroll up the current page.                                                      |
| C-button4    | zoom-page                 | C-+          | Zoom in the current page BUFFER.                                                 |
| C-button5    | unzoom-page               | C-button5    | Zoom out the current page in BUFFER.                                             |
| keypadend    | scroll-to-bottom          | C-down       | Scroll to the bottom of the current page.                                        |
| keypaddown   | scroll-down               | keypaddown   | Scroll down the current page.                                                    |
| keypadhome   | scroll-to-top             | C-up         | Scroll to the top of the current page.                                           |
| keypadleft   | scroll-left               | keypadleft   | Scroll left the current page.                                                    |
| keypadnext   | scroll-page-down          | keypadnext   | Scroll down by one page height.                                                  |
| keypadprior  | scroll-page-up            | keypadpageup | Scroll up by one page height.                                                    |
| keypadright  | scroll-right              | keypadright  | Scroll right the current page.                                                   |
| keypadpageup | scroll-page-up            | keypadpageup | Scroll up by one page height.                                                    |

*** search-buffer-mode-cua-map

| f3  | search-buffer       | C-f | Search incrementally on the current buffer. |
| C-f | search-buffer       | C-f | Search incrementally on the current buffer. |
| M-f | remove-search-marks | M-f | Remove all search marks.                    |

*** autofill-mode-default-map

| C-i | autofill | C-i | Fill in a field with a value from a saved list. |

*** spell-check-mode-cua-map

*** base-mode-cua-map

| f5         | reload-current-buffer      | f5        | Reload current buffer.                                                     |
| C-/        | reopen-buffer              | C-/       | Reopen queried deleted buffer(s).                                          |
| C-O        | load-file                  | C-O       | Load the prompted Lisp file.                                               |
| C-T        | reopen-buffer              | C-/       | Reopen queried deleted buffer(s).                                          |
| C-W        | delete-current-window      | C-W       | Delete WINDOW, or the current window, when omitted.                        |
| C-[        | switch-buffer-previous     | C-[       | Switch to the previous buffer in the buffer tree.                          |
| C-]        | switch-buffer-next         | C-]       | Switch to the next buffer in the buffer tree.                              |
| C-`        | switch-buffer-last         | C-`       | Switch to the last visited buffer.                                         |
| C-l        | set-url                    | C-l       | Set the URL for the current buffer, completing with history.               |
| C-n        | make-window                | C-n       | Create a new window.                                                       |
| C-o        | open-file                  | C-o       | Open a file from the filesystem.                                           |
| C-q        | quit                       | C-q       | Quit Nyxt.                                                                 |
| C-r        | reload-current-buffer      | f5        | Reload current buffer.                                                     |
| C-t        | make-buffer-focus          | C-t       | Switch to a new buffer.                                                    |
| C-w        | delete-current-buffer      | C-w       | Delete the current buffer, and make the next buffer the current one. If no |
| M-l        | set-url-new-buffer         | M-l       | Prompt for a URL and set it in a new focused buffer.                       |
| M-o        | toggle-prompt-buffer-focus | M-o       | Toggle the focus between the current buffer and the current prompt buffer. |
| M-r        | reload-buffers             | M-r       | Prompt for BUFFERS to be reloaded.                                         |
| M-w        | delete-window              | M-w       | Delete the queried window(s).                                              |
| f11        | toggle-fullscreen          | f11       | Fullscreen WINDOW, or the current window, when omitted.                    |
| f1 C       | describe-class             | f1 C      | Inspect a class and show it in a help buffer.                              |
| f1 b       | describe-bindings          | f1 b      | Show a buffer with the list of all known bindings for the current buffer.  |
| f1 c       | describe-command           | f1 c      | Inspect a command and show it in a help buffer.                            |
| f1 f       | describe-function          | f1 f      | Inspect a function and show it in a help buffer.                           |
| f1 k       | describe-key               | f1 k      | Display binding of user-inputted keys.                                     |
| f1 p       | describe-package           | f1 p      | Inspect a package and show it in a help buffer.                            |
| f1 r       | manual                     | f1 r      | Display Nyxt manual.                                                       |
| f1 s       | describe-slot              | f1 s      | Inspect a slot and show it in a help buffer.                               |
| f1 t       | tutorial                   | f1 t      | Display Nyxt tutorial.                                                     |
| f1 v       | describe-variable          | f1 v      | Inspect a variable and show it in a help buffer.                           |
| C-M-l      | set-url-new-nosave-buffer  | C-M-l     | Prompt for a URL and set it in a new focused nosave buffer.                |
| C-s-W      | delete-current-window      | C-W       | Delete WINDOW, or the current window, when omitted.                        |
| C-s-Y      | list-downloads             | C-s-Y     | Display a buffer listing all downloads.                                    |
| C-s-y      | list-downloads             | C-s-Y     | Display a buffer listing all downloads.                                    |
| C-tab      | switch-buffer-next         | C-]       | Switch to the next buffer in the buffer tree.                              |
| M-c l      | copy-url                   | M-c l     | Save current URL to clipboard.                                             |
| M-c t      | copy-title                 | M-c t     | Save current page title to clipboard.                                      |
| M-down     | switch-buffer              | M-down    | Switch buffer using fuzzy completion.                                      |
| C-s-tab    | switch-buffer-previous     | C-[       | Switch to the previous buffer in the buffer tree.                          |
| C-space    | execute-command            | C-space   | Execute a command by name.                                                 |
| M-space    | resume-prompt              | M-space   | Query an older prompt and resume it.                                       |
| C-pageup   | switch-buffer-previous     | C-[       | Switch to the previous buffer in the buffer tree.                          |
| C-M-space  | execute-extended-command   | C-M-space | Prompt for arguments to pass to a given COMMAND.                           |
| C-s-space  | execute-predicted-command  | C-s-space | Execute the predicted next command.                                        |
| C-pagedown | switch-buffer-next         | C-]       | Switch to the next buffer in the buffer tree.                              |
